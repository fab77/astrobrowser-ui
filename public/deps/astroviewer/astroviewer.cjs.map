{"version":3,"file":"astroviewer.cjs","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;ACRmC;AAC5B;AACP;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA,4BAA4B,KAAK;AACjC;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;AC/BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;ACRyC;AACR;AACA;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACviC;;ACpMA;AACA;AACA;AACmC;AACM;AAClC;AACP;AACA,4BAA4B,QAAQ;AACpC;AACA,sBAAsB,KAAK;AAC3B,2BAA2B,KAAK;AAChC,2BAA2B,KAAK;AAChC,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,SAAS;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB,sBAAsB,KAAK;AAC3B,sBAAsB,KAAK;AAC3B,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA,gC;;ACpHiC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,wC;;ACnEA;AACA;AACA;AACmC;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;ACxDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;AC5CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;AClEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+B;;ACVa;AACoC;AACN;AACV;AACE;AACM;AACJ;AACI;AACR;AACF;AACE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA,2BAA2B,KAAK;AAChC,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC,4BAA4B,IAAI;AAChC,mCAAmC,IAAI;AACvC,uCAAuC,IAAI;AAC3C,uCAAuC,IAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B,wBAAwB,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,mCAAmC;AACnC;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,mDAAmD;AACnD;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,8CAA8C,SAAS,oCAAoC,SAAS;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB,wBAAwB,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB,wBAAwB,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,OAAO;AACtC;AACA,6CAA6C;AAC7C,wBAAwB,QAAQ;AAChC;AACA,kEAAkE,KAAK;AACvE,8CAA8C,KAAK;AACnD,6DAA6D,KAAK;AAClE;AACA;AACA,sBAAsB,MAAM;AAC5B,wBAAwB,QAAQ,OAAO;AACvC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS,eAAe,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,kDAAkD;AAClD;AACA;AACA,mBAAmB;AACnB,gCAAgC,OAAO;AACvC,sDAAsD;AACtD;AACA;AACA;AACA,mCAAmC;AACnC,6BAA6B;AAC7B,+DAA+D;AAC/D,iCAAiC;AACjC;AACA,mBAAmB;AACnB,gCAAgC;AAChC,oCAAoC,OAAO,OAAO;AAClD,0DAA0D;AAC1D;AACA;AACA,uBAAuB;AACvB,mEAAmE;AACnE,qCAAqC;AACrC;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,kCAAkC;AAClC,yCAAyC;AACzC,gCAAgC;AAChC,oCAAoC,OAAO,OAAO;AAClD,0DAA0D;AAC1D;AACA;AACA,uBAAuB;AACvB,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B;AACA,qBAAqB,IAAI;AACzB;AACA;AACA,wBAAwB,IAAI;AAC5B;AACA,qBAAqB,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA,SAAS,iBAAiB,wBAAwB,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,mBAAmB,IAAI;AACvB;AACA;AACA,qBAAqB,KAAK;AAC1B,qBAAqB,KAAK;AAC1B,wBAAwB,WAAW,OAAO;AAC1C,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,wBAAwB,QAAQ,OAAO;AACvC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;ACvwB2C;AACN;AACY;AAChB;AACM;AACE;AACA;AACR;AACF;AACE;AACE;AACnC,iC;;ACXO,MAAM,SAAS,GAAa;IACjC,6BAA6B;IAC7B,gCAAgC;CACjC,GAAC;AAEF,mFAAmF;AACnF,sCAAsC;AACtC,wCAAwC;AACxC,wCAAwC;AACxC,2CAA2C;AAC3C,yDAAyD;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O;AACA;AACA;AACA;;AAEP;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA,C;;AChEwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,UAAmB;AACnC,MAAM,UAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,QAAG;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP,0CAA0C,QAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAG;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO,UAAU,wDAAQ;;AAEzB;AACA,cAAc;AACd;AACA;AACO,UAAU,wDAAQ;;AAEzB;AACA,cAAc;AACd;AACA;AACO,UAAU,sDAAM;;AAEvB;AACA,cAAc;AACd;AACA;AACO,WAAW,wDAAQ;;AAE1B;AACA,cAAc;AACd;AACA;AACO,cAAc,+DAAe;;AAEpC;AACA,cAAc;AACd;AACA;AACO,UAAU,2DAAM;;AAEvB;AACA,cAAc;AACd;AACA;AACO,aAAa,6DAAa;;AAEjC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;AC5xBuC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACO,SAAS,WAAM;AACtB,gBAAgB,UAAmB;AACnC,MAAM,UAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB,gBAAgB,UAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,SAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,eAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,aAAa;AAC1B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,YAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,YAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,YAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,MAAM;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,MAAM;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,YAAY,MAAM;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB;AACA,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO,YAAY,uDAAO;;AAE1B;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,QAAG;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACO,S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,aAAa,MAAM;AACnB;AACO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,SAAI;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,QAAG;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,gBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,aAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,oBAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,kBAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,YAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,cAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,UAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,SAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACO,SAAS,WAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,kBAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACO,SAAS,kBAAa;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO,SAAS,SAAI;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO,SAAS,QAAG;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACO,SAAS,gBAAW;AAC3B;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACO,SAAS,WAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO,IAAI,QAAG,GAAG,6DAAQ;;AAEzB;AACA,cAAc;AACd;AACA;AACO,IAAI,QAAG,GAAG,6DAAQ;;AAEzB;AACA,cAAc;AACd;AACA;AACO,IAAI,QAAG,GAAG,2DAAM;;AAEvB;AACA,cAAc;AACd;AACA;AACO,IAAI,SAAI,GAAG,6DAAQ;;AAE1B;AACA,cAAc;AACd;AACA;AACO,IAAI,YAAO,GAAG,oEAAe;;AAEpC;AACA,cAAc;AACd;AACA;AACO,IAAI,QAAG,GAAG,2DAAM;;AAEvB;AACA,cAAc;AACd;AACA;AACO,IAAI,WAAM,GAAG,kEAAa;;AAEjC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACO,IAAI,YAAO;AAClB,YAAY,WAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;ACnpBD,eAAe;AACH;AAEZ,MAAM,SAAS;IACb,aAAa,CAAC,GAAW;QACvB,IAAI,GAAG,IAAI,GAAG;YAAE,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,EAAE;YAAG,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,EAAE;YAAG,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,EAAE;YAAG,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,CAAC;YAAI,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,GAAG;YAAE,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,GAAG;YAAE,OAAO,CAAC;QACxB,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,CAAC;QACzB,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,CAAC;QACzB,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,CAAC;QACzB,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,EAAE;QAC1B,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,EAAE;QAC1B,IAAI,GAAG,GAAG,KAAK;YAAE,OAAO,EAAE;QAC1B,OAAO,EAAE;IACX,CAAC;IAED,aAAa,CAAC,GAAW;QACvB,IAAI,MAAc;QAClB,IAAI,OAAe;QAEnB,IAAI,GAAG,IAAI,GAAG,EAAO,CAAC;YAAC,MAAM,GAAG,EAAE,CAAC;YAAE,OAAO,GAAG,EAAE;QAAC,CAAC;aAC9C,IAAI,GAAG,IAAI,EAAE,EAAG,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,IAAI,EAAC,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,CAAC,EAAI,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,IAAI,EAAC,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,IAAI,EAAC,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,IAAI,EAAC,CAAC;YAAC,MAAM,GAAG,CAAC,CAAC;YAAG,OAAO,GAAG,CAAC;QAAC,CAAC;aAC7C,IAAI,GAAG,IAAI,IAAI,EAAC,CAAC;YAAC,MAAM,GAAG,GAAG,CAAC;YAAC,OAAO,GAAG,GAAG;QAAC,CAAC;aAC/C,IAAI,GAAG,IAAI,IAAI,EAAC,CAAC;YAAC,MAAM,GAAG,IAAI,CAAC;YAAC,OAAO,GAAG,IAAI;QAAC,CAAC;aACjC,CAAC;YAAC,MAAM,GAAG,EAAE,CAAC;YAAE,OAAO,GAAG,EAAE;QAAC,CAAC;QAEnD,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;IAC5B,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,QAAQ,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC;gBACJ,OAAO,KAAK,GAAG,CAAC;YAClB,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC,CAAC;YACP,KAAK,CAAC;gBACJ,OAAO,KAAK,GAAG,CAAC;YAClB,KAAK,CAAC;gBACJ,OAAO,KAAK,GAAG,CAAC;YAClB;gBACE,OAAO,KAAK,GAAG,CAAC;QACpB,CAAC;IACH,CAAC;CACF;AAEM,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE;AACxC,qDAAe,yDAAS;;;AC9DxB;;;GAGG;AACH,IAAK,UAIJ;AAJD,WAAK,UAAU;IACb,qCAAuB;IACvB,qCAAuB;IACvB,6BAAe;AACjB,CAAC,EAJI,UAAU,KAAV,UAAU,QAId;AAED,uDAAe,UAAU,EAAC;;;ACV1B;;GAEG;AACU;AAEoB;AAON;AACqB;AACd;AAOlC,MAAM,KAAK;IACD,EAAE,CAAU;IACZ,EAAE,CAAU;IACZ,EAAE,CAAU;IACZ,IAAI,CAA4B;IAEhC,MAAM,CAAU;IAChB,OAAO,CAAU;IACjB,MAAM,CAAU;IAChB,OAAO,CAAU;IACjB,SAAS,CAAoB;IAErC,YAAY,UAAyB,EAAE,OAAmB;QACxD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,iDAAiD;QACjD,MAAM,YAAY,GACf,UAAc,CAAC,YAAY,IAAK,UAAc,CAAC,WAAW,IAAI,EAAE,CAAC;QAEpE,IAAI,OAAO,KAAK,gBAAU,CAAC,SAAS,EAAE,CAAC;YACrC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,UAA2B,CAAC;YAChD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAExC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAC9C,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC;aAAM,IAAI,OAAO,KAAK,gBAAU,CAAC,KAAK,EAAE,CAAC;YACxC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,UAAuB,CAAC;YAClD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAE9C,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1C,CAAC;aAAM,IAAI,OAAO,KAAK,gBAAU,CAAC,SAAS,EAAE,CAAC;YAC5C,6CAA6C;YAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,gBAAU,CAAC,SAAS,sBAAsB,CAAC,CAAC;YAC3D,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACpC,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,kBAAkB,CAAC,CAAC;YACpE,uDAAuD;YACvD,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAEO,kBAAkB;QACxB,MAAM,WAAW,GAAG,oBAAoB,CACtC,UAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;QACF,MAAM,GAAG,GAAG,mBAAmB,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEO,sBAAsB;QAC5B,MAAM,WAAW,GAAG,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACnE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,oBAAoB,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9E,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,sBAAsB;QACpB,OAAO,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IAED,yCAAyC;IACzC,KAAK,CAAC,CAAS;QACb,OAAO,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAAC;IAC1F,CAAC;IAED,GAAG,CAAC,CAAQ;QACV,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,CAAQ;QACZ,OAAO,IAAI,KAAK,CACd;YACE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAC9B,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SAC/B,EACD,gBAAU,CAAC,SAAS,CACrB,CAAC;IACJ,CAAC;IAED,IAAI;QACF,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC5B,OAAO,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAAC;IAC1F,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ,CAAC,CAAQ;QACf,OAAO,IAAI,KAAK,CACd,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EACrD,gBAAU,CAAC,SAAS,CACrB,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,CAAQ;QACV,OAAO,IAAI,KAAK,CACd,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EACrD,gBAAU,CAAC,SAAS,CACrB,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,KAAa,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,IAAI,CAAC,KAAa,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,IAAI,CAAC,KAAa,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,IAAI,GAAG,KAA+B,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAEzD,IAAI,KAAK,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3C,IAAI,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,QAAQ,KAAuB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAE3D,MAAM;QACJ,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,OAAO,uBAAuB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IACxI,CAAC;CACF;AAED,kDAAe,KAAK,EAAC;;;ACxKR;AACb;;GAEG;AAEmC;AACa;AACV;AACM;AAC+B;AAK9E,MAAM,QAAQ;IACZ;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;IAC5E,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,aAAa;IAClB,iCAAiC;IACjC,MAAc,EACd,MAAyB,EACzB,KAAwB;QAExB,gEAAgE;QAChE,+BAA+B;QAC/B,MAAM,OAAO,GAAG,wBAAiC,CAAC,OAAuB;QACzE,MAAM,OAAO,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;QACzC,MAAM,OAAO,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;QACvC,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAEzC,IAAI,MAAM,GAAY,EAAE,CAAC;QAEzB,uDAAuD;QACvD,MAAM,qBAAqB,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAExF,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACrC,oDAAoD;YACpD,MAAM,aAAa,GAAG,QAAQ,CAAC,4BAA4B,CACzD,OAAO,EACP,MAAM,EACN,MAAM,CACP,CAAC;YACF,MAAM,GAAG,aAAa,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,yCAAyC;YACzC,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC;YACtB,CAAC,GAAG,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YACvC,CAAC,GAAG,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YAEjC,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAI,eAAe;YAC5F,MAAM,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,MAAM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1E,MAAM,qBAAqB,GAAG,qBAAe,CAAC,mCAAmC,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACtG,MAAM,uBAAuB,GAAG,qBAAe,CAAC,mCAAmC,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;YAEnH,+CAA+C;YAC/C,IACE,qBAAqB,CAAC,MAAM,KAAK,CAAC;gBAClC,uBAAuB,CAAC,MAAM,KAAK,CAAC,EACpC,CAAC;gBACD,MAAM,SAAS,GAAG,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBAC3D,MAAM,YAAY,GAAG,QAAQ,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;gBACjE,MAAM,UAAU,GAAG,QAAQ,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;gBAC7D,MAAM,WAAW,GAAG,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;gBAE/D,MAAM,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,cAAc,GAAG,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1F,MAAM,gBAAgB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAExF,MAAM,CAAC,IAAI,CACT,SAAS,CAAC,CAAC,CAAC,EACZ,cAAc,EACd,WAAW,CAAC,CAAC,CAAC,EACd,iBAAiB,EACjB,YAAY,CAAC,CAAC,CAAC,EACf,gBAAgB,EAChB,UAAU,CAAC,CAAC,CAAC,EACb,aAAa,CACd,CAAC;YACJ,CAAC;YACD,+CAA+C;iBAC1C,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC5C,MAAM,SAAS,GAAG,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBAC3D,MAAM,YAAY,GAAG,QAAQ,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;gBACjE,MAAM,UAAU,GAAG,QAAQ,CAAC,gCAAgC,CAC1D,CAAC,EACD,SAAS,EACT,WAAW,EACX,QAAQ,CACT,CAAC;gBACF,MAAM,WAAW,GAAG,QAAQ,CAAC,gCAAgC,CAC3D,CAAC,EACD,UAAU,EACV,QAAQ,EACR,WAAW,CACZ,CAAC;gBAEF,MAAM,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,cAAc,GAAG,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1F,MAAM,gBAAgB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAExF,MAAM,CAAC,IAAI,CACT,SAAS,CAAC,CAAC,CAAC,EACZ,cAAc,EACd,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,iBAAiB,EACjB,YAAY,CAAC,CAAC,CAAC,EACf,gBAAgB,EAChB,UAAU,CAAC,CAAC,CAAC,EACb,UAAU,CAAC,CAAC,CAAC,EACb,aAAa,CACd,CAAC;YACJ,CAAC;YACD,+CAA+C;iBAC1C,IAAI,uBAAuB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9C,MAAM,SAAS,GAAG,QAAQ,CAAC,gCAAgC,CACzD,CAAC,EACD,QAAQ,EACR,SAAS,EACT,UAAU,CACX,CAAC;gBACF,MAAM,YAAY,GAAG,QAAQ,CAAC,gCAAgC,CAC5D,CAAC,EACD,WAAW,EACX,UAAU,EACV,SAAS,CACV,CAAC;gBACF,MAAM,UAAU,GAAG,QAAQ,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;gBAC7D,MAAM,WAAW,GAAG,QAAQ,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;gBAE/D,MAAM,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,cAAc,GAAG,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1F,MAAM,gBAAgB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAExF,MAAM,CAAC,IAAI,CACT,SAAS,CAAC,CAAC,CAAC,EACZ,SAAS,CAAC,CAAC,CAAC,EACZ,cAAc,EACd,WAAW,CAAC,CAAC,CAAC,EACd,iBAAiB,EACjB,YAAY,CAAC,CAAC,CAAC,EACf,YAAY,CAAC,CAAC,CAAC,EACf,gBAAgB,EAChB,UAAU,CAAC,CAAC,CAAC,EACb,aAAa,CACd,CAAC;YACJ,CAAC;YACD,uCAAuC;iBAClC,CAAC;gBACJ,MAAM,SAAS,GAAG,QAAQ,CAAC,gCAAgC,CACzD,CAAC,EACD,QAAQ,EACR,SAAS,EACT,UAAU,CACX,CAAC;gBACF,MAAM,YAAY,GAAG,QAAQ,CAAC,gCAAgC,CAC5D,CAAC,EACD,WAAW,EACX,UAAU,EACV,SAAS,CACV,CAAC;gBACF,MAAM,UAAU,GAAG,QAAQ,CAAC,gCAAgC,CAC1D,CAAC,EACD,SAAS,EACT,WAAW,EACX,QAAQ,CACT,CAAC;gBACF,MAAM,WAAW,GAAG,QAAQ,CAAC,gCAAgC,CAC3D,CAAC,EACD,UAAU,EACV,QAAQ,EACR,WAAW,CACZ,CAAC;gBAEF,MAAM,CAAC,IAAI,CACT,SAAS,CAAC,CAAC,CAAC,EACZ,SAAS,CAAC,CAAC,CAAC,EACZ,WAAW,CAAC,CAAC,CAAC,EACd,WAAW,CAAC,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CAAC,EACf,YAAY,CAAC,CAAC,CAAC,EACf,UAAU,CAAC,CAAC,CAAC,EACb,UAAU,CAAC,CAAC,CAAC,CACd,CAAC;YACJ,CAAC;QACH,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,4BAA4B,CACjC,OAAqB,EACrB,MAAc,EACd,MAAyB;QAEzB,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC;QAC7B,MAAM,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;QAE9B,MAAM,OAAO,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1E,MAAM,SAAS,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAChF,MAAM,QAAQ,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3E,MAAM,WAAW,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAElF,MAAM,WAAW,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9E,MAAM,YAAY,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACnF,MAAM,UAAU,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7E,MAAM,UAAU,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAEjF,MAAM,GAAG,GAAY,EAAE,CAAC;QACxB,MAAM,MAAM,GAAG,CAAC,EAAY,EAAE,EAAE;YAC9B,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAClB,GAAG,CAAC,IAAI,CAAC,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9E,CAAC;QACH,CAAC,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,CAAC;QAChB,MAAM,CAAC,SAAS,CAAC,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjB,MAAM,CAAC,WAAW,CAAC,CAAC;QACpB,MAAM,CAAC,WAAW,CAAC,CAAC;QACpB,MAAM,CAAC,YAAY,CAAC,CAAC;QACrB,MAAM,CAAC,UAAU,CAAC,CAAC;QACnB,MAAM,CAAC,UAAU,CAAC,CAAC;QAEnB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,4EAA4E;IAC5E,MAAM,CAAC,cAAc,CAAC,MAAyB;QAC7C,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC;QAC7B,MAAM,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;QAE9B,MAAM,MAAM,GAAG,qBAAe,CAAC,mCAAmC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACjF,OAAO,IAAI,WAAK,CACd,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAC5C,gBAAU,CAAC,SAAS,CACrB,CAAC;IACJ,CAAC;IAED,2EAA2E;IAC3E,MAAM,CAAC,kBAAkB,CAAC,EAAS,EAAE,EAAS;QAC5C,sBAAsB;QACtB,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE7B,2CAA2C;QAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;QACnB,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;QACnB,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;QAEnB,OAAO,CAAC,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,qBAAqB,CAAC,KAAe;QAC1C,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QAE3B,MAAM,CAAC,GAAG,CAAC,CAAC;QACZ,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACpD,MAAM,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;QACtB,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QAEvB,MAAM,EAAE,GAA6B,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9D,MAAM,EAAE,GAA6B,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QAE9D,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACpE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAEpE,MAAM,CAAC,GAAG,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,OAAO,CAAC,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,gCAAgC,CACrC,EAAgB,EAChB,YAAsB,EACtB,cAAwB,EACxB,cAAwB;QAExB,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,YAAY,CAAC;QAEtC,gEAAgE;QAChE,MAAM,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;QAChC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;QAChC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;QAEhC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,sCAAsC;QAClF,MAAM,CAAC,GAAG,CAAC,CAAC;QAEZ,MAAM,GAAG,GAAY,EAAE,CAAC;QAExB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YACV,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAEnC,MAAM,IAAI,GAAG,CAAC,KAAe,EAA4B,EAAE;gBACzD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;gBAC3B,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpD,MAAM,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;gBACtB,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEvB,MAAM,EAAE,GAA6B,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBAChF,MAAM,EAAE,GAA6B,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBAEhF,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAClD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBACpE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAEpE,OAAO,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAClC,CAAC,CAAC;YAEF,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;YAE9C,GAAG,CAAC,IAAI,CACN,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,EAC3G,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAC5G,CAAC;QACJ,CAAC;aAAM,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACnB,yEAAyE;YACzE,GAAG,CAAC,IAAI,CACN,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,EAC3D,IAAI,WAAK,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,gBAAU,CAAC,SAAS,CAAC,CAC5D,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,kEAAkE;YAClE,4DAA4D;QAC9D,CAAC;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED,gEAAgE;IAChE,MAAM,CAAC,kBAAkB,CAAC,MAAe;QACvC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;CACF;AAED,qDAAe,QAAQ,EAAC;;;ACnXZ;AACZ;;;;;;GAMG;AAEmC;AACL;AACwB;AACb;AACwC;AACnB;AAU1D,MAAM,GAAG;IAEN,OAAO,GAAG,GAAG;IACb,OAAO,GAAG,GAAG;IACb,KAAK,GAAG,CAAC,CAAC;IACV,OAAO,GAAG,GAAG;IAErB,gBAAgB,CAAC;IAEjB,qDAAqD;IAC9C,MAAM,CAAC,YAAqB;QACjC,MAAM,EAAE,GAAG,UAAM,CAAC,EAAE;QAEpB,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YACtB,4CAA4C;YAC5C,IAAI,CAAC,OAAO,GAAG,GAAG;YAClB,IAAI,CAAC,OAAO,GAAG,GAAG;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM;YAC1B,OAAO,IAAI;QACb,CAAC;QAED,wCAAwC;QACxC,qEAAqE;QACrE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,YAAY,CAAC;QAC7E,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,QAAQ;QACpC,yCAAyC;QACzC,mDAAmD;QAGnD,sCAAsC;QACtC,yEAAyE;QACzE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;QAC5E,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,QAAQ;QACpC,yCAAyC;QACzC,mDAAmD;QAEnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE;QAChC,OAAO,IAAI;IACb,CAAC;IAEO,YAAY;QAClB,MAAM,MAAM,GAAG,UAAM,CAAC,MAAM;QAC5B,IAAI,CAAC,MAAM;YAAE,MAAM,KAAK,CAAE,oBAAoB,CAAC;QAC/C,MAAM,GAAG,GAAG,MAAM,CAAC,iBAAiB,EAAE;QACtC,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnF,8EAA8E;QAC9E,MAAM,KAAK,GAAG,kBAAkB,GAAG,IAAI,CAAC,OAAO;QAC/C,OAAO,KAAK;IACd,CAAC;IAIM,YAAY,CAAC,GAAW;QAC7B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,GAAG;QACpB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,GAAG;QACpB,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;QACjC,IAAI,CAAC,MAAM;QACX,yEAAyE;IAC3E,CAAC;IAGD,IAAI,MAAM;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO;QACzE,OAAO,IAAI,CAAC,OAAO;IACrB,CAAC;IAEM,wBAAwB,CAAC,QAAgB;QAC9C,MAAM,UAAU,GAAG,QAAQ;QAC3B,MAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK;QACxC,4BAA4B;QAC5B,OAAO,QAAQ;IACjB,CAAC;IAED,0EAA0E;IAClE,YAAY,CAAC,OAAe,EAAE,OAAe,EAAE,YAAqB;QAC1E,MAAM,MAAM,GAAG,UAAM,CAAC,MAAM;QAC5B,MAAM,OAAO,GAAG,wBAAiC,CAAC,OAAO;QACzD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,6CAA6C;YAC7C,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC;YAC9C,OAAO,EAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAC;QACrC,CAAC;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,6CAA6C;YAC7C,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC;YACnC,OAAO,EAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAC;QACrC,CAAC;QACD,MAAM,QAAQ,GAAG,qBAAe,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QAE3E,MAAM,oBAAoB,GAAG,qBAAe,CAAC,SAAS,CACpD,MAAM,CAAC,iBAAiB,EAAE,EAC1B,QAAQ,CACT;QAED,IAAI,QAAgB;QACpB,IAAI,oBAAoB,GAAG,CAAC,EAAE,CAAC;YAC7B,+CAA+C;YAC/C,MAAM,GAAG,GAAG,MAAW,EAAE;YACzB,KAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,oBAAoB,CAAC;YAC/C,GAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,iBAAiB,EAAE,EAAE,GAAG,CAAC;YAE9C,MAAM,MAAM,GAAG,yBAAoB,CAAC,MAAM;YAE1C,6BAA6B;YAC7B,MAAM,IAAI,GAAG,MAAW,EAAE;YAC1B,QAAa,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;YAEhC,sFAAsF;YACtF,MAAM,SAAS,GAAG,UAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,yBAAoB,CAAC,MAAM,CAAC;YAEhG,MAAM,IAAI,GAAG,WAAW,EAAE;YAC1B,MAAW,CAAC,IAAI,EAAE,MAAM,CAAC,eAAe,EAAE,CAAC;YAC3C,MAAM,OAAO,GAAG,MAAW,EAAE;YAC7B,aAAkB,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC;YAE5C,MAAM,IAAI,GAAG,MAAW,EAAE;YAC1B,QAAa,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC;YAEpC,uCAAuC;YACvC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;YAChC,MAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;YAC5B,0BAA0B;YAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACnC,CAAC;aAAM,CAAC;YACN,QAAQ,GAAG,GAAG;QAChB,CAAC;QAED,MAAM,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ;QAC3D,kDAAkD;QAElD,OAAO,EAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,oBAAoB,EAAC;IAC/D,CAAC;IAED;;;;;;;;;;;;KAYC;IACM,8BAA8B,CAAC,eAAuB;QAC3D,MAAM,MAAM,GAAG,UAAM,CAAC,MAAM;QAC5B,MAAM,MAAM,GAAG,yBAAoB,CAAC,MAAM;QAC1C,MAAM,CAAC,GAAG,yBAAoB,CAAC,MAAM;QAErC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,CAAC,IAAI,CAAC,yFAAyF,CAAC;YACvG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC;QAED,2BAA2B;QAC3B,MAAM,GAAG,GAAG,IAAI;QAChB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,eAAe,CAAC,CAAC;QACnE,MAAM,OAAO,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG;QAE/C,8DAA8D;QAC9D,wDAAwD;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;QACjC,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC;YAC5F,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO;QAEnB,+CAA+C;QAC/C,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QAEzB,8DAA8D;QAC9D,MAAM,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE;QACzC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAChC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACxC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;YACd,0DAA0D;YAC1D,IAAI,GAAG,CAAC,CAAC;YAAC,IAAI,GAAG,CAAC,CAAC;YAAC,IAAI,GAAG,CAAC,CAAC;QAC/B,CAAC;aAAM,CAAC;YACN,IAAI,IAAI,GAAG;YACX,IAAI,IAAI,GAAG;YACX,IAAI,IAAI,GAAG;QACb,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QAEjC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAE3B,CAAC;IAIH;;;;;;;;SAQK;IACI,2BAA2B,CAChC,YAAoB;QAEpB,MAAM,MAAM,GAAG,UAAM,CAAC,MAAM,CAAC;QAC7B,MAAM,MAAM,GAAG,yBAAoB,CAAC,MAAM,CAAC;QAC3C,MAAM,CAAC,GAAG,yBAAoB,CAAC,MAAM,CAAC;QAEtC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;YACjE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC;QACjB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;QACjE,MAAM,OAAO,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,wBAAwB;QAErE,4CAA4C;QAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;YAC9D,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QAEpB,4CAA4C;QAC5C,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;QAE1B,gCAAgC;QAChC,MAAM,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;YACd,IAAI,GAAG,CAAC,CAAC;YAAC,IAAI,GAAG,CAAC,CAAC;YAAC,IAAI,GAAG,CAAC,CAAC;QAC/B,CAAC;aAAM,CAAC;YACN,IAAI,IAAI,GAAG,CAAC;YACZ,IAAI,IAAI,GAAG,CAAC;YACZ,IAAI,IAAI,GAAG,CAAC;QACd,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;QAElC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED;;;;;;;KAOC;IACI,uCAAuC,CAC5C,wBAAgC;QAEhC,MAAM,MAAM,GAAG,UAAM,CAAC,MAAM,CAAC;QAC7B,MAAM,MAAM,GAAG,yBAAoB,CAAC,MAAM,CAAC;QAC3C,MAAM,CAAC,GAAG,yBAAoB,CAAC,MAAM,CAAC;QAEtC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;YACzE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC;QACjB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,wBAAwB,CAAC,CAAC,CAAC;QACvE,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QACnC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE/B,mBAAmB;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QACpB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,eAAe;QAE1C,gDAAgD;QAChD,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,MAAkC,CAAC;QACxD,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QAChD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YAAC,EAAE,GAAG,CAAC,CAAC;YAAC,EAAE,GAAG,CAAC,CAAC;YAAC,EAAE,GAAG,CAAC,CAAC;QAAC,CAAC;aAAM,CAAC;YAAC,EAAE,IAAE,CAAC,CAAC;YAAC,EAAE,IAAE,CAAC,CAAC;YAAC,EAAE,IAAE,CAAC,CAAC;QAAC,CAAC;QAEtE,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;CACA;;;ACrUD,uBAAuB;AACX;AAEZ,MAAM,iBAAiB;IACrB,MAAM,CAAC,aAAa;QAClB,OAAO;;;;;;;;UAQD;IACR,CAAC;IAED,MAAM,CAAC,aAAa;QAClB,OAAO;;;;;;;;;UASD;IACR,CAAC;CACF;AAED,+DAAe,iBAAiB;;;AC9BhC,MAAM,OAAO;IACH,EAAE,CAAS;IACX,EAAE,CAAS;IAEnB,YAAY,CAAS,EAAE,CAAS;QAC9B,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACd,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;CACF;AAED,oDAAe,OAAO,EAAC;;;AClBe;AACI;AACD;AAazC,MAAM,SAAS;IACb,iDAAiD;IACjD,MAAM,CAAC,mBAAmB,CAAC,EAAS,EAAE,EAAS;QAC7C,OAAO,IAAI,CAAC,IAAI,CACd,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;YACzE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;gBACzE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,sBAAsB,CAAC,QAAmB;QAC/C,IAAI,cAAc,GAAgB,EAAE,CAAC;QACrC,IAAI,IAAI,GAAmB,CAAC,CAAC;QAE7B,IAAI,IAAwB,CAAC;QAC7B,IAAI,IAAwB,CAAC;QAC7B,IAAI,IAAwB,CAAC;QAC7B,IAAI,IAAwB,CAAC;QAE7B,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,uFAAuF;QACvF,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,aAAa,EAAE,CAAC;YAC3C,UAAU,GAAG,CAAC,CAAC;QACjB,CAAC;aAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;YACnD,UAAU,GAAG,CAAC,CAAC,CAAC;QAClB,CAAC;aAAM,CAAC;YACN,IAAI,GAAG,CAAC,CAAC;QACX,CAAC;QAED,0EAA0E;QAC1E,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC;YACf,MAAM,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;YACtB,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;YAEtB,KAAK,MAAM,QAAQ,IAAI,QAAQ,EAAE,CAAC;gBAChC,MAAM,OAAO,GAAc,EAAE,CAAC;gBAC9B,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE,CAAC;oBAC7B,yEAAyE;oBACzE,IACE,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,aAAa,IAAI,UAAU,KAAK,CAAC,CAAC,CAAC;wBAChE,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,aAAa,IAAI,UAAU,KAAK,CAAC,CAAC,EAC/D,CAAC;wBACD,IAAI,GAAG,CAAC,CAAC;wBACT,cAAc,GAAG,EAAE,CAAC;wBACpB,MAAM;oBACR,CAAC;oBACD,MAAM,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAEhB,IAAI,CAAC,CAAC,CAAC,GAAI,IAAe;wBAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,CAAC,CAAC,GAAI,IAAe;wBAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,CAAC,CAAC,GAAI,IAAe;wBAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,CAAC,CAAC,GAAI,IAAe;wBAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC;gBACD,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;QAED,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC;YACf,OAAO;gBACL,cAAc;gBACd,IAAI;gBACJ,IAAI,EAAE,IAAc;gBACpB,IAAI,EAAE,IAAc;gBACpB,IAAI,EAAE,IAAc;gBACpB,IAAI,EAAE,IAAc;aACrB,CAAC;QACJ,CAAC;QAED,iDAAiD;QACjD,MAAM,YAAY,GAAG,GAAG,CAAC;QACzB,IAAI,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,YAAY,CAAC;QAEzD,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACnC,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAEpC,KAAK,MAAM,QAAQ,IAAI,QAAQ,EAAE,CAAC;YAChC,MAAM,OAAO,GAAc,EAAE,CAAC;YAC9B,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE,CAAC;gBAC7B,MAAM,CAAC,GAAG,IAAI,aAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBACjD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEhB,IAAI,KAAK,CAAC,KAAK,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC3C,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC7C,IAAI,KAAK,CAAC,KAAK,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC3C,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;gBAE7C,mCAAmC;gBACnC,IACE,CAAC,KAAK,CAAC,KAAK,IAAI,YAAY,IAAI,cAAc,CAAC;oBAC/C,CAAC,KAAK,CAAC,KAAK,IAAI,YAAY,IAAI,CAAC,cAAc,CAAC,EAChD,CAAC;oBACD,IAAI,GAAG,CAAC,CAAC;oBACT,cAAc,GAAG,EAAE,CAAC;oBACpB,MAAM;gBACR,CAAC;YACH,CAAC;YACD,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;QAED,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC;YACf,OAAO;gBACL,cAAc;gBACd,IAAI;gBACJ,IAAI;gBACJ,IAAI;gBACJ,IAAI;gBACJ,IAAI;aACL,CAAC;QACJ,CAAC;QAED,6DAA6D;QAC7D,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACnC,IAAI,GAAG,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;QACzD,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7B,IAAI,GAAG,IAAI,CAAC;QACZ,IAAI,GAAG,IAAI,CAAC;QAEZ,KAAK,MAAM,QAAQ,IAAI,QAAQ,EAAE,CAAC;YAChC,MAAM,OAAO,GAAc,EAAE,CAAC;YAC9B,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE,CAAC;gBAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;gBAE5E,IAAI,KAAK,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC;gBAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC7C,IAAI,KAAK,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC;gBAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI;oBAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;gBAE7C,OAAO,CAAC,IAAI,CAAC,IAAI,aAAO,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACjD,CAAC;YACD,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;QAED,OAAO;YACL,cAAc;YACd,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;SACL,CAAC;IACJ,CAAC;IAED,uEAAuE;IACvE,MAAM,CAAC,aAAa,CAAC,KAAY;QAC/B,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,OAAO;YACL,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SACrB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,KAAY;QAC7B,MAAM,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,OAAO,IAAI,aAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,wBAAwB,CAAC,YAA0B,EAAE,KAAY;QACtE,IAAI,EAAW,CAAC;QAEhB,IAAI,YAAY,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YAC5B,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;aAAM,IAAI,YAAY,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YACnC,EAAE,GAAG,IAAI,aAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;aAAM,CAAC;YACN,MAAM,YAAY,GAAG,GAAG,CAAC;YACzB,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;YAChF,EAAE,GAAG,IAAI,aAAO,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,EAAE,GAAG,IAAI,aAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzF,uBAAuB;QACvB,IACE,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI;YACxB,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI;YACxB,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI;YACxB,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,EACxB,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,uCAAuC;QACvC,KAAK,MAAM,QAAQ,IAAI,YAAY,CAAC,cAAc,EAAE,CAAC;YACnD,IAAI,aAAa,GAAG,CAAC,CAAC;YAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7C,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE3B,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAElF,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oBACtB,MAAM,OAAO,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC1C,MAAM,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC3C,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;wBACnE,aAAa,EAAE,CAAC;oBAClB,CAAC;gBACH,CAAC;YACH,CAAC;YAED,qCAAqC;YACrC,CAAC;gBACC,MAAM,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAEvB,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAElF,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oBACtB,MAAM,OAAO,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC1C,MAAM,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC3C,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;wBACnE,aAAa,EAAE,CAAC;oBAClB,CAAC;gBACH,CAAC;YACH,CAAC;YAED,IAAI,aAAa,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC5B,OAAO,IAAI,CAAC,CAAC,yBAAyB;YACxC,CAAC;QACH,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,iEAAiE;IACjE,MAAM,CAAC,wBAAwB,CAAC,QAAmB,EAAE,KAAY;QAC/D,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExC,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAC/B,IAAI,OAAO,GAAG,GAAG;YAAE,OAAO,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAE9C,MAAM,OAAO,GAAG,IAAI,WAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,EAAE,gBAAU,CAAC,KAAK,CAAC,CAAC;QACtF,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAE1C,KAAK,MAAM,QAAQ,IAAI,QAAQ,EAAE,CAAC;YAChC,IAAI,aAAa,GAAG,CAAC,CAAC;YAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7C,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAElD,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAElF,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oBACtB,MAAM,OAAO,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC1C,MAAM,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC3C,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;wBACnE,aAAa,EAAE,CAAC;oBAClB,CAAC;gBACH,CAAC;YACH,CAAC;YAED,CAAC;gBACC,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChE,MAAM,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE9C,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAElF,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;oBACtB,MAAM,OAAO,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC1C,MAAM,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC;oBAC3C,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC;wBACnE,aAAa,EAAE,CAAC;oBAClB,CAAC;gBACH,CAAC;YACH,CAAC;YAED,IAAI,aAAa,GAAG,CAAC,KAAK,CAAC;gBAAE,OAAO,IAAI,CAAC;QAC3C,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,sDAAe,SAAS,EAAC;;;AC1TzB;;;;;GAKG;AAQH,MAAM,cAAc;IACV,sBAAsB,CAAqB;IAC3C,uBAAuB,CAAqB;IAC5C,QAAQ,CAAW;IACnB,UAAU,CAAS;IAE3B;QACE,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAc,aAAa,CAAC,CAAC;QACjF,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,aAAa,CAAc,UAAU,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,iEAAiE;IACnE,CAAC;IAED,YAAY;QACV,sCAAsC;QACtC,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YACjE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACxD,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,GAAW,EAAE,CAAS,EAAE,CAAS;QAC5C,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAE9C,mBAAmB;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1C,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YAC7C,GAAG,CAAC,SAAS,GAAG,iBAAiB,CAAC,CAAC,qBAAqB;YAExD,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAClC,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,aAAa,CAAc,UAAU,CAAC,CAAC;YACjF,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAClC,kDAAkD;gBAClD,OAAO;YACT,CAAC;YACD,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAE9C,MAAM,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;QAED,kBAAkB;QAClB,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;QAC9C,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QACxC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC;IAClC,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,GAAW,EAAE,CAAS,EAAE,CAAS,EAAE,IAAkB;QAC/D,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAE9C,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1C,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YAC7C,GAAG,CAAC,SAAS,GAAG,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAkB,CAAC;YACvE,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBACjC,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAc,aAAa,CAAC,CAAC;YACnF,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBACjC,kDAAkD;gBAClD,OAAO;YACT,CAAC;YACD,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAE7C,MAAM,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAE/B,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1C,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;QAC/C,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC;IAClC,CAAC;CACF;AAED,sDAAsD;AACtD,0DAAe,cAAc,EAAC;;;ACjH9B,mBAAmB;AAIJ,MAAM,aAAa;IAChC,MAAM,CAAC,WAAW;QAChB,OAAO;;;;;;;;;;;;;;;;;;;MAmBL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8FL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,OAAO;;;;;;;;;;;;MAYL,CAAC;IAEL,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,OAAO;;;;;;;;MAQL,CAAC;IAEL,CAAC;IAED,MAAM,CAAC,MAAM;QACX,OAAO;;;;;;;;;;;;;MAaL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,YAAY;QACjB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyCL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,eAAe;QACpB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8FL,CAAC;IACL,CAAC;IAED,MAAM,CAAC,cAAc;QACnB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmCL,CAAC;IACL,CAAC;CACF;;;AClWD;;;;;GAKG;AACH,MAAM,QAAQ;IACZ,MAAM,GAAG;QACP,6hEAA6hE;QAC7hE,4hEAA4hE;QAC5hE,4hEAA4hE;QAC5hE,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC1F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SAC9C,CAAC;QACF,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC1F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC1F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SAC3E,CAAC;QACF,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC1F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC5F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG;YACzF,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO;YACzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrF,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SAC7F,CAAC;KACH;IACD,OAAO,GAAG;QACR,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC1F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE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AG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxF,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG;SACJ,CAAC;QACF,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACzF,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC1F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACpF,CAAC;KACH;IACD,SAAS,GAAG;QACV,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvF,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;SAC5D,CAAC;QACF,CAAC,EAAE,IAAI,YAAY,CAAC;YAClxF,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG;SACT,CAAC;QACF,CAAC,EAAE,IAAI,YAAY,CAAC;YAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SAC/B,CAAC;KACH;IACD,IAAI,GAAG;QACL,CAAC,EAAE,IAAI,YAAY,CAAC;YAClzF,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvF,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACrD,CAAC;QACF,CAAC,EAAE,IAAI,YAAY,CAAC;YAClzF,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACzF,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC1F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YAC5F,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACzlB,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5F,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,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AAE,OAAO,EAAE,OAAO;YAC9F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK;YAC/F,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;YAC9F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI;YAC9F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACxF,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC7F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACxF,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACvF,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACvF,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;SAC7D;QACD,CAAC,EAAE;YACD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YAC1F,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACvxF,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC9F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC9F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACxF,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACvF,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YAC/F,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACvF,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK;SAC5D;KACF;IAED,GAAG,EAAE;QACH,IAAI,EAAE,KAAK;QACX,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC/F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC/F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACvC;QACD,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC/F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACjC;QACD,CAAC,EAAE;YACD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;YAC5F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC7F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACzC;KACF;IAED,OAAO,EAAE;QACP,IAAI,EAAE,SAAS;QACf,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC/F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC7F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC/F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACvC;QACD,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;YAC5F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;SACrE;QACD,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACtF;KACF;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC/F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACzF;QACD,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC7F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC/F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SAC5C;QACD,CAAC,EAAE;YACD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC/F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC/F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACd;KACF;IACD,SAAS,EAAE;QACT,IAAI,EAAE,WAAW;QACjnB;QACD,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC/F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SAC5C;QACD,CAAC,EAAE;YACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC/F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9F,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC7F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACpF;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,KAAK;QACX,CAAC,EAAE;YACD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;YAC3F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACvF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACzF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK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AE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC/D,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC1D,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAClhnF,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACnF,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACzE,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACnF,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YAC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","sources":["webpack://astro-core/webpack/bootstrap","webpack://astro-core/webpack/runtime/define property getters","webpack://astro-core/webpack/runtime/hasOwnProperty shorthand","webpack://astro-core/webpack/runtime/make namespace object","webpack://astro-core/./node_modules/healpixjs/lib-esm/Constants.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Pointing.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Zphi.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Hploc.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Vec3.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/CircleFinder.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Fxyf.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/pstack.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/RangeSet.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Xyf.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/Healpix.js","webpack://astro-core/./node_modules/healpixjs/lib-esm/index.js","webpack://astro-core/./src/Config.ts","webpack://astro-core/./src/Global.ts","webpack://astro-core/./node_modules/gl-matrix/esm/common.js","webpack://astro-core/./node_modules/gl-matrix/esm/vec3.js","webpack://astro-core/./node_modules/gl-matrix/esm/mat4.js","webpack://astro-core/./src/utils/Utils.ts","webpack://astro-core/./src/Camera.ts","webpack://astro-core/./src/utils/ComputePerspectiveMatrix.ts","webpack://astro-core/./src/model/AbstractSkyEntity.ts","webpack://astro-core/./node_modules/gl-matrix/esm/vec4.js","webpack://astro-core/./src/model/hips/FoVHelper.ts","webpack://astro-core/./src/utils/CoordsType.ts","webpack://astro-core/./src/model/Point.ts","webpack://astro-core/./src/utils/FoVUtils.ts","webpack://astro-core/./src/model/FoV.ts","webpack://astro-core/./src/shader/GridShaderManager.ts","webpack://astro-core/./src/model/Point2D.ts","webpack://astro-core/./src/utils/GeomUtils.ts","webpack://astro-core/./src/model/grid/GridTextHelper.ts","webpack://astro-core/./src/shader/ShaderManager.ts","webpack://astro-core/./src/model/hips/ColorMap.ts","webpack://astro-core/./src/shader/HiPSShaderProgram.ts","webpack://astro-core/./src/model/hips/Tile.ts","webpack://astro-core/./src/model/hips/TileBuffer.ts","webpack://astro-core/./src/model/hips/VisibleTilesManager.ts","webpack://astro-core/./src/model/grid/HealpixGridSingleton.ts","webpack://astro-core/./src/utils/RayPickingUtils.ts","webpack://astro-core/./src/utils/MouseHelper.ts","webpack://astro-core/./src/model/ColorMaps.ts","webpack://astro-core/./src/model/hips/AncestorTile.ts","webpack://astro-core/./src/model/hips/AllSky.ts","webpack://astro-core/./src/model/hips/HiPS.ts","webpack://astro-core/./src/model/tap/TapMetadata.ts","webpack://astro-core/./src/model/tap/TapMetadataList.ts","webpack://astro-core/./src/model/tap/TapRepo.ts","webpack://astro-core/./src/model/catalogues/CatalogueProps.ts","webpack://astro-core/./src/model/Source.ts","webpack://astro-core/./src/shader/CatalogueShaderProgram.ts","webpack://astro-core/./src/model/catalogues/CatalogueGL.ts","webpack://astro-core/./src/utils/STCSParser.ts","webpack://astro-core/./src/model/footprints/Footprint.ts","webpack://astro-core/./src/model/footprints/FootprintProps.ts","webpack://astro-core/./src/shader/FootprintShaderProgram.ts","webpack://astro-core/./src/model/footprints/FootprintSetGL.ts","webpack://astro-core/./src/services/tapRepoService.ts","webpack://astro-core/./src/services/queryCatalogueByFoV.ts","webpack://astro-core/./src/services/queryFootprintSetByFov.ts","webpack://astro-core/./src/model/grid/EquatorialGrid.ts","webpack://astro-core/./src/AstroSphere.ts","webpack://astro-core/./src/AstroViewer.ts","webpack://astro-core/./src/model/hips/HiPSDescriptor.ts","webpack://astro-core/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Constants {\n}\n//\tstatic halfpi = Math.PI/2.;\nConstants.halfpi = 1.5707963267948966;\nConstants.inv_halfpi = 2. / Math.PI;\n/** The Constant twopi. */\nConstants.twopi = 2 * Math.PI;\nConstants.inv_twopi = 1. / (2 * Math.PI);\n//# sourceMappingURL=Constants.js.map","import { Hploc } from './Hploc.js';\nexport class Pointing {\n    /**\n     *\n     * @param {*} vec3 Vec3.js\n     * @param {*} mirror\n     * @param {*} in_theta radians\n     * @param {*} in_phi radians\n     */\n    constructor(vec3, mirror, in_theta, in_phi) {\n        if (vec3 != null) {\n            this.theta = Hploc.atan2(Math.sqrt(vec3.x * vec3.x + vec3.y * vec3.y), vec3.z);\n            if (mirror) {\n                this.phi = -Hploc.atan2(vec3.y, vec3.x);\n            }\n            else {\n                this.phi = Hploc.atan2(vec3.y, vec3.x);\n            }\n            if (this.phi < 0.0) {\n                this.phi = this.phi + 2 * Math.PI;\n            }\n            if (this.phi >= 2 * Math.PI) {\n                this.phi = this.phi - 2 * Math.PI;\n            }\n        }\n        else {\n            this.theta = in_theta;\n            this.phi = in_phi;\n        }\n    }\n}\n//# sourceMappingURL=Pointing.js.map","export class Zphi {\n    /** Creation from individual components */\n    constructor(z_, phi_) {\n        this.z = z_;\n        this.phi = phi_;\n    }\n    ;\n}\n//# sourceMappingURL=Zphi.js.map","import { Pointing } from './Pointing.js';\nimport { Vec3 } from './Vec3.js';\nimport { Zphi } from './Zphi.js';\nexport class Hploc {\n    constructor(ptg) {\n        Hploc.PI4_A = 0.7853981554508209228515625;\n        Hploc.PI4_B = 0.794662735614792836713604629039764404296875e-8;\n        Hploc.PI4_C = 0.306161699786838294306516483068750264552437361480769e-16;\n        Hploc.M_1_PI = 0.3183098861837906715377675267450287;\n        if (ptg) {\n            this.sth = 0.0;\n            this.have_sth = false;\n            this.z = Hploc.cos(ptg.theta);\n            this._phi = ptg.phi;\n            if (Math.abs(this.z) > 0.99) {\n                this.sth = Hploc.sin(ptg.theta);\n                this.have_sth = true;\n            }\n        }\n    }\n    setZ(z) {\n        this.z = z;\n    }\n    ;\n    get phi() {\n        return this._phi;\n    }\n    ;\n    set phi(phi) {\n        this._phi = phi;\n    }\n    ;\n    setSth(sth) {\n        this.sth = sth;\n    }\n    ;\n    toPointing(mirror) {\n        const st = this.have_sth ? this.sth : Math.sqrt((1.0 - this.z) * (1.0 + this.z));\n        return new Pointing(null, false, Hploc.atan2(st, this.z), this._phi);\n    }\n    toVec3() {\n        var st = this.have_sth ? this.sth : Math.sqrt((1.0 - this.z) * (1.0 + this.z));\n        var vector = new Vec3(st * Hploc.cos(this.phi), st * Hploc.sin(this.phi), this.z);\n        // var vector = new Vec3(st*Math.cos(this.phi),st*Math.sin(this.phi),this.z);\n        return vector;\n    }\n    ;\n    toZphi() {\n        return new Zphi(this.z, this.phi);\n    }\n    static sin(d) {\n        let u = d * Hploc.M_1_PI;\n        let q = Math.floor(u < 0 ? u - 0.5 : u + 0.5);\n        let x = 4.0 * q;\n        d -= x * Hploc.PI4_A;\n        d -= x * Hploc.PI4_B;\n        d -= x * Hploc.PI4_C;\n        if ((q & 1) != 0) {\n            d = -d;\n        }\n        return this.sincoshelper(d);\n    }\n    ;\n    static cos(d) {\n        //\t\tlet u = d * Hploc.M_1_PI - 0.5;\n        let u = d * Hploc.M_1_PI - 0.5;\n        //\t\tu -= 0.5;\n        let q = 1 + 2 * Math.floor(u < 0 ? u - 0.5 : u + 0.5);\n        let x = 2.0 * q;\n        let t = x * Hploc.PI4_A;\n        d = d - t;\n        d -= x * Hploc.PI4_B;\n        d -= x * Hploc.PI4_C;\n        if ((q & 2) == 0) {\n            d = -d;\n        }\n        return Hploc.sincoshelper(d);\n    }\n    ;\n    static sincoshelper(d) {\n        let s = d * d;\n        let u = -7.97255955009037868891952e-18;\n        u = u * s + 2.81009972710863200091251e-15;\n        u = u * s - 7.64712219118158833288484e-13;\n        u = u * s + 1.60590430605664501629054e-10;\n        u = u * s - 2.50521083763502045810755e-08;\n        u = u * s + 2.75573192239198747630416e-06;\n        u = u * s - 0.000198412698412696162806809;\n        u = u * s + 0.00833333333333332974823815;\n        u = u * s - 0.166666666666666657414808;\n        return s * u * d + d;\n    }\n    ;\n    /** This method calculates the arc sine of x in radians. The return\n    value is in the range [-pi/2, pi/2]. The results may have\n    maximum error of 3 ulps. */\n    static asin(d) {\n        return Hploc.mulsign(Hploc.atan2k(Math.abs(d), Math.sqrt((1 + d) * (1 - d))), d);\n    }\n    ;\n    /** This method calculates the arc cosine of x in radians. The\n        return value is in the range [0, pi]. The results may have\n        maximum error of 3 ulps. */\n    static acos(d) {\n        return Hploc.mulsign(Hploc.atan2k(Math.sqrt((1 + d) * (1 - d)), Math.abs(d)), d) + (d < 0 ? Math.PI : 0);\n    }\n    ;\n    static mulsign(x, y) {\n        let sign = Hploc.copySign(1, y);\n        return sign * x;\n    }\n    ;\n    static copySign(magnitude, sign) {\n        return sign < 0 ? -Math.abs(magnitude) : Math.abs(magnitude);\n        // let finalsign = 1;\n        // if (Object.is(finalsign , -0)){\n        // \tsign = -1;\n        // }else if (Object.is(finalsign , 0)){\n        // \tsign = 1;\n        // }else {\n        // \tsign = Math.sign(finalsign);\n        // }\n        // return finalsign * magnitude;\n    }\n    static atanhelper(s) {\n        let t = s * s;\n        let u = -1.88796008463073496563746e-05;\n        u = u * t + (0.000209850076645816976906797);\n        u = u * t + (-0.00110611831486672482563471);\n        u = u * t + (0.00370026744188713119232403);\n        u = u * t + (-0.00889896195887655491740809);\n        u = u * t + (0.016599329773529201970117);\n        u = u * t + (-0.0254517624932312641616861);\n        u = u * t + (0.0337852580001353069993897);\n        u = u * t + (-0.0407629191276836500001934);\n        u = u * t + (0.0466667150077840625632675);\n        u = u * t + (-0.0523674852303482457616113);\n        u = u * t + (0.0587666392926673580854313);\n        u = u * t + (-0.0666573579361080525984562);\n        u = u * t + (0.0769219538311769618355029);\n        u = u * t + (-0.090908995008245008229153);\n        u = u * t + (0.111111105648261418443745);\n        u = u * t + (-0.14285714266771329383765);\n        u = u * t + (0.199999999996591265594148);\n        u = u * t + (-0.333333333333311110369124);\n        return u * t * s + s;\n    }\n    ;\n    static atan2k(y, x) {\n        let q = 0.;\n        if (x < 0) {\n            x = -x;\n            q = -2.;\n        }\n        if (y > x) {\n            let t = x;\n            x = y;\n            y = -t;\n            q += 1.;\n        }\n        return Hploc.atanhelper(y / x) + q * (Math.PI / 2);\n    }\n    ;\n    /** This method calculates the arc tangent of y/x in radians, using\n    the signs of the two arguments to determine the quadrant of the\n    result. The results may have maximum error of 2 ulps. */\n    static atan2(y, x) {\n        let r = Hploc.atan2k(Math.abs(y), x);\n        r = Hploc.mulsign(r, x);\n        if (Hploc.isinf(x) || x == 0) {\n            r = Math.PI / 2 - (Hploc.isinf(x) ? (Hploc.copySign(1, x) * (Math.PI / 2)) : 0);\n        }\n        if (Hploc.isinf(y)) {\n            r = Math.PI / 2 - (Hploc.isinf(x) ? (Hploc.copySign(1, x) * (Math.PI * 1 / 4)) : 0);\n        }\n        if (y == 0) {\n            r = (Hploc.copySign(1, x) == -1 ? Math.PI : 0);\n        }\n        return Hploc.isnan(x) || Hploc.isnan(y) ? NaN : Hploc.mulsign(r, y);\n    }\n    ;\n    /** Checks if the argument is a NaN or not. */\n    static isnan(d) {\n        return d != d;\n    }\n    ;\n    /** Checks if the argument is either positive or negative infinity. */\n    static isinf(d) {\n        return Math.abs(d) === +Infinity;\n    }\n    ;\n}\nHploc.PI4_A = 0.7853981554508209228515625;\nHploc.PI4_B = 0.794662735614792836713604629039764404296875e-8;\nHploc.PI4_C = 0.306161699786838294306516483068750264552437361480769e-16;\nHploc.M_1_PI = 0.3183098861837906715377675267450287;\n//# sourceMappingURL=Hploc.js.map","/**\n * Partial porting to Javascript of Vec3.java from Healpix3.30\n */\nimport { Hploc } from './Hploc.js';\nimport { Pointing } from './Pointing.js';\nexport class Vec3 {\n    constructor(in_x, in_y, in_z) {\n        if (in_x instanceof Pointing) {\n            let ptg = in_x;\n            let sth = Hploc.sin(ptg.theta);\n            this.x = sth * Hploc.cos(ptg.phi);\n            this.y = sth * Hploc.sin(ptg.phi);\n            this.z = Hploc.cos(ptg.theta);\n        }\n        else {\n            this.x = in_x;\n            this.y = in_y;\n            this.z = in_z;\n        }\n    }\n    getX() {\n        return this.x;\n    }\n    ;\n    getY() {\n        return this.y;\n    }\n    ;\n    getZ() {\n        return this.z;\n    }\n    ;\n    /** Scale the vector by a given factor\n    @param n the scale factor */\n    scale(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    ;\n    /** Vector cross product.\n    @param v another vector\n    @return the vector cross product between this vector and {@code v} */\n    cross(v) {\n        return new Vec3(this.y * v.z - v.y * this.z, this.z * v.x - v.z * this.x, this.x * v.y - v.x * this.y);\n    }\n    ;\n    /** Vector addition\n        * @param v the vector to be added\n        * @return addition result */\n    add(v) {\n        return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    ;\n    /** Normalize the vector */\n    normalize() {\n        let d = 1. / this.length();\n        this.x *= d;\n        this.y *= d;\n        this.z *= d;\n    }\n    ;\n    /** Return normalized vector */\n    norm() {\n        let d = 1. / this.length();\n        return new Vec3(this.x * d, this.y * d, this.z * d);\n    }\n    ;\n    /** Vector length\n    @return the length of the vector. */\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n    ;\n    /** Squared vector length\n        @return the squared length of the vector. */\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    ;\n    /** Computes the dot product of the this vector and {@code v1}.\n     * @param v1 another vector\n     * @return dot product */\n    dot(v1) {\n        return this.x * v1.x + this.y * v1.y + this.z * v1.z;\n    }\n    ;\n    /** Vector subtraction\n     * @param v the vector to be subtracted\n     * @return subtraction result */\n    sub(v) {\n        return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    ;\n    /** Angle between two vectors.\n    @param v1 another vector\n    @return the angle in radians between this vector and {@code v1};\n      constrained to the range [0,PI]. */\n    angle(v1) {\n        return Hploc.atan2(this.cross(v1).length(), this.dot(v1));\n    }\n    /** Invert the signs of all components */\n    flip() {\n        this.x *= -1.0;\n        this.y *= -1.0;\n        this.z *= -1.0;\n    }\n    static pointing2Vec3(pointing) {\n        let sth = Hploc.sin(pointing.theta);\n        let x = sth * Hploc.cos(pointing.phi);\n        let y = sth * Hploc.sin(pointing.phi);\n        let z = Hploc.cos(pointing.theta);\n        return new Vec3(x, y, z);\n    }\n    ;\n}\n//# sourceMappingURL=Vec3.js.map","import { Vec3 } from './Vec3.js';\nexport class CircleFinder {\n    /**\n     * @param point: Vec3\n     */\n    constructor(point) {\n        let np = point.length;\n        //HealpixUtils.check(np>=2,\"too few points\");\n        if (!(np >= 2)) {\n            console.log(\"too few points\");\n            return;\n        }\n        this.center = point[0].add(point[1]);\n        this.center.normalize();\n        this.cosrad = point[0].dot(this.center);\n        for (let i = 2; i < np; ++i) {\n            if (point[i].dot(this.center) < this.cosrad) { // point outside the current circle\n                this.getCircle(point, i);\n            }\n        }\n    }\n    ;\n    /**\n     * @parm point: Vec3\n     * @param q: int\n     */\n    getCircle(point, q) {\n        this.center = point[0].add(point[q]);\n        this.center.normalize();\n        this.cosrad = point[0].dot(this.center);\n        for (let i = 1; i < q; ++i) {\n            if (point[i].dot(this.center) < this.cosrad) { // point outside the current circle\n                this.getCircle2(point, i, q);\n            }\n        }\n    }\n    ;\n    /**\n     * @parm point: Vec3\n     * @param q1: int\n     * @param q2: int\n     */\n    getCircle2(point, q1, q2) {\n        this.center = point[q1].add(point[q2]);\n        this.center.normalize();\n        this.cosrad = point[q1].dot(this.center);\n        for (let i = 0; i < q1; ++i) {\n            if (point[i].dot(this.center) < this.cosrad) { // point outside the current circle\n                this.center = (point[q1].sub(point[i])).cross(point[q2].sub(point[i]));\n                this.center.normalize();\n                this.cosrad = point[i].dot(this.center);\n                if (this.cosrad < 0) {\n                    this.center.flip();\n                    this.cosrad = -this.cosrad;\n                }\n            }\n        }\n    }\n    ;\n    getCenter() {\n        return new Vec3(this.center.x, this.center.y, this.center.z);\n    }\n    getCosrad() {\n        return this.cosrad;\n    }\n    ;\n}\n//# sourceMappingURL=CircleFinder.js.map","/**\n * Partial porting to Javascript of Fxyf.java from Healpix3.30\n */\nimport { Hploc } from './Hploc.js';\nexport class Fxyf {\n    constructor(x, y, f) {\n        this.fx = x;\n        this.fy = y;\n        this.face = f;\n        // coordinate of the lowest corner of each face\n        this.jrll = new Uint8Array([2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4]);\n        this.jpll = new Uint8Array([1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7]);\n        this.halfpi = Math.PI / 2.;\n    }\n    toHploc() {\n        let loc = new Hploc();\n        let jr = this.jrll[this.face] - this.fx - this.fy;\n        let nr;\n        if (jr < 1) {\n            nr = jr;\n            let tmp = nr * nr / 3.;\n            loc.z = 1 - tmp;\n            if (loc.z > 0.99) {\n                loc.sth = Math.sqrt(tmp * (2.0 - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else if (jr > 3) {\n            nr = 4 - jr;\n            let tmp = nr * nr / 3.;\n            loc.z = tmp - 1;\n            if (loc.z < -0.99) {\n                loc.sth = Math.sqrt(tmp * (2.0 - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else {\n            nr = 1;\n            loc.z = (2 - jr) * 2.0 / 3.;\n        }\n        let tmp = this.jpll[this.face] * nr + this.fx - this.fy;\n        if (tmp < 0) {\n            tmp += 8;\n        }\n        if (tmp >= 8) {\n            tmp -= 8;\n        }\n        loc.phi = (nr < 1e-15) ? 0 : (0.5 * this.halfpi * tmp) / nr;\n        return loc;\n    }\n    ;\n    toVec3() {\n        return this.toHploc().toVec3();\n    }\n    ;\n}\n//# sourceMappingURL=Fxyf.js.map","export class pstack {\n    /** Creation from individual components */\n    constructor(sz) {\n        this.p = new Array(sz);\n        this.o = new Int32Array(sz);\n        this.s = 0;\n        this.m = 0;\n    }\n    ;\n    /**\n     * @param p long\n     * @param o int\n     */\n    push(p_, o_) {\n        this.p[this.s] = p_;\n        this.o[this.s] = o_;\n        ++this.s;\n    }\n    ;\n    pop() {\n        --this.s;\n    }\n    ;\n    popToMark() {\n        this.s = this.m;\n    }\n    ;\n    size() {\n        return this.s;\n    }\n    ;\n    mark() {\n        this.m = this.s;\n    }\n    ;\n    otop() {\n        return this.o[this.s - 1];\n    }\n    ;\n    ptop() {\n        return this.p[this.s - 1];\n    }\n    ;\n}\n//# sourceMappingURL=pstack.js.map","export class RangeSet {\n    /**\n     * @param int cap: initial capacity\n     */\n    constructor(cap) {\n        if (cap < 0)\n            console.error(\"capacity must be positive\");\n        this.r = new Int32Array(cap << 1);\n        this.sz = 0;\n    }\n    ;\n    /** Append a single-value range to the object.\n    @param val value to append */\n    append(val) {\n        this.append1(val, val + 1);\n    }\n    ;\n    /** Append a range to the object.\n   @param a first long in range\n   @param b one-after-last long in range */\n    append1(a, b) {\n        if (a >= b)\n            return;\n        if ((this.sz > 0) && (a <= this.r[this.sz - 1])) {\n            if (a < this.r[this.sz - 2])\n                console.error(\"bad append operation\");\n            if (b > this.r[this.sz - 1])\n                this.r[this.sz - 1] = b;\n            return;\n        }\n        // this.ensureCapacity(this.sz+2);\n        let cap = this.sz + 2;\n        if (this.r.length < cap) {\n            let newsize = Math.max(2 * this.r.length, cap);\n            let rnew = new Int32Array(newsize);\n            rnew.set(this.r);\n            this.r = rnew;\n        }\n        this.r[this.sz] = a;\n        this.r[this.sz + 1] = b;\n        this.sz += 2;\n    }\n    ;\n    /** Make sure the object can hold at least the given number of entries.\n     * @param cap int\n     * */\n    ensureCapacity(cap) {\n        if (this.r.length < cap)\n            this.resize(Math.max(2 * this.r.length, cap));\n    }\n    ;\n    /**\n     * @param newsize int\n     */\n    resize(newsize) {\n        if (newsize < this.sz)\n            console.error(\"requested array size too small\");\n        if (newsize == this.r.length)\n            return;\n        let rnew = new Int32Array(newsize);\n        let sliced = this.r.slice(0, this.sz + 1);\n        //\t\tthis.arrayCopy(this.r, 0, rnew, 0, this.sz);\n        this.r = sliced;\n    }\n    ;\n}\n//# sourceMappingURL=RangeSet.js.map","/**\n * Partial porting to Javascript of Xyf.java from Healpix3.30\n */\nexport class Xyf {\n    constructor(x, y, f) {\n        this.ix = x;\n        this.iy = y;\n        this.face = f;\n    }\n}\n//# sourceMappingURL=Xyf.js.map","\"use strict\";\nimport { CircleFinder } from \"./CircleFinder.js\";\nimport { Constants } from \"./Constants.js\";\nimport { Fxyf } from \"./Fxyf.js\";\nimport { Hploc } from \"./Hploc.js\";\nimport { Pointing } from \"./Pointing.js\";\nimport { pstack } from \"./pstack.js\";\nimport { RangeSet } from \"./RangeSet.js\";\nimport { Vec3 } from \"./Vec3.js\";\nimport { Xyf } from \"./Xyf.js\";\nimport { Zphi } from \"./Zphi.js\";\n/**\n * Partial porting to Javascript of HealpixBase.java from Healpix3.30\n */\n// import Fxyf from './Fxyf.js';\n// import Hploc from './Hploc.js';\n// import Xyf from './Xyf.js';\n// import Vec3 from './Vec3.js';\n// import Pointing from './Pointing.js';\n// import CircleFinder from './CircleFinder.js';\n// import Zphi from './Zphi.js';\n// import pstack from './pstack.js';\n// import Constants from './Constants.js';\n// import RangeSet from './RangeSet.js';\nexport class Healpix {\n    constructor(nside_in) {\n        this.order_max = 29;\n        this.inv_halfpi = 2.0 / Math.PI;\n        this.twothird = 2.0 / 3.;\n        // console.log(\"twothird \"+this.twothird);\n        // this.ns_max=1L<<order_max;\n        this.ns_max = Math.pow(2, this.order_max);\n        this.ctab = new Uint16Array([\n            0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262,\n            263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283,\n            1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286,\n            1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520,\n            521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526,\n            527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546,\n            1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805,\n            1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816,\n            2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565,\n            2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584,\n            3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335,\n            3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314,\n            2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063,\n            2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082,\n            3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341,\n            3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855\n        ]);\n        this.utab = new Uint16Array([0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277,\n            320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088,\n            1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301,\n            1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116,\n            4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369,\n            4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136,\n            5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381,\n            5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388,\n            16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469,\n            16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720,\n            16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473,\n            17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684,\n            17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485,\n            20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736,\n            20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817,\n            20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572,\n            21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781,\n            21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845]);\n        this.jrll = new Int16Array([2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4]);\n        this.jpll = new Int16Array([1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7]);\n        this.xoffset = new Int16Array([-1, -1, 0, 1, 1, 1, 0, -1]);\n        this.yoffset = new Int16Array([0, 1, 1, 1, 0, -1, -1, -1]);\n        this.facearray = [\n            new Int16Array([8, 9, 10, 11, -1, -1, -1, -1, 10, 11, 8, 9]),\n            new Int16Array([5, 6, 7, 4, 8, 9, 10, 11, 9, 10, 11, 8]),\n            new Int16Array([-1, -1, -1, -1, 5, 6, 7, 4, -1, -1, -1, -1]),\n            new Int16Array([4, 5, 6, 7, 11, 8, 9, 10, 11, 8, 9, 10]),\n            new Int16Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),\n            new Int16Array([1, 2, 3, 0, 0, 1, 2, 3, 5, 6, 7, 4]),\n            new Int16Array([-1, -1, -1, -1, 7, 4, 5, 6, -1, -1, -1, -1]),\n            new Int16Array([3, 0, 1, 2, 3, 0, 1, 2, 4, 5, 6, 7]),\n            new Int16Array([2, 3, 0, 1, -1, -1, -1, -1, 0, 1, 2, 3]) // N\n        ];\n        // questo forse deve essere un UInt8Array. Viene usato da neighbours\n        this.swaparray = [\n            new Int16Array([0, 0, 3]),\n            new Int16Array([0, 0, 6]),\n            new Int16Array([0, 0, 0]),\n            new Int16Array([0, 0, 5]),\n            new Int16Array([0, 0, 0]),\n            new Int16Array([5, 0, 0]),\n            new Int16Array([0, 0, 0]),\n            new Int16Array([6, 0, 0]),\n            new Int16Array([3, 0, 0]) // N\n        ];\n        if (nside_in <= this.ns_max && nside_in > 0) {\n            this.nside = nside_in;\n            this.npface = this.nside * this.nside;\n            this.npix = 12 * this.npface;\n            this.order = this.nside2order(this.nside);\n            this.nl2 = 2 * this.nside;\n            this.nl3 = 3 * this.nside;\n            this.nl4 = 4 * this.nside;\n            this.fact2 = 4.0 / this.npix;\n            this.fact1 = (this.nside << 1) * this.fact2;\n            this.ncap = 2 * this.nside * (this.nside - 1); // pixels in each polar cap\n            // console.log(\"order: \"+this.order);\n            // console.log(\"nside: \"+this.nside);\n        }\n        this.bn = [];\n        this.mpr = [];\n        this.cmpr = [];\n        this.smpr = [];\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // Uncaught RangeError: Maximum call stack size exceeded\n        // MOVED TO computeBn()\n        //        for (let i=0; i <= this.order_max; ++i) {\n        //        \tthis.bn[i]=new Healpix(1<<i);\n        //        \tthis.mpr[i]=bn[i].maxPixrad();\n        //        \tthis.cmpr[i]=Math.cos(mpr[i]);\n        //        \tthis.smpr[i]=Math.sin(mpr[i]);\n        //        }\n    }\n    computeBn() {\n        for (let i = 0; i <= this.order_max; ++i) {\n            this.bn[i] = new Healpix(1 << i);\n            this.mpr[i] = this.bn[i].maxPixrad();\n            this.cmpr[i] = Hploc.cos(this.mpr[i]);\n            this.smpr[i] = Hploc.sin(this.mpr[i]);\n        }\n    }\n    getNPix() {\n        return this.npix;\n    }\n    ;\n    getBoundaries(pix) {\n        let points = new Array();\n        let xyf = this.nest2xyf(pix);\n        let dc = 0.5 / this.nside;\n        let xc = (xyf.ix + 0.5) / this.nside;\n        let yc = (xyf.iy + 0.5) / this.nside;\n        points[0] = new Fxyf(xc + dc, yc + dc, xyf.face).toVec3();\n        points[1] = new Fxyf(xc - dc, yc + dc, xyf.face).toVec3();\n        points[2] = new Fxyf(xc - dc, yc - dc, xyf.face).toVec3();\n        points[3] = new Fxyf(xc + dc, yc - dc, xyf.face).toVec3();\n        return points;\n    }\n    ;\n    /** Returns a set of points along the boundary of the given pixel.\n     * Step 1 gives 4 points on the corners. The first point corresponds\n     * to the northernmost corner, the subsequent points follow the pixel\n     * boundary through west, south and east corners.\n     *\n     * @param pix pixel index number\n     * @param step the number of returned points is 4*step\n     * @return {@link Vec3} for each point\n     */\n    getBoundariesWithStep(pix, step) {\n        // var points = new Array(); \n        let points = new Array();\n        let xyf = this.nest2xyf(pix);\n        let dc = 0.5 / this.nside;\n        let xc = (xyf.ix + 0.5) / this.nside;\n        let yc = (xyf.iy + 0.5) / this.nside;\n        let d = 1.0 / (this.nside * step);\n        for (let i = 0; i < step; i++) {\n            points[i] = new Fxyf(xc + dc - i * d, yc + dc, xyf.face).toVec3();\n            points[i + step] = new Fxyf(xc - dc, yc + dc - i * d, xyf.face).toVec3();\n            points[i + 2 * step] = new Fxyf(xc - dc + i * d, yc - dc, xyf.face).toVec3();\n            points[i + 3 * step] = new Fxyf(xc + dc, yc - dc + i * d, xyf.face).toVec3();\n        }\n        return points;\n    }\n    ;\n    getPointsForXyfNoStep(x, y, face) {\n        // let nside = Math.pow(2, this.order);\n        let points = new Array();\n        let xyf = new Xyf(x, y, face);\n        let dc = 0.5 / this.nside;\n        let xc = (xyf.ix + 0.5) / this.nside;\n        let yc = (xyf.iy + 0.5) / this.nside;\n        points[0] = new Fxyf(xc + dc, yc + dc, xyf.face).toVec3();\n        points[1] = new Fxyf(xc - dc, yc + dc, xyf.face).toVec3();\n        points[2] = new Fxyf(xc - dc, yc - dc, xyf.face).toVec3();\n        points[3] = new Fxyf(xc + dc, yc - dc, xyf.face).toVec3();\n        return points;\n    }\n    getPointsForXyf(x, y, step, face) {\n        let nside = step * Math.pow(2, this.order);\n        let points = new Array();\n        let xyf = new Xyf(x, y, face);\n        let dc = 0.5 / nside;\n        let xc = (xyf.ix + 0.5) / nside;\n        let yc = (xyf.iy + 0.5) / nside;\n        points[0] = new Fxyf(xc + dc, yc + dc, xyf.face).toVec3();\n        points[1] = new Fxyf(xc - dc, yc + dc, xyf.face).toVec3();\n        points[2] = new Fxyf(xc - dc, yc - dc, xyf.face).toVec3();\n        points[3] = new Fxyf(xc + dc, yc - dc, xyf.face).toVec3();\n        return points;\n    }\n    /** Returns the neighboring pixels of ipix.\n    This method works in both RING and NEST schemes, but is\n    considerably faster in the NEST scheme.\n    @param ipix the requested pixel number.\n    @return array with indices of the neighboring pixels.\n      The returned array contains (in this order)\n      the pixel numbers of the SW, W, NW, N, NE, E, SE and S neighbor\n      of ipix. If a neighbor does not exist (this can only happen\n      for the W, N, E and S neighbors), its entry is set to -1. */\n    neighbours(ipix) {\n        let result = new Int32Array(8);\n        let xyf = this.nest2xyf(ipix);\n        let ix = xyf.ix;\n        let iy = xyf.iy;\n        let face_num = xyf.face;\n        var nsm1 = this.nside - 1;\n        if ((ix > 0) && (ix < nsm1) && (iy > 0) && (iy < nsm1)) {\n            let fpix = Math.floor(face_num << (2 * this.order));\n            let px0 = this.spread_bits(ix);\n            let py0 = this.spread_bits(iy) << 1;\n            let pxp = this.spread_bits(ix + 1);\n            let pyp = this.spread_bits(iy + 1) << 1;\n            let pxm = this.spread_bits(ix - 1);\n            let pym = this.spread_bits(iy - 1) << 1;\n            result[0] = fpix + pxm + py0;\n            result[1] = fpix + pxm + pyp;\n            result[2] = fpix + px0 + pyp;\n            result[3] = fpix + pxp + pyp;\n            result[4] = fpix + pxp + py0;\n            result[5] = fpix + pxp + pym;\n            result[6] = fpix + px0 + pym;\n            result[7] = fpix + pxm + pym;\n        }\n        else {\n            for (let i = 0; i < 8; ++i) {\n                let x = ix + this.xoffset[i];\n                let y = iy + this.yoffset[i];\n                let nbnum = 4;\n                if (x < 0) {\n                    x += this.nside;\n                    nbnum -= 1;\n                }\n                else if (x >= this.nside) {\n                    x -= this.nside;\n                    nbnum += 1;\n                }\n                if (y < 0) {\n                    y += this.nside;\n                    nbnum -= 3;\n                }\n                else if (y >= this.nside) {\n                    y -= this.nside;\n                    nbnum += 3;\n                }\n                let f = this.facearray[nbnum][face_num];\n                if (f >= 0) {\n                    let bits = this.swaparray[nbnum][face_num >>> 2];\n                    if ((bits & 1) > 0) {\n                        x = Math.floor(this.nside - x - 1);\n                    }\n                    if ((bits & 2) > 0) {\n                        y = Math.floor(this.nside - y - 1);\n                    }\n                    if ((bits & 4) > 0) {\n                        let tint = x;\n                        x = y;\n                        y = tint;\n                    }\n                    result[i] = this.xyf2nest(x, y, f);\n                }\n                else {\n                    result[i] = -1;\n                }\n            }\n        }\n        return result;\n    }\n    ;\n    nside2order(nside) {\n        return ((nside & (nside - 1)) != 0) ? -1 : Math.log2(nside);\n    }\n    ;\n    nest2xyf(ipix) {\n        let pix = Math.floor(ipix & (this.npface - 1));\n        let xyf = new Xyf(this.compress_bits(pix), this.compress_bits(pix >> 1), Math.floor((ipix >> (2 * this.order))));\n        return xyf;\n    }\n    ;\n    xyf2nest(ix, iy, face_num) {\n        return Math.floor(face_num << (2 * this.order))\n            + this.spread_bits(ix) + (this.spread_bits(iy) << 1);\n    }\n    ;\n    loc2pix(hploc) {\n        let z = hploc.z;\n        let phi = hploc.phi;\n        let za = Math.abs(z);\n        let tt = this.fmodulo((phi * this.inv_halfpi), 4.0); // in [0,4)\n        let pixNo;\n        if (za <= this.twothird) { // Equatorial region\n            let temp1 = this.nside * (0.5 + tt);\n            let temp2 = this.nside * (z * 0.75);\n            let jp = Math.floor(temp1 - temp2); // index of ascending edge line\n            let jm = Math.floor(temp1 + temp2); // index of descending edge line\n            let ifp = Math.floor(jp >>> this.order); // in {0,4}\n            let ifm = Math.floor(jm >>> this.order);\n            let face_num = Math.floor((ifp == ifm) ? (ifp | 4) : ((ifp < ifm) ? ifp : (ifm + 8)));\n            let ix = Math.floor(jm & (this.nside - 1));\n            let iy = Math.floor(this.nside - (jp & (this.nside - 1)) - 1);\n            pixNo = this.xyf2nest(ix, iy, face_num);\n        }\n        else { // polar region, za > 2/3\n            let ntt = Math.min(3, Math.floor(tt));\n            let tp = tt - ntt;\n            let tmp = ((za < 0.99) || (!hploc.have_sth)) ?\n                this.nside * Math.sqrt(3 * (1 - za)) :\n                this.nside * hploc.sth / Math.sqrt((1.0 + za) / 3.);\n            let jp = Math.floor(tp * tmp); // increasing edge line index\n            let jm = Math.floor((1.0 - tp) * tmp); // decreasing edge line index\n            if (jp >= this.nside) {\n                jp = this.nside - 1; // for points too close to the boundary\n            }\n            if (jm >= this.nside) {\n                jm = this.nside - 1;\n            }\n            if (z >= 0) {\n                pixNo = this.xyf2nest(Math.floor(this.nside - jm - 1), Math.floor(this.nside - jp - 1), ntt);\n            }\n            else {\n                pixNo = this.xyf2nest(Math.floor(jp), Math.floor(jm), ntt + 8);\n            }\n        }\n        return pixNo;\n    }\n    ;\n    /** Returns the normalized 3-vector corresponding to the center of the\n    supplied pixel.\n    @param pix long the requested pixel number.\n    @return the pixel's center coordinates. */\n    pix2vec(pix) {\n        return this.pix2loc(pix).toVec3();\n    }\n    ;\n    /** Returns the Zphi corresponding to the center of the supplied pixel.\n     @param pix the requested pixel number.\n     @return the pixel's center coordinates. */\n    pix2zphi(pix) {\n        return this.pix2loc(pix).toZphi();\n    }\n    pix2ang(pix, mirror) {\n        return this.pix2loc(pix).toPointing(mirror);\n    }\n    /**\n     * @param pix long\n     * @return Hploc\n     */\n    pix2loc(pix) {\n        let loc = new Hploc(undefined);\n        let xyf = this.nest2xyf(pix);\n        let jr = ((this.jrll[xyf.face]) << this.order) - xyf.ix - xyf.iy - 1;\n        let nr;\n        if (jr < this.nside) {\n            nr = jr;\n            let tmp = (nr * nr) * this.fact2;\n            loc.z = 1 - tmp;\n            if (loc.z > 0.99) {\n                loc.sth = Math.sqrt(tmp * (2. - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else if (jr > this.nl3) {\n            nr = this.nl4 - jr;\n            let tmp = (nr * nr) * this.fact2;\n            loc.z = tmp - 1;\n            if (loc.z < -0.99) {\n                loc.sth = Math.sqrt(tmp * (2. - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else {\n            nr = this.nside;\n            loc.z = (this.nl2 - jr) * this.fact1;\n        }\n        let tmp = (this.jpll[xyf.face]) * nr + xyf.ix - xyf.iy;\n        //      \tassert(tmp<8*nr); // must not happen\n        if (tmp < 0) {\n            tmp += 8 * nr;\n        }\n        loc.phi = (nr == this.nside) ? 0.75 * Constants.halfpi * tmp * this.fact1 : (0.5 * Constants.halfpi * tmp) / nr;\n        // loc.setPhi((nr == this.nside) ? 0.75 * Constants.halfpi * tmp * this.fact1 : (0.5 * Constants.halfpi * tmp)/nr);\n        return loc;\n    }\n    ;\n    za2vec(z, a) {\n        const sin_theta = Math.sqrt(1 - z * z);\n        const X = sin_theta * Math.cos(a);\n        const Y = sin_theta * Math.sin(a);\n        return new Vec3(X, Y, z);\n    }\n    ang2vec(theta, phi) {\n        const z = Math.cos(theta);\n        return this.za2vec(z, phi);\n    }\n    vec2ang(v) {\n        const { z, a } = this.vec2za(v.getX(), v.getY(), v.getZ());\n        return { theta: Math.acos(z), phi: a };\n    }\n    vec2za(X, Y, z) {\n        const r2 = X * X + Y * Y;\n        if (r2 == 0)\n            return { z: z < 0 ? -1 : 1, a: 0 };\n        else {\n            const PI2 = Math.PI / 2;\n            const a = (Math.atan2(Y, X) + PI2) % PI2;\n            z /= Math.sqrt(z * z + r2);\n            return { z, a };\n        }\n    }\n    ang2pix(ptg, mirror) {\n        return this.loc2pix(new Hploc(ptg));\n    }\n    ;\n    fmodulo(v1, v2) {\n        if (v1 >= 0) {\n            return (v1 < v2) ? v1 : v1 % v2;\n        }\n        var tmp = v1 % v2 + v2;\n        return (tmp === v2) ? 0.0 : tmp;\n    }\n    ;\n    compress_bits(v) {\n        var raw = Math.floor((v & 0x5555)) | Math.floor(((v & 0x55550000) >>> 15));\n        var compressed = this.ctab[raw & 0xff] | (this.ctab[raw >>> 8] << 4);\n        return compressed;\n    }\n    ;\n    spread_bits(v) {\n        return Math.floor(this.utab[v & 0xff]) | Math.floor((this.utab[(v >>> 8) & 0xff] << 16))\n            | Math.floor((this.utab[(v >>> 16) & 0xff] << 32)) | Math.floor((this.utab[(v >>> 24) & 0xff] << 48));\n    }\n    ;\n    /**\n     * Returns a range set of pixels that overlap with the convex polygon\n     * defined by the {@code vertex} array.\n     * <p>\n     * This method is more efficient in the RING scheme.\n     * <p>\n     * This method may return some pixels which don't overlap with the polygon\n     * at all. The higher {@code fact} is chosen, the fewer false positives are\n     * returned, at the cost of increased run time.\n     *\n     * @param vertex\n     *            an array containing the vertices of the requested convex\n     *            polygon.\n     * @param fact\n     *            The overlapping test will be done at the resolution\n     *            {@code fact*nside}. For NESTED ordering, {@code fact} must be\n     *            a power of 2, else it can be any positive integer. A typical\n     *            choice would be 4.\n     * @return the requested set of pixel number ranges\n     */\n    queryPolygonInclusive(vertex, fact) {\n        let inclusive = (fact != 0);\n        let nv = vertex.length;\n        //        let ncirc = inclusive ? nv+1 : nv;\n        if (!(nv >= 3)) {\n            console.log(\"not enough vertices in polygon\");\n            return;\n        }\n        let vv = new Array();\n        for (let i = 0; i < nv; ++i) {\n            vv[i] = Vec3.pointing2Vec3(vertex[i]);\n        }\n        let normal = new Array();\n        let flip = 0;\n        let index = 0;\n        let back = false;\n        while (index < vv.length) {\n            let first = vv[index];\n            let medium = null;\n            let last = null;\n            if (index == vv.length - 1) {\n                last = vv[1];\n                medium = vv[0];\n            }\n            else if (index == vv.length - 2) {\n                last = vv[0];\n                medium = vv[index + 1];\n            }\n            else {\n                medium = vv[index + 1];\n                last = vv[index + 2];\n            }\n            normal[index] = first.cross(medium).norm();\n            let hnd = normal[index].dot(last);\n            if (index == 0) {\n                flip = (hnd < 0.) ? -1 : 1;\n                let tmp = new Pointing(first); // TODO not used\n                back = false;\n            }\n            else {\n                let flipThnd = flip * hnd;\n                if (flipThnd < 0) {\n                    let tmp = new Pointing(medium);\n                    vv.splice(index + 1, 1);\n                    normal.splice(index, 1);\n                    back = true;\n                    index -= 1;\n                    continue;\n                }\n                else {\n                    let tmp = new Pointing(first);\n                    back = false;\n                }\n            }\n            normal[index].scale(flip);\n            index += 1;\n        }\n        nv = vv.length;\n        let ncirc = inclusive ? nv + 1 : nv;\n        let rad = new Array(ncirc);\n        rad = rad.fill(Constants.halfpi);\n        //        rad = rad.fill(1.5707963267948966);\n        //        let p = \"1.5707963267948966\";\n        //        rad = rad.fill(parseFloat(p));\n        if (inclusive) {\n            let cf = new CircleFinder(vv);\n            normal[nv] = cf.getCenter();\n            rad[nv] = Hploc.acos(cf.getCosrad());\n        }\n        return this.queryMultiDisc(normal, rad, fact);\n    }\n    ;\n    /**\n     * For NEST schema only\n     *\n     * @param normal:\n     *            Vec3[]\n     * @param rad:\n     *            Float32Array\n     * @param fact:\n     *            The overlapping test will be done at the resolution\n     *            {@code fact*nside}. For NESTED ordering, {@code fact} must be\n     *            a power of 2, else it can be any positive integer. A typical\n     *            choice would be 4.\n     * @return RangeSet the requested set of pixel number ranges\n     */\n    queryMultiDisc(norm, rad, fact) {\n        this.computeBn();\n        let inclusive = (fact != 0);\n        let nv = norm.length;\n        // HealpixUtils.check(nv==rad.lengt0,\"inconsistent input arrays\");\n        if (!(nv == rad.length)) {\n            console.error(\"inconsistent input arrays\");\n            return;\n        }\n        let res = new RangeSet(4 << 1);\n        // Removed code for Scheme.RING\n        let oplus = 0;\n        if (inclusive) {\n            if (!(Math.pow(2, this.order_max - this.order) >= fact)) {\n                console.error(\"invalid oversampling factor\");\n            }\n            if (!((fact & (fact - 1)) == 0)) {\n                console.error(\"oversampling factor must be a power of 2\");\n            }\n            oplus = this.ilog2(fact);\n        }\n        let omax = this.order + oplus; // the order up to which we test\n        // TODO: ignore all disks with radius>=pi\n        //        let crlimit = new Float32Array[omax+1][nv][3];\n        let crlimit = new Array(omax + 1);\n        let o;\n        let i;\n        for (o = 0; o <= omax; ++o) { // prepare data at the required orders\n            crlimit[o] = new Array(nv);\n            let dr = this.bn[o].maxPixrad(); // safety distance\n            for (i = 0; i < nv; ++i) {\n                crlimit[o][i] = new Float64Array(3);\n                crlimit[o][i][0] = (rad[i] + dr > Math.PI) ? -1 : Hploc.cos(rad[i] + dr);\n                crlimit[o][i][1] = (o == 0) ? Hploc.cos(rad[i]) : crlimit[0][i][1];\n                crlimit[o][i][2] = (rad[i] - dr < 0.) ? 1. : Hploc.cos(rad[i] - dr);\n            }\n        }\n        let stk = new pstack(12 + 3 * omax);\n        for (let i = 0; i < 12; i++) { // insert the 12 base pixels in reverse\n            // order\n            stk.push(11 - i, 0);\n        }\n        while (stk.size() > 0) { // as long as there are pixels on the stack\n            // pop current pixel number and order from the stack\n            let pix = stk.ptop();\n            let o = stk.otop();\n            stk.pop();\n            let pv = this.bn[o].pix2vec(pix);\n            let zone = 3;\n            for (let i = 0; (i < nv) && (zone > 0); ++i) {\n                let crad = pv.dot(norm[i]);\n                for (let iz = 0; iz < zone; ++iz) {\n                    if (crad < crlimit[o][i][iz]) {\n                        zone = iz;\n                    }\n                }\n            }\n            if (zone > 0) {\n                this.check_pixel(o, omax, zone, res, pix, stk, inclusive);\n            }\n        }\n        return res;\n    }\n    ;\n    /** Integer base 2 logarithm.\n    @param arg\n    @return the largest integer {@code n} that fulfills {@code 2^n<=arg}.\n    For negative arguments and zero, 0 is returned. */\n    ilog2(arg) {\n        let max = Math.max(arg, 1);\n        return 31 - Math.clz32(max);\n    }\n    ;\n    /** Computes the cosine of the angular distance between two z, phi positions\n      on the unit sphere. */\n    cosdist_zphi(z1, phi1, z2, phi2) {\n        return z1 * z2 + Hploc.cos(phi1 - phi2) * Math.sqrt((1.0 - z1 * z1) * (1.0 - z2 * z2));\n    }\n    /**\n     * @param int o\n     * @param int omax\n     * @param int zone\n     * @param RangeSet pixset\n     * @param long pix\n     * @param pstack stk\n     * @param boolean inclusive\n     */\n    check_pixel(o, omax, zone, pixset, pix, stk, inclusive) {\n        if (zone == 0)\n            return;\n        if (o < this.order) {\n            if (zone >= 3) { // output all subpixels\n                let sdist = 2 * (this.order - o); // the \"bit-shift distance\" between map orders\n                pixset.append1(pix << sdist, ((pix + 1) << sdist));\n            }\n            else { // (zone>=1)\n                for (let i = 0; i < 4; ++i) {\n                    stk.push(4 * pix + 3 - i, o + 1); // add children\n                }\n            }\n        }\n        else if (o > this.order) { // this implies that inclusive==true\n            if (zone >= 2) { // pixel center in shape\n                pixset.append(pix >>> (2 * (o - this.order))); // output the parent pixel at order\n                stk.popToMark(); // unwind the stack\n            }\n            else { // (zone>=1): pixel center in safety range\n                if (o < omax) { // check sublevels\n                    for (let i = 0; i < 4; ++i) { // add children in reverse order\n                        stk.push(4 * pix + 3 - i, o + 1); // add children\n                    }\n                }\n                else { // at resolution limit\n                    pixset.append(pix >>> (2 * (o - this.order))); // output the parent pixel at order\n                    stk.popToMark(); // unwind the stack\n                }\n            }\n        }\n        else { // o==order\n            if (zone >= 2) {\n                pixset.append(pix);\n            }\n            else if (inclusive) { // and (zone>=1)\n                if (this.order < omax) { // check sublevels\n                    stk.mark(); // remember current stack position\n                    for (let i = 0; i < 4; ++i) { // add children in reverse order\n                        stk.push(4 * pix + 3 - i, o + 1); // add children\n                    }\n                }\n                else { // at resolution limit\n                    pixset.append(pix); // output the pixel\n                }\n            }\n        }\n    }\n    /** Returns the maximum angular distance between a pixel center and its\n    corners.\n    @return maximum angular distance between a pixel center and its\n      corners. */\n    maxPixrad() {\n        let zphia = new Zphi(2. / 3., Math.PI / this.nl4);\n        let xyz1 = this.convertZphi2xyz(zphia);\n        let va = new Vec3(xyz1[0], xyz1[1], xyz1[2]);\n        let t1 = 1. - 1. / this.nside;\n        t1 *= t1;\n        let zphib = new Zphi(1 - t1 / 3, 0);\n        let xyz2 = this.convertZphi2xyz(zphib);\n        let vb = new Vec3(xyz2[0], xyz2[1], xyz2[2]);\n        return va.angle(vb);\n    }\n    ;\n    /**\n     * this is a workaround replacing the Vec3(Zphi) constructor.\n     */\n    convertZphi2xyz(zphi) {\n        let sth = Math.sqrt((1.0 - zphi.z) * (1.0 + zphi.z));\n        let x = sth * Hploc.cos(zphi.phi);\n        let y = sth * Hploc.sin(zphi.phi);\n        let z = zphi.z;\n        return [x, y, z];\n    }\n    ;\n    /** Returns a range set of pixels which overlap with a given disk. <p>\n      This method is more efficient in the RING scheme. <p>\n      This method may return some pixels which don't overlap with\n      the polygon at all. The higher {@code fact} is chosen, the fewer false\n      positives are returned, at the cost of increased run time.\n      @param ptg the angular coordinates of the disk center\n      @param radius the radius (in radians) of the disk\n      @param fact The overlapping test will be done at the resolution\n        {@code fact*nside}. For NESTED ordering, {@code fact} must be a power\n        of 2, else it can be any positive integer. A typical choice would be 4.\n      @return the requested set of pixel number ranges  */\n    queryDiscInclusive(ptg, radius, fact) {\n        this.computeBn();\n        let inclusive = (fact != 0);\n        let pixset = new RangeSet();\n        if (radius >= Math.PI) { // disk covers the whole sphere\n            pixset.append1(0, this.npix);\n            return pixset;\n        }\n        let oplus = 0;\n        if (inclusive) {\n            // HealpixUtils.check ((1L<<order_max)>=fact,\"invalid oversampling factor\");\n            if (!((fact & (fact - 1)) == 0)) {\n                console.error(\"oversampling factor must be a power of 2\");\n            }\n            oplus = this.ilog2(fact);\n        }\n        let omax = Math.min(this.order_max, this.order + oplus); // the order up to which we test\n        let vptg = Vec3.pointing2Vec3(ptg);\n        let crpdr = new Array(omax + 1);\n        let crmdr = new Array(omax + 1);\n        let cosrad = Hploc.cos(radius);\n        let sinrad = Hploc.sin(radius);\n        for (let o = 0; o <= omax; o++) { // prepare data at the required orders\n            let dr = this.mpr[o]; // safety distance\n            let cdr = this.cmpr[o];\n            let sdr = this.smpr[o];\n            crpdr[o] = (radius + dr > Math.PI) ? -1. : cosrad * cdr - sinrad * sdr;\n            crmdr[o] = (radius - dr < 0.) ? 1. : cosrad * cdr + sinrad * sdr;\n        }\n        let stk = new pstack(12 + 3 * omax);\n        for (let i = 0; i < 12; i++) { // insert the 12 base pixels in reverse order\n            stk.push(11 - i, 0);\n        }\n        while (stk.size() > 0) { // as long as there are pixels on the stack\n            // pop current pixel number and order from the stack\n            let pix = stk.ptop();\n            let curro = stk.otop();\n            stk.pop();\n            let pos = this.bn[curro].pix2zphi(pix);\n            // cosine of angular distance between pixel center and disk center\n            let cangdist = this.cosdist_zphi(vptg.z, ptg.phi, pos.z, pos.phi);\n            if (cangdist > crpdr[curro]) {\n                let zone = (cangdist < cosrad) ? 1 : ((cangdist <= crmdr[curro]) ? 2 : 3);\n                this.check_pixel(curro, omax, zone, pixset, pix, stk, inclusive);\n            }\n        }\n        return pixset;\n    }\n}\n//# sourceMappingURL=Healpix.js.map","export { Constants } from \"./Constants.js\";\nexport { pstack } from \"./pstack.js\";\nexport { CircleFinder } from './CircleFinder.js';\nexport { Fxyf } from './Fxyf.js';\nexport { Healpix } from './Healpix.js';\nexport { Pointing } from './Pointing.js';\nexport { RangeSet } from './RangeSet.js';\nexport { Vec3 } from './Vec3.js';\nexport { Xyf } from './Xyf.js';\nexport { Zphi } from './Zphi.js';\nexport { Hploc } from './Hploc.js';\n//# sourceMappingURL=index.js.map","export const hipsNodes: string[] = [\n  \"https://skies.esac.esa.int/\",\n  \"https://alasky.cds.unistra.fr/\",\n];\n\n// If you want to re-enable multiple TAP repos, just uncomment and extend the array\n// export const tapRepos: string[] = [\n//   \"https://archive.eso.org/tap_cat/\",\n//   \"https://archive.eso.org/tap_obs/\",\n//   \"https://sky.esa.int/esasky-tap/tap/\",\n//   \"https://ws.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus\",\n// ];\n\nexport const tapRepos: string[] = [\n  \"https://sky.esa.int/esasky-tap/tap/\",\n];\n\nexport interface BootSetup {\n  insideSphere: boolean;\n  defaultHips: string;\n  camera_fov_deg: number;\n  camera_fov_rad: number;\n  camera_near_plane: number;\n  camera_far_plane: number;\n  corsProxyUrl: string;\n  useCORSProxy: boolean;\n  maxDecimals: number;\n  defaultHipsUrl: string;\n  version: string;\n  debug: boolean;\n  insideView: boolean;\n}\n\nexport const bootSetup: BootSetup = {\n  insideSphere: false,\n  defaultHips: \"\",\n  camera_fov_deg: 34,\n  camera_fov_rad: 34 * Math.PI / 180.0,\n  camera_near_plane: 0.00001,\n  camera_far_plane: 2.5,\n  corsProxyUrl: \"http://localhost:4000/\",\n  useCORSProxy: false,\n  maxDecimals: 15,\n  // defaultHipsUrl: \"//alasky.u-strasbg.fr/DSS/DSSColor/\",\n  defaultHipsUrl: \"https://cdn.skies.esac.esa.int/DSSColor/\",\n  version: \"Astrobrowser v1.0.0\",\n  debug: false,\n  insideView: false,\n};","'use strict';\n\nimport { Healpix } from 'healpixjs';\nimport { bootSetup } from './Config.js';\nimport Camera from './Camera.js';\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\nclass Global {\n  // --- cached / runtime state ---\n  private _camera: Camera | null;\n  private _gl: GL | null;\n  private _healpix: Record<number, Healpix>;\n\n  // --- config/state flags ---\n  private _selectionnside: number;\n  // private _healpix4footprints: boolean;\n\n  private _useCORSProxy: boolean;\n  private _corsProxyUrl: string;\n  private _maxDecimals: number;\n  private _debug: boolean;\n  private _insideSphere: boolean;\n  private _version: string;\n\n  constructor() {\n\n    this._useCORSProxy = bootSetup.useCORSProxy;\n    this._corsProxyUrl = bootSetup.corsProxyUrl;\n    this._maxDecimals = bootSetup.maxDecimals;\n    this._debug = bootSetup.debug;\n    this._insideSphere = bootSetup.insideView;\n    this._version = bootSetup.version;\n\n    this._camera = null;\n    this._gl = null;\n    this._healpix = {};\n\n    this._selectionnside = 32;\n    // this._healpix4footprints = false;\n  }\n\n  init(): void {\n    console.log('Global.init()');\n  }\n\n  // --- getters/setters ---\n\n  get version(): string { return this._version; }\n\n  set corsProxyUrl(url: string) { this._corsProxyUrl = url; }\n  get corsProxyUrl(): string { return this._corsProxyUrl; }\n\n  get useCORSProxy(): boolean { return this._useCORSProxy; }\n  set useCORSProxy(enabled: boolean) { this._useCORSProxy = enabled; }\n\n  get debug(): boolean { return this._debug; }\n\n  getHealpix(order: number): Healpix {\n    if (this._healpix[order] === undefined) {\n      // order is HEALPix \"order\" ⇒ nside = 2^order\n      this._healpix[order] = new Healpix(Math.pow(2, order));\n    }\n    return this._healpix[order];\n  }\n\n  get MAX_DECIMALS(): number { return this._maxDecimals; }\n\n  get camera(): Camera | null { return this._camera; }\n  set camera(in_camera: Camera | null) { this._camera = in_camera; }\n\n  get gl(): GL | null { return this._gl; }\n  set gl(in_gl: GL | null) { this._gl = in_gl; }\n\n  set insideSphere(v: boolean) { this._insideSphere = v; }\n  get insideSphere(): boolean { return this._insideSphere; }\n\n  get nsideForSelection(): number { return this._selectionnside; }\n  // get healpix4footprints(): boolean { return this._healpix4footprints; }\n\n}\n\nconst global = new Global();\nexport default global;","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n    var a12 = a[6],\n      a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n  out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n  out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n  out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n  out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n  out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n  out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n  out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n  out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n  out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n  out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n  out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n  out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n  out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n  out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n  out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n  out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b0 = a00 * a11 - a01 * a10;\n  var b1 = a00 * a12 - a02 * a10;\n  var b2 = a01 * a12 - a02 * a11;\n  var b3 = a20 * a31 - a21 * a30;\n  var b4 = a20 * a32 - a22 * a30;\n  var b5 = a21 * a32 - a22 * a31;\n  var b6 = a00 * b5 - a01 * b4 + a02 * b3;\n  var b7 = a10 * b5 - a11 * b4 + a12 * b3;\n  var b8 = a20 * b2 - a21 * b1 + a22 * b0;\n  var b9 = a30 * b2 - a31 * b1 + a32 * b0;\n\n  // Calculate the determinant\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  var x = v[0],\n    y = v[1],\n    z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1],\n    z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion parameter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n  return out;\n}\n\n/**\n * Decomposes a transformation matrix into its rotation, translation\n * and scale components. Returns only the rotation component\n * @param  {quat} out_r Quaternion to receive the rotation component\n * @param  {vec3} out_t Vector to receive the translation vector\n * @param  {vec3} out_s Vector to receive the scaling factor\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @returns {quat} out_r\n */\nexport function decompose(out_r, out_t, out_s, mat) {\n  out_t[0] = mat[12];\n  out_t[1] = mat[13];\n  out_t[2] = mat[14];\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  var is1 = 1 / out_s[0];\n  var is2 = 1 / out_s[1];\n  var is3 = 1 / out_s[2];\n  var sm11 = m11 * is1;\n  var sm12 = m12 * is2;\n  var sm13 = m13 * is3;\n  var sm21 = m21 * is1;\n  var sm22 = m22 * is2;\n  var sm23 = m23 * is3;\n  var sm31 = m31 * is1;\n  var sm32 = m32 * is2;\n  var sm33 = m33 * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out_r[3] = 0.25 * S;\n    out_r[0] = (sm23 - sm32) / S;\n    out_r[1] = (sm31 - sm13) / S;\n    out_r[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out_r[3] = (sm23 - sm32) / S;\n    out_r[0] = 0.25 * S;\n    out_r[1] = (sm12 + sm21) / S;\n    out_r[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out_r[3] = (sm31 - sm13) / S;\n    out_r[0] = (sm12 + sm21) / S;\n    out_r[1] = 0.25 * S;\n    out_r[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out_r[3] = (sm12 - sm21) / S;\n    out_r[0] = (sm31 + sm13) / S;\n    out_r[1] = (sm23 + sm32) / S;\n    out_r[2] = 0.25 * S;\n  }\n  return out_r;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *     mat4.scale(dest, dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     mat4.translate(dest, dest, origin);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *     mat4.scale(dest, dest, scale)\n *     mat4.translate(dest, dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    var nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\nexport var perspective = perspectiveNO;\n\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    var nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\nexport var ortho = orthoNO;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} target Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n    eyey = eye[1],\n    eyez = eye[2],\n    upx = up[0],\n    upy = up[1],\n    upz = up[2];\n  var z0 = eyex - target[0],\n    z1 = eyey - target[1],\n    z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n  var x0 = upy * z2 - upz * z1,\n    x1 = upz * z0 - upx * z2,\n    x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]);\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  var a8 = a[8],\n    a9 = a[9],\n    a10 = a[10],\n    a11 = a[11];\n  var a12 = a[12],\n    a13 = a[13],\n    a14 = a[14],\n    a15 = a[15];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  var b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  var b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11];\n  var b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport var sub = subtract;","/**\n * @author Fabrizio Giordano (Fab)\n */\nimport { vec3 } from \"gl-matrix\";\n\nexport interface SphericalCoords {\n  phi: number;   // longitude-like angle in degrees\n  theta: number; // colatitude angle in degrees\n}\n\nexport interface AstroCoords {\n  ra: number;   // right ascension in degrees\n  dec: number;  // declination in degrees\n}\n\nexport interface HMS {\n  h: number;\n  m: number;\n  s: number;\n}\n\nexport interface DMS {\n  d: number;\n  m: number;\n  s: number;\n}\n\n// results in degrees\nexport function cartesianToSpherical(xyz: vec3): SphericalCoords {\n  const dotXYZ = vec3.dot(xyz, xyz);\n  const r = Math.sqrt(dotXYZ);\n  let theta = Math.acos(xyz[2] / r);\n  theta = radToDeg(theta);\n\n  // NB: in atan(y/x) is written with params switched atan2(x, y)\n  let phi = Math.atan2(xyz[1], xyz[0]);\n  phi = radToDeg(phi);\n\n  if (phi < 0) {\n    phi += 360;\n  }\n\n  return { phi, theta };\n}\n\nexport function colorHex2RGB(hexColor: string): [number, number, number] {\n  const hex1 = hexColor.substring(1, 3);\n  const hex2 = hexColor.substring(3, 5);\n  const hex3 = hexColor.substring(5, 7);\n\n  const dec1 = parseInt(hex1, 16);\n  const dec2 = parseInt(hex2, 16);\n  const dec3 = parseInt(hex3, 16);\n\n  const rgb1 = (dec1 / 255).toFixed(2);\n  const rgb2 = (dec2 / 255).toFixed(2);\n  const rgb3 = (dec3 / 255).toFixed(2);\n\n  return [parseFloat(rgb1), parseFloat(rgb2), parseFloat(rgb3)];\n}\n\nexport function degToRad(degrees: number): number {\n  return (degrees / 180) * Math.PI;\n}\n\nexport function radToDeg(radians: number): number {\n  return (radians * 180) / Math.PI;\n}\n\nexport function sphericalToAstroDeg(phiDeg: number, thetaDeg: number): AstroCoords {\n  let raDeg = phiDeg;\n  if (raDeg < 0) {\n    raDeg += 360;\n  }\n  const decDeg = 90 - thetaDeg;\n  return { ra: raDeg, dec: decDeg };\n}\n\nexport function sphericalToCartesian(\n  phiDeg: number,\n  thetaDeg: number,\n  r: number = 1\n): [number, number, number] {\n  const x = r * Math.sin(degToRad(thetaDeg)) * Math.cos(degToRad(phiDeg));\n  const y = r * Math.sin(degToRad(thetaDeg)) * Math.sin(degToRad(phiDeg));\n  const z = r * Math.cos(degToRad(thetaDeg));\n  return [x, y, z];\n}\n\nexport function astroDegToSpherical(raDeg: number, decDeg: number): SphericalCoords {\n  let phiDeg = raDeg;\n  if (phiDeg < 0) {\n    phiDeg += 360;\n  }\n  const thetaDeg = 90 - decDeg;\n  return { phi: phiDeg, theta: thetaDeg };\n}\n\nexport function raDegToHMS(raDeg: number): HMS {\n  const h = Math.floor(raDeg / 15);\n  const m = Math.floor((raDeg / 15 - h) * 60);\n  const s = (raDeg / 15 - h - m / 60) * 3600;\n  return { h, m, s };\n}\n\nexport function decDegToDMS(decDeg: number): DMS {\n  let sign = 1;\n  if (decDeg < 0) {\n    sign = -1;\n  }\n\n  const decDegAbs = Math.abs(decDeg);\n  let d = Math.trunc(decDegAbs);\n  const m = Math.trunc((decDegAbs - d) * 60);\n  const s = (decDegAbs - d - m / 60) * 3600;\n  d = d * sign;\n\n  return { d, m, s };\n}","/**\n * @author Fabrizio Giordano (Fab)\n */\nimport { vec3, mat4 } from \"gl-matrix\";\nimport {\n  astroDegToSpherical,\n  cartesianToSpherical,\n  sphericalToCartesian,\n  type SphericalCoords,\n} from \"./utils/Utils.js\";\n\nimport global from './Global.js'\n\ntype Vec3Tuple = [number, number, number];\n\ninterface CameraLike {\n  getCameraMatrix(): mat4;\n}\n\nclass Camera implements CameraLike {\n  private insideSphere = false;\n\n  private cam_pos: vec3 = vec3.create();  // camera position\n  private cam_speed = 1.0;\n\n  private vMatrix: mat4 = mat4.create();  // view matrix\n  private T: mat4 = mat4.create();        // translation matrix\n  private R: mat4 = mat4.create();        // rotation matrix\n\n  // Optional state used in rotate helpers\n  private FoV = 180.0;\n  private previousFoV = 180.0;\n  private move: vec3 = vec3.create();\n  private phi = 0;     // accumulated yaw (radians)\n  private theta = 0;   // accumulated pitch (radians)\n\n  constructor(in_position: vec3, in_sphere: boolean) {\n    this.init(in_position, in_sphere);\n  }\n\n  private init(in_position: vec3, in_sphere: boolean): void {\n    this.insideSphere = in_sphere;\n    this.cam_pos = vec3.clone(in_position);\n\n    this.vMatrix = mat4.create();\n    this.T = mat4.create();\n    this.R = mat4.create();\n\n    mat4.translate(this.T, this.T, [this.cam_pos[0], this.cam_pos[1], this.cam_pos[2]]);\n\n    // reset helpers\n    this.FoV = this.previousFoV = 180.0;\n    this.move = vec3.clone([0, 0, 0]);\n\n    const raDeg = 0;\n    const decDeg = 0;\n    this.goTo(raDeg, decDeg);\n  }\n\n  goTo(raDeg: number, decDeg: number): void {\n    // eslint-disable-next-line no-console\n    console.log(`global.insideSphere: ${global.insideSphere}`);\n    // mirror RA\n    const mirroredRA = 360 - raDeg;\n    this.goToPhiTheta(astroDegToSpherical(mirroredRA, decDeg));\n  }\n\n  private goToPhiTheta(ptDeg: SphericalCoords): void {\n    const xyz = sphericalToCartesian(ptDeg.phi, ptDeg.theta, this.cam_pos[2]);\n\n    let cameraMatrix = mat4.create();\n    cameraMatrix = mat4.translate(cameraMatrix, cameraMatrix, vec3.fromValues(xyz[0], xyz[1], xyz[2]));\n\n    const focusPoint: Vec3Tuple = [0.0, 0.0, 0.0];\n    const cameraUp: vec3 = vec3.clone([0.0, 1.0, 0.0]);\n    const cameraPos: Vec3Tuple = [cameraMatrix[12], cameraMatrix[13], cameraMatrix[14]];\n\n    cameraMatrix = mat4.targetTo(cameraMatrix, cameraPos, focusPoint, cameraUp);\n\n    this.R = mat4.clone(cameraMatrix);\n    this.R[12] = 0;\n    this.R[13] = 0;\n    this.R[14] = 0;\n\n    const viewMatrix = mat4.create();\n    if (this.cam_pos[2] !== 0) {\n      mat4.invert(viewMatrix, cameraMatrix);\n    }\n    this.vMatrix = viewMatrix;\n  }\n\n  toggleInsideSphere(): void {\n    // if (inside !== global.insideSphere) {\n    //   global.insideSphere = inside;\n\n      if (global.insideSphere) {\n        if (this.cam_pos[2] <= 2) {\n          this.cam_pos[2] = -2 + this.cam_pos[2];\n        } else {\n          this.cam_pos[2] = -0.005;\n        }\n      } else {\n        this.cam_pos[2] = 2.0 + this.cam_pos[2];\n      }\n\n      mat4.translate(this.T, mat4.create(), this.cam_pos);\n      this.refreshViewMatrix();\n    // }\n  }\n\n  zoom(inertia: number): void {\n    this.move = vec3.clone([0, 0, 0]);\n    this.move[2] += this.cam_speed * inertia;\n\n    if (global.insideSphere) {\n      if (this.cam_pos[2] + this.move[2] >= -0.005 && inertia > 0) {\n        this.cam_pos[2] = -0.005;\n        inertia = 0;\n      } else if (this.cam_pos[2] + this.move[2] <= -0.9885 && inertia < 0) {\n        this.cam_pos[2] = -0.9885;\n        inertia = 0;\n      } else {\n        this.cam_pos[2] += this.move[2];\n      }\n    } else {\n      if (this.cam_pos[2] < 1.005) {\n        this.move[2] *= this.cam_pos[2] / 100;\n      } else if (this.cam_pos[2] < 1.05) {\n        this.move[2] *= this.cam_pos[2] / 20;\n      } else if (this.cam_pos[2] < 1.3) {\n        this.move[2] *= this.cam_pos[2] / 3;\n      }\n      if (this.cam_pos[2] + this.move[2] <= 1.000001 && inertia < 0) {\n        this.cam_pos[2] = 1.000001;\n      } else {\n        this.cam_pos[2] += this.move[2];\n      }\n\n      // NOTE: your original code adds move[2] twice; if that's unintended, remove this next line.\n      // this.cam_pos[2] += this.move[2];\n    }\n\n    const identity = mat4.create();\n    mat4.translate(this.T, identity, this.cam_pos);\n\n    this.refreshViewMatrix();\n  }\n\n  /**\n   * Move the camera forward/backward along its current viewing direction.\n   * Positive distance moves *forward* (toward where the camera is looking),\n   * negative distance moves *backward*.\n   *\n   * This does not enforce inside/outside-sphere bounds; if you want clamping,\n   * handle it before calling or we can extend this to mimic `zoom()` bounds.\n   */\n  moveAlongView(distance: number): void {\n    // World-space forward vector: transform camera-space -Z by inverse rotation\n    const R_inverse = mat4.create();\n    mat4.invert(R_inverse, this.R);\n\n    const forwardCam = vec3.fromValues(0, 0, -1); // camera looks along -Z in its local space\n    const fwdWorld = vec3.create();\n    vec3.transformMat4(fwdWorld, forwardCam, R_inverse);\n\n    // Normalise to get direction only\n    const len = Math.hypot(fwdWorld[0], fwdWorld[1], fwdWorld[2]);\n    if (len > 0) {\n      fwdWorld[0] /= len;\n      fwdWorld[1] /= len;\n      fwdWorld[2] /= len;\n    }\n\n    // Update camera position\n    this.cam_pos[0] += fwdWorld[0] * distance;\n    this.cam_pos[1] += fwdWorld[1] * distance;\n    this.cam_pos[2] += fwdWorld[2] * distance;\n\n    // Rebuild translation matrix and view matrix\n    const identity = mat4.create();\n    mat4.translate(this.T, identity, this.cam_pos);\n    this.refreshViewMatrix();\n  }\n\n  translate(distance: number) {\n\n    // const pos = this.getCameraPosition();\n    this.cam_pos[2] = distance + 1\n\n    // vec3.scale(pos, pos, distance);\n\n    const identity = mat4.create();\n    mat4.translate(this.T, identity, this.cam_pos);\n\n    this.refreshViewMatrix();\n  }\n\n  rotateZ(sign: number): void {\n    const factorRad = sign * 0.01;\n    this.phi += factorRad;\n    mat4.rotate(this.R, this.R, factorRad, [0, 0, 1]);\n    this.refreshViewMatrix();\n  }\n\n  rotateY(sign: number): void {\n    const factorRad = sign * 0.01;\n    this.phi += factorRad;\n    mat4.rotate(this.R, this.R, factorRad, [0, 1, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotateXRadian(radian: number): void {\n    mat4.rotate(this.R, this.R, radian, [1, 0, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotateYRadian(radian: number): void {\n    this.phi += radian;\n    mat4.rotate(this.R, this.R, radian, [0, 1, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotateZRadian(radian: number): void {\n    mat4.rotate(this.R, this.R, radian, [0, 0, 1]);\n    this.refreshViewMatrix();\n  }\n\n  rotateX(sign: number): void {\n    const factorRad = sign * 0.01;\n    this.theta += factorRad;\n    mat4.rotate(this.R, this.R, factorRad, [1, 0, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotate(phi: number, theta: number): void {\n    const totRot = Math.sqrt(phi * phi + theta * theta);\n    if (totRot === 0) return;\n\n    const pos = this.getCameraPosition();\n    const dist2Center = Math.sqrt(pos[0] * pos[0] + pos[1] * pos[1] + pos[2] * pos[2]);\n    const usedRot = (totRot * (dist2Center - 1)) / 3.0;\n\n    mat4.rotate(this.R, this.R, -usedRot, [theta / totRot, phi / totRot, 0]);\n    this.refreshViewMatrix();\n  }\n\n  private refreshViewMatrix(): void {\n    const T_inverse = mat4.create();\n    const R_inverse = mat4.create();\n\n    mat4.invert(T_inverse, this.T);\n    mat4.invert(R_inverse, this.R);\n\n    mat4.multiply(this.vMatrix, T_inverse, R_inverse);\n  }\n\n  refreshFoV(currentFoV: number): void {\n    this.previousFoV = this.FoV;\n    this.FoV = currentFoV;\n  }\n\n  getCameraMatrix(): mat4 {\n    return this.vMatrix;\n  }\n\n  getCameraPosition(): Vec3Tuple {\n    const inv = mat4.create();\n    if (!mat4.invert(inv, this.vMatrix)) {\n      // fallback — we already maintain cam_pos\n      return [this.cam_pos[0], this.cam_pos[1], this.cam_pos[2]];\n    }\n    return [inv[12], inv[13], inv[14]];\n  }\n\n  // setCameraPosition(position: Vec3Tuple) {\n\n\n  //   const inv = mat4.create();\n  //   if (mat4.invert(inv, this.vMatrix)) {\n  //     [inv[12], inv[13], inv[14]] = [position[0], position[1], position[2]]\n  //     mat4.invert(this.vMatrix, inv)\n  //   }\n  // }\n\n  setCameraPosition(position: [number, number, number]): void {\n\n    \n    // Update authoritative position\n    this.cam_pos = vec3.fromValues(position[0], position[1], position[2]);\n\n    // Rebuild translation matrix from cam_pos\n    mat4.translate(this.T, mat4.create(), this.cam_pos);\n\n    // Do NOT touch this.R here (keep orientation)\n    // Recompute view: vMatrix = inv(T) * inv(R)\n    this.refreshViewMatrix();\n  }\n\n  getCameraAngle(): SphericalCoords {\n    const [x, y, z] = this.getCameraPosition();\n    const posVec = vec3.fromValues(x, y, z);\n    const ptDeg = cartesianToSpherical(posVec);\n    // eslint-disable-next-line no-console\n    console.log(\"[Camera::getCameraAngle]\", ptDeg);\n    return ptDeg;\n  }\n}\n\nexport default Camera;","import { mat4 } from \"gl-matrix\";\nimport Camera from \"../Camera.js\";\n\nclass ComputePerspectiveMatrixSingleton {\n  private _pMatrix: mat4 | null = null;\n  private _aspectRatio = 1;\n\n  get pMatrix(): mat4 | null {\n    return this._pMatrix;\n  }\n\n  computePerspectiveMatrix(\n    canvas: HTMLCanvasElement,\n    camera: Camera,\n    fovDeg: number,\n    nearPlane: number = 0.1,\n    insideSphere: boolean\n  ): mat4 {\n    this._aspectRatio = canvas.width / canvas.height;\n\n    const p = mat4.create();\n    let farPlane: number;\n\n    if (insideSphere) {\n      // Inside the sphere: cap slightly beyond radius\n      farPlane = 1.1;\n    } else {\n      const camMat = camera.getCameraMatrix() as any;\n      const distCamera = -Number(camMat[14]); // camera z translation\n      const r = 1; // HiPS sphere radius (inject real value if available)\n\n      // Guard against negative due to rounding/logic\n      const c2 = Math.sqrt(Math.max(distCamera ** 2 - r ** 2, 0));\n      const beta = Math.atan2(c2, r);\n      const cf = c2 * Math.sin(beta);\n      farPlane = cf > 0 ? cf : r;\n    }\n\n    mat4.perspective(p, (fovDeg * Math.PI) / 180, this._aspectRatio, nearPlane, farPlane);\n    this._pMatrix = p;\n    return p;\n  }\n}\n\nconst computePerspectiveMatrixSingleton = new ComputePerspectiveMatrixSingleton();\nexport default computePerspectiveMatrixSingleton;","/**\n * @author Fabrizio Giordano (Fab)\n */\n\nimport { vec3, mat4, ReadonlyVec3, ReadonlyMat4 } from \"gl-matrix\";\nimport global from \"../Global.js\";\nimport { bootSetup } from \"../Config.js\";\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\n\nabstract class AbstractSkyEntity {\n  // Public-ish properties used elsewhere in the app\n  public refreshMe = false;\n  public fovX_deg = 180;\n  public fovY_deg = 180;\n  public xRad: number;\n  public yRad: number;\n  public prevFoV = this.fovX_deg;\n  public name: string;\n  // public insideSphere: boolean = bootSetup.insideSphere\n\n  // Picking/sphere\n  public center: vec3;\n  public radius: number;\n  public isGalacticHips: boolean;\n\n  // GL resources\n  protected vertexTextureCoordBuffer: WebGLBuffer | null = null;\n  protected vertexPositionBuffer: WebGLBuffer | null = null;\n  protected vertexIndexBuffer: WebGLBuffer | null = null;\n  protected shaderProgram: WebGLProgram | null = null;\n\n  // Matrices\n  protected T: mat4 = mat4.create();\n  protected R: mat4 = mat4.create();\n  protected modelMatrix: mat4 = mat4.create();\n  protected inverseModelMatrix: mat4 = mat4.create();\n\n  // Precomputed transform from galactic to equatorial (already inverted)\n  protected galacticMatrixInverted: mat4 = mat4.create();\n\n  constructor(\n    in_radius: number,\n    in_position: ReadonlyVec3,\n    in_xRad: number,\n    in_yRad: number,\n    in_name: string,\n    isGalacticHips?: boolean,\n  ) {\n    this.xRad = in_xRad;\n    this.yRad = in_yRad;\n    this.name = in_name;\n    this.center = vec3.clone(in_position);\n    this.radius = in_radius;\n    // this.insideSphere = global.insideSphere\n    this.isGalacticHips = !!isGalacticHips;\n\n    // Fill the matrix via Float32Array.set (safer than mat4.set with 16 scalars)\n    mat4.set(\n      this.galacticMatrixInverted,\n      -0.054875582456588745, -0.8734370470046997,  -0.48383501172065735, 0,\n       0.49410945177078247,  -0.4448296129703522,   0.7469822764396667,  0,\n      -0.8676661849021912,  -0.19807636737823486,  0.4559837877750397,  0,\n       0,                    0,                     0,                   1,\n    )\n  }\n\n  /** GL setup and initial model transform */\n  initGL(gl: GL): void {\n    // GL resources\n    this.vertexTextureCoordBuffer = gl.createBuffer();\n    this.vertexPositionBuffer = gl.createBuffer();\n    this.vertexIndexBuffer = gl.createBuffer();\n    this.shaderProgram = gl.createProgram();\n\n    // Reset object transforms\n    this.T = mat4.create();\n    this.R = mat4.create();\n    this.modelMatrix = mat4.create();\n    this.inverseModelMatrix = mat4.create();\n\n    // Initial pose\n    this.translate(this.center);\n    this.rotate(this.xRad, this.yRad);\n  }\n\n  translate(translation: ReadonlyVec3): void {\n    mat4.translate(this.T, this.T, translation);\n    this.refreshModelMatrix();\n  }\n\n  rotate(rad1: number, rad2: number): void {\n    mat4.rotate(this.R, this.R, rad2, [0, 0, 1]);\n    mat4.rotate(this.R, this.R, rad1, [1, 0, 0]);\n    this.refreshModelMatrix();\n  }\n\n  rotateFromZero(rad1: number, rad2: number): void {\n    mat4.identity(this.R);\n    mat4.rotate(this.R, this.R, rad1, [1, 0, 0]);\n    mat4.rotate(this.R, this.R, rad2, [0, 0, 1]);\n    this.refreshModelMatrix();\n  }\n\n  protected refreshModelMatrix(): void {\n    const R_inverse = mat4.create();\n    mat4.invert(R_inverse, this.R);\n    mat4.multiply(this.modelMatrix, this.T, R_inverse);\n\n    // Flip Y if we're outside the sphere\n    if (!global.insideSphere) {\n      this.modelMatrix[1]  = -this.modelMatrix[1];\n      this.modelMatrix[5]  = -this.modelMatrix[5];\n      this.modelMatrix[9]  = -this.modelMatrix[9];\n      this.modelMatrix[13] = -this.modelMatrix[13];\n    }\n\n    // Apply galactic frame transform if needed\n    if (this.isGalacticHips) {\n      mat4.multiply(this.modelMatrix, this.modelMatrix, this.galacticMatrixInverted);\n    }\n  }\n\n  getModelMatrixInverse(): ReadonlyMat4 {\n    mat4.identity(this.inverseModelMatrix);\n    mat4.invert(this.inverseModelMatrix, this.modelMatrix);\n    return this.inverseModelMatrix;\n  }\n\n  getModelMatrix(): ReadonlyMat4 {\n    return this.modelMatrix;\n  }\n\n  /** Children with hierarchical geometry (e.g., HiPS) can override this. */\n  setGeometryNeedsToBeRefreshed(): void {\n    (this as any).refreshGeometryOnFoVChanged = false;\n  }\n\n  // Helpers operating on raw mat4 buffers (kept from your JS)\n  rotateX(m: mat4, angle: number): mat4 {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const mv1 = m[1], mv5 = m[5], mv9 = m[9];\n\n    m[1]  = m[1]  * c - m[2]  * s;\n    m[5]  = m[5]  * c - m[6]  * s;\n    m[9]  = m[9]  * c - m[10] * s;\n\n    m[2]  = m[2]  * c + mv1 * s;\n    m[6]  = m[6]  * c + mv5 * s;\n    m[10] = m[10] * c + mv9 * s;\n\n    return m;\n  }\n\n  rotateY(m: mat4, angle: number): mat4 {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const mv0 = m[0], mv4 = m[4], mv8 = m[8];\n\n    m[0]  = c * m[0]  + s * m[2];\n    m[4]  = c * m[4]  + s * m[6];\n    m[8]  = c * m[8]  + s * m[10];\n\n    m[2]  = c * m[2]  - s * mv0;\n    m[6]  = c * m[6]  - s * mv4;\n    m[10] = c * m[10] - s * mv8;\n\n    return m;\n  }\n\n  // ---------- Abstract hooks ----------\n  \n  abstract draw(): void;\n\n}\n\nexport default AbstractSkyEntity;","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();","// FoVHelper.ts\n'use strict'\n\nclass FoVHelper {\n  getHiPSNorder(fov: number): number {\n    if (fov >= 179) return 0\n    if (fov >= 90)  return 1\n    if (fov >= 30)  return 2\n    if (fov >= 20)  return 3\n    if (fov >= 6)   return 4\n    if (fov >= 3.2) return 5\n    if (fov >= 1.6) return 6\n    if (fov >= 0.85) return 7\n    if (fov >= 0.42) return 8\n    if (fov >= 0.21) return 9\n    if (fov >= 0.12) return 10\n    if (fov >= 0.06) return 11\n    if (fov < 0.015) return 12\n    return 13\n  }\n\n  getRADegSteps(fov: number): { raStep: number; decStep: number } {\n    let raStep: number\n    let decStep: number\n\n    if (fov >= 179)      { raStep = 10;  decStep = 10 }\n    else if (fov >= 25)  { raStep = 9;   decStep = 9 }\n    else if (fov >= 12.5){ raStep = 8;   decStep = 8 }\n    else if (fov >= 6)   { raStep = 6;   decStep = 6 }\n    else if (fov >= 3.2) { raStep = 5;   decStep = 5 }\n    else if (fov >= 1.6) { raStep = 4;   decStep = 4 }\n    else if (fov >= 0.85){ raStep = 3;   decStep = 3 }\n    else if (fov >= 0.42){ raStep = 2;   decStep = 2 }\n    else if (fov >= 0.21){ raStep = 1;   decStep = 1 }\n    else if (fov >= 0.12){ raStep = 0.5; decStep = 0.5 }\n    else if (fov >= 0.06){ raStep = 0.25; decStep = 0.25 }\n    else                 { raStep = 10;  decStep = 10 }\n\n    return { raStep, decStep }\n  }\n\n  getRefOrder(order: number): number {\n    switch (order) {\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n        return order + 6\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n        return order + 5\n      case 8:\n        return order + 4\n      default:\n        return order + 3\n    }\n  }\n}\n\nexport const fovHelper = new FoVHelper()\nexport default FoVHelper","/**\n * Enum for coordinate types.\n * @author Fabrizio Giordano (Fab77)\n */\nenum CoordsType {\n  CARTESIAN = \"cartesian\",\n  SPHERICAL = \"spherical\",\n  ASTRO = \"astro\",\n}\n\nexport default CoordsType;","/**\n * @author Fabrizio Giordano (Fab77)\n */\n'use strict';\n\nimport { vec3 } from 'gl-matrix';\nimport {\n  cartesianToSpherical,\n  sphericalToCartesian,\n  sphericalToAstroDeg,\n  astroDegToSpherical,\n  type SphericalCoords,\n} from '../utils/Utils.js';\nimport CoordsType from '../utils/CoordsType.js';\nimport global from '../Global.js';\n\ntype CartesianOpts = { x: number; y: number; z: number };\ntype AstroOpts = { raDeg: number; decDeg: number };\ntype SphericalOpts = { phiDeg: number; thetaDeg: number };\ntype PointInitOpts = CartesianOpts | AstroOpts | SphericalOpts;\n\nclass Point {\n  private _x!: number;\n  private _y!: number;\n  private _z!: number;\n  private _xyz!: [number, number, number];\n\n  private _raDeg!: number;\n  private _decDeg!: number;\n  private _raRad!: number;\n  private _decRad!: number;\n  private _raDecDeg!: [number, number];\n\n  constructor(in_options: PointInitOpts, in_type: CoordsType) {\n    this._xyz = [0, 0, 0];\n    this._raDecDeg = [0, 0];\n\n    // Prefer config value if present, fallback to 12\n    const MAX_DECIMALS: number =\n      (global as any).MAX_DECIMALS ?? (global as any).maxDecimals ?? 12;\n\n    if (in_type === CoordsType.CARTESIAN) {\n      const { x, y, z } = in_options as CartesianOpts;\n      this._x = Number(x.toFixed(MAX_DECIMALS));\n      this._y = Number(y.toFixed(MAX_DECIMALS));\n      this._z = Number(z.toFixed(MAX_DECIMALS));\n      this._xyz = [this._x, this._y, this._z];\n\n      const [ra, dec] = this.computeAstroCoords();\n      this._raDeg = Number(ra);\n      this._decDeg = Number(dec);\n      this._raRad = (this._raDeg * Math.PI) / 180;\n      this._decRad = (this._decDeg * Math.PI) / 180;\n      this._raDecDeg = [this._raDeg, this._decDeg];\n    } else if (in_type === CoordsType.ASTRO) {\n      const { raDeg, decDeg } = in_options as AstroOpts;\n      this._raDeg = Number(raDeg);\n      this._decDeg = Number(decDeg);\n      this._raDecDeg = [this._raDeg, this._decDeg];\n      this._raRad = (this._raDeg * Math.PI) / 180;\n      this._decRad = (this._decDeg * Math.PI) / 180;\n\n      const [x, y, z] = this.computeCartesianCoords();\n      this._x = Number(x.toFixed(MAX_DECIMALS));\n      this._y = Number(y.toFixed(MAX_DECIMALS));\n      this._z = Number(z.toFixed(MAX_DECIMALS));\n      this._xyz = [this._x, this._y, this._z];\n    } else if (in_type === CoordsType.SPHERICAL) {\n      // Not implemented in original; keep behavior\n      console.log(`${CoordsType.SPHERICAL} not implemented yet`);\n      this._x = 0; this._y = 0; this._z = 0;\n      this._raDeg = 0; this._decDeg = 0;\n      this._raRad = 0; this._decRad = 0;\n    } else {\n      console.error('CoordsType ' + String(in_type) + ' not recognised.');\n      // Initialize to zeroed state to keep object consistent\n      this._x = 0; this._y = 0; this._z = 0;\n      this._raDeg = 0; this._decDeg = 0;\n      this._raRad = 0; this._decRad = 0;\n    }\n  }\n\n  private computeAstroCoords(): [number, number] {\n    const phiThetaDeg = cartesianToSpherical(\n      vec3.fromValues(this._xyz[0], this._xyz[1], this._xyz[2])\n    );\n    const rad = sphericalToAstroDeg(phiThetaDeg.phi, phiThetaDeg.theta);\n    return [rad.ra, rad.dec];\n  }\n\n  private computeCartesianCoords(): [number, number, number] {\n    const phiThetaDeg = astroDegToSpherical(this._raDeg, this._decDeg);\n    const [x, y, z] = sphericalToCartesian(phiThetaDeg.phi, phiThetaDeg.theta, 1);\n    return [x, y, z];\n  }\n\n  /**\n   * @return {phi, theta} (degrees)\n   */\n  computeHealpixPhiTheta(): SphericalCoords {\n    return astroDegToSpherical(this._raDeg, this._decDeg);\n  }\n\n  /** Scale the vector by a given factor */\n  scale(n: number): Point {\n    return new Point({ x: this.x * n, y: this.y * n, z: this.z * n }, CoordsType.CARTESIAN);\n  }\n\n  dot(v: Point): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  cross(v: Point): Point {\n    return new Point(\n      {\n        x: this.y * v.z - v.y * this.z,\n        y: this.z * v.x - v.z * this.x,\n        z: this.x * v.y - v.x * this.y,\n      },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  norm(): Point {\n    const d = 1 / this.length();\n    return new Point({ x: this.x * d, y: this.y * d, z: this.z * d }, CoordsType.CARTESIAN);\n  }\n\n  length(): number {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  lengthSquared(): number {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  subtract(v: Point): Point {\n    return new Point(\n      { x: this.x - v.x, y: this.y - v.y, z: this.z - v.z },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  add(v: Point): Point {\n    return new Point(\n      { x: this.x + v.x, y: this.y + v.y, z: this.z + v.z },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  get x(): number { return this._x; }\n  get y(): number { return this._y; }\n  get z(): number { return this._z; }\n  get xyz(): [number, number, number] { return this._xyz; }\n\n  get raDeg(): number { return this._raDeg; }\n  get decDeg(): number { return this._decDeg; }\n  get raDecDeg(): [number, number] { return this._raDecDeg; }\n\n  toADQL(): string {\n    return `${this._raDecDeg[0]},${this._raDecDeg[1]}`;\n  }\n\n  toString(): string {\n    return `(raDeg, decDeg) => (${this._raDecDeg[0]},${this._raDecDeg[1]}) (x, y,z) => (${this._xyz[0]},${this._xyz[1]},${this._xyz[2]})`;\n  }\n}\n\nexport default Point;","'use strict';\n/**\n * @author Fabrizio Giordano (Fab)\n */\n\nimport Point from '../model/Point.js';\nimport RayPickingUtils from './RayPickingUtils.js';\nimport CoordsType from './CoordsType.js';\nimport { mat4, ReadonlyMat4 } from 'gl-matrix';\nimport computePerspectiveMatrixSingleton from './ComputePerspectiveMatrix.js';\nimport Camera from '../Camera.js';\nimport HiPS from '../model/hips/HiPS.js';\nimport AbstractSkyEntity from '../model/AbstractSkyEntity.js';\n\nclass FoVUtils {\n  /**\n   * Return the minimum FoV value between `_fovY_deg` and `_fovX_deg`.\n   * (Kept here for parity; this class doesn’t maintain those fields.)\n   */\n  getMinFoV(this: { _fovY_deg: number; _fovX_deg: number }): number {\n    return this._fovY_deg <= this._fovX_deg ? this._fovY_deg : this._fovX_deg;\n  }\n\n  /**\n   * Compute the FoV polygon as a list of Points (clockwise).\n   * Uses ray picking + frustum planes against a unit sphere.\n   */\n  static getFoVPolygon(\n    // _pMatrix: ReadonlyMat4 | null,\n    camera: Camera,\n    canvas: HTMLCanvasElement,\n    model: AbstractSkyEntity\n  ): Point[] {\n    // const pMatrix = (computePerspectiveMatrixSingleton.pMatrix ??\n    //   _pMatrix) as ReadonlyMat4;\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4 \n    const vMatrix = camera.getCameraMatrix();\n    const mMatrix = model.getModelMatrix();\n    const canvasWidth = canvas.clientWidth;\n    const canvasHeight = canvas.clientHeight;\n\n    let points: Point[] = [];\n\n    // First check: does the sphere cover the whole screen?\n    const intersectionWithModel = RayPickingUtils.getIntersectionPointWithSingleModel(0, 0);\n\n    if (intersectionWithModel.length > 0) {\n      // Fully covered → grab corners + midpoints (CASE C)\n      const cornersPoints = FoVUtils.getScreenCornersIntersection(\n        pMatrix,\n        camera,\n        canvas\n      );\n      points = cornersPoints;\n    } else {\n      // Partial coverage: build frustum planes\n      let M = mat4.create();\n      M = mat4.multiply(M, vMatrix, mMatrix);\n      M = mat4.multiply(M, pMatrix, M);\n\n      const topPlane = [M[3] - M[1], M[7] - M[5], M[11] - M[9], M[15] - M[13]];    // m41-m21, ...\n      const bottomPlane = [M[3] + M[1], M[7] + M[5], M[11] + M[9], M[15] + M[13]];\n      const rightPlane = [M[3] - M[0], M[7] - M[4], M[11] - M[8], M[15] - M[12]];\n      const leftPlane = [M[3] + M[0], M[7] + M[4], M[11] + M[8], M[15] + M[12]];\n\n      const intersectionTopMiddle = RayPickingUtils.getIntersectionPointWithSingleModel(canvasWidth / 2, 0);\n      const intersectionRightMiddle = RayPickingUtils.getIntersectionPointWithSingleModel(canvasWidth, canvasHeight / 2);\n\n      // CASE A: zoomed out, hemisphere fully visible\n      if (\n        intersectionTopMiddle.length === 0 &&\n        intersectionRightMiddle.length === 0\n      ) {\n        const topPoints = FoVUtils.getNearestSpherePoint(topPlane);\n        const bottomPoints = FoVUtils.getNearestSpherePoint(bottomPlane);\n        const leftPoints = FoVUtils.getNearestSpherePoint(leftPlane);\n        const rightPoints = FoVUtils.getNearestSpherePoint(rightPlane);\n\n        const middleLeftTop = FoVUtils.computeMiddlePoint(leftPoints[0], topPoints[0])[0];\n        const middleTopRight = FoVUtils.computeMiddlePoint(topPoints[0], rightPoints[0])[0];\n        const middleRightBottom = FoVUtils.computeMiddlePoint(rightPoints[0], bottomPoints[0])[0];\n        const middleBottomLeft = FoVUtils.computeMiddlePoint(bottomPoints[0], leftPoints[0])[0];\n\n        points.push(\n          topPoints[0],\n          middleTopRight,\n          rightPoints[0],\n          middleRightBottom,\n          bottomPoints[0],\n          middleBottomLeft,\n          leftPoints[0],\n          middleLeftTop\n        );\n      }\n      // CASE E: no intersection on top/bottom planes\n      else if (intersectionTopMiddle.length === 0) {\n        const topPoints = FoVUtils.getNearestSpherePoint(topPlane);\n        const bottomPoints = FoVUtils.getNearestSpherePoint(bottomPlane);\n        const leftPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          leftPlane,\n          bottomPlane,\n          topPlane\n        );\n        const rightPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          rightPlane,\n          topPlane,\n          bottomPlane\n        );\n\n        const middleLeftTop = FoVUtils.computeMiddlePoint(leftPoints[1], topPoints[0])[0];\n        const middleTopRight = FoVUtils.computeMiddlePoint(topPoints[0], rightPoints[0])[0];\n        const middleRightBottom = FoVUtils.computeMiddlePoint(rightPoints[1], bottomPoints[0])[0];\n        const middleBottomLeft = FoVUtils.computeMiddlePoint(bottomPoints[0], leftPoints[0])[0];\n\n        points.push(\n          topPoints[0],\n          middleTopRight,\n          rightPoints[0],\n          rightPoints[1],\n          middleRightBottom,\n          bottomPoints[0],\n          middleBottomLeft,\n          leftPoints[0],\n          leftPoints[1],\n          middleLeftTop\n        );\n      }\n      // CASE D: no intersection on right/left planes\n      else if (intersectionRightMiddle.length === 0) {\n        const topPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          topPlane,\n          leftPlane,\n          rightPlane\n        );\n        const bottomPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          bottomPlane,\n          rightPlane,\n          leftPlane\n        );\n        const leftPoints = FoVUtils.getNearestSpherePoint(leftPlane);\n        const rightPoints = FoVUtils.getNearestSpherePoint(rightPlane);\n\n        const middleLeftTop = FoVUtils.computeMiddlePoint(leftPoints[0], topPoints[0])[0];\n        const middleTopRight = FoVUtils.computeMiddlePoint(topPoints[1], rightPoints[0])[0];\n        const middleRightBottom = FoVUtils.computeMiddlePoint(rightPoints[0], bottomPoints[0])[0];\n        const middleBottomLeft = FoVUtils.computeMiddlePoint(bottomPoints[1], leftPoints[0])[0];\n\n        points.push(\n          topPoints[0],\n          topPoints[1],\n          middleTopRight,\n          rightPoints[0],\n          middleRightBottom,\n          bottomPoints[0],\n          bottomPoints[1],\n          middleBottomLeft,\n          leftPoints[0],\n          middleLeftTop\n        );\n      }\n      // CASE B: all frustum planes intersect\n      else {\n        const topPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          topPlane,\n          leftPlane,\n          rightPlane\n        );\n        const bottomPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          bottomPlane,\n          rightPlane,\n          leftPlane\n        );\n        const leftPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          leftPlane,\n          bottomPlane,\n          topPlane\n        );\n        const rightPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          rightPlane,\n          topPlane,\n          bottomPlane\n        );\n\n        points.push(\n          topPoints[0],\n          topPoints[1],\n          rightPoints[0],\n          rightPoints[1],\n          bottomPoints[0],\n          bottomPoints[1],\n          leftPoints[0],\n          leftPoints[1]\n        );\n      }\n    }\n\n    return points;\n  }\n\n  /**\n   * Ray pick against 8 key screen positions (corners + midpoints).\n   * Returns Points in clockwise order starting from top-left.\n   */\n  static getScreenCornersIntersection(\n    pMatrix: ReadonlyMat4,\n    camera: Camera,\n    canvas: HTMLCanvasElement\n  ): Point[] {\n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n\n    const topLeft = RayPickingUtils.getIntersectionPointWithSingleModel(0, 0);\n    const middleTop = RayPickingUtils.getIntersectionPointWithSingleModel(w / 2, 0);\n    const topRight = RayPickingUtils.getIntersectionPointWithSingleModel(w, 0);\n\n    const middleRight = RayPickingUtils.getIntersectionPointWithSingleModel(w, h / 2);\n\n    const bottomRight = RayPickingUtils.getIntersectionPointWithSingleModel(w, h);\n    const middleBottom = RayPickingUtils.getIntersectionPointWithSingleModel(w / 2, h);\n    const bottomLeft = RayPickingUtils.getIntersectionPointWithSingleModel(0, h);\n\n    const middleLeft = RayPickingUtils.getIntersectionPointWithSingleModel(0, h / 2);\n\n    const out: Point[] = [];\n    const pushIf = (ip: number[]) => {\n      if (ip.length > 0) {\n        out.push(new Point({ x: ip[0], y: ip[1], z: ip[2] }, CoordsType.CARTESIAN));\n      }\n    };\n\n    pushIf(topLeft);\n    pushIf(middleTop);\n    pushIf(topRight);\n    pushIf(middleRight);\n    pushIf(bottomRight);\n    pushIf(middleBottom);\n    pushIf(bottomLeft);\n    pushIf(middleLeft);\n\n    return out;\n  }\n\n  /** Returns the center point (in J2000) of the current view as a `Point`. */\n  static getCenterJ2000(canvas: HTMLCanvasElement): Point {\n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n\n    const center = RayPickingUtils.getIntersectionPointWithSingleModel(w / 2, h / 2);\n    return new Point(\n      { x: center[0], y: center[1], z: center[2] },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  /** Middle point on the unit sphere along the arc between two 3D points. */\n  static computeMiddlePoint(p1: Point, p2: Point): Point[] {\n    // midpoint of segment\n    const xm = (p1.x + p2.x) / 2;\n    const ym = (p1.y + p2.y) / 2;\n    const zm = (p1.z + p2.z) / 2;\n\n    // project the midpoint back to unit sphere\n    const len = Math.hypot(xm, ym, zm) || 1;\n    const x = xm / len;\n    const y = ym / len;\n    const z = zm / len;\n\n    return [new Point({ x, y, z }, CoordsType.CARTESIAN)];\n  }\n\n  /**\n   * Nearest intersection point between a frustum plane and the unit sphere,\n   * using the plane normal.\n   */\n  static getNearestSpherePoint(plane: number[]): Point[] {\n    const [A, B, C, D] = plane;\n\n    const R = 1;\n    const invLen = 1 / Math.sqrt(A * A + B * B + C * C);\n    const t1 = R * invLen;\n    const t2 = -R * invLen;\n\n    const P1: [number, number, number] = [A * t1, B * t1, C * t1];\n    const P2: [number, number, number] = [A * t2, B * t2, C * t2];\n\n    const den = Math.sqrt(A * A + B * B + C * C) || 1;\n    const dist1 = Math.abs(A * P1[0] + B * P1[1] + C * P1[2] + D) / den;\n    const dist2 = Math.abs(A * P2[0] + B * P2[1] + C * P2[2] + D) / den;\n\n    const P = dist1 <= dist2 ? P1 : P2;\n    return [new Point({ x: P[0], y: P[1], z: P[2] }, CoordsType.CARTESIAN)];\n  }\n\n  /**\n   * Intersections between a frustum plane and the unit sphere,\n   * computed via two perpendicular planes.\n   * Returns two points (first from `plane4Circle_1`, second from `plane4Circle_2`).\n   */\n  static getFrustumIntersectionWithSphere(\n    _M: ReadonlyMat4,\n    plane4Sphere: number[],\n    plane4Circle_1: number[],\n    plane4Circle_2: number[]\n  ): Point[] {\n    const [A0, B0, C0, D0] = plane4Sphere;\n\n    // center of the circle (projection of sphere center onto plane)\n    const denom0 = (A0 * A0 + B0 * B0 + C0 * C0) || 1;\n    const x_c = -(A0 * D0) / denom0;\n    const y_c = -(B0 * D0) / denom0;\n    const z_c = -(C0 * D0) / denom0;\n\n    const d = Math.abs(D0) / Math.sqrt(denom0); // distance from sphere center (0,0,0)\n    const R = 1;\n\n    const out: Point[] = [];\n\n    if (R > d) {\n      const r = Math.sqrt(R * R - d * d);\n\n      const pick = (plane: number[]): [number, number, number] => {\n        const [A, B, C, D] = plane;\n        const invLen = 1 / Math.sqrt(A * A + B * B + C * C);\n        const t1 = r * invLen;\n        const t2 = -r * invLen;\n\n        const P1: [number, number, number] = [x_c + A * t1, y_c + B * t1, z_c + C * t1];\n        const P2: [number, number, number] = [x_c + A * t2, y_c + B * t2, z_c + C * t2];\n\n        const den = Math.sqrt(A * A + B * B + C * C) || 1;\n        const dist1 = Math.abs(A * P1[0] + B * P1[1] + C * P1[2] + D) / den;\n        const dist2 = Math.abs(A * P2[0] + B * P2[1] + C * P2[2] + D) / den;\n\n        return dist1 <= dist2 ? P1 : P2;\n      };\n\n      const P_intersection_1 = pick(plane4Circle_1);\n      const P_intersection_2 = pick(plane4Circle_2);\n\n      out.push(\n        new Point({ x: P_intersection_1[0], y: P_intersection_1[1], z: P_intersection_1[2] }, CoordsType.CARTESIAN),\n        new Point({ x: P_intersection_2[0], y: P_intersection_2[1], z: P_intersection_2[2] }, CoordsType.CARTESIAN)\n      );\n    } else if (R === d) {\n      // Tangent: both intersections collapse to the circle center on the plane\n      out.push(\n        new Point({ x: x_c, y: y_c, z: z_c }, CoordsType.CARTESIAN),\n        new Point({ x: x_c, y: y_c, z: z_c }, CoordsType.CARTESIAN)\n      );\n    } else {\n      // No intersection; return empty to avoid pushing undefined values\n      // console.log('Frustum plane not intersecting the sphere');\n    }\n\n    return out;\n  }\n\n  /** Build ADQL string from an array of Points (ra,dec pairs). */\n  static getAstroFoVPolygon(points: Point[]): string {\n    return points.map(p => p.toADQL()).join(',');\n  }\n}\n\nexport default FoVUtils;","'use strict'\n/**\n * FoV singleton (TypeScript)\n * - Uses computePerspectiveMatrixSingleton.pMatrix\n * - Guards acos domain (numeric safety)\n * - Uses vec3.transformMat4 instead of custom mat4*vec3\n * - Keeps original “insideSphere ? 360 - angle : angle” behavior\n */\n\nimport { vec3, mat4 } from 'gl-matrix'\nimport global from '../Global.js'\nimport RayPickingUtils from '../utils/RayPickingUtils.js'\nimport { radToDeg } from '../utils/Utils.js'\nimport computePerspectiveMatrixSingleton from '../utils/ComputePerspectiveMatrix.js'\nimport healpixGridSingleton from './grid/HealpixGridSingleton.js'\n\n\n\ntype FoVComputed = {\n angleDeg: number;\n distance: number\n}\n\n\nexport class FoV {\n\n  private fovXDeg = 180\n  private fovYDeg = 180\n  private ratio = +0\n  private _minFoV = 180\n\n  constructor() { }\n\n  /** Recomputes FoV for current camera + projection */\n  public getFoV(insideSphere: boolean) {\n    const gl = global.gl\n\n    if (!gl || !gl.canvas) {\n      // Handle the error or assign default values\n      this.fovXDeg = 180\n      this.fovYDeg = 180\n      this._minFoV = this.minFoV\n      return this\n    }\n\n    // horizontal FoV: ray through (centerY)\n    // const x = this.computeAngle(0, gl.canvas.height / 2, insideSphere)\n    const xFoVComputed = this.computeAngle(0, gl.canvas.height / 2, insideSphere)\n    this.fovXDeg = xFoVComputed.angleDeg    \n    // this.xDistance = xFoVComputed.distance\n    // this.xAngleRatio = this.fovXDeg / this.xDistance\n\n\n    // vertical FoV: ray through (centerX)\n    // this.fovYDeg = this.computeAngle(gl.canvas.width / 2, 0, insideSphere)\n    const yFoVComputed = this.computeAngle(gl.canvas.width / 2, 0, insideSphere)\n    this.fovYDeg = yFoVComputed.angleDeg\n    // this.yDistance = yFoVComputed.distance\n    // this.yAngleRatio = this.fovYDeg / this.yDistance\n\n    this._minFoV = this.minFoV\n    this.ratio = this.computeRatio()\n    return this\n  }\n\n  private computeRatio(): number{\n    const camera = global.camera\n    if (!camera) throw Error (\"Camera not defined\")\n    const pos = camera.getCameraPosition()\n    const distanceFromCenter = Math.sqrt(pos[0]*pos[0] + pos[1]*pos[1] + pos[2]*pos[2])\n    // const distanceFromSphere = distanceFromCenter - healpixGridSingleton.RADIUS\n    const ratio = distanceFromCenter / this.fovYDeg \n    return ratio\n  }\n\n\n\n  public changeMinFov(deg: number) {\n    console.log(\"inside changeMinFov\")\n    if (this.fovYDeg <= this.fovXDeg) {\n      this.fovYDeg = deg\n    } else {\n      this.fovXDeg = deg\n    }\n    console.log(\"changeMinFov: ping\")\n    this.minFoV\n    // this.fovYDeg <= this.fovXDeg ? this.fovYDeg = deg : this.fovXDeg = deg\n  }\n\n\n  get minFoV() {\n    this._minFoV = this.fovYDeg <= this.fovXDeg ? this.fovYDeg : this.fovXDeg\n    return this._minFoV\n  }\n\n  public computeDistanceFromAngle(angleDeg: number) : number {\n    const desiredFoV = angleDeg\n    const distance = desiredFoV * this.ratio\n    // return Math.abs(distance)\n    return distance\n  } \n\n  /** FoV half-screen chord angle doubled (deg) along a given canvas axis */\n  private computeAngle(canvasX: number, canvasY: number, insideSphere: boolean): FoVComputed {\n    const camera = global.camera\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix\n    if (!pMatrix) {\n      // Handle the error or assign a default value\n      console.warn('FoV: projection matrix is null')\n      return {angleDeg: 180, distance: 1}\n    }\n    if (!camera) {\n      // Handle the error or assign a default value\n      console.warn('FoV: camera is null')\n      return {angleDeg: 180, distance: 1}\n    }\n    const rayWorld = RayPickingUtils.getRayFromMouse(canvasX, canvasY, pMatrix)\n\n    const intersectionDistance = RayPickingUtils.raySphere(\n      camera.getCameraPosition(),\n      rayWorld\n    )\n\n    let angleDeg: number\n    if (intersectionDistance > 0) {\n      // world-space intersection point on the sphere\n      const hit = vec3.create()\n      vec3.scale(hit, rayWorld, intersectionDistance)\n      vec3.add(hit, camera.getCameraPosition(), hit)\n\n      const center = healpixGridSingleton.center\n\n      // vectors from sphere center\n      const vHit = vec3.create()\n      vec3.subtract(vHit, hit, center)\n\n      // reference vector: rotate world +Z into current camera orientation, then from center\n      const refWorldZ = vec3.fromValues(center[0], center[1], center[2] + healpixGridSingleton.radius)\n\n      const vInv = mat4.create()\n      mat4.invert(vInv, camera.getCameraMatrix())\n      const refCamZ = vec3.create()\n      vec3.transformMat4(refCamZ, refWorldZ, vInv)\n\n      const vRef = vec3.create()\n      vec3.subtract(vRef, refCamZ, center)\n\n      // angle between vHit and vRef, doubled\n      const dot = vec3.dot(vHit, vRef)\n      const n1 = vec3.length(vHit)\n      const n2 = vec3.length(vRef)\n      // numeric safety for acos\n      const c = Math.min(1, Math.max(-1, dot / (n1 * n2)))\n      const angleRad = Math.acos(c)\n      angleDeg = 2 * radToDeg(angleRad)\n    } else {\n      angleDeg = 180\n    }\n\n    const finalAngle = insideSphere ? 360 - angleDeg : angleDeg\n    // return insideSphere ? 360 - angleDeg : angleDeg\n\n    return {angleDeg: finalAngle, distance: intersectionDistance}\n  }\n\n  /**\n * Computes the camera position (x,y,z) along the current view direction that would\n * yield the requested minFoV (in degrees), assuming the camera is OUTSIDE the sphere.\n * This method does NOT mutate the camera; it only returns the suggested position.\n *\n * Geometry: for a sphere of radius R observed from distance d (from center),\n * the apparent angular diameter is 2*arcsin(R/d). Our minFoV is that angular diameter\n * along the tighter axis; we solve for d and place the camera on the current\n * center→camera direction with that distance.\n *\n * @param targetMinFoVDeg Desired min FoV in degrees, 0 < targetMinFoVDeg < 180\n * @returns Tuple [x, y, z] for the recommended camera position in world coordinates.\n */\n  public computeCameraPositionForMinFoV(targetMinFoVDeg: number): [number, number, number] {\n    const camera = global.camera\n    const center = healpixGridSingleton.center\n    const R = healpixGridSingleton.radius\n\n    if (!camera) {\n      console.warn('FoV.computeCameraPositionForMinFoV: camera not available; returning a sensible default.')\n      return [center[0], center[1], center[2] + 2 * R]\n    }\n\n    // Clamp and validate input\n    const eps = 1e-6\n    const clamped = Math.max(eps, Math.min(180 - eps, targetMinFoVDeg))\n    const halfRad = (clamped * Math.PI / 180) * 0.5\n\n    // Distance from center needed to achieve the angular diameter\n    // minFoV = 2 * arcsin(R / d)  =>  d = R / sin(minFoV/2)\n    const sinHalf = Math.sin(halfRad)\n    if (sinHalf <= 0) {\n      console.warn('FoV.computeCameraPositionForMinFoV: invalid targetMinFoVDeg, using fallback.')\n      return [center[0], center[1], center[2] + 2 * R]\n    }\n    let d = R / sinHalf\n\n    // Ensure we remain strictly outside the sphere\n    d = Math.max(d, R + 1e-4)\n\n    // Use the current center→camera direction to keep orientation\n    const camPos = camera.getCameraPosition()\n    let dirX = camPos[0] - center[0]\n    let dirY = camPos[1] - center[1]\n    let dirZ = camPos[2] - center[2]\n    const len = Math.hypot(dirX, dirY, dirZ)\n    if (len < eps) {\n      // If somehow at the center, use +Z as a default direction\n      dirX = 0; dirY = 0; dirZ = 1;\n    } else {\n      dirX /= len\n      dirY /= len\n      dirZ /= len\n    }\n\n    const newX = center[0] + dirX * d\n    const newY = center[1] + dirY * d\n    const newZ = center[2] + dirZ * d\n\n    return [newX, newY, newZ]\n\n  }\n\n\n\n/**\n   * Computes the camera world-space position required to achieve a target FoV (deg),\n   * keeping the same viewing direction. Acts as the inverse of computeAngle().\n   *\n   * @param targetFoVDeg desired full FoV angle in degrees (0 < FoV < 180)\n   * @param canvasWidth  canvas width in pixels\n   * @param canvasHeight canvas height in pixels\n   * @returns [x, y, z] coordinates for the new camera position\n   */\n  public computeCameraPositionForFoV(\n    targetFoVDeg: number\n  ): [number, number, number] {\n    const camera = global.camera;\n    const center = healpixGridSingleton.center;\n    const R = healpixGridSingleton.radius;\n\n    if (!camera) {\n      console.warn(\"FoV.computeCameraPositionForFoV: camera missing.\");\n      return [center[0], center[1], center[2] + 2 * R];\n    }\n\n    const eps = 1e-6;\n    const clamped = Math.max(eps, Math.min(180 - eps, targetFoVDeg));\n    const halfRad = (clamped * Math.PI) / 360.0; // half-angle in radians\n\n    // Distance from center that yields this FoV\n    const sinHalf = Math.sin(halfRad);\n    if (sinHalf <= 0) {\n      console.warn(\"FoV.computeCameraPositionForFoV: invalid FoV.\");\n      return [center[0], center[1], center[2] + 2 * R];\n    }\n    let d = R / sinHalf;\n\n    // Slightly outside sphere to avoid clipping\n    d = Math.max(d, R + 1e-4);\n\n    // Get current viewing direction\n    const camPos = camera.getCameraPosition();\n    let dirX = camPos[0] - center[0];\n    let dirY = camPos[1] - center[1];\n    let dirZ = camPos[2] - center[2];\n    const len = Math.hypot(dirX, dirY, dirZ);\n    if (len < eps) {\n      dirX = 0; dirY = 0; dirZ = 1;\n    } else {\n      dirX /= len;\n      dirY /= len;\n      dirZ /= len;\n    }\n\n    const newX = center[0] + dirX * d;\n    const newY = center[1] + dirY * d;\n    const newZ = center[2] + dirZ * d;\n\n    return [newX, newY, newZ];\n  }\n\n  /**\n * Return a camera position such that the sphere's apparent angular diameter\n * (the silhouette, not the surface coverage) equals targetAngularDiameterDeg.\n * Keeps current view direction; does not mutate the camera.\n *\n * @param targetAngularDiameterDeg desired apparent diameter in degrees (0<α<180)\n * @returns [x,y,z] world position\n */\npublic computeCameraPositionForAngularDiameter(\n  targetAngularDiameterDeg: number\n): [number, number, number] {\n  const camera = global.camera;\n  const center = healpixGridSingleton.center;\n  const R = healpixGridSingleton.radius;\n\n  if (!camera) {\n    console.warn('computeCameraPositionForAngularDiameter: camera missing.');\n    return [center[0], center[1], center[2] + 2 * R];\n  }\n\n  const eps = 1e-6;\n  const α = Math.max(eps, Math.min(180 - eps, targetAngularDiameterDeg));\n  const half = (α * Math.PI) / 360.0;\n  const sinHalf = Math.sin(half);\n\n  // d = R / sin(α/2)\n  let d = R / sinHalf;\n  d = Math.max(d, R + 1e-4); // stay outside\n\n  // project along current center→camera direction\n  const [cx, cy, cz] = center as [number, number, number];\n  const [px, py, pz] = camera.getCameraPosition();\n  let dx = px - cx, dy = py - cy, dz = pz - cz;\n  const L = Math.hypot(dx, dy, dz);\n  if (L < eps) { dx = 0; dy = 0; dz = 1; } else { dx/=L; dy/=L; dz/=L; }\n\n  return [cx + dx * d, cy + dy * d, cz + dz * d];\n}\n}","// GridShaderManager.ts\n'use strict'\n\nclass GridShaderManager {\n  static healpixGridVS(): string {\n    return `#version 300 es\n        in vec4 aCatPosition;\n        uniform mat4 uMVMatrix;\n        uniform mat4 uPMatrix;\n\n        void main() {\n            gl_Position = uPMatrix * uMVMatrix * aCatPosition;\n            gl_PointSize = 7.0;\n        }`\n  }\n\n  static healpixGridFS(): string {\n    return `#version 300 es\n        precision mediump float;\n\n        uniform vec4 u_fragcolor;\n        out vec4 fragColor;\n\n        void main() {\n            // fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n            fragColor = u_fragcolor;\n        }`\n  }\n}\n\nexport default GridShaderManager","class Point2D {\n  private _x: number;\n  private _y: number;\n\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n}\n\nexport default Point2D;","import Point from \"../model/Point.js\";\nimport Point2D from \"../model/Point2D.js\";\nimport CoordsType from \"./CoordsType.js\";\n\ntype ProjectionFlag = 0 | 1 | 2;\n\nexport interface SelectionObj {\n  poly4selection: Point2D[][];\n  flag: ProjectionFlag;\n  maxx: number;\n  maxy: number;\n  minx: number;\n  miny: number;\n}\n\nclass GeomUtils {\n  // Orthodromic (great-circle) distance in radians\n  static orthodromicDistance(p1: Point, p2: Point): number {\n    return Math.acos(\n      Math.sin(p1.decDeg * Math.PI / 180) * Math.sin(p2.decDeg * Math.PI / 180) +\n      Math.cos(p1.decDeg * Math.PI / 180) * Math.cos(p2.decDeg * Math.PI / 180) *\n      Math.cos((p2.raDeg - p1.raDeg) * Math.PI / 180)\n    );\n  }\n\n  /**\n   * Decide the 2D projection strategy and pre-project polygons for point-in-polygon tests.\n   * Returns the projected polygons + bbox + a flag describing the projection used:\n   * 0 → all points in same hemisphere with |Dec| > 10 → stereographic-like projection using x,y from 3D\n   * 1 → all points in equatorial belt (|Dec| < 10) → use RA/Dec directly\n   * 2 → equatorial belt and polygon crosses RA=0 → shift RA>180 by -360\n   */\n  static computeSelectionObject(polygons: Point[][]): SelectionObj {\n    let poly4selection: Point2D[][] = [];\n    let flag: ProjectionFlag = 0;\n\n    let maxx: number | undefined;\n    let maxy: number | undefined;\n    let minx: number | undefined;\n    let miny: number | undefined;\n\n    const DEC_THRESHOLD = 10;\n    //  1 → northern hemisphere (Dec > +10), -1 → southern (Dec < -10), 0 → equatorial belt\n    let hemisphere = 0;\n\n    if (polygons[0][0].decDeg >= DEC_THRESHOLD) {\n      hemisphere = 1;\n    } else if (polygons[0][0].decDeg <= -DEC_THRESHOLD) {\n      hemisphere = -1;\n    } else {\n      flag = 1;\n    }\n\n    // Case flag = 0 → stereographic-like projection using x,y,z from 3D point\n    if (flag === 0) {\n      const first = GeomUtils.projectIn2D(polygons[0][0]);\n      maxx = minx = first.x;\n      maxy = miny = first.y;\n\n      for (const currpoly of polygons) {\n        const selpoly: Point2D[] = [];\n        for (const point of currpoly) {\n          // If a point violates the hemisphere constraint, fall back to belt logic\n          if (\n            (point.decDeg > hemisphere * DEC_THRESHOLD && hemisphere === -1) ||\n            (point.decDeg < hemisphere * DEC_THRESHOLD && hemisphere === 1)\n          ) {\n            flag = 1;\n            poly4selection = [];\n            break;\n          }\n          const p = GeomUtils.projectIn2D(point);\n          selpoly.push(p);\n\n          if (p.x > (maxx as number)) maxx = p.x;\n          if (p.y > (maxy as number)) maxy = p.y;\n          if (p.x < (minx as number)) minx = p.x;\n          if (p.y < (miny as number)) miny = p.y;\n        }\n        poly4selection.push(selpoly);\n      }\n    }\n\n    if (flag === 0) {\n      return {\n        poly4selection,\n        flag,\n        maxx: maxx as number,\n        maxy: maxy as number,\n        minx: minx as number,\n        miny: miny as number,\n      };\n    }\n\n    // Case flag = 1 or 2 → work directly in (RA,Dec)\n    const RA_THRESHOLD = 180;\n    let belowThreshold = polygons[0][0].raDeg < RA_THRESHOLD;\n\n    maxx = minx = polygons[0][0].raDeg;\n    maxy = miny = polygons[0][0].decDeg;\n\n    for (const currpoly of polygons) {\n      const selpoly: Point2D[] = [];\n      for (const point of currpoly) {\n        const p = new Point2D(point.raDeg, point.decDeg);\n        selpoly.push(p);\n\n        if (point.raDeg > maxx) maxx = point.raDeg;\n        if (point.decDeg > maxy) maxy = point.decDeg;\n        if (point.raDeg < minx) minx = point.raDeg;\n        if (point.decDeg < miny) miny = point.decDeg;\n\n        // Detect crossing of RA=0 meridian\n        if (\n          (point.raDeg >= RA_THRESHOLD && belowThreshold) ||\n          (point.raDeg <= RA_THRESHOLD && !belowThreshold)\n        ) {\n          flag = 2;\n          poly4selection = [];\n          break;\n        }\n      }\n      poly4selection.push(selpoly);\n    }\n\n    if (flag === 1) {\n      return {\n        poly4selection,\n        flag,\n        maxx,\n        maxy,\n        minx,\n        miny,\n      };\n    }\n\n    // Case flag = 2 → shift RA>180 by -360 to unwrap around RA=0\n    let startRA = polygons[0][0].raDeg;\n    maxx = startRA >= RA_THRESHOLD ? startRA - 360 : startRA;\n    maxy = polygons[0][0].decDeg;\n    minx = maxx;\n    miny = maxy;\n\n    for (const currpoly of polygons) {\n      const selpoly: Point2D[] = [];\n      for (const point of currpoly) {\n        const curra = point.raDeg >= RA_THRESHOLD ? point.raDeg - 360 : point.raDeg;\n\n        if (curra > maxx) maxx = curra;\n        if (point.decDeg > maxy) maxy = point.decDeg;\n        if (curra < minx) minx = curra;\n        if (point.decDeg < miny) miny = point.decDeg;\n\n        selpoly.push(new Point2D(curra, point.decDeg));\n      }\n      poly4selection.push(selpoly);\n    }\n\n    return {\n      poly4selection,\n      flag,\n      maxx,\n      maxy,\n      minx,\n      miny,\n    };\n  }\n\n  /** Stereographic projection from 3D point on unit sphere onto plane */\n  static stereographic(point: Point): { x: number; y: number } {\n    const x = Number(point.xyz[0]);\n    const y = Number(point.xyz[1]);\n    const z = Number(point.xyz[2]);\n    return {\n      x: (2 * x) / (1 - z),\n      y: (2 * y) / (1 - z),\n    };\n  }\n\n  static projectIn2D(point: Point): Point2D {\n    const p = GeomUtils.stereographic(point);\n    return new Point2D(p.x, p.y);\n  }\n\n  /**\n   * Robust point-in-polygon (ray casting) using the precomputed selection object.\n   * Works with any of the three flags (0,1,2).\n   */\n  static checkPointInsidePolygon5(selectionObj: SelectionObj, point: Point): boolean {\n    let p0: Point2D;\n\n    if (selectionObj.flag === 0) {\n      p0 = GeomUtils.projectIn2D(point);\n    } else if (selectionObj.flag === 1) {\n      p0 = new Point2D(point.raDeg, point.decDeg);\n    } else {\n      const RA_THRESHOLD = 180;\n      const raShifted = point.raDeg >= RA_THRESHOLD ? point.raDeg - 360 : point.raDeg;\n      p0 = new Point2D(raShifted, point.decDeg);\n    }\n\n    const p1 = new Point2D(p0.x, p0.y + 2 * Math.abs(selectionObj.maxy - selectionObj.miny));\n\n    // quick reject by bbox\n    if (\n      p0.x > selectionObj.maxx ||\n      p0.x < selectionObj.minx ||\n      p0.y > selectionObj.maxy ||\n      p0.y < selectionObj.miny\n    ) {\n      return false;\n    }\n\n    // Ray casting against each sub-polygon\n    for (const currpoly of selectionObj.poly4selection) {\n      let intersections = 0;\n\n      for (let i = 0; i < currpoly.length - 1; i++) {\n        const p2 = currpoly[i];\n        const p3 = currpoly[i + 1];\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      // close the polygon: last with first\n      {\n        const p2 = currpoly[currpoly.length - 1];\n        const p3 = currpoly[0];\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      if (intersections % 2 === 1) {\n        return true; // inside this subpolygon\n      }\n    }\n\n    return false;\n  }\n\n  // Legacy version kept for reference; now typed and using getters\n  static checkPointInsidePolygon4(polygons: Point[][], point: Point): boolean {\n    const p0 = GeomUtils.projectIn2D(point);\n\n    let maxdist = point.raDeg + 15;\n    if (maxdist > 360) maxdist = point.raDeg - 15;\n\n    const p1point = new Point({ raDeg: maxdist, decDeg: point.decDeg }, CoordsType.ASTRO);\n    const p1 = GeomUtils.projectIn2D(p1point);\n\n    for (const currpoly of polygons) {\n      let intersections = 0;\n\n      for (let i = 0; i < currpoly.length - 1; i++) {\n        const p2 = GeomUtils.projectIn2D(currpoly[i]);\n        const p3 = GeomUtils.projectIn2D(currpoly[i + 1]);\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      {\n        const p2 = GeomUtils.projectIn2D(currpoly[currpoly.length - 1]);\n        const p3 = GeomUtils.projectIn2D(currpoly[0]);\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      if (intersections % 2 === 1) return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GeomUtils;","/**\n * @author Fabrizio Giordano (Fab)\n * @param in_radius - number\n * @param in_gl - GL context\n * @param in_position - array of double e.g. [0.0, 0.0, 0.0]\n */\n\ntype DivSet = {\n  div: HTMLDivElement;\n  textNode: Text;\n  style: CSSStyleDeclaration;\n};\n\nclass GridTextHelper {\n  private _divEqContainerElement: HTMLElement | null;\n  private _divHPXContainerElement: HTMLElement | null;\n  private _divSets: DivSet[];\n  private _divSetNdx: number;\n\n  constructor() {\n    this._divEqContainerElement = document.querySelector<HTMLElement>('#gridcoords');\n    this._divHPXContainerElement = document.querySelector<HTMLElement>('#gridhpx');\n    this._divSetNdx = 0;\n    this._divSets = [];\n  }\n\n  initHtml(): void {\n    // Kept for API parity; nothing required here with current logic.\n  }\n\n  resetDivSets(): void {\n    // Hide remaining divs and reset index\n    for (; this._divSetNdx < this._divSets.length; ++this._divSetNdx) {\n      this._divSets[this._divSetNdx].style.display = 'none';\n    }\n    this._divSetNdx = 0;\n  }\n\n  /**\n   * Add / reuse a floating label for HPX coordinates\n   */\n  addHPXDivSet(msg: string, x: number, y: number): void {\n    let divSet = this._divSets[this._divSetNdx++];\n\n    // Create on demand\n    if (!divSet) {\n      const div = document.createElement('div');\n      const textNode = document.createTextNode('');\n      div.className = 'floating-div-ra'; // style like RA tags\n\n      div.appendChild(textNode);\n\n      if (!this._divHPXContainerElement) {\n        this._divHPXContainerElement = document.querySelector<HTMLElement>('#gridhpx');\n      }\n      if (!this._divHPXContainerElement) {\n        // If container is still missing, abort gracefully\n        return;\n      }\n      this._divHPXContainerElement.appendChild(div);\n\n      divSet = { div, textNode, style: div.style };\n      this._divSets.push(divSet);\n    }\n\n    // Show & position\n    divSet.style.display = 'block';\n    divSet.style.left = `${Math.floor(x + 25)}px`;\n    divSet.style.top = `${Math.floor(y)}px`;\n    divSet.textNode.nodeValue = msg;\n  }\n\n  /**\n   * Add / reuse a floating label for Equatorial coords\n   * @param type 'ra' or 'dec'\n   */\n  addEqDivSet(msg: string, x: number, y: number, type: 'ra' | 'dec'): void {\n    let divSet = this._divSets[this._divSetNdx++];\n\n    if (!divSet) {\n      const div = document.createElement('div');\n      const textNode = document.createTextNode('');\n      div.className = type === 'ra' ? 'floating-div-ra' : 'floating-div-dec';\n      div.appendChild(textNode);\n\n      if (!this._divEqContainerElement) {\n        this._divEqContainerElement = document.querySelector<HTMLElement>('#gridcoords');\n      }\n      if (!this._divEqContainerElement) {\n        // If container is still missing, abort gracefully\n        return;\n      }\n      this._divEqContainerElement.appendChild(div);\n\n      divSet = { div, textNode, style: div.style };\n      this._divSets.push(divSet);\n    }\n\n    divSet.style.display = 'block';\n\n    if (type === 'ra') {\n      divSet.style.left = `${Math.floor(x + 25)}px`;\n      divSet.style.top = `${Math.floor(y)}px`;\n    } else {\n      divSet.style.left = `${Math.floor(x)}px`;\n      divSet.style.top = `${Math.floor(y + 25)}px`;\n    }\n\n    divSet.textNode.nodeValue = msg;\n  }\n}\n\n// export const gridTextHelper = new GridTextHelper();\nexport default GridTextHelper;","// ShaderManager.ts\n\nexport type GLSLSource = string;\n\nexport default class ShaderManager {\n  static catalogueVS(): GLSLSource {\n    return `#version 300 es\n    in vec4 aCatPosition;\n    in float a_selected;\n    in float a_pointsize;\n    in float a_brightness;\n\n    out float v_selected;\n    out float v_brightness;\n    out lowp vec4 vColor;  // not used\n\n    uniform mat4 uPMatrix;\n    uniform mat4 uMVMatrix;\n\n    void main() {\n\n      gl_Position = (uPMatrix * uMVMatrix * aCatPosition);\n      gl_PointSize = a_pointsize;\n      v_selected = a_selected;\n      v_brightness = a_brightness;\n    }`;\n  }\n\n  static catalogueFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n    \n    #ifdef GL_OES_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n    #endif\n\n    // https://www.desultoryquest.com/blog/drawing-anti-aliased-circular-points-using-opengl-slash-webgl/\n\n    // precision mediump float;\n\n    in float v_selected;\n    in float v_brightness;\n\n    uniform vec4 u_fragcolor;\n\n    out vec4 fragColor;\n\n    // varying float v_selected;\n    // varying float v_brightness;\n\n    const float EPSILON = 1e-10;\n    \n    vec3 RGBtoHCV(in vec3 rgb) {\n      // RGB [0..1] to Hue-Chroma-Value [0..1]\n      // Based on work by Sam Hocevar and Emil Persson\n      vec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1., 2. / 3.) : vec4(rgb.gb, 0., -1. / 3.);\n      vec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);\n      float c = q.x - min(q.w, q.y);\n      float h = abs((q.w - q.y) / (6. * c + EPSILON) + q.z);\n      return vec3(h, c, q.x);\n    }\n\n    vec3 RGBtoHSL(in vec3 rgb) {\n      // RGB [0..1] to Hue-Saturation-Lightness [0..1]\n      vec3 hcv = RGBtoHCV(rgb);\n      //vec3 hcv = vec3(1., 1., 1.);\n      float z = hcv.z - hcv.y * 0.5;\n      float s = hcv.y / (1. - abs(z * 2. - 1.) + EPSILON);\n      return vec3(hcv.x, s, z);\n    }\n\n    vec3 HUEtoRGB(in float hue){\n      // Hue [0..1] to RGB [0..1]\n      // See http://www.chilliant.com/rgb2hsv.html\n      vec3 rgb = abs(hue * 6. - vec3(3, 2, 4)) * vec3(1, -1, -1) + vec3(-1, 2, 2);\n      return clamp(rgb, 0., 1.);\n    }\n\n    vec3 HSLtoRGB(in vec3 hsl) {\n      // Hue-Saturation-Lightness [0..1] to RGB [0..1]\n      vec3 rgb = HUEtoRGB(hsl.x);\n      float c = (1. - abs(2. * hsl.z - 1.)) * hsl.y;\n      return (rgb - 0.5) * c + hsl.z;\n    }\n  \n    void main() {\n\n      float r = 0.0, delta = 0.0, alpha = 1.0;\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      r = dot(cxy, cxy);\n      if (r > 1.0) {\n        discard;\n      }\n\n      #ifdef GL_OES_standard_derivatives\n        delta = fwidth(r);\n        alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      #endif\n\n      if (v_selected == 1.0){\n        // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0) * (alpha);\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0) * (alpha);\n      } else if (v_selected == 2.0){\n        // gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0) * (alpha);\n        fragColor = vec4(1.0, 1.0, 0.0, 1.0) * (alpha);\n      }else{\n        if (r < 0.4) {\n          discard;\n        }\n        if ( v_brightness >= -1.0 && v_brightness <= 1.0) {\n          // Round-trip RGB->HSL->RGB with time-dependent lightness\n          vec3 hsl = RGBtoHSL(vec3(u_fragcolor));\n          //hsl.z = pow(hsl.z, sin(iTime) + 1.5);\n          // hsl.z = pow(hsl.z, v_brightness + 1.5);\n          hsl.z = pow(hsl.z, v_brightness + 1.5);\n          vec3 hslcolor = HSLtoRGB(hsl);\n          // gl_FragColor = vec4(hslcolor, u_fragcolor[3]) * (alpha);\n          fragColor = vec4(hslcolor, u_fragcolor[3]) * (alpha);\n        } else {\n          // gl_FragColor = u_fragcolor * (alpha);\n          fragColor = u_fragcolor * (alpha);\n        }\n      }\n    }`;\n  }\n\n  static footprintVS(): GLSLSource {\n    return `#version 300 es\n    precision highp float;\n\n    layout(location = 0) in vec4 aCatPosition;\n\n    uniform float u_pointsize;\n    uniform mat4 uMVMatrix;\n    uniform mat4 uPMatrix;\n\n    void main() {\n      gl_Position = uPMatrix * uMVMatrix * aCatPosition;\n      gl_PointSize = u_pointsize;   // Works in WebGL2\n    }`;\n    \n  }\n\n  static footprintFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    uniform vec4 u_fragcolor;\n    out vec4 fragColor;\n\n    void main() {\n      fragColor = u_fragcolor;\n    }`;\n    \n  }\n\n  static hipsVS(): GLSLSource {\n    return `#version 300 es\n    in vec3 aVertexPosition;\n    in vec2 aTextureCoord;\n\n    uniform mat4 uMMatrix;\n    uniform mat4 uVMatrix;\n    uniform mat4 uPMatrix;\n\n    out vec2 vTextureCoord;\n\n    void main() {\n      gl_Position = uPMatrix * uVMatrix * uMMatrix * vec4(aVertexPosition, 1.0);\n      vTextureCoord = aTextureCoord;\n    }`;\n  }\n\n  static hipsNativeFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    uniform sampler2D uSampler0;\n    uniform sampler2D uSampler1;\n    uniform sampler2D uSampler2;\n    uniform sampler2D uSampler3;\n    uniform sampler2D uSampler4;\n    uniform sampler2D uSampler5;\n    uniform sampler2D uSampler6;\n    uniform sampler2D uSampler7;\n\n    uniform float uFactor0;\n    uniform float uFactor1;\n    uniform float uFactor2;\n    uniform float uFactor3;\n    uniform float uFactor4;\n    uniform float uFactor5;\n    uniform float uFactor6;\n    uniform float uFactor7;\n\n    out vec4 fragColor;\n\n    void main() {\n      vec3 finalColor = vec3(0.0);\n\n      if (uFactor0 >= 0.0){\n        vec4 mycolor;\n        #if __VERSION__ > 120\n          vec4 color0 = texture(uSampler0, vTextureCoord);\n        #else\n          vec4 color0 = texture2D(uSampler0, vTextureCoord);\n        #endif\n        mycolor = color0;\n        finalColor += mycolor.rgb * uFactor0;\n      } else if (uFactor7 >= 0.0){\n        finalColor = vec3(1.0, 0.0, 0.0);\n      }\n      fragColor = vec4(finalColor, 1.0);\n    }`;\n  }\n\n  static hipsGrayscaleFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    uniform sampler2D uSampler0;\n    uniform sampler2D uSampler1;\n    uniform sampler2D uSampler2;\n    uniform sampler2D uSampler3;\n    uniform sampler2D uSampler4;\n    uniform sampler2D uSampler5;\n    uniform sampler2D uSampler6;\n    uniform sampler2D uSampler7;\n\n    uniform float uFactor0;\n    uniform float uFactor1;\n    uniform float uFactor2;\n    uniform float uFactor3;\n    uniform float uFactor4;\n    uniform float uFactor5;\n    uniform float uFactor6;\n    uniform float uFactor7;\n\n    out vec4 fragColor;\n\n    void main() {\n      vec3 finalColor = vec3(0.0);\n\n      if (uFactor0 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color0 = texture(uSampler0, vTextureCoord);\n        #else\n          vec4 color0 = texture2D(uSampler0, vTextureCoord);\n        #endif\n        float gray = 0.21 * color0.r + 0.71 * color0.g + 0.07 * color0.b;\n        finalColor = color0.rgb * (1.0 - uFactor0) + vec3(gray) * uFactor0;\n      }\n      if (uFactor1 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color1 = texture(uSampler1, vTextureCoord);\n        #else\n          vec4 color1 = texture2D(uSampler1, vTextureCoord);\n        #endif\n        finalColor += color1.rgb * uFactor1;\n      }\n      if (uFactor2 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color2 = texture(uSampler2, vTextureCoord);\n        #else\n          vec4 color2 = texture2D(uSampler2, vTextureCoord);\n        #endif\n        finalColor += color2.rgb * uFactor2;\n      }\n      if (uFactor3 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color3 = texture(uSampler3, vTextureCoord);\n        #else\n          vec4 color3 = texture2D(uSampler3, vTextureCoord);\n        #endif\n        finalColor += color3.rgb * uFactor3;\n      }\n      if (uFactor4 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color4 = texture(uSampler4, vTextureCoord);\n        #else\n          vec4 color4 = texture2D(uSampler4, vTextureCoord);\n        #endif\n        finalColor += color4.rgb * uFactor4;\n      }\n      if (uFactor5 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color5 = texture(uSampler5, vTextureCoord);\n        #else\n          vec4 color5 = texture2D(uSampler5, vTextureCoord);\n        #endif\n        finalColor += color5.rgb * uFactor5;\n      }\n      if (uFactor6 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color6 = texture(uSampler6, vTextureCoord);\n        #else\n          vec4 color6 = texture2D(uSampler6, vTextureCoord);\n        #endif\n        finalColor += color6.rgb * uFactor6;\n      }\n      if (uFactor7 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color7 = texture(uSampler7, vTextureCoord);\n        #else\n          vec4 color7 = texture2D(uSampler7, vTextureCoord);\n        #endif\n        finalColor += color7.rgb * uFactor7;\n      }\n      fragColor = vec4(finalColor, 1.0);\n    }`;\n  }\n\n  static hipsColorMapFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    // UBO\n    layout (std140) uniform colormap {\n      float r_palette[256];\n      float g_palette[256];\n      float b_palette[256];\n    };\n\n    uniform sampler2D uSampler0;\n    uniform float uFactor0;\n\n    out vec4 fragColor;\n\n    void main() {\n      #if __VERSION__ > 120\n        vec4 color0 = texture(uSampler0, vTextureCoord);\n      #else\n        vec4 color0 = texture2D(uSampler0, vTextureCoord);\n      #endif\n\n      int x = int(color0.r * 255.0);\n      float px = r_palette[x] / 256.0;\n\n      int y = int(color0.g * 255.0);\n      float py = g_palette[y] / 256.0;\n\n      int z = int(color0.b * 255.0);\n      float pz = b_palette[z] / 256.0;\n\n      // uFactor0 reserved for future blending if needed\n      fragColor = vec4(px, py, pz, 1.0);\n    }`;\n  }\n}","/**\n * @author Fabrizio Giordano (Fab77)\n * Enum for coordinate types.\n * @readonly\n * @enum {{name: string, hex: string}}\n */\nclass ColorMap {\n  PLANCK = {\n    // \"r\": new Float32Array([0.00000,0.769231,1.53846,2.30769,3.07692,3.84615,4.61538,5.38462,6.15385,6.92308,7.69231,8.46154,9.23077,10.0000,11.5385,13.0769,14.6154,16.1538,17.6923,19.2308,20.7692,22.3077,23.8462,25.3846,26.9231,28.4615,30.0000,33.8462,37.6923,41.5385,45.3846,49.2308,53.0769,56.9231,60.7692,64.6154,68.4615,72.3077,76.1538,80.0000,88.5385,97.0769,105.615,114.154,122.692,131.231,139.769,148.308,156.846,165.385,173.923,182.462,191.000,193.846,196.692,199.538,202.385,205.231,208.077,210.923,213.769,216.615,219.462,222.308,225.154,228.000,229.182,230.364,231.545,232.727,233.909,235.091,236.273,237.455,238.636,239.818,241.000,241.000,241.364,241.727,242.091,242.455,242.818,243.182,243.545,243.909,244.273,244.636,245.000,245.231,245.462,245.692,245.923,246.154,246.385,246.615,246.846,247.077,247.308,247.538,247.769,248.000,248.146,248.292,248.438,248.585,248.731,248.877,249.023,249.169,249.315,249.462,249.608,249.754,249.900,249.312,248.723,248.135,247.546,246.958,246.369,245.781,245.192,244.604,244.015,243.427,242.838,242.250,239.308,236.365,233.423,230.481,227.538,224.596,221.654,218.712,215.769,212.827,209.885,206.942,204.000,201.000,198.000,195.000,192.000,189.000,186.000,183.000,180.000,177.000,174.000,171.000,168.000,165.000,161.077,157.154,153.231,149.308,145.385,141.462,137.538,133.615,129.692,125.769,121.846,117.923,114.000,115.038,116.077,117.115,118.154,119.192,120.231,121.269,122.308,123.346,124.385,125.423,126.462,127.500,131.423,135.346,139.269,143.192,147.115,151.038,154.962,158.885,162.808,166.731,170.654,174.577,178.500,180.462,182.423,184.385,186.346,188.308,190.269,192.231,194.192,196.154,198.115,200.077,202.038,204.000,205.962,207.923,209.885,211.846,213.808,215.769,217.731,219.692,221.654,223.615,225.577,227.538,229.500,230.481,231.462,232.442,233.423,234.404,235.385,236.365,237.346,238.327,239.308,240.288,241.269,242.250,242.642,243.035,243.427,243.819,244.212,244.604,244.996,245.388,245.781,246.173,246.565,246.958,247.350,247.814,248.277,248.741,249.205,249.668,250.132,250.595,251.059,251.523,251.986,252.450]),\n    // \"g\": new Float32Array([0.00000,1.53846,3.07692,4.61538,6.15385,7.69231,9.23077,10.7692,12.3077,13.8462,15.3846,16.9231,18.4615,20.0000,32.6154,45.2308,57.8462,70.4615,83.0769,95.6923,108.308,120.923,133.538,146.154,158.769,171.385,184.000,187.923,191.846,195.769,199.692,203.615,207.538,211.462,215.385,219.308,223.231,227.154,231.077,235.000,235.308,235.615,235.923,236.231,236.538,236.846,237.154,237.462,237.769,238.077,238.385,238.692,239.000,239.077,239.154,239.231,239.308,239.385,239.462,239.538,239.615,239.692,239.769,239.846,239.923,240.000,240.091,240.182,240.273,240.364,240.455,240.545,240.636,240.727,240.818,240.909,241.000,241.000,240.909,240.818,240.727,240.636,240.545,240.455,240.364,240.273,240.182,240.091,240.000,239.615,239.231,238.846,238.462,238.077,237.692,237.308,236.923,236.538,236.154,235.769,235.385,235.000,232.615,230.231,227.846,225.462,223.077,220.692,218.308,215.923,213.538,211.154,208.769,206.385,204.000,200.077,196.154,192.231,188.308,184.385,180.462,176.538,172.615,168.692,164.769,160.846,156.923,153.000,147.115,141.231,135.346,129.462,123.577,117.692,111.808,105.923,100.038,94.1538,88.2692,82.3846,76.5000,73.0769,69.6538,66.2308,62.8077,59.3846,55.9615,52.5385,49.1154,45.6923,42.2692,38.8462,35.4231,32.0000,29.5385,27.0769,24.6154,22.1538,19.6923,17.2308,14.7692,12.3077,9.84615,7.38462,4.92308,2.46154,0.00000,9.80769,19.6154,29.4231,39.2308,49.0385,58.8462,68.6538,78.4615,88.2692,98.0769,107.885,117.692,127.500,131.423,135.346,139.269,143.192,147.115,151.038,154.962,158.885,162.808,166.731,170.654,174.577,178.500,180.462,182.423,184.385,186.346,188.308,190.269,192.231,194.192,196.154,198.115,200.077,202.038,204.000,205.962,207.923,209.885,211.846,213.808,215.769,217.731,219.692,221.654,223.615,225.577,227.538,229.500,230.481,231.462,232.442,233.423,234.404,235.385,236.365,237.346,238.327,239.308,240.288,241.269,242.250,242.642,243.035,243.427,243.819,244.212,244.604,244.996,245.388,245.781,246.173,246.565,246.958,247.350,247.814,248.277,248.741,249.205,249.668,250.132,250.595,251.059,251.523,251.986,252.450]),\n    // \"b\": new Float32Array([255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,254.615,254.231,253.846,253.462,253.077,252.692,252.308,251.923,251.538,251.154,250.769,250.385,250.000,249.615,249.231,248.846,248.462,248.077,247.692,247.308,246.923,246.538,246.154,245.769,245.385,245.000,242.000,239.000,236.000,233.000,230.000,227.000,224.000,221.000,218.000,215.000,212.000,212.000,208.636,205.273,201.909,198.545,195.182,191.818,188.455,185.091,181.727,178.364,175.000,171.538,168.077,164.615,161.154,157.692,154.231,150.769,147.308,143.846,140.385,136.923,133.462,130.000,122.942,115.885,108.827,101.769,94.7115,87.6539,80.5962,73.5385,66.4808,59.4231,52.3654,45.3077,38.2500,36.2885,34.3269,32.3654,30.4038,28.4423,26.4808,24.5192,22.5577,20.5962,18.6346,16.6731,14.7115,12.7500,11.7692,10.7885,9.80769,8.82692,7.84615,6.86539,5.88461,4.90385,3.92308,2.94231,1.96154,0.980769,0.00000,2.46154,4.92308,7.38462,9.84616,12.3077,14.7692,17.2308,19.6923,22.1538,24.6154,27.0769,29.5385,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,41.3077,50.6154,59.9231,69.2308,78.5385,87.8462,97.1539,106.462,115.769,125.077,134.385,143.692,153.000,156.923,160.846,164.769,168.692,172.615,176.538,180.462,184.385,188.308,192.231,196.154,200.077,204.000,205.962,207.923,209.885,211.846,213.808,215.769,217.731,219.692,221.654,223.615,225.577,227.538,229.500,230.481,231.462,232.442,233.423,234.404,235.385,236.365,237.346,238.327,239.308,240.288,241.269,242.250,242.838,243.427,244.015,244.604,245.192,245.781,246.369,246.958,247.546,248.135,248.723,249.312,249.900,250.096,250.292,250.488,250.685,250.881,251.077,251.273,251.469,251.665,251.862,252.058,252.254,252.450,252.682,252.914,253.145,253.377,253.609,253.841,254.073,254.305,254.536,254.768,255.000])\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.769231, 0.0, 0.0, 0.0, 1.53846, 0.0, 0.0, 0.0, 2.30769, 0.0, 0.0, 0.0,\n      3.07692, 0.0, 0.0, 0.0, 3.84615, 0.0, 0.0, 0.0, 4.61538, 0.0, 0.0, 0.0, 5.38462, 0.0, 0.0,\n      0.0, 6.15385, 0.0, 0.0, 0.0, 6.92308, 0.0, 0.0, 0.0, 7.69231, 0.0, 0.0, 0.0, 8.46154, 0.0,\n      0.0, 0.0, 9.23077, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 11.5385, 0.0, 0.0, 0.0, 13.0769, 0.0,\n      0.0, 0.0, 14.6154, 0.0, 0.0, 0.0, 16.1538, 0.0, 0.0, 0.0, 17.6923, 0.0, 0.0, 0.0, 19.2308,\n      0.0, 0.0, 0.0, 20.7692, 0.0, 0.0, 0.0, 22.3077, 0.0, 0.0, 0.0, 23.8462, 0.0, 0.0, 0.0,\n      25.3846, 0.0, 0.0, 0.0, 26.9231, 0.0, 0.0, 0.0, 28.4615, 0.0, 0.0, 0.0, 30.0, 0.0, 0.0, 0.0,\n      33.8462, 0.0, 0.0, 0.0, 37.6923, 0.0, 0.0, 0.0, 41.5385, 0.0, 0.0, 0.0, 45.3846, 0.0, 0.0,\n      0.0, 49.2308, 0.0, 0.0, 0.0, 53.0769, 0.0, 0.0, 0.0, 56.9231, 0.0, 0.0, 0.0, 60.7692, 0.0,\n      0.0, 0.0, 64.6154, 0.0, 0.0, 0.0, 68.4615, 0.0, 0.0, 0.0, 72.3077, 0.0, 0.0, 0.0, 76.1538,\n      0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 88.5385, 0.0, 0.0, 0.0, 97.0769, 0.0, 0.0, 0.0, 105.615,\n      0.0, 0.0, 0.0, 114.154, 0.0, 0.0, 0.0, 122.692, 0.0, 0.0, 0.0, 131.231, 0.0, 0.0, 0.0,\n      139.769, 0.0, 0.0, 0.0, 148.308, 0.0, 0.0, 0.0, 156.846, 0.0, 0.0, 0.0, 165.385, 0.0, 0.0,\n      0.0, 173.923, 0.0, 0.0, 0.0, 182.462, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 193.846, 0.0, 0.0,\n      0.0, 196.692, 0.0, 0.0, 0.0, 199.538, 0.0, 0.0, 0.0, 202.385, 0.0, 0.0, 0.0, 205.231, 0.0,\n      0.0, 0.0, 208.077, 0.0, 0.0, 0.0, 210.923, 0.0, 0.0, 0.0, 213.769, 0.0, 0.0, 0.0, 216.615,\n      0.0, 0.0, 0.0, 219.462, 0.0, 0.0, 0.0, 222.308, 0.0, 0.0, 0.0, 225.154, 0.0, 0.0, 0.0, 228.0,\n      0.0, 0.0, 0.0, 229.182, 0.0, 0.0, 0.0, 230.364, 0.0, 0.0, 0.0, 231.545, 0.0, 0.0, 0.0,\n      232.727, 0.0, 0.0, 0.0, 233.909, 0.0, 0.0, 0.0, 235.091, 0.0, 0.0, 0.0, 236.273, 0.0, 0.0,\n      0.0, 237.455, 0.0, 0.0, 0.0, 238.636, 0.0, 0.0, 0.0, 239.818, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0,\n      0.0, 241.0, 0.0, 0.0, 0.0, 241.364, 0.0, 0.0, 0.0, 241.727, 0.0, 0.0, 0.0, 242.091, 0.0, 0.0,\n      0.0, 242.455, 0.0, 0.0, 0.0, 242.818, 0.0, 0.0, 0.0, 243.182, 0.0, 0.0, 0.0, 243.545, 0.0,\n      0.0, 0.0, 243.909, 0.0, 0.0, 0.0, 244.273, 0.0, 0.0, 0.0, 244.636, 0.0, 0.0, 0.0, 245.0, 0.0,\n      0.0, 0.0, 245.231, 0.0, 0.0, 0.0, 245.462, 0.0, 0.0, 0.0, 245.692, 0.0, 0.0, 0.0, 245.923,\n      0.0, 0.0, 0.0, 246.154, 0.0, 0.0, 0.0, 246.385, 0.0, 0.0, 0.0, 246.615, 0.0, 0.0, 0.0,\n      246.846, 0.0, 0.0, 0.0, 247.077, 0.0, 0.0, 0.0, 247.308, 0.0, 0.0, 0.0, 247.538, 0.0, 0.0,\n      0.0, 247.769, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 248.146, 0.0, 0.0, 0.0, 248.292, 0.0, 0.0,\n      0.0, 248.438, 0.0, 0.0, 0.0, 248.585, 0.0, 0.0, 0.0, 248.731, 0.0, 0.0, 0.0, 248.877, 0.0,\n      0.0, 0.0, 249.023, 0.0, 0.0, 0.0, 249.169, 0.0, 0.0, 0.0, 249.315, 0.0, 0.0, 0.0, 249.462,\n      0.0, 0.0, 0.0, 249.608, 0.0, 0.0, 0.0, 249.754, 0.0, 0.0, 0.0, 249.9, 0.0, 0.0, 0.0, 249.312,\n      0.0, 0.0, 0.0, 248.723, 0.0, 0.0, 0.0, 248.135, 0.0, 0.0, 0.0, 247.546, 0.0, 0.0, 0.0,\n      246.958, 0.0, 0.0, 0.0, 246.369, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 245.192, 0.0, 0.0,\n      0.0, 244.604, 0.0, 0.0, 0.0, 244.015, 0.0, 0.0, 0.0, 243.427, 0.0, 0.0, 0.0, 242.838, 0.0,\n      0.0, 0.0, 242.25, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0, 233.423, 0.0,\n      0.0, 0.0, 230.481, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 224.596, 0.0, 0.0, 0.0, 221.654,\n      0.0, 0.0, 0.0, 218.712, 0.0, 0.0, 0.0, 215.769, 0.0, 0.0, 0.0, 212.827, 0.0, 0.0, 0.0,\n      209.885, 0.0, 0.0, 0.0, 206.942, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0,\n      198.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 192.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 186.0,\n      0.0, 0.0, 0.0, 183.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0, 177.0, 0.0, 0.0, 0.0, 174.0, 0.0,\n      0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 168.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 161.077, 0.0, 0.0,\n      0.0, 157.154, 0.0, 0.0, 0.0, 153.231, 0.0, 0.0, 0.0, 149.308, 0.0, 0.0, 0.0, 145.385, 0.0,\n      0.0, 0.0, 141.462, 0.0, 0.0, 0.0, 137.538, 0.0, 0.0, 0.0, 133.615, 0.0, 0.0, 0.0, 129.692,\n      0.0, 0.0, 0.0, 125.769, 0.0, 0.0, 0.0, 121.846, 0.0, 0.0, 0.0, 117.923, 0.0, 0.0, 0.0, 114.0,\n      0.0, 0.0, 0.0, 115.038, 0.0, 0.0, 0.0, 116.077, 0.0, 0.0, 0.0, 117.115, 0.0, 0.0, 0.0,\n      118.154, 0.0, 0.0, 0.0, 119.192, 0.0, 0.0, 0.0, 120.231, 0.0, 0.0, 0.0, 121.269, 0.0, 0.0,\n      0.0, 122.308, 0.0, 0.0, 0.0, 123.346, 0.0, 0.0, 0.0, 124.385, 0.0, 0.0, 0.0, 125.423, 0.0,\n      0.0, 0.0, 126.462, 0.0, 0.0, 0.0, 127.5, 0.0, 0.0, 0.0, 131.423, 0.0, 0.0, 0.0, 135.346, 0.0,\n      0.0, 0.0, 139.269, 0.0, 0.0, 0.0, 143.192, 0.0, 0.0, 0.0, 147.115, 0.0, 0.0, 0.0, 151.038,\n      0.0, 0.0, 0.0, 154.962, 0.0, 0.0, 0.0, 158.885, 0.0, 0.0, 0.0, 162.808, 0.0, 0.0, 0.0,\n      166.731, 0.0, 0.0, 0.0, 170.654, 0.0, 0.0, 0.0, 174.577, 0.0, 0.0, 0.0, 178.5, 0.0, 0.0, 0.0,\n      180.462, 0.0, 0.0, 0.0, 182.423, 0.0, 0.0, 0.0, 184.385, 0.0, 0.0, 0.0, 186.346, 0.0, 0.0,\n      0.0, 188.308, 0.0, 0.0, 0.0, 190.269, 0.0, 0.0, 0.0, 192.231, 0.0, 0.0, 0.0, 194.192, 0.0,\n      0.0, 0.0, 196.154, 0.0, 0.0, 0.0, 198.115, 0.0, 0.0, 0.0, 200.077, 0.0, 0.0, 0.0, 202.038,\n      0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.962, 0.0, 0.0, 0.0, 207.923, 0.0, 0.0, 0.0, 209.885,\n      0.0, 0.0, 0.0, 211.846, 0.0, 0.0, 0.0, 213.808, 0.0, 0.0, 0.0, 215.769, 0.0, 0.0, 0.0,\n      217.731, 0.0, 0.0, 0.0, 219.692, 0.0, 0.0, 0.0, 221.654, 0.0, 0.0, 0.0, 223.615, 0.0, 0.0,\n      0.0, 225.577, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 229.5, 0.0, 0.0, 0.0, 230.481, 0.0, 0.0,\n      0.0, 231.462, 0.0, 0.0, 0.0, 232.442, 0.0, 0.0, 0.0, 233.423, 0.0, 0.0, 0.0, 234.404, 0.0,\n      0.0, 0.0, 235.385, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0, 237.346, 0.0, 0.0, 0.0, 238.327,\n      0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 240.288, 0.0, 0.0, 0.0, 241.269, 0.0, 0.0, 0.0, 242.25,\n      0.0, 0.0, 0.0, 242.642, 0.0, 0.0, 0.0, 243.035, 0.0, 0.0, 0.0, 243.427, 0.0, 0.0, 0.0,\n      243.819, 0.0, 0.0, 0.0, 244.212, 0.0, 0.0, 0.0, 244.604, 0.0, 0.0, 0.0, 244.996, 0.0, 0.0,\n      0.0, 245.388, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 246.173, 0.0, 0.0, 0.0, 246.565, 0.0,\n      0.0, 0.0, 246.958, 0.0, 0.0, 0.0, 247.35, 0.0, 0.0, 0.0, 247.814, 0.0, 0.0, 0.0, 248.277, 0.0,\n      0.0, 0.0, 248.741, 0.0, 0.0, 0.0, 249.205, 0.0, 0.0, 0.0, 249.668, 0.0, 0.0, 0.0, 250.132,\n      0.0, 0.0, 0.0, 250.595, 0.0, 0.0, 0.0, 251.059, 0.0, 0.0, 0.0, 251.523, 0.0, 0.0, 0.0,\n      251.986, 0.0, 0.0, 0.0, 252.45, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 1.53846, 0.0, 0.0, 0.0, 3.07692, 0.0, 0.0, 0.0, 4.61538, 0.0, 0.0, 0.0,\n      6.15385, 0.0, 0.0, 0.0, 7.69231, 0.0, 0.0, 0.0, 9.23077, 0.0, 0.0, 0.0, 10.7692, 0.0, 0.0,\n      0.0, 12.3077, 0.0, 0.0, 0.0, 13.8462, 0.0, 0.0, 0.0, 15.3846, 0.0, 0.0, 0.0, 16.9231, 0.0,\n      0.0, 0.0, 18.4615, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 32.6154, 0.0, 0.0, 0.0, 45.2308, 0.0,\n      0.0, 0.0, 57.8462, 0.0, 0.0, 0.0, 70.4615, 0.0, 0.0, 0.0, 83.0769, 0.0, 0.0, 0.0, 95.6923,\n      0.0, 0.0, 0.0, 108.308, 0.0, 0.0, 0.0, 120.923, 0.0, 0.0, 0.0, 133.538, 0.0, 0.0, 0.0,\n      146.154, 0.0, 0.0, 0.0, 158.769, 0.0, 0.0, 0.0, 171.385, 0.0, 0.0, 0.0, 184.0, 0.0, 0.0, 0.0,\n      187.923, 0.0, 0.0, 0.0, 191.846, 0.0, 0.0, 0.0, 195.769, 0.0, 0.0, 0.0, 199.692, 0.0, 0.0,\n      0.0, 203.615, 0.0, 0.0, 0.0, 207.538, 0.0, 0.0, 0.0, 211.462, 0.0, 0.0, 0.0, 215.385, 0.0,\n      0.0, 0.0, 219.308, 0.0, 0.0, 0.0, 223.231, 0.0, 0.0, 0.0, 227.154, 0.0, 0.0, 0.0, 231.077,\n      0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 235.308, 0.0, 0.0, 0.0, 235.615, 0.0, 0.0, 0.0, 235.923,\n      0.0, 0.0, 0.0, 236.231, 0.0, 0.0, 0.0, 236.538, 0.0, 0.0, 0.0, 236.846, 0.0, 0.0, 0.0,\n      237.154, 0.0, 0.0, 0.0, 237.462, 0.0, 0.0, 0.0, 237.769, 0.0, 0.0, 0.0, 238.077, 0.0, 0.0,\n      0.0, 238.385, 0.0, 0.0, 0.0, 238.692, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.077, 0.0, 0.0,\n      0.0, 239.154, 0.0, 0.0, 0.0, 239.231, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 239.385, 0.0,\n      0.0, 0.0, 239.462, 0.0, 0.0, 0.0, 239.538, 0.0, 0.0, 0.0, 239.615, 0.0, 0.0, 0.0, 239.692,\n      0.0, 0.0, 0.0, 239.769, 0.0, 0.0, 0.0, 239.846, 0.0, 0.0, 0.0, 239.923, 0.0, 0.0, 0.0, 240.0,\n      0.0, 0.0, 0.0, 240.091, 0.0, 0.0, 0.0, 240.182, 0.0, 0.0, 0.0, 240.273, 0.0, 0.0, 0.0,\n      240.364, 0.0, 0.0, 0.0, 240.455, 0.0, 0.0, 0.0, 240.545, 0.0, 0.0, 0.0, 240.636, 0.0, 0.0,\n      0.0, 240.727, 0.0, 0.0, 0.0, 240.818, 0.0, 0.0, 0.0, 240.909, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0,\n      0.0, 241.0, 0.0, 0.0, 0.0, 240.909, 0.0, 0.0, 0.0, 240.818, 0.0, 0.0, 0.0, 240.727, 0.0, 0.0,\n      0.0, 240.636, 0.0, 0.0, 0.0, 240.545, 0.0, 0.0, 0.0, 240.455, 0.0, 0.0, 0.0, 240.364, 0.0,\n      0.0, 0.0, 240.273, 0.0, 0.0, 0.0, 240.182, 0.0, 0.0, 0.0, 240.091, 0.0, 0.0, 0.0, 240.0, 0.0,\n      0.0, 0.0, 239.615, 0.0, 0.0, 0.0, 239.231, 0.0, 0.0, 0.0, 238.846, 0.0, 0.0, 0.0, 238.462,\n      0.0, 0.0, 0.0, 238.077, 0.0, 0.0, 0.0, 237.692, 0.0, 0.0, 0.0, 237.308, 0.0, 0.0, 0.0,\n      236.923, 0.0, 0.0, 0.0, 236.538, 0.0, 0.0, 0.0, 236.154, 0.0, 0.0, 0.0, 235.769, 0.0, 0.0,\n      0.0, 235.385, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 232.615, 0.0, 0.0, 0.0, 230.231, 0.0, 0.0,\n      0.0, 227.846, 0.0, 0.0, 0.0, 225.462, 0.0, 0.0, 0.0, 223.077, 0.0, 0.0, 0.0, 220.692, 0.0,\n      0.0, 0.0, 218.308, 0.0, 0.0, 0.0, 215.923, 0.0, 0.0, 0.0, 213.538, 0.0, 0.0, 0.0, 211.154,\n      0.0, 0.0, 0.0, 208.769, 0.0, 0.0, 0.0, 206.385, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 200.077,\n      0.0, 0.0, 0.0, 196.154, 0.0, 0.0, 0.0, 192.231, 0.0, 0.0, 0.0, 188.308, 0.0, 0.0, 0.0,\n      184.385, 0.0, 0.0, 0.0, 180.462, 0.0, 0.0, 0.0, 176.538, 0.0, 0.0, 0.0, 172.615, 0.0, 0.0,\n      0.0, 168.692, 0.0, 0.0, 0.0, 164.769, 0.0, 0.0, 0.0, 160.846, 0.0, 0.0, 0.0, 156.923, 0.0,\n      0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 147.115, 0.0, 0.0, 0.0, 141.231, 0.0, 0.0, 0.0, 135.346, 0.0,\n      0.0, 0.0, 129.462, 0.0, 0.0, 0.0, 123.577, 0.0, 0.0, 0.0, 117.692, 0.0, 0.0, 0.0, 111.808,\n      0.0, 0.0, 0.0, 105.923, 0.0, 0.0, 0.0, 100.038, 0.0, 0.0, 0.0, 94.1538, 0.0, 0.0, 0.0,\n      88.2692, 0.0, 0.0, 0.0, 82.3846, 0.0, 0.0, 0.0, 76.5, 0.0, 0.0, 0.0, 73.0769, 0.0, 0.0, 0.0,\n      69.6538, 0.0, 0.0, 0.0, 66.2308, 0.0, 0.0, 0.0, 62.8077, 0.0, 0.0, 0.0, 59.3846, 0.0, 0.0,\n      0.0, 55.9615, 0.0, 0.0, 0.0, 52.5385, 0.0, 0.0, 0.0, 49.1154, 0.0, 0.0, 0.0, 45.6923, 0.0,\n      0.0, 0.0, 42.2692, 0.0, 0.0, 0.0, 38.8462, 0.0, 0.0, 0.0, 35.4231, 0.0, 0.0, 0.0, 32.0, 0.0,\n      0.0, 0.0, 29.5385, 0.0, 0.0, 0.0, 27.0769, 0.0, 0.0, 0.0, 24.6154, 0.0, 0.0, 0.0, 22.1538,\n      0.0, 0.0, 0.0, 19.6923, 0.0, 0.0, 0.0, 17.2308, 0.0, 0.0, 0.0, 14.7692, 0.0, 0.0, 0.0,\n      12.3077, 0.0, 0.0, 0.0, 9.84615, 0.0, 0.0, 0.0, 7.38462, 0.0, 0.0, 0.0, 4.92308, 0.0, 0.0,\n      0.0, 2.46154, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.80769, 0.0, 0.0, 0.0, 19.6154, 0.0, 0.0,\n      0.0, 29.4231, 0.0, 0.0, 0.0, 39.2308, 0.0, 0.0, 0.0, 49.0385, 0.0, 0.0, 0.0, 58.8462, 0.0,\n      0.0, 0.0, 68.6538, 0.0, 0.0, 0.0, 78.4615, 0.0, 0.0, 0.0, 88.2692, 0.0, 0.0, 0.0, 98.0769,\n      0.0, 0.0, 0.0, 107.885, 0.0, 0.0, 0.0, 117.692, 0.0, 0.0, 0.0, 127.5, 0.0, 0.0, 0.0, 131.423,\n      0.0, 0.0, 0.0, 135.346, 0.0, 0.0, 0.0, 139.269, 0.0, 0.0, 0.0, 143.192, 0.0, 0.0, 0.0,\n      147.115, 0.0, 0.0, 0.0, 151.038, 0.0, 0.0, 0.0, 154.962, 0.0, 0.0, 0.0, 158.885, 0.0, 0.0,\n      0.0, 162.808, 0.0, 0.0, 0.0, 166.731, 0.0, 0.0, 0.0, 170.654, 0.0, 0.0, 0.0, 174.577, 0.0,\n      0.0, 0.0, 178.5, 0.0, 0.0, 0.0, 180.462, 0.0, 0.0, 0.0, 182.423, 0.0, 0.0, 0.0, 184.385, 0.0,\n      0.0, 0.0, 186.346, 0.0, 0.0, 0.0, 188.308, 0.0, 0.0, 0.0, 190.269, 0.0, 0.0, 0.0, 192.231,\n      0.0, 0.0, 0.0, 194.192, 0.0, 0.0, 0.0, 196.154, 0.0, 0.0, 0.0, 198.115, 0.0, 0.0, 0.0,\n      200.077, 0.0, 0.0, 0.0, 202.038, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.962, 0.0, 0.0, 0.0,\n      207.923, 0.0, 0.0, 0.0, 209.885, 0.0, 0.0, 0.0, 211.846, 0.0, 0.0, 0.0, 213.808, 0.0, 0.0,\n      0.0, 215.769, 0.0, 0.0, 0.0, 217.731, 0.0, 0.0, 0.0, 219.692, 0.0, 0.0, 0.0, 221.654, 0.0,\n      0.0, 0.0, 223.615, 0.0, 0.0, 0.0, 225.577, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 229.5, 0.0,\n      0.0, 0.0, 230.481, 0.0, 0.0, 0.0, 231.462, 0.0, 0.0, 0.0, 232.442, 0.0, 0.0, 0.0, 233.423,\n      0.0, 0.0, 0.0, 234.404, 0.0, 0.0, 0.0, 235.385, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0,\n      237.346, 0.0, 0.0, 0.0, 238.327, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 240.288, 0.0, 0.0,\n      0.0, 241.269, 0.0, 0.0, 0.0, 242.25, 0.0, 0.0, 0.0, 242.642, 0.0, 0.0, 0.0, 243.035, 0.0, 0.0,\n      0.0, 243.427, 0.0, 0.0, 0.0, 243.819, 0.0, 0.0, 0.0, 244.212, 0.0, 0.0, 0.0, 244.604, 0.0,\n      0.0, 0.0, 244.996, 0.0, 0.0, 0.0, 245.388, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 246.173,\n      0.0, 0.0, 0.0, 246.565, 0.0, 0.0, 0.0, 246.958, 0.0, 0.0, 0.0, 247.35, 0.0, 0.0, 0.0, 247.814,\n      0.0, 0.0, 0.0, 248.277, 0.0, 0.0, 0.0, 248.741, 0.0, 0.0, 0.0, 249.205, 0.0, 0.0, 0.0,\n      249.668, 0.0, 0.0, 0.0, 250.132, 0.0, 0.0, 0.0, 250.595, 0.0, 0.0, 0.0, 251.059, 0.0, 0.0,\n      0.0, 251.523, 0.0, 0.0, 0.0, 251.986, 0.0, 0.0, 0.0, 252.45, 0.0, 0.0, 0.0\n    ]),\n    b: new Float32Array([\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 254.615, 0.0, 0.0, 0.0, 254.231, 0.0, 0.0, 0.0, 253.846,\n      0.0, 0.0, 0.0, 253.462, 0.0, 0.0, 0.0, 253.077, 0.0, 0.0, 0.0, 252.692, 0.0, 0.0, 0.0,\n      252.308, 0.0, 0.0, 0.0, 251.923, 0.0, 0.0, 0.0, 251.538, 0.0, 0.0, 0.0, 251.154, 0.0, 0.0,\n      0.0, 250.769, 0.0, 0.0, 0.0, 250.385, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 249.615, 0.0, 0.0,\n      0.0, 249.231, 0.0, 0.0, 0.0, 248.846, 0.0, 0.0, 0.0, 248.462, 0.0, 0.0, 0.0, 248.077, 0.0,\n      0.0, 0.0, 247.692, 0.0, 0.0, 0.0, 247.308, 0.0, 0.0, 0.0, 246.923, 0.0, 0.0, 0.0, 246.538,\n      0.0, 0.0, 0.0, 246.154, 0.0, 0.0, 0.0, 245.769, 0.0, 0.0, 0.0, 245.385, 0.0, 0.0, 0.0, 245.0,\n      0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 233.0, 0.0,\n      0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0,\n      0.0, 218.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0,\n      208.636, 0.0, 0.0, 0.0, 205.273, 0.0, 0.0, 0.0, 201.909, 0.0, 0.0, 0.0, 198.545, 0.0, 0.0,\n      0.0, 195.182, 0.0, 0.0, 0.0, 191.818, 0.0, 0.0, 0.0, 188.455, 0.0, 0.0, 0.0, 185.091, 0.0,\n      0.0, 0.0, 181.727, 0.0, 0.0, 0.0, 178.364, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0, 171.538, 0.0,\n      0.0, 0.0, 168.077, 0.0, 0.0, 0.0, 164.615, 0.0, 0.0, 0.0, 161.154, 0.0, 0.0, 0.0, 157.692,\n      0.0, 0.0, 0.0, 154.231, 0.0, 0.0, 0.0, 150.769, 0.0, 0.0, 0.0, 147.308, 0.0, 0.0, 0.0,\n      143.846, 0.0, 0.0, 0.0, 140.385, 0.0, 0.0, 0.0, 136.923, 0.0, 0.0, 0.0, 133.462, 0.0, 0.0,\n      0.0, 130.0, 0.0, 0.0, 0.0, 122.942, 0.0, 0.0, 0.0, 115.885, 0.0, 0.0, 0.0, 108.827, 0.0, 0.0,\n      0.0, 101.769, 0.0, 0.0, 0.0, 94.7115, 0.0, 0.0, 0.0, 87.6539, 0.0, 0.0, 0.0, 80.5962, 0.0,\n      0.0, 0.0, 73.5385, 0.0, 0.0, 0.0, 66.4808, 0.0, 0.0, 0.0, 59.4231, 0.0, 0.0, 0.0, 52.3654,\n      0.0, 0.0, 0.0, 45.3077, 0.0, 0.0, 0.0, 38.25, 0.0, 0.0, 0.0, 36.2885, 0.0, 0.0, 0.0, 34.3269,\n      0.0, 0.0, 0.0, 32.3654, 0.0, 0.0, 0.0, 30.4038, 0.0, 0.0, 0.0, 28.4423, 0.0, 0.0, 0.0,\n      26.4808, 0.0, 0.0, 0.0, 24.5192, 0.0, 0.0, 0.0, 22.5577, 0.0, 0.0, 0.0, 20.5962, 0.0, 0.0,\n      0.0, 18.6346, 0.0, 0.0, 0.0, 16.6731, 0.0, 0.0, 0.0, 14.7115, 0.0, 0.0, 0.0, 12.75, 0.0, 0.0,\n      0.0, 11.7692, 0.0, 0.0, 0.0, 10.7885, 0.0, 0.0, 0.0, 9.80769, 0.0, 0.0, 0.0, 8.82692, 0.0,\n      0.0, 0.0, 7.84615, 0.0, 0.0, 0.0, 6.86539, 0.0, 0.0, 0.0, 5.88461, 0.0, 0.0, 0.0, 4.90385,\n      0.0, 0.0, 0.0, 3.92308, 0.0, 0.0, 0.0, 2.94231, 0.0, 0.0, 0.0, 1.96154, 0.0, 0.0, 0.0,\n      0.980769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.46154, 0.0, 0.0, 0.0, 4.92308, 0.0, 0.0, 0.0,\n      7.38462, 0.0, 0.0, 0.0, 9.84616, 0.0, 0.0, 0.0, 12.3077, 0.0, 0.0, 0.0, 14.7692, 0.0, 0.0,\n      0.0, 17.2308, 0.0, 0.0, 0.0, 19.6923, 0.0, 0.0, 0.0, 22.1538, 0.0, 0.0, 0.0, 24.6154, 0.0,\n      0.0, 0.0, 27.0769, 0.0, 0.0, 0.0, 29.5385, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0,\n      0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0,\n      0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0,\n      0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 41.3077, 0.0, 0.0, 0.0,\n      50.6154, 0.0, 0.0, 0.0, 59.9231, 0.0, 0.0, 0.0, 69.2308, 0.0, 0.0, 0.0, 78.5385, 0.0, 0.0,\n      0.0, 87.8462, 0.0, 0.0, 0.0, 97.1539, 0.0, 0.0, 0.0, 106.462, 0.0, 0.0, 0.0, 115.769, 0.0,\n      0.0, 0.0, 125.077, 0.0, 0.0, 0.0, 134.385, 0.0, 0.0, 0.0, 143.692, 0.0, 0.0, 0.0, 153.0, 0.0,\n      0.0, 0.0, 156.923, 0.0, 0.0, 0.0, 160.846, 0.0, 0.0, 0.0, 164.769, 0.0, 0.0, 0.0, 168.692,\n      0.0, 0.0, 0.0, 172.615, 0.0, 0.0, 0.0, 176.538, 0.0, 0.0, 0.0, 180.462, 0.0, 0.0, 0.0,\n      184.385, 0.0, 0.0, 0.0, 188.308, 0.0, 0.0, 0.0, 192.231, 0.0, 0.0, 0.0, 196.154, 0.0, 0.0,\n      0.0, 200.077, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.962, 0.0, 0.0, 0.0, 207.923, 0.0, 0.0,\n      0.0, 209.885, 0.0, 0.0, 0.0, 211.846, 0.0, 0.0, 0.0, 213.808, 0.0, 0.0, 0.0, 215.769, 0.0,\n      0.0, 0.0, 217.731, 0.0, 0.0, 0.0, 219.692, 0.0, 0.0, 0.0, 221.654, 0.0, 0.0, 0.0, 223.615,\n      0.0, 0.0, 0.0, 225.577, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 229.5, 0.0, 0.0, 0.0, 230.481,\n      0.0, 0.0, 0.0, 231.462, 0.0, 0.0, 0.0, 232.442, 0.0, 0.0, 0.0, 233.423, 0.0, 0.0, 0.0,\n      234.404, 0.0, 0.0, 0.0, 235.385, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0, 237.346, 0.0, 0.0,\n      0.0, 238.327, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 240.288, 0.0, 0.0, 0.0, 241.269, 0.0,\n      0.0, 0.0, 242.25, 0.0, 0.0, 0.0, 242.838, 0.0, 0.0, 0.0, 243.427, 0.0, 0.0, 0.0, 244.015, 0.0,\n      0.0, 0.0, 244.604, 0.0, 0.0, 0.0, 245.192, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 246.369,\n      0.0, 0.0, 0.0, 246.958, 0.0, 0.0, 0.0, 247.546, 0.0, 0.0, 0.0, 248.135, 0.0, 0.0, 0.0,\n      248.723, 0.0, 0.0, 0.0, 249.312, 0.0, 0.0, 0.0, 249.9, 0.0, 0.0, 0.0, 250.096, 0.0, 0.0, 0.0,\n      250.292, 0.0, 0.0, 0.0, 250.488, 0.0, 0.0, 0.0, 250.685, 0.0, 0.0, 0.0, 250.881, 0.0, 0.0,\n      0.0, 251.077, 0.0, 0.0, 0.0, 251.273, 0.0, 0.0, 0.0, 251.469, 0.0, 0.0, 0.0, 251.665, 0.0,\n      0.0, 0.0, 251.862, 0.0, 0.0, 0.0, 252.058, 0.0, 0.0, 0.0, 252.254, 0.0, 0.0, 0.0, 252.45, 0.0,\n      0.0, 0.0, 252.682, 0.0, 0.0, 0.0, 252.914, 0.0, 0.0, 0.0, 253.145, 0.0, 0.0, 0.0, 253.377,\n      0.0, 0.0, 0.0, 253.609, 0.0, 0.0, 0.0, 253.841, 0.0, 0.0, 0.0, 254.073, 0.0, 0.0, 0.0,\n      254.305, 0.0, 0.0, 0.0, 254.536, 0.0, 0.0, 0.0, 254.768, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0\n    ])\n  }\n  RAINBOW = {\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 18.0, 0.0,\n      0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0,\n      40.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 54.0, 0.0, 0.0, 0.0, 58.0, 0.0,\n      0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0,\n      72.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 80.0, 0.0,\n      0.0, 0.0, 82.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0,\n      86.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 87.0, 0.0,\n      0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0,\n      84.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 78.0, 0.0,\n      0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0,\n      68.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 58.0, 0.0, 0.0, 0.0, 55.0, 0.0,\n      0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0,\n      36.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 16.0, 0.0,\n      0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 21.0, 0.0,\n      0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0,\n      46.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 67.0, 0.0,\n      0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 0.0,\n      93.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 101.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 114.0,\n      0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 135.0, 0.0,\n      0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0,\n      0.0, 161.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0,\n      182.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 203.0,\n      0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 225.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0,\n      0.0, 250.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 4.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 25.0,\n      0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0,\n      0.0, 51.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 72.0,\n      0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 0.0, 93.0, 0.0, 0.0,\n      0.0, 97.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      119.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 140.0,\n      0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 161.0, 0.0,\n      0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0,\n      0.0, 187.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0,\n      208.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 220.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 250.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 233.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0,\n      0.0, 208.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0,\n      187.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 165.0,\n      0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 144.0, 0.0,\n      0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0,\n      0.0, 119.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0, 0.0,\n      97.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 76.0, 0.0,\n      0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0,\n      51.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 29.0, 0.0,\n      0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0\n    ]),\n    b: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 14.0, 0.0,\n      0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0,\n      38.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 59.0, 0.0,\n      0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0,\n      81.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 100.0,\n      0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 113.0, 0.0, 0.0, 0.0, 118.0, 0.0,\n      0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0,\n      0.0, 141.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0,\n      159.0, 0.0, 0.0, 0.0, 163.0, 0.0, 0.0, 0.0, 168.0, 0.0, 0.0, 0.0, 173.0, 0.0, 0.0, 0.0, 177.0,\n      0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 195.0, 0.0,\n      0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0,\n      0.0, 218.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0,\n      236.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 246.0, 0.0,\n      0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0,\n      0.0, 220.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0,\n      199.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 178.0,\n      0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 157.0, 0.0,\n      0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0,\n      0.0, 131.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      110.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 89.0,\n      0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0,\n      0.0, 63.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 42.0,\n      0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0,\n      0.0, 16.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0\n    ])\n  }\n  CMB = {\n    // \"r\": new Float32Array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 12.0, 18.0, 24.0, 30.0, 36.0, 42.0, 48.0, 54.0, 60.0, 66.0, 72.0, 78.0, 85.0, 91.0, 97.0, 103.0, 109.0, 115.0, 121.0, 127.0, 133.0, 139.0, 145.0, 151.0, 157.0, 163.0, 170.0, 176.0, 182.0, 188.0, 194.0, 200.0, 206.0, 212.0, 218.0, 224.0, 230.0, 236.0, 242.0, 248.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 251.0, 247.0, 244.0, 240.0, 236.0, 233.0, 229.0, 226.0, 222.0, 218.0, 215.0, 211.0, 208.0, 204.0, 200.0, 197.0, 193.0, 190.0, 186.0, 182.0, 179.0, 175.0, 172.0, 168.0, 164.0, 161.0, 157.0, 154.0, 150.0, 146.0, 143.0, 139.0, 136.0, 132.0, 128.0, 125.0, 121.0, 118.0, 114.0, 110.0, 107.0, 103.0, 100.0]),\n    // \"g\": new Float32Array([0.0, 2.0, 5.0, 8.0, 10.0, 13.0, 16.0, 18.0, 21.0, 24.0, 26.0, 29.0, 32.0, 34.0, 37.0, 40.0, 42.0, 45.0, 48.0, 50.0, 53.0, 56.0, 58.0, 61.0, 64.0, 66.0, 69.0, 72.0, 74.0, 77.0, 80.0, 82.0, 85.0, 88.0, 90.0, 93.0, 96.0, 98.0, 101.0, 104.0, 106.0, 109.0, 112.0, 114.0, 117.0, 119.0, 122.0, 124.0, 127.0, 129.0, 132.0, 134.0, 137.0, 139.0, 142.0, 144.0, 147.0, 150.0, 152.0, 155.0, 157.0, 160.0, 162.0, 165.0, 167.0, 170.0, 172.0, 175.0, 177.0, 180.0, 182.0, 185.0, 188.0, 190.0, 193.0, 195.0, 198.0, 200.0, 203.0, 205.0, 208.0, 210.0, 213.0, 215.0, 218.0, 221.0, 221.0, 221.0, 222.0, 222.0, 222.0, 223.0, 223.0, 224.0, 224.0, 224.0, 225.0, 225.0, 225.0, 226.0, 226.0, 227.0, 227.0, 227.0, 228.0, 228.0, 229.0, 229.0, 229.0, 230.0, 230.0, 230.0, 231.0, 231.0, 232.0, 232.0, 232.0, 233.0, 233.0, 233.0, 234.0, 234.0, 235.0, 235.0, 235.0, 236.0, 236.0, 237.0, 235.0, 234.0, 233.0, 231.0, 230.0, 229.0, 227.0, 226.0, 225.0, 223.0, 222.0, 221.0, 219.0, 218.0, 217.0, 215.0, 214.0, 213.0, 211.0, 210.0, 209.0, 207.0, 206.0, 205.0, 203.0, 202.0, 201.0, 199.0, 198.0, 197.0, 195.0, 194.0, 193.0, 191.0, 190.0, 189.0, 187.0, 186.0, 185.0, 183.0, 182.0, 181.0, 180.0, 177.0, 175.0, 172.0, 170.0, 167.0, 165.0, 162.0, 160.0, 157.0, 155.0, 152.0, 150.0, 147.0, 145.0, 142.0, 140.0, 137.0, 135.0, 132.0, 130.0, 127.0, 125.0, 122.0, 120.0, 117.0, 115.0, 112.0, 110.0, 107.0, 105.0, 102.0, 100.0, 97.0, 95.0, 92.0, 90.0, 87.0, 85.0, 82.0, 80.0, 77.0, 75.0, 73.0, 71.0, 69.0, 68.0, 66.0, 64.0, 62.0, 61.0, 59.0, 57.0, 55.0, 54.0, 52.0, 50.0, 48.0, 47.0, 45.0, 43.0, 41.0, 40.0, 38.0, 36.0, 34.0, 33.0, 31.0, 29.0, 27.0, 26.0, 24.0, 22.0, 20.0, 19.0, 17.0, 15.0, 13.0, 12.0, 10.0, 8.0, 6.0, 5.0, 3.0, 1.0, 0.0]),\n    // \"b\": new Float32Array([255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 254.0, 253.0, 252.0, 251.0, 250.0, 249.0, 248.0, 247.0, 246.0, 245.0, 245.0, 244.0, 243.0, 242.0, 241.0, 240.0, 239.0, 238.0, 237.0, 236.0, 236.0, 235.0, 234.0, 233.0, 232.0, 231.0, 230.0, 229.0, 228.0, 227.0, 226.0, 226.0, 225.0, 224.0, 223.0, 222.0, 221.0, 220.0, 219.0, 218.0, 217.0, 217.0, 211.0, 206.0, 201.0, 196.0, 191.0, 186.0, 181.0, 176.0, 171.0, 166.0, 161.0, 156.0, 151.0, 146.0, 141.0, 136.0, 131.0, 126.0, 121.0, 116.0, 111.0, 105.0, 100.0, 95.0, 90.0, 85.0, 80.0, 75.0, 70.0, 65.0, 60.0, 55.0, 50.0, 45.0, 40.0, 35.0, 30.0, 25.0, 20.0, 15.0, 10.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 18.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0,\n      30.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 54.0, 0.0,\n      0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0,\n      85.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 109.0,\n      0.0, 0.0, 0.0, 115.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 133.0, 0.0,\n      0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 151.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0,\n      0.0, 163.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0,\n      188.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0, 0.0, 212.0,\n      0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 236.0, 0.0,\n      0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0,\n      0.0, 247.0, 0.0, 0.0, 0.0, 244.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0,\n      233.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 218.0,\n      0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 204.0, 0.0,\n      0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 190.0, 0.0, 0.0,\n      0.0, 186.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 179.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0,\n      172.0, 0.0, 0.0, 0.0, 168.0, 0.0, 0.0, 0.0, 164.0, 0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 157.0,\n      0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 143.0, 0.0,\n      0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 128.0, 0.0, 0.0,\n      0.0, 125.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      110.0, 0.0, 0.0, 0.0, 107.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 10.0, 0.0,\n      0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 18.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0,\n      24.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 34.0, 0.0,\n      0.0, 0.0, 37.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0,\n      48.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 56.0, 0.0, 0.0, 0.0, 58.0, 0.0,\n      0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0,\n      72.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 82.0, 0.0,\n      0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 90.0, 0.0, 0.0, 0.0, 93.0, 0.0, 0.0, 0.0,\n      96.0, 0.0, 0.0, 0.0, 98.0, 0.0, 0.0, 0.0, 101.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 106.0,\n      0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 112.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0, 117.0, 0.0,\n      0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 124.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0,\n      0.0, 129.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 134.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0,\n      139.0, 0.0, 0.0, 0.0, 142.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 150.0,\n      0.0, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 155.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 160.0, 0.0,\n      0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0,\n      0.0, 172.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0, 177.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0,\n      182.0, 0.0, 0.0, 0.0, 185.0, 0.0, 0.0, 0.0, 188.0, 0.0, 0.0, 0.0, 190.0, 0.0, 0.0, 0.0, 193.0,\n      0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 203.0, 0.0,\n      0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0,\n      0.0, 215.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0,\n      221.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 223.0,\n      0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 224.0, 0.0,\n      0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0,\n      0.0, 226.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0,\n      228.0, 0.0, 0.0, 0.0, 228.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 231.0, 0.0,\n      0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0,\n      0.0, 233.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0,\n      234.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 236.0,\n      0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 234.0, 0.0,\n      0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0,\n      0.0, 227.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0,\n      222.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 219.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 217.0,\n      0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 211.0, 0.0,\n      0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0,\n      0.0, 205.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 202.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0,\n      199.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 194.0,\n      0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 190.0, 0.0, 0.0, 0.0, 189.0, 0.0,\n      0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 185.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0,\n      0.0, 182.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0, 177.0, 0.0, 0.0, 0.0,\n      175.0, 0.0, 0.0, 0.0, 172.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 165.0,\n      0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 160.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 155.0, 0.0,\n      0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0,\n      0.0, 142.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0,\n      132.0, 0.0, 0.0, 0.0, 130.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 125.0, 0.0, 0.0, 0.0, 122.0,\n      0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 117.0, 0.0, 0.0, 0.0, 115.0, 0.0, 0.0, 0.0, 112.0, 0.0,\n      0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 107.0, 0.0, 0.0, 0.0, 105.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0,\n      0.0, 100.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0,\n      90.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 82.0, 0.0, 0.0, 0.0, 80.0, 0.0,\n      0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0,\n      69.0, 0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 62.0, 0.0,\n      0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0,\n      54.0, 0.0, 0.0, 0.0, 52.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 47.0, 0.0,\n      0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0,\n      38.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 31.0, 0.0,\n      0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0,\n      22.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 15.0, 0.0,\n      0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0,\n      6.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0\n    ]),\n    b: new Float32Array([\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 254.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 252.0, 0.0, 0.0, 0.0, 251.0,\n      0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 249.0, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 247.0, 0.0,\n      0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 244.0, 0.0, 0.0,\n      0.0, 243.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0,\n      239.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 236.0,\n      0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 232.0, 0.0,\n      0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 228.0, 0.0, 0.0,\n      0.0, 227.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0,\n      224.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 220.0,\n      0.0, 0.0, 0.0, 219.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 217.0, 0.0, 0.0, 0.0, 217.0, 0.0,\n      0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0,\n      0.0, 191.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0, 0.0,\n      171.0, 0.0, 0.0, 0.0, 166.0, 0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 156.0, 0.0, 0.0, 0.0, 151.0,\n      0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 141.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 131.0, 0.0,\n      0.0, 0.0, 126.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 111.0, 0.0, 0.0,\n      0.0, 105.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 90.0, 0.0, 0.0, 0.0,\n      85.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0, 65.0, 0.0,\n      0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0,\n      40.0, 0.0, 0.0, 0.0, 35.0, 0.0, 0.0, 0.0, 30.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 20.0, 0.0,\n      0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n    ])\n  }\n  CUBEHELIX = {\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0,\n      0.0, 8.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 13.0,\n      0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 18.0, 0.0, 0.0,\n      0.0, 19.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 22.0,\n      0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0,\n      0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0,\n      0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0,\n      0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0,\n      0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0,\n      0.0, 24.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 23.0,\n      0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0,\n      0.0, 22.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0,\n      0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0,\n      0.0, 20.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0,\n      0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0,\n      0.0, 23.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 26.0,\n      0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 30.0, 0.0, 0.0,\n      0.0, 31.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 35.0, 0.0, 0.0, 0.0, 36.0,\n      0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0,\n      0.0, 45.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 53.0,\n      0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 62.0, 0.0, 0.0,\n      0.0, 65.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 75.0,\n      0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0,\n      0.0, 89.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 98.0, 0.0, 0.0, 0.0,\n      101.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 107.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 113.0,\n      0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 126.0, 0.0,\n      0.0, 0.0, 129.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 138.0, 0.0, 0.0,\n      0.0, 141.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0,\n      153.0, 0.0, 0.0, 0.0, 155.0, 0.0, 0.0, 0.0, 158.0, 0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 164.0,\n      0.0, 0.0, 0.0, 166.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 174.0, 0.0,\n      0.0, 0.0, 176.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0,\n      0.0, 185.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0,\n      193.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 199.0,\n      0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0, 202.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 204.0, 0.0,\n      0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0,\n      0.0, 209.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0,\n      211.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0,\n      0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0,\n      0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0,\n      0.0, 210.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0,\n      208.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 206.0,\n      0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 203.0, 0.0,\n      0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 202.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0,\n      0.0, 200.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0,\n      197.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 195.0,\n      0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 194.0, 0.0,\n      0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0,\n      0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0,\n      193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 195.0,\n      0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 197.0, 0.0,\n      0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0,\n      0.0, 202.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0,\n      206.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 212.0,\n      0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 217.0, 0.0, 0.0, 0.0, 218.0, 0.0,\n      0.0, 0.0, 220.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0,\n      0.0, 227.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0,\n      234.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 242.0,\n      0.0, 0.0, 0.0, 244.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 249.0, 0.0,\n      0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 255.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0,\n      0.0, 2.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 5.0, 0.0,\n      0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 9.0,\n      0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 11.0, 0.0, 0.0, 0.0, 11.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0,\n      0.0, 13.0, 0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 18.0,\n      0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0,\n      0.0, 24.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 29.0,\n      0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 35.0, 0.0, 0.0,\n      0.0, 37.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 43.0,\n      0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0,\n      0.0, 52.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 58.0,\n      0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 62.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0,\n      0.0, 67.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 74.0,\n      0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0,\n      0.0, 83.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 89.0,\n      0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 94.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0,\n      0.0, 97.0, 0.0, 0.0, 0.0, 98.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0, 0.0, 101.0, 0.0, 0.0, 0.0,\n      102.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 107.0,\n      0.0, 0.0, 0.0, 108.0, 0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 111.0, 0.0,\n      0.0, 0.0, 112.0, 0.0, 0.0, 0.0, 113.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0,\n      0.0, 115.0, 0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 117.0, 0.0, 0.0, 0.0,\n      118.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 120.0,\n      0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0,\n      0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0,\n      0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0,\n      122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0,\n      0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0,\n      0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0,\n      0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0,\n      121.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0,\n      0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0,\n      0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0,\n      0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0,\n      122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 124.0,\n      0.0, 0.0, 0.0, 124.0, 0.0, 0.0, 0.0, 125.0, 0.0, 0.0, 0.0, 125.0, 0.0, 0.0, 0.0, 126.0, 0.0,\n      0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 128.0, 0.0, 0.0, 0.0, 129.0, 0.0, 0.0,\n      0.0, 130.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0,\n      133.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0, 138.0,\n      0.0, 0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 142.0, 0.0, 0.0, 0.0, 143.0, 0.0,\n      0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 149.0, 0.0, 0.0,\n      0.0, 150.0, 0.0, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0, 155.0, 0.0, 0.0, 0.0,\n      157.0, 0.0, 0.0, 0.0, 158.0, 0.0, 0.0, 0.0, 160.0, 0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 164.0,\n      0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 171.0, 0.0,\n      0.0, 0.0, 172.0, 0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0,\n      0.0, 180.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0, 0.0, 185.0, 0.0, 0.0, 0.0,\n      187.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 194.0,\n      0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 202.0, 0.0,\n      0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0,\n      0.0, 210.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0,\n      216.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 219.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 222.0,\n      0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 228.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0,\n      0.0, 233.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0,\n      238.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 241.0,\n      0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 244.0, 0.0, 0.0, 0.0, 244.0, 0.0,\n      0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0,\n      0.0, 248.0, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 249.0, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0,\n      250.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 252.0, 0.0, 0.0, 0.0, 252.0,\n      0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 254.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0\n    ]),\n    b: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0,\n      0.0, 8.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 11.0, 0.0, 0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 15.0,\n      0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0,\n      0.0, 25.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 33.0,\n      0.0, 0.0, 0.0, 35.0, 0.0, 0.0, 0.0, 37.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0,\n      0.0, 43.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 50.0,\n      0.0, 0.0, 0.0, 52.0, 0.0, 0.0, 0.0, 54.0, 0.0, 0.0, 0.0, 56.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0,\n      0.0, 59.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 62.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 65.0,\n      0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0,\n      0.0, 71.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 74.0,\n      0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0,\n      0.0, 77.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0,\n      0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0,\n      0.0, 77.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 76.0,\n      0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0,\n      0.0, 73.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0, 69.0,\n      0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0,\n      0.0, 65.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 60.0,\n      0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 58.0, 0.0, 0.0, 0.0, 58.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0,\n      0.0, 56.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 54.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 52.0,\n      0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0,\n      0.0, 49.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 47.0,\n      0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0,\n      0.0, 46.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 47.0,\n      0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0,\n      0.0, 50.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 52.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 55.0,\n      0.0, 0.0, 0.0, 56.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0,\n      0.0, 62.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 65.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 69.0,\n      0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0,\n      0.0, 81.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 91.0,\n      0.0, 0.0, 0.0, 94.0, 0.0, 0.0, 0.0, 96.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0,\n      0.0, 105.0, 0.0, 0.0, 0.0, 108.0, 0.0, 0.0, 0.0, 111.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      117.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 124.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 130.0,\n      0.0, 0.0, 0.0, 133.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 143.0, 0.0,\n      0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 149.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 156.0, 0.0, 0.0,\n      0.0, 159.0, 0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0,\n      172.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 184.0,\n      0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 192.0, 0.0, 0.0, 0.0, 195.0, 0.0,\n      0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0,\n      0.0, 207.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0, 0.0,\n      216.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 220.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 224.0,\n      0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 230.0, 0.0,\n      0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0,\n      0.0, 236.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0,\n      239.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 242.0,\n      0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0,\n      0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0,\n      0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0,\n      242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 241.0,\n      0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 240.0, 0.0,\n      0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0,\n      0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0,\n      238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0,\n      0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0,\n      0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0,\n      0.0, 241.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0,\n      244.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 248.0,\n      0.0, 0.0, 0.0, 249.0, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 252.0, 0.0, 0.0, 0.0, 253.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0\n    ])\n  }\n  EOSB = {\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 18.0,\n      0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0,\n      0.0, 57.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0,\n      100.0, 0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 136.0,\n      0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 163.0, 0.0, 0.0, 0.0, 173.0, 0.0,\n      0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0,\n      0.0, 218.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 249.0, 0.0,\n      0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0,\n      0.0, 215.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0,\n      232.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 228.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 224.0,\n      0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 216.0, 0.0,\n      0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0,\n      0.0, 207.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0,\n      179.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 192.0,\n      0.0, 0.0, 0.0, 190.0, 0.0, 0.0, 0.0, 188.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 184.0, 0.0,\n      0.0, 0.0, 164.0, 0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0,\n      0.0, 175.0, 0.0, 0.0, 0.0, 173.0, 0.0, 0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0,\n      167.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 159.0,\n      0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 156.0, 0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0, 152.0, 0.0,\n      0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 130.0, 0.0, 0.0,\n      0.0, 128.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 138.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0,\n      135.0, 0.0, 0.0, 0.0, 133.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 129.0, 0.0, 0.0, 0.0, 127.0,\n      0.0, 0.0, 0.0, 113.0, 0.0, 0.0, 0.0, 111.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 119.0, 0.0,\n      0.0, 0.0, 117.0, 0.0, 0.0, 0.0, 117.0, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0,\n      0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0,\n      0.0, 47.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 79.0,\n      0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 111.0, 0.0,\n      0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 129.0, 0.0, 0.0,\n      0.0, 136.0, 0.0, 0.0, 0.0, 159.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0,\n      183.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 215.0,\n      0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 247.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 250.0,\n      0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 233.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0,\n      0.0, 212.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0,\n      195.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 160.0,\n      0.0, 0.0, 0.0, 156.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 161.0, 0.0,\n      0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0,\n      0.0, 140.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0,\n      125.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 116.0,\n      0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0, 112.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0, 0.0, 97.0, 0.0,\n      0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0,\n      0.0, 97.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 93.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 80.0,\n      0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 82.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0,\n      0.0, 78.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 70.0,\n      0.0, 0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 61.0, 0.0, 0.0,\n      0.0, 59.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 50.0,\n      0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0,\n      0.0, 40.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 31.0,\n      0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0,\n      0.0, 21.0, 0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 12.0,\n      0.0, 0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n    ]),\n    b: new Float32Array([\n      116.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 136.0,\n      0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 153.0, 0.0,\n      0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 149.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0,\n      0.0, 174.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0,\n      191.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0, 0.0, 187.0,\n      0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 225.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0,\n      0.0, 221.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0,\n      239.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 207.0,\n      0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 172.0, 0.0, 0.0, 0.0, 164.0, 0.0, 0.0, 0.0, 175.0, 0.0,\n      0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 159.0, 0.0, 0.0, 0.0, 151.0, 0.0, 0.0, 0.0, 143.0, 0.0, 0.0,\n      0.0, 135.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0,\n      93.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 71.0, 0.0,\n      0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0, 0.0,\n      28.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n    ])\n  }\n}\n\nexport const colorMap = new ColorMap()\n","// HiPSShaderProgram.ts\nimport global from '../Global.js'\nimport ShaderManager from './ShaderManager.js'\nimport { colorMap } from '../model/hips/ColorMap.js'\n\ntype GL = WebGL2RenderingContext;\n\ntype UniformNames = {\n  sampler: string\n  factor: string\n  m_perspective: string\n  m_model: string\n  m_view: string\n  colormapIdx: string\n  colormap_red: string\n  colormap_green: string\n  colormap_blue: string\n}\n\ntype AttributeNames = {\n  vertex_pos: string\n  text_coords: string\n}\n\ntype Locations = {\n  pMatrix: WebGLUniformLocation | null\n  mMatrix: WebGLUniformLocation | null\n  vMatrix: WebGLUniformLocation | null\n  sampler: WebGLUniformLocation | null\n  textureAlpha: WebGLUniformLocation | null\n  clorMapIdx: WebGLUniformLocation | null\n  vertexPositionAttribute: number\n  textureCoordAttribute: number\n}\n\nexport default class HiPSShaderProgram {\n  private _shaderProgram: WebGLProgram | undefined\n  private _vertexShader!: WebGLShader\n  private _fragmentShader!: WebGLShader\n\n  private _UBO_colorMapBuffer: WebGLBuffer | null = null\n  private _UBO_colorMapVariableInfo: Record<\n    'r_palette' | 'g_palette' | 'b_palette',\n    { index: number; offset: number }\n  > = {\n      r_palette: { index: 0, offset: 0 },\n      g_palette: { index: 0, offset: 0 },\n      b_palette: { index: 0, offset: 0 }\n    }\n\n  readonly gl_uniforms: UniformNames\n  readonly gl_attributes: AttributeNames\n  readonly locations: Locations\n\n  constructor() {\n    this.gl_uniforms = {\n      sampler: 'uSampler0',\n      factor: 'uFactor0',\n      m_perspective: 'uPMatrix',\n      m_model: 'uMMatrix',\n      m_view: 'uVMatrix',\n      colormapIdx: 'cmapIdx',\n      colormap_red: 'r',\n      colormap_green: 'g',\n      colormap_blue: 'b'\n    }\n\n    this.gl_attributes = {\n      vertex_pos: 'aVertexPosition',\n      text_coords: 'aTextureCoord'\n    }\n\n    this.locations = {\n      pMatrix: null,\n      mMatrix: null,\n      vMatrix: null,\n      sampler: null,\n      textureAlpha: null,\n      clorMapIdx: null,\n      vertexPositionAttribute: -1,\n      textureCoordAttribute: -1\n    }\n  }\n\n  get shaderProgram(): WebGLProgram {\n    if (!this._shaderProgram) {\n      const gl = global.gl as GL\n      this._shaderProgram = gl.createProgram() as WebGLProgram\n      this.initShaders()\n    }\n    ; (global.gl as GL).useProgram(this._shaderProgram)\n    return this._shaderProgram\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL\n\n    const fragmentShaderStr = ShaderManager.hipsNativeFS()\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n\n    const vertexShaderStr = ShaderManager.hipsVS()\n    this._vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader\n    gl.shaderSource(this._vertexShader, vertexShaderStr)\n    gl.compileShader(this._vertexShader)\n    if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._vertexShader) || 'Vertex shader compile error')\n      return\n    }\n\n    gl.attachShader(this._shaderProgram as WebGLProgram, this._vertexShader)\n    gl.attachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this._shaderProgram as WebGLProgram)\n\n    if (!gl.getProgramParameter(this._shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n  }\n\n  enableProgram(): void {\n    ; (global.gl as GL).useProgram(this._shaderProgram as WebGLProgram)\n  }\n\n  setGrayscaleShader(): void {\n    const gl = global.gl as GL\n    gl.detachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    const fragmentShaderStr = ShaderManager.hipsGrayscaleFS()\n    this.changeFSShader(fragmentShaderStr)\n  }\n\n  setNativeShader(): void {\n    const gl = global.gl as GL\n    gl.detachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    const fragmentShaderStr = ShaderManager.hipsNativeFS()\n    this.changeFSShader(fragmentShaderStr)\n  }\n\n  setColorMapShader(): void {\n    const gl = global.gl as GL\n    gl.detachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    const fragmentShaderStr = ShaderManager.hipsColorMapFS()\n    this.changeFSShader(fragmentShaderStr)\n\n    // UBO discovery\n    const blockIndex = gl.getUniformBlockIndex(this._shaderProgram as WebGLProgram, 'colormap')\n    const blockSize = gl.getActiveUniformBlockParameter(\n      this._shaderProgram as WebGLProgram,\n      blockIndex,\n      gl.UNIFORM_BLOCK_DATA_SIZE\n    ) as number\n\n    const uboVariableNames = ['r_palette', 'g_palette', 'b_palette'] as const\n    const uboVariableIndices = gl.getUniformIndices(\n      this._shaderProgram as WebGLProgram,\n      uboVariableNames as unknown as string[]\n    ) as number[]\n    const uboVariableOffsets = gl.getActiveUniforms(\n      this._shaderProgram as WebGLProgram,\n      uboVariableIndices,\n      gl.UNIFORM_OFFSET\n    ) as number[]\n\n    this._UBO_colorMapBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.UNIFORM_BUFFER, this._UBO_colorMapBuffer)\n\n    // std140 layout: 256 floats each padded to 16 bytes => 4096 bytes per palette, total 12288\n    const BYTES = 12288\n    gl.bufferData(gl.UNIFORM_BUFFER, BYTES, gl.STATIC_DRAW)\n    gl.bindBuffer(gl.UNIFORM_BUFFER, null)\n\n    gl.bindBufferBase(gl.UNIFORM_BUFFER, 0, this._UBO_colorMapBuffer)\n\n    uboVariableNames.forEach((name, index) => {\n      this._UBO_colorMapVariableInfo[name] = {\n        index: uboVariableIndices[index],\n        offset: uboVariableOffsets[index]\n      }\n    })\n  }\n\n  private changeFSShader(fragmentShaderStr: string): void {\n    const gl = global.gl as GL\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n    gl.attachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this._shaderProgram as WebGLProgram)\n    if (!gl.getProgramParameter(this._shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n    gl.useProgram(this._shaderProgram as WebGLProgram)\n  }\n\n  enableShaders(\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): void {\n    const gl = global.gl as GL\n    gl.useProgram(this._shaderProgram as WebGLProgram)\n\n    this.locations.pMatrix = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_perspective\n    )\n    this.locations.mMatrix = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_model\n    )\n    this.locations.vMatrix = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_view\n    )\n    this.locations.sampler = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.sampler\n    )\n    this.locations.textureAlpha = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.factor\n    )\n    this.locations.clorMapIdx = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.colormapIdx\n    )\n\n    this.locations.vertexPositionAttribute = gl.getAttribLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_pos\n    )\n    this.locations.textureCoordAttribute = gl.getAttribLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_attributes.text_coords\n    )\n\n    if (colorMapIdx >= 2) {\n      const index = gl.getUniformBlockIndex(this._shaderProgram as WebGLProgram, 'colormap')\n      gl.uniformBlockBinding(this._shaderProgram as WebGLProgram, index, 0)\n      gl.bindBuffer(gl.UNIFORM_BUFFER, this._UBO_colorMapBuffer)\n\n      let currentColorMap: { r: Float32Array; g: Float32Array; b: Float32Array } | undefined\n      if (colorMapIdx === 2) currentColorMap = colorMap.PLANCK\n      else if (colorMapIdx === 3) currentColorMap = colorMap.CMB\n      else if (colorMapIdx === 4) currentColorMap = colorMap.RAINBOW\n      else if (colorMapIdx === 5) currentColorMap = colorMap.EOSB\n      else if (colorMapIdx === 6) currentColorMap = colorMap.CUBEHELIX\n\n      if (currentColorMap) {\n        // Offsets match std140 padded arrays (0, 4096, 8192)\n        gl.bufferSubData(gl.UNIFORM_BUFFER, 0, currentColorMap.r, 0)\n        gl.bufferSubData(gl.UNIFORM_BUFFER, 4096, currentColorMap.g, 0)\n        gl.bufferSubData(gl.UNIFORM_BUFFER, 8192, currentColorMap.b, 0)\n      }\n      gl.bindBuffer(gl.UNIFORM_BUFFER, null)\n    }\n\n    gl.uniformMatrix4fv(this.locations.mMatrix, false, mMatrix)\n    gl.uniformMatrix4fv(this.locations.pMatrix, false, pMatrix)\n    gl.uniformMatrix4fv(this.locations.vMatrix, false, vMatrix)\n  }\n}\n\nexport const hipsShaderProgram = new HiPSShaderProgram()","// Tile.ts\nimport global from '../../Global.js'\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport { visibleTilesManager } from './VisibleTilesManager.js'\nimport { fovHelper } from './FoVHelper.js'\nimport HiPS from './HiPS.js'\n\n// ---- Local helper types (adapt or import real ones if you have them) ----\n\ninterface ShaderLocations {\n  pMatrix: WebGLUniformLocation | null;\n  mMatrix: WebGLUniformLocation | null;\n  vMatrix: WebGLUniformLocation | null;\n  sampler: WebGLUniformLocation | null;\n  textureAlpha: WebGLUniformLocation | null;\n  clorMapIdx: WebGLUniformLocation | null;\n  vertexPositionAttribute: number;\n  textureCoordAttribute: number;\n}\n\ntype Mat4 = Float32Array;\n\n// ------------------------------------------------------------------------\n\nexport default class Tile {\n  private _hips: HiPS \n  private _tileno: number\n  private _baseurl: string\n  private _order: number\n\n  private _format: string\n  private _maxorder: number\n  private _isGalacticHips: boolean\n\n  private _ready = false\n  private _abort = false\n  private _image!: HTMLImageElement\n  private _textureLoaded = false\n  private _texture?: WebGLTexture\n  private _texurl = ''\n\n  private _hipsShaderIndex = 0\n\n  private _cacheTime0?: number\n  private _inView = true\n  private _amIStillInFoV_requsetID: number\n\n  // geometry buffers\n  private vertexPosition: Float32Array[] = []\n  private vertexPositionBuffer: WebGLBuffer[] = []\n  private vertexIndices: Uint16Array | Uint32Array = new Uint16Array()\n  private vertexIndexBuffer?: WebGLBuffer\n\n  public opacity = 1.0\n\n  constructor(tileno: number, order: number, hips: HiPS) {\n    this._hips = hips\n    this._tileno = tileno\n\n    this._format = hips.format\n    this._baseurl = hips.baseURL\n    this._maxorder = hips.maxOrder\n    this._isGalacticHips = hips.isGalacticHips\n\n    this._order = order\n\n    this._amIStillInFoV_requsetID = window.setInterval(() => {\n      this.amIStillInFoV()\n    }, 5000)\n\n    this.initImage()\n  }\n\n  destroyIntervals(): void {\n    window.clearInterval(this._amIStillInFoV_requsetID)\n  }\n\n  getReadyState(): boolean {\n    return this._ready\n  }\n\n  get cacheTime0(): number | undefined {\n    return this._cacheTime0\n  }\n\n  resetCacheTime0(): void {\n    this._cacheTime0 = undefined\n  }\n\n  setCacheTime0(): void {\n    this._cacheTime0 = new Date().getTime()\n  }\n\n  private initImage(): void {\n    this._image = new Image()\n    \n    const dirnumber = Math.floor(this._tileno / 10000) * 10000\n    this._texurl = `${this._baseurl}/Norder${this._order}/Dir${dirnumber}/Npix${this._tileno}.${this._format}`\n\n    this._image.onload = () => this.imageLoaded()\n    this._image.onerror = () => {\n      console.error('File not found?', this._texurl)\n      this._ready = false\n      this._abort = true\n      this.destroyIntervals()\n    }\n\n    this._image.crossOrigin = 'anonymous'\n    this._image.src = this._texurl\n  }\n\n  private imageLoaded(): void {\n    \n    this.textureLoaded()\n    this.initModelBuffer()\n\n    const gl = global.gl as WebGL2RenderingContext\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture!)\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image)\n\n    this._textureLoaded = true\n    if (this._textureLoaded) this._ready = true\n  }\n\n  private textureLoaded(): void {\n    const gl = global.gl as WebGL2RenderingContext\n    hipsShaderProgram.enableProgram()\n\n    this._texture = gl.createTexture()!\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n\n    // FIX: use the sampler location we fetched in enableShaders()\n    gl.uniform1i((hipsShaderProgram.locations as ShaderLocations).sampler, this._hipsShaderIndex)\n\n    if (!gl.isTexture(this._texture)) {\n      console.warn('Texture creation failed')\n    }\n  }\n\n  private initModelBuffer(): void {\n    const gl = global.gl as WebGL2RenderingContext\n\n    this.vertexPosition = []\n    this.vertexPositionBuffer = []\n    this.vertexIndices = new Uint16Array()\n\n    const reforder = fovHelper.getRefOrder(this._order)\n\n    const orighealpix = global.getHealpix(this._order)\n    const origxyf = orighealpix.nest2xyf(this._tileno)\n    const orderjump = reforder - this._order\n\n    const dxmin = origxyf.ix << orderjump\n    const dxmax = (origxyf.ix << orderjump) + (1 << orderjump)\n    const dymin = origxyf.iy << orderjump\n    const dymax = (origxyf.iy << orderjump) + (1 << orderjump)\n\n    const healpix = global.getHealpix(reforder)\n\n    this.setupPositionAndTexture4Quadrant2(dxmin, dxmin + (dxmax - dxmin) / 2, dymin, dymin + (dymax - dymin) / 2, 0, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant2(dxmin + (dxmax - dxmin) / 2, dxmax, dymin, dymin + (dymax - dymin) / 2, 1, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant2(dxmin, dxmin + (dxmax - dxmin) / 2, dymin + (dymax - dymin) / 2, dymax, 2, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant2(dxmin + (dxmax - dxmin) / 2, dxmax, dymin + (dymax - dymin) / 2, dymax, 3, healpix, orderjump, origxyf)\n\n    const pixelsXQuadrant = this.vertexPosition[0].length / 20\n    const idx = this.computeVertexIndices(pixelsXQuadrant)\n\n    // If large, upgrade to Uint32 indices\n    if (idx.length > 65535) {\n      // Optional: require OES_element_index_uint if you’re still on WebGL1\n      this.vertexIndices = new Uint32Array(idx)\n    } else {\n      this.vertexIndices = new Uint16Array(idx)\n    }\n\n    this.vertexIndexBuffer = gl.createBuffer()!\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndices, gl.STATIC_DRAW)\n  }\n\n  private computeVertexIndices(pixelsXQuadrant: number): Uint32Array {\n    const vertexIndices = new Uint32Array(6 * pixelsXQuadrant)\n    let baseFaceIndex = 0\n    for (let j = 0; j < pixelsXQuadrant; j++) {\n      const b = baseFaceIndex\n      vertexIndices[6 * j] = b\n      vertexIndices[6 * j + 1] = b + 1\n      vertexIndices[6 * j + 2] = b + 2\n      vertexIndices[6 * j + 3] = b + 2\n      vertexIndices[6 * j + 4] = b + 3\n      vertexIndices[6 * j + 5] = b\n      baseFaceIndex += 4\n    }\n    return vertexIndices\n  }\n\n  private setupPositionAndTexture4Quadrant2(\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    qidx: number,\n    healpix: any,\n    orderjump: number,\n    origxyf: any\n  ): void {\n    const gl = global.gl as WebGL2RenderingContext\n    this.vertexPosition[qidx] = new Float32Array(20 * (dxmax - dxmin) * (dymax - dymin))\n\n    const step = 1 / (1 << orderjump)\n    let p = 0\n\n    const s_pixel_size = 0\n    const t_pixel_size = 0\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        const facesVec3Array = healpix.getPointsForXyfNoStep(dx, dy, origxyf.face)\n        const uindex = dy - (origxyf.iy << orderjump)\n        const vindex = dx - (origxyf.ix << orderjump)\n\n        // v0\n        this.vertexPosition[qidx][20 * p] = facesVec3Array[0].x\n        this.vertexPosition[qidx][20 * p + 1] = facesVec3Array[0].y\n        this.vertexPosition[qidx][20 * p + 2] = facesVec3Array[0].z\n        this.vertexPosition[qidx][20 * p + 3] = step + step * uindex + s_pixel_size\n        this.vertexPosition[qidx][20 * p + 4] = 1 - (step + step * vindex) - t_pixel_size\n        // v1\n        this.vertexPosition[qidx][20 * p + 5] = facesVec3Array[1].x\n        this.vertexPosition[qidx][20 * p + 6] = facesVec3Array[1].y\n        this.vertexPosition[qidx][20 * p + 7] = facesVec3Array[1].z\n        this.vertexPosition[qidx][20 * p + 8] = step + step * uindex + s_pixel_size\n        this.vertexPosition[qidx][20 * p + 9] = 1 - step * vindex + t_pixel_size\n        // v2\n        this.vertexPosition[qidx][20 * p + 10] = facesVec3Array[2].x\n        this.vertexPosition[qidx][20 * p + 11] = facesVec3Array[2].y\n        this.vertexPosition[qidx][20 * p + 12] = facesVec3Array[2].z\n        this.vertexPosition[qidx][20 * p + 13] = step * uindex - s_pixel_size\n        this.vertexPosition[qidx][20 * p + 14] = 1 - step * vindex + t_pixel_size\n        // v3\n        this.vertexPosition[qidx][20 * p + 15] = facesVec3Array[3].x\n        this.vertexPosition[qidx][20 * p + 16] = facesVec3Array[3].y\n        this.vertexPosition[qidx][20 * p + 17] = facesVec3Array[3].z\n        this.vertexPosition[qidx][20 * p + 18] = step * uindex - s_pixel_size\n        this.vertexPosition[qidx][20 * p + 19] = 1 - (step + step * vindex) - t_pixel_size\n        p++\n      }\n    }\n\n    this.vertexPositionBuffer[qidx] = gl.createBuffer()!\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexPosition[qidx], gl.STATIC_DRAW)\n  }\n\n  get inView(): boolean {\n    return this._inView\n  }\n\n  private moveToCache(): void {\n    newTileBuffer.moveTileToCache(this._tileno, this._order, this._hips)\n    this._inView = false\n    this.destroyIntervals()\n  }\n\n  amIStillInFoV(): void {\n    if (this._textureLoaded) this._ready = true\n\n    if (this._isGalacticHips) {\n      if (visibleTilesManager.galAncestorsMap.has(this._order)) {\n        if (!visibleTilesManager.galAncestorsMap.get(this._order)!.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n\n      if (this._order == visibleTilesManager.visibleOrder) {\n        if (!visibleTilesManager.galVisibleTilesByOrder.pixels.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n    } else {\n      if (visibleTilesManager.ancestorsMap.has(this._order)) {\n        if (!visibleTilesManager.ancestorsMap.get(this._order)!.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n\n      if (this._order == visibleTilesManager.visibleOrder) {\n        if (!visibleTilesManager.visibleTilesByOrder.pixels.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n    }\n  }\n\n  draw(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Mat4,\n    vMatrix: Mat4,\n    mMatrix: Mat4,\n    colorMapIdx: number\n  ): void {\n    if (!this._ready || this._abort) return\n\n    let quadrantsToDraw = new Set<number>([0, 1, 2, 3])\n    if (visibleOrder > this._order && this._order < this._maxorder) {\n      const kids = this.drawChildren(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n      if (kids) quadrantsToDraw = kids\n    }\n\n    const gl = global.gl as WebGL2RenderingContext\n    hipsShaderProgram.enableShaders(pMatrix, vMatrix, mMatrix, colorMapIdx)\n\n    // Enable attributes (these locations are retrieved in enableShaders)\n    gl.enableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).vertexPositionAttribute)\n    gl.enableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).textureCoordAttribute)\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture!)\n    gl.uniform1f((hipsShaderProgram.locations as ShaderLocations).textureAlpha, this.opacity)\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer!)\n    const elemno = this.vertexIndices.length\n    const indexType = this.vertexIndices instanceof Uint32Array ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT\n\n    quadrantsToDraw.forEach((qidx) => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n\n      gl.vertexAttribPointer(\n        (hipsShaderProgram.locations as ShaderLocations).vertexPositionAttribute,\n        3, gl.FLOAT, false, 5 * 4, 0\n      )\n      gl.vertexAttribPointer(\n        (hipsShaderProgram.locations as ShaderLocations).textureCoordAttribute,\n        2, gl.FLOAT, false, 5 * 4, 3 * 4\n      )\n\n      gl.drawElements(gl.TRIANGLES, elemno, indexType, 0)\n    })\n\n    gl.disableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).vertexPositionAttribute)\n    gl.disableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).textureCoordAttribute)\n  }\n\n  private drawChildren(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Mat4,\n    vMatrix: Mat4,\n    mMatrix: Mat4,\n    colorMapIdx: number\n  ): Set<number> | undefined {\n    const quadrantsToDraw = new Set<number>([0, 1, 2, 3])\n    const childrenOrder = this._order + 1\n    if (!visibleTilesMap.has(childrenOrder)) return\n\n    for (let c = 0; c < 4; c++) {\n      const childTileNo = (this._tileno << 2) + c\n      const list = visibleTilesMap.get(childrenOrder)!\n      if (list.includes(childTileNo)) {\n        const childTile = this._isGalacticHips\n          ? newTileBuffer.getGalTile(childTileNo, childrenOrder, this._hips)\n          : newTileBuffer.getTile(childTileNo, childrenOrder, this._hips)\n\n        childTile.draw(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n        if ((childTile as any)._ready) {\n          quadrantsToDraw.delete(childTileNo - (this._tileno << 2))\n        }\n      }\n    }\n    return quadrantsToDraw\n  }\n}","// TileBuffer.ts\nimport Tile from './Tile.js' // adjust if your file is named differently\nimport HiPS from './HiPS.js'\n\nexport default class TileBuffer {\n  // Equatorial\n  private _tiles: Map<string, Tile>\n  private _cachedTiles: Map<string, Tile>\n  private _activeHiPS: Map<HiPS, Map<string, Tile>>\n\n  // Galactic\n  private _galTiles: Map<string, Tile>\n  private _galCachedTiles: Map<string, Tile>\n  private _galActiveHiPS: Map<HiPS, Map<string, Tile>>\n\n  private _cacheAliveMilliSeconds: number\n  private _cleanerId: number\n\n  constructor(minutesToLiveInCache = 1) {\n    this._tiles = new Map()\n    this._cachedTiles = new Map()\n    this._activeHiPS = new Map()\n\n    this._galTiles = new Map()\n    this._galCachedTiles = new Map()\n    this._galActiveHiPS = new Map()\n\n    this._cacheAliveMilliSeconds = minutesToLiveInCache * 60 * 1000\n\n    this._cleanerId = window.setInterval(() => {\n      this.cacheCleaner()\n    }, 10_000)\n  }\n\n  /** Register an equatorial HiPS into the buffer. */\n  addHiPS(hips: HiPS): void {\n    if (this._activeHiPS.has(hips)) {\n      console.error('HiPS already present in TileBuffer')\n      return\n    }\n    this._activeHiPS.set(hips, new Map())\n  }\n\n  /** Register a galactic HiPS into the buffer. */\n  addGalHiPS(hips: HiPS): void {\n    if (this._galActiveHiPS.has(hips)) {\n      console.error('HiPS already present in TileBuffer')\n      return\n    }\n    this._galActiveHiPS.set(hips, new Map())\n  }\n\n  /** Preload/add tile for every registered equatorial HiPS. */\n  addTile(order: number, tileno: number): void {\n    for (const hips of this._activeHiPS.keys()) {\n      this.getTile(tileno, order, hips)\n    }\n  }\n\n  /** Preload/add tile for every registered galactic HiPS. */\n  addGalTile(order: number, tileno: number): void {\n    for (const hips of this._galActiveHiPS.keys()) {\n      this.getGalTile(tileno, order, hips)\n    }\n  }\n\n  /** Fetch (or create) an equatorial tile, reviving from cache if present. */\n  getTile(tileno: number, order: number, hips: HiPS): Tile {\n    const tileKey = this.key(order, tileno, hips.baseURL)\n\n    if (!this._tiles.has(tileKey)) {\n      if (this._cachedTiles.has(tileKey)) {\n        const tile = this._cachedTiles.get(tileKey)!\n        this._tiles.set(tileKey, tile)\n        this._cachedTiles.delete(tileKey)\n        tile.resetCacheTime0()\n      } else {\n        const tile = new Tile(tileno, order, hips as any)\n        this._tiles.set(tileKey, tile)\n      }\n    }\n    return this._tiles.get(tileKey)!\n  }\n\n  /** Fetch (or create) a galactic tile, reviving from cache if present. */\n  getGalTile(tileno: number, order: number, hips: HiPS): Tile {\n    const tileKey = this.key(order, tileno, hips.baseURL)\n\n    if (!this._galTiles.has(tileKey)) {\n      if (this._galCachedTiles.has(tileKey)) {\n        const tile = this._galCachedTiles.get(tileKey)!\n        this._galTiles.set(tileKey, tile)\n        this._galCachedTiles.delete(tileKey)\n        tile.resetCacheTime0()\n      } else {\n        const tile = new Tile(tileno, order, hips as any)\n        this._galTiles.set(tileKey, tile)\n      }\n    }\n    return this._galTiles.get(tileKey)!\n  }\n\n  /** Move a tile (equatorial or galactic) into cache. */\n  moveTileToCache(tileno: number, order: number, hips: HiPS): void {\n    const tileKey = this.key(order, tileno, hips.baseURL)\n\n    if (this._tiles.has(tileKey)) {\n      const tile = this._tiles.get(tileKey)!\n      tile.setCacheTime0()\n      this._cachedTiles.set(tileKey, tile)\n      this._tiles.delete(tileKey)\n    }\n    if (this._galTiles.has(tileKey)) {\n      const tile = this._galTiles.get(tileKey)!\n      tile.setCacheTime0()\n      this._galCachedTiles.set(tileKey, tile)\n      this._galTiles.delete(tileKey)\n    }\n  }\n\n  /** Periodically purge stale cached tiles. */\n  private cacheCleaner(): void {\n    const now = Date.now()\n\n    for (const [tileKey, tile] of this._cachedTiles) {\n      const t0 = tile.cacheTime0\n      if (!tile.inView && t0 !== undefined && now - t0 > this._cacheAliveMilliSeconds) {\n        tile.destroyIntervals()\n        this._cachedTiles.delete(tileKey)\n      }\n    }\n\n    for (const [tileKey, tile] of this._galCachedTiles) {\n      const t0 = tile.cacheTime0\n      if (!tile.inView && t0 !== undefined && now - t0 > this._cacheAliveMilliSeconds) {\n        tile.destroyIntervals()\n        this._galCachedTiles.delete(tileKey)\n      }\n    }\n  }\n\n  /** Compose a stable key for maps. */\n  private key(order: number, tileno: number, baseURL: string): string {\n    return `${order}#${tileno}#${baseURL}`\n  }\n\n  /** Optional: call to stop internal timers if you dispose this buffer. */\n  dispose(): void {\n    window.clearInterval(this._cleanerId)\n  }\n}\n\n// Singleton (kept for compatibility with your original export)\nexport const newTileBuffer = new TileBuffer()","import global from '../../Global.js';\nimport { Pointing, Vec3, Healpix } from 'healpixjs';\nimport RayPickingUtils from '../../utils/RayPickingUtils.js';\nimport { newTileBuffer } from './TileBuffer.js';\nimport { vec4, mat4 } from 'gl-matrix';\nimport healpixGridSingleton from '../grid/HealpixGridSingleton.js';\nimport { bootSetup } from '../../Config.js';\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\ninterface VisibleTiles {\n  pixels: number[];\n  order: number;\n}\n\n\nclass VisibleTilesManager {\n  private _visibleTilesByOrder: VisibleTiles;\n  private _ancestorsMap: Map<number, number[]>;\n\n  private initialised: boolean;\n\n  private _galVisibleTilesByOrder: VisibleTiles;\n  private _galAncestorsMap: Map<number, number[]>;\n  private _galacticMatrixInverted: mat4;\n  private _galacticMatrix: mat4;\n  private insideSphere: boolean = bootSetup.insideSphere\n\n  constructor() {\n    this._visibleTilesByOrder = { pixels: [], order: 0 };\n    this._ancestorsMap = new Map();\n    this.initialised = false;\n\n    this._galVisibleTilesByOrder = { pixels: [], order: 0 };\n    this._galAncestorsMap = new Map();\n\n    // Matrices for galactic <-> equatorial\n    this._galacticMatrixInverted = mat4.create();\n    this._galacticMatrix = mat4.create();\n\n    // From https://observablehq.com/@fil/galactic-rotations (single-precision friendly)\n    // This matrix is (galactic -> equatorial); we store its inverse too.\n    mat4.set(\n      this._galacticMatrixInverted,\n      -0.054876, -0.873437, -0.483835, 0, \n      0.494109, -0.44483, 0.746982, -0, \n      -0.867666, -0.198076, 0.455984, 0, \n      0, 0, 0, 1\n    )\n    mat4.invert(this._galacticMatrix, this._galacticMatrixInverted);\n  }\n\n  init(insideSphere: boolean): void {\n    this.initialised = true;\n    this.insideSphere = insideSphere\n    this.computeVisiblePixels();\n    // Consider debouncing/throttling in real-time UIs\n    setInterval(() => this.computeVisiblePixels(), 500);\n  }\n\n  getVisibleOrder(): number {\n    return healpixGridSingleton.visibleorder;\n  }\n\n  // toggleInsideSphere(){\n  //   this.insideSphere = !this.insideSphere\n  //   this.computeVisiblePixels();\n  // }\n\n  computeVisiblePixels(): void {\n    if (!this.initialised) return;\n\n    let order = healpixGridSingleton.visibleorder;\n    if (global.insideSphere && order < 3) {\n      order = 3;\n    }\n\n    this._ancestorsMap.set(order, []);\n    this._galAncestorsMap.set(order, []);\n\n    let pixels: number[] = [];\n    let galTiles: number[] = [];\n\n    if (order === 0) {\n      const geomhealpix: Healpix = global.getHealpix(0);\n      const npix = geomhealpix.getNPix();\n      for (let i = 0; i < npix; i++) {\n        pixels.push(i);\n        this._ancestorsMap.get(order)!.push(i);\n        galTiles.push(i);\n        this._galAncestorsMap.get(order)!.push(i);\n      }\n    } else {\n      const geomhealpix: Healpix = global.getHealpix(order);\n      const maxX = (global.gl as GL).canvas.width;\n      const maxY = (global.gl as GL).canvas.height;\n\n      // Sample a grid of screen points, project to the sphere, then to galactic\n      for (let i = 0; i <= maxX; i += maxX / 30) {\n        for (let j = 0; j <= maxY; j += maxY / 30) {\n          const hit = RayPickingUtils.getIntersectionPointWithSingleModel(\n            i,\n            j\n          );\n\n          if (hit.length > 0) {\n            // Equatorial -> Galactic (use _galacticMatrix)\n            const galVec = vec4.create();\n            vec4.transformMat4(galVec, [hit[0], hit[1], hit[2], 1], this._galacticMatrix);\n\n            // Index in galactic HEALPix\n            const galPoint = new Pointing(new Vec3(galVec[0], galVec[1], galVec[2]));\n            const galTileNo = geomhealpix.ang2pix(galPoint);\n\n            // Index in equatorial HEALPix\n            const curPoint = new Pointing(new Vec3(hit[0], hit[1], hit[2]));\n            const currPixNo = geomhealpix.ang2pix(curPoint);\n\n            if (!pixels.includes(currPixNo)) {\n              pixels.push(currPixNo);\n              this._ancestorsMap.get(order)!.push(currPixNo);\n              newTileBuffer.addTile(order, currPixNo);\n            }\n\n            if (!galTiles.includes(galTileNo)) {\n              galTiles.push(galTileNo);\n              this._galAncestorsMap.get(order)!.push(galTileNo);\n              newTileBuffer.addGalTile(order, galTileNo);\n            }\n          }\n        }\n      }\n    }\n\n    this._visibleTilesByOrder = { pixels: pixels, order: order };\n    this._galVisibleTilesByOrder = { pixels: galTiles, order: order };\n\n    // Build ancestor pyramids down to order 0\n    for (let o = 1; o < order; o++) {\n      const tgtOrder = order - o;\n      const list = this._ancestorsMap.get(tgtOrder) ?? [];\n      this._ancestorsMap.set(tgtOrder, list);\n\n      for (let p = 0; p < pixels.length; p++) {\n        const parent = pixels[p] >> (2 * o);\n        if (!list.includes(parent)) {\n          list.push(parent);\n          newTileBuffer.addTile(tgtOrder, parent);\n        }\n      }\n    }\n\n    for (let o = 1; o < order; o++) {\n      const tgtOrder = order - o;\n      const list = this._galAncestorsMap.get(tgtOrder) ?? [];\n      this._galAncestorsMap.set(tgtOrder, list);\n\n      for (let p = 0; p < galTiles.length; p++) {\n        const parent = galTiles[p] >> (2 * o);\n        if (!list.includes(parent)) {\n          list.push(parent);\n          newTileBuffer.addGalTile(tgtOrder, parent);\n        }\n      }\n    }\n  }\n\n  get visibleTilesByOrder(): VisibleTiles {\n    return this._visibleTilesByOrder;\n  }\n\n  get ancestorsMap(): Map<number, number[]> {\n    return this._ancestorsMap;\n  }\n\n  get galVisibleTilesByOrder(): VisibleTiles {\n    return this._galVisibleTilesByOrder;\n  }\n\n  get galAncestorsMap(): Map<number, number[]> {\n    return this._galAncestorsMap;\n  }\n\n  get visibleOrder(): number {\n    return this._visibleTilesByOrder.order;\n  }\n}\n\nexport const visibleTilesManager = new VisibleTilesManager();","'use strict';\n\nimport AbstractSkyEntity from '../AbstractSkyEntity.js';\nimport global from '../../Global.js';\n\nimport { mat4, vec4, ReadonlyMat4 } from 'gl-matrix';\nimport { Healpix } from 'healpixjs';\n\nimport { fovHelper } from '../hips/FoVHelper.js';\nimport FoVUtils from '../../utils/FoVUtils.js';\nimport { FoV } from '../FoV.js';\n\nimport CoordsType from '../../utils/CoordsType.js';\nimport Point from '../Point.js';\n\nimport GridShaderManager from '../../shader/GridShaderManager.js';\nimport GeomUtils from '../../utils/GeomUtils.js';\nimport GridTextHelper from './GridTextHelper.js';\nimport { visibleTilesManager } from '../hips/VisibleTilesManager.js';\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js';\nimport { colorHex2RGB } from '../../utils/Utils.js';\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\ninterface BoundVec {\n  x: number;\n  y: number;\n  z: number;\n}\n\n\nclass HealpixGridSingleton extends AbstractSkyEntity {\n\n  static ELEM_SIZE = 3;\n  static BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT;\n\n  private _visibleorder = 0;\n  private showGrid: boolean = false\n  private _shaderProgram!: WebGLProgram;\n  private fragmentShader!: WebGLShader;\n  private vertexShader!: WebGLShader;\n\n  private defaultColor = '#ec0acaff'\n  private gridText: GridTextHelper = new GridTextHelper()\n\n  private _attribLocations: { position: number; selected: number; pointSize: number; color: number } = {\n    position: 0,\n    selected: 1,\n    pointSize: 2,\n    color: 3,\n  };\n\n  private _nPrimitiveFlags = 0;\n\n  private _vertexCataloguePositionBuffer!: WebGLBuffer;\n  private _indexBuffer!: WebGLBuffer;\n\n  private _vertexCataloguePosition: Float32Array = new Float32Array(0);\n  private _indexes: Uint32Array = new Uint32Array(0);\n\n  private fovObj!: FoV;\n\n  static INITIAL_FOV = 180;\n  static RADIUS = 1;\n  static INITIAL_POSITION: [number, number, number] = [0.0, 0.0, 0.0];\n  static INITIAL_PhiRad = 0;\n  static INITIAL_ThetaRad = 0;\n\n\n\n  constructor() {\n    super(HealpixGridSingleton.RADIUS, HealpixGridSingleton.INITIAL_POSITION, HealpixGridSingleton.INITIAL_PhiRad, HealpixGridSingleton.INITIAL_ThetaRad, 'healpix-grid');\n  }\n\n  init(): void {\n    console.log('HealpixGridSingleton.init()');\n    this.initGL(global.gl as GL);\n\n    this._shaderProgram = (global.gl as GL).createProgram() as WebGLProgram;\n    this.initShaders();\n\n    const order = fovHelper.getHiPSNorder(HealpixGridSingleton.INITIAL_FOV);\n    this._visibleorder = order;\n\n    this._nPrimitiveFlags = 0;\n\n    this._vertexCataloguePositionBuffer = (global.gl as GL).createBuffer()!;\n    this._indexBuffer = (global.gl as GL).createBuffer()!;\n\n    this._vertexCataloguePosition = new Float32Array(0);\n\n    this.fovObj = new FoV();\n  }\n\n  get RADIUS(): number {\n    return HealpixGridSingleton.RADIUS\n  }\n\n  get INITIAL_POSITION(): [number, number, number] {\n    return HealpixGridSingleton.INITIAL_POSITION\n  }\n\n  get INITIAL_PhiRad(): number {\n    return HealpixGridSingleton.INITIAL_PhiRad\n  }\n\n  get INITIAL_ThetaRad(): number {\n    return HealpixGridSingleton.INITIAL_ThetaRad\n  }\n\n  refreshFoV() {\n    return this.fovObj.getFoV(global.insideSphere);\n  }\n\n  getFoV(): FoV {\n    return this.fovObj\n  }\n\n  getMinFoV() {\n    return this.fovObj.minFoV;\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL;\n\n    const fragmentShaderStr = GridShaderManager.healpixGridFS();\n    this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!;\n    gl.shaderSource(this.fragmentShader, fragmentShaderStr);\n    gl.compileShader(this.fragmentShader);\n    if (!gl.getShaderParameter(this.fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.fragmentShader) || 'Fragment shader compile error');\n      return;\n    }\n\n    const vertexShaderStr = GridShaderManager.healpixGridVS();\n    this.vertexShader = gl.createShader(gl.VERTEX_SHADER)!;\n    gl.shaderSource(this.vertexShader, vertexShaderStr);\n    gl.compileShader(this.vertexShader);\n    if (!gl.getShaderParameter(this.vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.vertexShader) || 'Vertex shader compile error');\n      return;\n    }\n\n    gl.attachShader(this._shaderProgram, this.vertexShader);\n    gl.attachShader(this._shaderProgram, this.fragmentShader);\n    gl.linkProgram(this._shaderProgram);\n\n    if (!gl.getProgramParameter(this._shaderProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders');\n    }\n    gl.useProgram(this._shaderProgram);\n  }\n\n  initBuffers(pixels: number[], order: number): void {\n\n    this._nPrimitiveFlags = 0;\n\n    const healpix: Healpix = global.getHealpix(order);\n    const subhpx: Healpix = global.getHealpix(order + 1);\n    const subsubhpx: Healpix = global.getHealpix(order + 2);\n\n    let positionIndex = 0;\n    let vIdx = 0;\n    const R = 1.0;\n\n    const MAX_UINT = 0xffffffff;\n\n    this._indexes = new Uint32Array(17 * pixels.length);\n    this._vertexCataloguePosition = new Float32Array(3 * 16 * pixels.length);\n\n    for (let p = 0; p < pixels.length; p++) {\n      const vecs = healpix.getBoundaries(pixels[p]) as BoundVec[];\n\n      const cpix0 = pixels[p] << 2;\n      const cpix1 = cpix0 + 1;\n      const cpix2 = cpix0 + 2;\n      const cpix3 = cpix0 + 3;\n\n      const cp0vecs = subhpx.getBoundaries(cpix0) as BoundVec[];\n      const cp3vecs = subhpx.getBoundaries(cpix3) as BoundVec[];\n\n      // helper to push a vertex\n      const pushV = (v: BoundVec) => {\n        this._vertexCataloguePosition[positionIndex] = R * v.x;\n        this._vertexCataloguePosition[positionIndex + 1] = R * v.y;\n        this._vertexCataloguePosition[positionIndex + 2] = R * v.z;\n        this._indexes[vIdx] = Math.floor(positionIndex / 3);\n        vIdx += 1;\n        positionIndex += 3;\n      };\n\n      // v0(3/0)\n      pushV(vecs[0]);\n\n      // v1(15/2)\n      let subcpix3 = cpix3 << 2;\n      let subcpix3_3 = subcpix3 + 3;\n      let tmp = subsubhpx.getBoundaries(subcpix3_3) as BoundVec[];\n      pushV(tmp[1]);\n\n      // v1(3/1)\n      pushV(cp3vecs[1]);\n\n      // v0(2/2)\n      let subcpix2 = cpix2 << 2;\n      let subcpix2_2 = subcpix2 + 2;\n      tmp = subsubhpx.getBoundaries(subcpix2_2) as BoundVec[];\n      pushV(tmp[0]);\n\n      // v1(0/0)\n      pushV(vecs[1]);\n\n      // v2(2/2)\n      pushV(tmp[2]);\n\n      // v1(0/1)\n      pushV(cp0vecs[1]);\n\n      // v1(0/2)\n      let subcpix0 = cpix0 << 2;\n      let subcpix0_2 = subcpix0;\n      tmp = subsubhpx.getBoundaries(subcpix0_2) as BoundVec[];\n      pushV(tmp[1]);\n\n      // v2(0/0)\n      pushV(vecs[2]);\n\n      // v3(0/2)\n      pushV(tmp[3]);\n\n      // v3(0/1)\n      pushV(cp0vecs[3]);\n\n      // v2(5/2)\n      let subcpix1 = cpix1 << 2;\n      let subcpix1_1 = subcpix1 + 1;\n      tmp = subsubhpx.getBoundaries(subcpix1_1) as BoundVec[];\n      pushV(tmp[2]);\n\n      // v3(0/0)\n      pushV(vecs[3]);\n\n      // v0(5/2)\n      pushV(tmp[0]);\n\n      // v3(3/1)\n      pushV(cp3vecs[3]);\n\n      tmp = subsubhpx.getBoundaries(subcpix3_3) as BoundVec[];\n      pushV(tmp[3]);\n\n      // primitive restart\n      this._indexes[vIdx] = MAX_UINT;\n      this._nPrimitiveFlags += 1;\n      vIdx += 1;\n    }\n\n  }\n\n  // updateTiles(pixels: number[], order: number) {\n  //   return (this as any)._tileBuffer.updateTiles(pixels, order);\n  // }\n\n\n  private refresh(): void {\n\n    this.refreshFoV();\n    const fov = this.getMinFoV();\n    // expose to global (legacy)\n    // (global as any).hipsFoV = fov;\n    // global.order = fovHelper.getHiPSNorder(fov);\n    // this._visibleorder = global.order;\n    this._visibleorder = fovHelper.getHiPSNorder(fov);\n  }\n\n  private enableShader(in_mMatrix: ReadonlyMat4, pMatrix: ReadonlyMat4): void {\n    const gl = global.gl as GL;\n\n    gl.useProgram(this._shaderProgram);\n    // TODO move locations retrieval elsewhere\n\n    // Uniform locations\n    const uMV = gl.getUniformLocation(this._shaderProgram, 'uMVMatrix');\n    const uP = gl.getUniformLocation(this._shaderProgram, 'uPMatrix');\n    const uColor = (global.gl as GL).getUniformLocation(this._shaderProgram, 'u_fragcolor');\n\n    // Attribute locations\n    this._attribLocations.position = gl.getAttribLocation(this._shaderProgram, 'aCatPosition');\n\n    let mvMatrix = mat4.create();\n    mvMatrix = mat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix(), in_mMatrix);\n\n    if (uMV) gl.uniformMatrix4fv(uMV, false, mvMatrix as Float32Array);\n    if (uP) gl.uniformMatrix4fv(uP, false, pMatrix as Float32Array);\n    if (uColor) {\n      const rgb = colorHex2RGB(this.defaultColor);\n      gl.uniform4f(uColor, rgb[0], rgb[1], rgb[2], 1.0);\n    }\n  }\n\n  isVisible(): boolean {\n    return this.showGrid\n  }\n\n  toggleShowGrid() {\n    this.showGrid = !this.showGrid\n  }\n\n  draw(): void {\n    const gl = global.gl as GL;\n\n    const mMatrix = this.getModelMatrix();\n    this.refresh();\n\n    if (!this.showGrid) {\n\n      // gridTextHelper.resetDivSets();\n      this.gridText.resetDivSets();\n      return;\n    }\n\n    const visibleTiles = visibleTilesManager.visibleTilesByOrder\n    const pixels = visibleTiles.pixels;\n    const order = visibleTiles.order;\n\n    this.initBuffers(pixels, order);\n\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n    this.enableShader(mMatrix, pMatrix);\n\n    // Upload positions\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCataloguePositionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertexCataloguePosition, gl.STATIC_DRAW);\n\n    gl.vertexAttribPointer(\n      this._attribLocations.position,\n      HealpixGridSingleton.ELEM_SIZE,\n      gl.FLOAT,\n      false,\n      HealpixGridSingleton.BYTES_X_ELEM * HealpixGridSingleton.ELEM_SIZE,\n      0\n    );\n    gl.enableVertexAttribArray(this._attribLocations.position);\n\n    // Index buffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexes, gl.STATIC_DRAW);\n\n    gl.drawElements(\n      gl.LINE_LOOP,\n      this._vertexCataloguePosition.length / 3 + this._nPrimitiveFlags,\n      gl.UNSIGNED_INT,\n      0\n    );\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    // Project and label pixel centers that are inside current FoV\n    let mvMatrix = mat4.create();\n    mvMatrix = mat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix(), mMatrix);\n\n    let mvpMatrix = mat4.create();\n    mvpMatrix = mat4.multiply(mvpMatrix, pMatrix, mvMatrix);\n\n    // FIX: pass model & pMatrix to match FoVUtils TS signature\n    const center = FoVUtils.getCenterJ2000(gl.canvas as HTMLCanvasElement);\n\n    const fovMin = (this.getMinFoV() * Math.PI) / 180 / 2;\n\n    for (let p = 0; p < pixels.length; p++) {\n      const pixCenter = (global.getHealpix(this._visibleorder).pix2vec(pixels[p]) as BoundVec);\n      // const pixCenter = (global.getHealpix(global.order).pix2vec(pixels[p]) as BoundVec);\n\n      const point = new Point(\n        { x: pixCenter.x, y: pixCenter.y, z: pixCenter.z },\n        CoordsType.CARTESIAN\n      );\n\n      const distance = GeomUtils.orthodromicDistance(center, point);\n      if (distance < fovMin) {\n        const vertex: [number, number, number, number] = [pixCenter.x, pixCenter.y, pixCenter.z, 1];\n        const clipspace = vec4.create();\n        vec4.transformMat4(clipspace, vertex, mvpMatrix);\n\n        // NDC divide\n        clipspace[0] /= clipspace[3];\n        clipspace[1] /= clipspace[3];\n\n        // clip → pixels\n        const pixelX = (clipspace[0] * 0.5 + 0.5) * gl.canvas.width;\n        const pixelY = (clipspace[1] * -0.5 + 0.5) * gl.canvas.height;\n\n        this.gridText.addHPXDivSet(this._visibleorder + '/' + pixels[p], pixelX, pixelY);\n        // gridTextHelper.addHPXDivSet(this._visibleorder + '/' + pixels[p], pixelX, pixelY);\n      }\n    }\n\n    // gridTextHelper.resetDivSets();\n    this.gridText.resetDivSets();\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  get visibleorder(): number {\n    return this._visibleorder;\n  }\n}\n\nconst healpixGridSingleton = new HealpixGridSingleton();\nexport default healpixGridSingleton;","/**\n * @author Fabrizio Giordano (Fab)\n */\n\"use strict\";\n\nimport { vec3, mat4, ReadonlyVec3, ReadonlyMat4 } from \"gl-matrix\";\nimport global from \"../Global.js\";\nimport computePerspectiveMatrixSingleton from \"./ComputePerspectiveMatrix.js\";\nimport healpixGridSingleton from \"../model/grid/HealpixGridSingleton.js\";\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\n\nclass RayPickingUtils {\n  private static lastNearestVisibleObjectIdx = -1;\n\n  /** Get index of the last object found under the mouse (if any). */\n  static getNearestVisibleObjectIdx(): number {\n    return this.lastNearestVisibleObjectIdx;\n  }\n\n  /**\n   * Builds a world-space ray from mouse coords.\n   * @param mouseX ClientX (page pixels)\n   * @param mouseY ClientY (page pixels)\n   * @param pMatrix Projection matrix\n   * @returns World-space direction (normalized) as a vec3\n   */\n  static getRayFromMouse(\n    mouseX: number,\n    mouseY: number,\n    pMatrix: ReadonlyMat4\n  ): vec3 {\n    if (!global.camera) {\n      throw new Error(\"Camera is not initialized.\");\n    }\n    const vMatrix = global.camera.getCameraMatrix() as ReadonlyMat4;\n    const gl = global.gl as GL;\n    const rect = (gl.canvas as HTMLCanvasElement).getBoundingClientRect();\n\n    const canvasMX = mouseX - rect.left;\n    const canvasMY = mouseY - rect.top;\n\n    // viewport → NDC\n    const x = (2.0 * canvasMX) / (gl.canvas as HTMLCanvasElement).clientWidth - 1.0;\n    const y = 1.0 - (2.0 * canvasMY) / (gl.canvas as HTMLCanvasElement).clientHeight;\n    const z = -1.0;\n\n    // NDC → clip\n    const rayClip: [number, number, number, number] = [x, y, z, 1.0];\n\n    // clip → eye\n    const pInv = mat4.create();\n    mat4.invert(pInv, pMatrix);\n    const rayEye4: [number, number, number, number] = [0, 0, 0, 0];\n    RayPickingUtils.mat4MultiplyVec4(pInv, rayClip, rayEye4);\n\n    // direction in eye space (z = -1, w = 0)\n    const rayEye: [number, number, number, number] = [rayEye4[0], rayEye4[1], -1.0, 0.0];\n\n    // eye → world\n    const vInv = mat4.create();\n    mat4.invert(vInv, vMatrix);\n    const rayWorld4: [number, number, number, number] = [0, 0, 0, 0];\n    RayPickingUtils.mat4MultiplyVec4(vInv, rayEye, rayWorld4);\n\n    const rayWorld = vec3.fromValues(rayWorld4[0], rayWorld4[1], rayWorld4[2]);\n    vec3.normalize(rayWorld, rayWorld);\n    return rayWorld;\n  }\n\n  /** a*b (4x4 * vec4) → vec4 (in `out`) */\n  private static mat4MultiplyVec4(\n    a: ReadonlyMat4,\n    b: Readonly<[number, number, number, number]>,\n    out: [number, number, number, number]\n  ): [number, number, number, number] {\n    const d = b[0], e = b[1], g = b[2], w = b[3];\n    out[0] = a[0] * d + a[4] * e + a[8] * g + a[12] * w;\n    out[1] = a[1] * d + a[5] * e + a[9] * g + a[13] * w;\n    out[2] = a[2] * d + a[6] * e + a[10] * g + a[14] * w;\n    out[3] = a[3] * d + a[7] * e + a[11] * g + a[15] * w;\n    return out;\n  }\n\n  /**\n   * Ray–sphere intersection (world space).\n   * @returns distance `t` along the ray to the first hit, or `-1` if no hit.\n   */\n  static raySphere(\n    rayOrigWorld: ReadonlyVec3,\n    rayDirectionWorld: ReadonlyVec3\n  ): number {\n    let intersectionDistance = -1;\n\n    const L = vec3.create();\n    vec3.subtract(L, rayOrigWorld, healpixGridSingleton.center);\n\n    const b = vec3.dot(rayDirectionWorld, L);\n    const c = vec3.dot(L, L) - healpixGridSingleton.radius * healpixGridSingleton.radius;\n\n    const disc = b * b - c;\n\n    if (disc > 0.0) {\n      const s = Math.sqrt(disc);\n      const ta = -b + s;\n      const tb = -b - s;\n\n      if (ta < 0.0 && tb < 0.0) {\n        // behind camera\n      } else if (tb < 0.0) {\n        intersectionDistance = ta;\n      } else {\n        intersectionDistance = Math.min(ta, tb);\n      }\n    } else if (disc === 0.0) {\n      const t = -b; // tangent\n      if (t >= 0.0) {\n        intersectionDistance = t;\n      }\n    }\n\n    return intersectionDistance;\n  }\n\n  /**\n   * Compute intersection with a single model (defaults to the Healpix grid).\n   * @returns model-space intersection point (vec3) if hit, otherwise empty array; and the picked model.\n   */\n  static getIntersectionPointWithSingleModel(\n    mouseX: number,\n    mouseY: number\n  ): number[] {\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n    const camera = global.camera;\n\n    if (!camera) {\n      throw new Error(\"Camera is not initialized.\");\n    }\n\n    const rayWorld = RayPickingUtils.getRayFromMouse(mouseX, mouseY, pMatrix);\n\n    const t = RayPickingUtils.raySphere(\n      camera.getCameraPosition() as ReadonlyVec3,\n      rayWorld\n    );\n\n    let intersectionModelPoint: number[] = [];\n    if (t >= 0) {\n      // world intersection\n      const worldHit = vec3.create();\n      vec3.scale(worldHit, rayWorld, t);\n      vec3.add(worldHit, camera.getCameraPosition() as ReadonlyVec3, worldHit);\n\n      // world → model\n      const worldHit4: [number, number, number, number] = [worldHit[0], worldHit[1], worldHit[2], 1.0];\n      const modelHit4: [number, number, number, number] = [0, 0, 0, 0];\n      RayPickingUtils.mat4MultiplyVec4(healpixGridSingleton.getModelMatrixInverse(), worldHit4, modelHit4);\n\n      intersectionModelPoint = [modelHit4[0], modelHit4[1], modelHit4[2]];\n    }\n\n    return intersectionModelPoint\n  }\n\n  // /**\n  //  * Cast a ray and find the nearest intersected model among `models`.\n  //  * Returns both the picked object and the intersection point (model space).\n  //  */\n  // static getIntersectionPointWithModel(\n  //   mouseX: number,\n  //   mouseY: number,\n  //   models: HealpixGridSingleton[]\n  // ): { intersectionPoint: number[]; pickedObject: HealpixGridSingleton | undefined } {\n  //   const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n\n  //   const distance = RayPickingUtils.getDistanceFromHealpixGrid(mouseX, mouseY, pMatrix);\n  //   let intersectionPoint = []\n  //   if (distance && distance >= 0) {\n  //     // If the ray hits the Healpix grid, we can skip checking other objects.\n  //     intersectionPoint = RayPickingUtils.getIntersectionPointWithSingleModel( mouseX, mouseY );\n  //   }\n    \n  //   return { intersectionPoint: [], pickedObject: undefined };\n  // }\n\n\n  // static getDistanceFromHealpixGrid(\n  //   mouseX: number,\n  //   mouseY: number,\n  //   pMatrix: ReadonlyMat4\n  // ): number {\n  //   const camera = global.camera;\n\n  //   if (!camera) {\n  //     throw new Error(\"Camera is not initialized.\");\n  //   }\n  //   const rayWorld = RayPickingUtils.getRayFromMouse(mouseX, mouseY, pMatrix);\n\n\n  //   const distance = RayPickingUtils.raySphere(\n  //     camera.getCameraPosition() as ReadonlyVec3,\n  //     rayWorld\n  //   );\n\n  //   return distance;\n  // }\n}\n\nexport default RayPickingUtils;","/**\n * @author Fabrizio Giordano (Fab)\n */\nimport { vec3, ReadonlyVec3 } from \"gl-matrix\";\nimport { Vec3, Pointing, Healpix } from \"healpixjs\";\nimport global from \"../Global.js\";\nimport {\n  cartesianToSpherical,\n  sphericalToAstroDeg,\n  raDegToHMS,\n  decDegToDMS,\n  type SphericalCoords,\n  type AstroCoords,\n  type HMS,\n  type DMS,\n} from \"./Utils.js\";\n\ntype XYZ = [number, number, number];\n\nfunction toVec3(p: ReadonlyVec3 | XYZ): ReadonlyVec3 {\n  return Array.isArray(p) ? (vec3.fromValues(p[0], p[1], p[2]) as ReadonlyVec3) : p;\n}\n\nclass MouseHelper {\n  private _xyz: XYZ | null = null;\n  private _raDecDeg: AstroCoords | null = null;\n  private _phiThetaDeg: SphericalCoords | null = null;\n\n  raHMS?: HMS;\n  decDMS?: DMS;\n\n  /**\n   * @param in_xyz [x, y, z]\n   * @param in_raDecDeg { ra, dec } in degrees (ICRS/J2000)\n   * @param in_phiThetaDeg { phi, theta } in degrees (spherical)\n   */\n  constructor(\n    in_xyz?: XYZ | null,\n    in_raDecDeg?: AstroCoords | null,\n    in_phiThetaDeg?: SphericalCoords | null\n  ) {\n    if (in_xyz != null) this._xyz = in_xyz;\n    if (in_raDecDeg != null) this._raDecDeg = in_raDecDeg;\n    if (in_phiThetaDeg != null) this._phiThetaDeg = in_phiThetaDeg;\n\n    if (this._raDecDeg) {\n      this.raHMS = raDegToHMS(this._raDecDeg.ra);\n      this.decDMS = decDegToDMS(this._raDecDeg.dec);\n    }\n  }\n\n  /** (Formerly `computeNpix256`) Uses global.nsideForSelection. */\n  computeNpix(): number | null {\n    if (!this._xyz) return null;\n    const hp: Healpix = global.getHealpix(global.nsideForSelection);\n    const v = new Vec3(this._xyz[0], this._xyz[1], this._xyz[2]);\n    const ptg = new Pointing(v, false);\n    return hp.ang2pix(ptg, false);\n  }\n\n  /** Update helper state from a world-space 3D point on the unit sphere. */\n  update(mousePoint: ReadonlyVec3 | XYZ): void {\n    const mp = toVec3(mousePoint);\n    const sph = cartesianToSpherical(mp);\n    const radec = sphericalToAstroDeg(sph.phi, sph.theta);\n\n    this._xyz = [mp[0], mp[1], mp[2]];\n    this._phiThetaDeg = sph;\n    this._raDecDeg = radec;\n    this.raHMS = raDegToHMS(radec.ra);\n    this.decDMS = decDegToDMS(radec.dec);\n  }\n\n  clear(): void {\n    this._xyz = null;\n    this._raDecDeg = null;\n    this._phiThetaDeg = null;\n    this.raHMS = undefined;\n    this.decDMS = undefined;\n  }\n\n  // --- getters ---\n  get xyz(): XYZ | null {\n    return this._xyz;\n  }\n  get x(): number | null {\n    return this._xyz ? this._xyz[0] : null;\n  }\n  get y(): number | null {\n    return this._xyz ? this._xyz[1] : null;\n  }\n  get z(): number | null {\n    return this._xyz ? this._xyz[2] : null;\n  }\n\n  get ra(): number | null {\n    return this._raDecDeg ? this._raDecDeg.ra : null;\n  }\n  get dec(): number | null {\n    return this._raDecDeg ? this._raDecDeg.dec : null;\n  }\n\n  get phi(): number | null {\n    return this._phiThetaDeg ? this._phiThetaDeg.phi : null;\n  }\n  get theta(): number | null {\n    return this._phiThetaDeg ? this._phiThetaDeg.theta : null;\n  }\n\n  get raDecDeg(): AstroCoords | null {\n    return this._raDecDeg;\n  }\n  get phiThetaDeg(): SphericalCoords | null {\n    return this._phiThetaDeg;\n  }\n}\n\nexport default MouseHelper;","type ColorMapName =\n  | 'grayscale'\n  | 'native'\n  | 'planck'\n  | 'cmb'\n  | 'rainbow'\n  | 'eosb'\n  | 'cubehelix'\n  | 'hot'\n  | 'gray';\n\nexport interface ColorMap {\n  name: ColorMapName;\n  r: number[];\n  g: number[];\n  b: number[];\n}\n\nexport const ColorMaps: Record<ColorMapName, ColorMap> = {\n  grayscale: {\n    name: 'grayscale',\n    r: [],\n    g: [],\n    b: [],\n  },\n\n  native: {\n    name: 'native',\n    r: [],\n    g: [],\n    b: [],\n  },\n  planck: {\n    name: 'planck',\n    r: [\n      0.0, 0.769231, 1.53846, 2.30769, 3.07692, 3.84615, 4.61538, 5.38462, 6.15385, 6.92308, 7.69231,\n      8.46154, 9.23077, 10.0, 11.5385, 13.0769, 14.6154, 16.1538, 17.6923, 19.2308, 20.7692, 22.3077,\n      23.8462, 25.3846, 26.9231, 28.4615, 30.0, 33.8462, 37.6923, 41.5385, 45.3846, 49.2308, 53.0769,\n      56.9231, 60.7692, 64.6154, 68.4615, 72.3077, 76.1538, 80.0, 88.5385, 97.0769, 105.615, 114.154,\n      122.692, 131.231, 139.769, 148.308, 156.846, 165.385, 173.923, 182.462, 191.0, 193.846, 196.692,\n      199.538, 202.385, 205.231, 208.077, 210.923, 213.769, 216.615, 219.462, 222.308, 225.154, 228.0,\n      229.182, 230.364, 231.545, 232.727, 233.909, 235.091, 236.273, 237.455, 238.636, 239.818, 241.0,\n      241.0, 241.364, 241.727, 242.091, 242.455, 242.818, 243.182, 243.545, 243.909, 244.273, 244.636,\n      245.0, 245.231, 245.462, 245.692, 245.923, 246.154, 246.385, 246.615, 246.846, 247.077, 247.308,\n      247.538, 247.769, 248.0, 248.146, 248.292, 248.438, 248.585, 248.731, 248.877, 249.023, 249.169,\n      249.315, 249.462, 249.608, 249.754, 249.9, 249.312, 248.723, 248.135, 247.546, 246.958, 246.369,\n      245.781, 245.192, 244.604, 244.015, 243.427, 242.838, 242.25, 239.308, 236.365, 233.423,\n      230.481, 227.538, 224.596, 221.654, 218.712, 215.769, 212.827, 209.885, 206.942, 204.0, 201.0,\n      198.0, 195.0, 192.0, 189.0, 186.0, 183.0, 180.0, 177.0, 174.0, 171.0, 168.0, 165.0, 161.077,\n      157.154, 153.231, 149.308, 145.385, 141.462, 137.538, 133.615, 129.692, 125.769, 121.846,\n      117.923, 114.0, 115.038, 116.077, 117.115, 118.154, 119.192, 120.231, 121.269, 122.308, 123.346,\n      124.385, 125.423, 126.462, 127.5, 131.423, 135.346, 139.269, 143.192, 147.115, 151.038, 154.962,\n      158.885, 162.808, 166.731, 170.654, 174.577, 178.5, 180.462, 182.423, 184.385, 186.346, 188.308,\n      190.269, 192.231, 194.192, 196.154, 198.115, 200.077, 202.038, 204.0, 205.962, 207.923, 209.885,\n      211.846, 213.808, 215.769, 217.731, 219.692, 221.654, 223.615, 225.577, 227.538, 229.5, 230.481,\n      231.462, 232.442, 233.423, 234.404, 235.385, 236.365, 237.346, 238.327, 239.308, 240.288,\n      241.269, 242.25, 242.642, 243.035, 243.427, 243.819, 244.212, 244.604, 244.996, 245.388,\n      245.781, 246.173, 246.565, 246.958, 247.35, 247.814, 248.277, 248.741, 249.205, 249.668,\n      250.132, 250.595, 251.059, 251.523, 251.986, 252.45\n    ],\n    g: [\n      0.0, 1.53846, 3.07692, 4.61538, 6.15385, 7.69231, 9.23077, 10.7692, 12.3077, 13.8462, 15.3846,\n      16.9231, 18.4615, 20.0, 32.6154, 45.2308, 57.8462, 70.4615, 83.0769, 95.6923, 108.308, 120.923,\n      133.538, 146.154, 158.769, 171.385, 184.0, 187.923, 191.846, 195.769, 199.692, 203.615, 207.538,\n      211.462, 215.385, 219.308, 223.231, 227.154, 231.077, 235.0, 235.308, 235.615, 235.923, 236.231,\n      236.538, 236.846, 237.154, 237.462, 237.769, 238.077, 238.385, 238.692, 239.0, 239.077, 239.154,\n      239.231, 239.308, 239.385, 239.462, 239.538, 239.615, 239.692, 239.769, 239.846, 239.923, 240.0,\n      240.091, 240.182, 240.273, 240.364, 240.455, 240.545, 240.636, 240.727, 240.818, 240.909, 241.0,\n      241.0, 240.909, 240.818, 240.727, 240.636, 240.545, 240.455, 240.364, 240.273, 240.182, 240.091,\n      240.0, 239.615, 239.231, 238.846, 238.462, 238.077, 237.692, 237.308, 236.923, 236.538, 236.154,\n      235.769, 235.385, 235.0, 232.615, 230.231, 227.846, 225.462, 223.077, 220.692, 218.308, 215.923,\n      213.538, 211.154, 208.769, 206.385, 204.0, 200.077, 196.154, 192.231, 188.308, 184.385, 180.462,\n      176.538, 172.615, 168.692, 164.769, 160.846, 156.923, 153.0, 147.115, 141.231, 135.346, 129.462,\n      123.577, 117.692, 111.808, 105.923, 100.038, 94.1538, 88.2692, 82.3846, 76.5, 73.0769, 69.6538,\n      66.2308, 62.8077, 59.3846, 55.9615, 52.5385, 49.1154, 45.6923, 42.2692, 38.8462, 35.4231, 32.0,\n      29.5385, 27.0769, 24.6154, 22.1538, 19.6923, 17.2308, 14.7692, 12.3077, 9.84615, 7.38462,\n      4.92308, 2.46154, 0.0, 9.80769, 19.6154, 29.4231, 39.2308, 49.0385, 58.8462, 68.6538, 78.4615,\n      88.2692, 98.0769, 107.885, 117.692, 127.5, 131.423, 135.346, 139.269, 143.192, 147.115, 151.038,\n      154.962, 158.885, 162.808, 166.731, 170.654, 174.577, 178.5, 180.462, 182.423, 184.385, 186.346,\n      188.308, 190.269, 192.231, 194.192, 196.154, 198.115, 200.077, 202.038, 204.0, 205.962, 207.923,\n      209.885, 211.846, 213.808, 215.769, 217.731, 219.692, 221.654, 223.615, 225.577, 227.538, 229.5,\n      230.481, 231.462, 232.442, 233.423, 234.404, 235.385, 236.365, 237.346, 238.327, 239.308,\n      240.288, 241.269, 242.25, 242.642, 243.035, 243.427, 243.819, 244.212, 244.604, 244.996,\n      245.388, 245.781, 246.173, 246.565, 246.958, 247.35, 247.814, 248.277, 248.741, 249.205,\n      249.668, 250.132, 250.595, 251.059, 251.523, 251.986, 252.45\n    ],\n    b: [\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 254.615, 254.231, 253.846, 253.462, 253.077, 252.692, 252.308, 251.923, 251.538, 251.154,\n      250.769, 250.385, 250.0, 249.615, 249.231, 248.846, 248.462, 248.077, 247.692, 247.308, 246.923,\n      246.538, 246.154, 245.769, 245.385, 245.0, 242.0, 239.0, 236.0, 233.0, 230.0, 227.0, 224.0,\n      221.0, 218.0, 215.0, 212.0, 212.0, 208.636, 205.273, 201.909, 198.545, 195.182, 191.818,\n      188.455, 185.091, 181.727, 178.364, 175.0, 171.538, 168.077, 164.615, 161.154, 157.692, 154.231,\n      150.769, 147.308, 143.846, 140.385, 136.923, 133.462, 130.0, 122.942, 115.885, 108.827, 101.769,\n      94.7115, 87.6539, 80.5962, 73.5385, 66.4808, 59.4231, 52.3654, 45.3077, 38.25, 36.2885, 34.3269,\n      32.3654, 30.4038, 28.4423, 26.4808, 24.5192, 22.5577, 20.5962, 18.6346, 16.6731, 14.7115, 12.75,\n      11.7692, 10.7885, 9.80769, 8.82692, 7.84615, 6.86539, 5.88461, 4.90385, 3.92308, 2.94231,\n      1.96154, 0.980769, 0.0, 2.46154, 4.92308, 7.38462, 9.84616, 12.3077, 14.7692, 17.2308, 19.6923,\n      22.1538, 24.6154, 27.0769, 29.5385, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0,\n      32.0, 32.0, 32.0, 32.0, 41.3077, 50.6154, 59.9231, 69.2308, 78.5385, 87.8462, 97.1539, 106.462,\n      115.769, 125.077, 134.385, 143.692, 153.0, 156.923, 160.846, 164.769, 168.692, 172.615, 176.538,\n      180.462, 184.385, 188.308, 192.231, 196.154, 200.077, 204.0, 205.962, 207.923, 209.885, 211.846,\n      213.808, 215.769, 217.731, 219.692, 221.654, 223.615, 225.577, 227.538, 229.5, 230.481, 231.462,\n      232.442, 233.423, 234.404, 235.385, 236.365, 237.346, 238.327, 239.308, 240.288, 241.269,\n      242.25, 242.838, 243.427, 244.015, 244.604, 245.192, 245.781, 246.369, 246.958, 247.546,\n      248.135, 248.723, 249.312, 249.9, 250.096, 250.292, 250.488, 250.685, 250.881, 251.077, 251.273,\n      251.469, 251.665, 251.862, 252.058, 252.254, 252.45, 252.682, 252.914, 253.145, 253.377,\n      253.609, 253.841, 254.073, 254.305, 254.536, 254.768, 255.0\n    ],\n  },\n\n  cmb: {\n    name: 'cmb',\n    r: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 12, 18, 24, 30, 36, 42, 48,\n      54, 60, 66, 72, 78, 85, 91, 97, 103, 109, 115, 121, 127, 133, 139, 145, 151, 157, 163, 170, 176,\n      182, 188, 194, 200, 206, 212, 218, 224, 230, 236, 242, 248, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 251, 247, 244, 240, 236, 233, 229, 226, 222, 218, 215, 211, 208, 204, 200, 197,\n      193, 190, 186, 182, 179, 175, 172, 168, 164, 161, 157, 154, 150, 146, 143, 139, 136, 132, 128,\n      125, 121, 118, 114, 110, 107, 103, 100\n    ],\n    g: [\n      0, 2, 5, 8, 10, 13, 16, 18, 21, 24, 26, 29, 32, 34, 37, 40, 42, 45, 48, 50, 53, 56, 58, 61, 64,\n      66, 69, 72, 74, 77, 80, 82, 85, 88, 90, 93, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 122,\n      124, 127, 129, 132, 134, 137, 139, 142, 144, 147, 150, 152, 155, 157, 160, 162, 165, 167, 170,\n      172, 175, 177, 180, 182, 185, 188, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218,\n      221, 221, 221, 222, 222, 222, 223, 223, 224, 224, 224, 225, 225, 225, 226, 226, 227, 227, 227,\n      228, 228, 229, 229, 229, 230, 230, 230, 231, 231, 232, 232, 232, 233, 233, 233, 234, 234, 235,\n      235, 235, 236, 236, 237, 235, 234, 233, 231, 230, 229, 227, 226, 225, 223, 222, 221, 219, 218,\n      217, 215, 214, 213, 211, 210, 209, 207, 206, 205, 203, 202, 201, 199, 198, 197, 195, 194, 193,\n      191, 190, 189, 187, 186, 185, 183, 182, 181, 180, 177, 175, 172, 170, 167, 165, 162, 160, 157,\n      155, 152, 150, 147, 145, 142, 140, 137, 135, 132, 130, 127, 125, 122, 120, 117, 115, 112, 110,\n      107, 105, 102, 100, 97, 95, 92, 90, 87, 85, 82, 80, 77, 75, 73, 71, 69, 68, 66, 64, 62, 61, 59,\n      57, 55, 54, 52, 50, 48, 47, 45, 43, 41, 40, 38, 36, 34, 33, 31, 29, 27, 26, 24, 22, 20, 19, 17,\n      15, 13, 12, 10, 8, 6, 5, 3, 1, 0\n    ],\n    b: [\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246,\n      245, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 236, 235, 234, 233, 232, 231, 230, 229,\n      228, 227, 226, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 217, 211, 206, 201, 196, 191,\n      186, 181, 176, 171, 166, 161, 156, 151, 146, 141, 136, 131, 126, 121, 116, 111, 105, 100, 95,\n      90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ],\n  },\n\n  rainbow: {\n    name: 'rainbow',\n    r: [\n      0, 4, 9, 13, 18, 22, 27, 31, 36, 40, 45, 50, 54, 58, 61, 64, 68, 69, 72, 74, 77, 79, 80, 82, 83,\n      85, 84, 86, 87, 88, 86, 87, 87, 87, 85, 84, 84, 84, 83, 79, 78, 77, 76, 71, 70, 68, 66, 60, 58,\n      55, 53, 46, 43, 40, 36, 33, 25, 21, 16, 12, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 21, 25, 29, 33, 42, 46, 51, 55,\n      63, 67, 72, 76, 80, 89, 93, 97, 101, 110, 114, 119, 123, 131, 135, 140, 144, 153, 157, 161, 165,\n      169, 178, 182, 187, 191, 199, 203, 208, 212, 221, 225, 229, 233, 242, 246, 250, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255\n    ],\n    g: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8,\n      16, 21, 25, 29, 38, 42, 46, 51, 55, 63, 67, 72, 76, 84, 89, 93, 97, 106, 110, 114, 119, 127,\n      131, 135, 140, 144, 152, 157, 161, 165, 174, 178, 182, 187, 195, 199, 203, 208, 216, 220, 225,\n      229, 233, 242, 246, 250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 250, 242, 238, 233, 229, 221, 216, 212, 208, 199, 195,\n      191, 187, 178, 174, 170, 165, 161, 153, 148, 144, 140, 131, 127, 123, 119, 110, 106, 102, 97,\n      89, 85, 80, 76, 72, 63, 59, 55, 51, 42, 38, 34, 29, 21, 17, 12, 8, 0\n    ],\n    b: [\n      0, 3, 7, 10, 14, 19, 23, 28, 32, 38, 43, 48, 53, 59, 63, 68, 72, 77, 81, 86, 91, 95, 100, 104,\n      109, 113, 118, 122, 127, 132, 136, 141, 145, 150, 154, 159, 163, 168, 173, 177, 182, 186, 191,\n      195, 200, 204, 209, 214, 218, 223, 227, 232, 236, 241, 245, 250, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 246, 242, 238, 233, 225, 220, 216, 212,\n      203, 199, 195, 191, 187, 178, 174, 170, 165, 157, 152, 148, 144, 135, 131, 127, 123, 114, 110,\n      106, 102, 97, 89, 84, 80, 76, 67, 63, 59, 55, 46, 42, 38, 34, 25, 21, 16, 12, 8, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ],\n  },\n  eosb: {\n    name: 'eosb',\n    r: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 9, 18, 27, 36, 45, 49, 57, 72, 81, 91, 100, 109, 118, 127, 136, 131, 139, 163, 173, 182, 191,\n      200, 209, 218, 227, 213, 221, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255,\n      255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255,\n      255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255,\n      255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229,\n      255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229,\n      229, 255, 253, 251, 249, 247, 245, 243, 241, 215, 214, 235, 234, 232, 230, 228, 226, 224, 222,\n      198, 196, 216, 215, 213, 211, 209, 207, 205, 203, 181, 179, 197, 196, 194, 192, 190, 188, 186,\n      184, 164, 162, 178, 176, 175, 173, 171, 169, 167, 165, 147, 145, 159, 157, 156, 154, 152, 150,\n      148, 146, 130, 128, 140, 138, 137, 135, 133, 131, 129, 127, 113, 111, 121, 119, 117, 117\n    ],\n    g: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 7, 15, 23, 31, 39, 47, 55, 57, 64, 79, 87, 95, 103, 111, 119, 127, 135, 129, 136, 159, 167,\n      175, 183, 191, 199, 207, 215, 200, 207, 239, 247, 255, 255, 255, 255, 255, 255, 229, 229, 255,\n      255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229,\n      255, 250, 246, 242, 238, 233, 229, 225, 198, 195, 212, 208, 204, 199, 195, 191, 187, 182, 160,\n      156, 169, 165, 161, 157, 153, 148, 144, 140, 122, 118, 127, 125, 123, 121, 119, 116, 114, 112,\n      99, 97, 106, 104, 102, 99, 97, 95, 93, 91, 80, 78, 84, 82, 80, 78, 76, 74, 72, 70, 61, 59, 63,\n      61, 59, 57, 55, 53, 50, 48, 42, 40, 42, 40, 38, 36, 33, 31, 29, 27, 22, 21, 21, 19, 16, 14, 12,\n      13, 8, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ],\n    b: [\n      116, 121, 127, 131, 136, 140, 144, 148, 153, 157, 145, 149, 170, 174, 178, 182, 187, 191, 195,\n      199, 183, 187, 212, 216, 221, 225, 229, 233, 238, 242, 221, 225, 255, 247, 239, 231, 223, 215,\n      207, 199, 172, 164, 175, 167, 159, 151, 143, 135, 127, 119, 100, 93, 95, 87, 79, 71, 63, 55, 47,\n      39, 28, 21, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0\n    ],\n  },\n  cubehelix: {\n    name: 'cubehelix',\n    r: [\n      0, 1, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 20, 21, 22, 23, 23, 24, 24, 25, 25, 25,\n      26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 25, 25, 25, 25, 24, 24, 24, 23, 23, 23, 23, 22, 22,\n      22, 21, 21, 21, 21, 21, 21, 20, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 23, 23, 24, 25, 26, 27,\n      27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 60, 62, 65, 67, 70,\n      72, 75, 78, 81, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 120, 123, 126, 129, 132,\n      135, 138, 141, 144, 147, 150, 153, 155, 158, 161, 164, 166, 169, 171, 174, 176, 178, 181, 183,\n      185, 187, 189, 191, 193, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 209,\n      210, 211, 211, 211, 212, 212, 212, 212, 212, 212, 212, 212, 211, 211, 211, 210, 210, 210, 209,\n      208, 208, 207, 207, 206, 205, 205, 204, 203, 203, 202, 201, 201, 200, 199, 199, 198, 197, 197,\n      196, 196, 195, 195, 194, 194, 194, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 194, 194,\n      195, 195, 196, 196, 197, 198, 199, 200, 200, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213,\n      215, 217, 218, 220, 222, 223, 225, 227, 229, 231, 232, 234, 236, 238, 240, 242, 244, 245, 247,\n      249, 251, 253, 255\n    ],\n    g: [\n      0, 0, 1, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22,\n      24, 25, 26, 28, 29, 31, 32, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53, 55, 57, 58, 60,\n      62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 81, 83, 84, 86, 88, 89, 91, 92, 94, 95, 97, 98, 99,\n      101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 114, 115, 116, 116, 117, 118,\n      118, 119, 119, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122, 122, 122, 122,\n      122, 122, 122, 122, 122, 122, 121, 121, 121, 121, 121, 121, 121, 121, 121, 120, 120, 120, 120,\n      120, 120, 120, 120, 120, 120, 121, 121, 121, 121, 121, 122, 122, 122, 123, 123, 124, 124, 125,\n      125, 126, 127, 127, 128, 129, 130, 131, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143,\n      144, 146, 147, 149, 150, 152, 154, 155, 157, 158, 160, 162, 164, 165, 167, 169, 171, 172, 174,\n      176, 178, 180, 182, 183, 185, 187, 189, 191, 193, 194, 196, 198, 200, 202, 203, 205, 207, 208,\n      210, 212, 213, 215, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235,\n      236, 237, 238, 239, 240, 240, 241, 242, 243, 244, 244, 245, 246, 247, 247, 248, 248, 249, 250,\n      250, 251, 251, 252, 252, 253, 253, 254, 255\n    ],\n    b: [\n      0, 1, 3, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47,\n      48, 50, 52, 54, 56, 57, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 74, 75, 76, 76, 77,\n      77, 77, 78, 78, 78, 78, 78, 78, 78, 77, 77, 77, 76, 76, 75, 75, 74, 73, 73, 72, 71, 70, 69, 68,\n      67, 66, 66, 65, 64, 63, 61, 60, 59, 58, 58, 57, 56, 55, 54, 53, 52, 51, 51, 50, 49, 49, 48, 48,\n      47, 47, 47, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 51, 52, 53, 55, 56, 57, 59, 60,\n      62, 64, 65, 67, 69, 71, 74, 76, 78, 81, 83, 86, 88, 91, 94, 96, 99, 102, 105, 108, 111, 114,\n      117, 120, 124, 127, 130, 133, 136, 140, 143, 146, 149, 153, 156, 159, 162, 165, 169, 172, 175,\n      178, 181, 184, 186, 189, 192, 195, 197, 200, 203, 205, 207, 210, 212, 214, 216, 218, 220, 222,\n      224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 239, 240, 241, 241, 242, 242,\n      242, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 242, 242, 242, 242, 241, 241, 241, 241,\n      240, 240, 240, 239, 239, 239, 239, 239, 238, 238, 238, 238, 238, 238, 238, 238, 239, 239, 239,\n      240, 240, 240, 241, 242, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255\n    ]\n  },\n  hot: {\n    name: 'hot',\n    r: [\n      0.0, 4.0, 8.0, 12.0, 16.0, 20.0, 24.0, 28.0, 32.0, 36.0, 40.0, 44.0, 48.0, 52.0, 56.0, 60.0,\n      64.0, 68.0, 72.0, 76.0, 80.0, 84.0, 88.0, 92.0, 96.0, 100.0, 104.0, 108.0, 112.0, 116.0,\n      120.0, 124.0, 128.0, 132.0, 136.0, 140.0, 144.0, 148.0, 152.0, 156.0, 160.0, 164.0, 168.0,\n      172.0, 176.0, 180.0, 184.0, 188.0, 192.0, 196.0, 200.0, 204.0, 208.0, 212.0, 216.0, 220.0,\n      224.0, 228.0, 232.0, 236.0, 240.0, 244.0, 248.0, 252.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0\n    ],\n    g: [\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.30769,\n      4.61538, 6.92308, 9.23077, 11.5385, 13.8462, 16.1538, 18.4615, 20.7692, 23.0769, 25.3846, 27.6923,\n      30.0, 32.3077, 34.6154, 36.9231, 39.2308, 41.5385, 43.8462, 46.1538, 48.4615, 50.7692, 53.0769,\n      55.3846, 57.6923, 60.0, 62.3077, 64.6154, 66.9231, 69.2308, 71.5385, 73.8462, 76.1538, 78.4615,\n      80.7692, 83.0769, 85.3846, 87.6923, 90.0, 92.3077, 94.6154, 96.9231, 99.2308, 101.538, 103.846, 106.154,\n      108.462, 110.769, 113.077, 115.385, 117.692, 120.0, 122.308, 124.615, 126.923, 129.231, 131.538,\n      133.846, 136.154, 138.462, 140.769, 143.077, 145.385, 147.692, 150.0, 152.308, 154.615, 156.923,\n      159.231, 161.538, 163.846, 166.154, 168.462, 170.769, 173.077, 175.385, 177.692, 180.0, 182.308,\n      184.615, 186.923, 189.231, 191.538, 193.846, 196.154, 198.462, 200.769, 203.077, 205.385,\n      207.692, 210.0, 212.308, 214.615, 216.923, 219.231, 221.538, 223.846, 226.154, 228.462, 230.769,\n      233.077, 235.385, 237.692, 240.0, 242.308, 244.615, 246.923, 249.231, 251.538, 253.846, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0\n    ],\n    b: [\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.980769,\n      1.96154, 2.94231, 3.92308, 4.90385, 5.88461, 6.86539, 7.84615, 8.82692, 9.80769, 10.7885, 11.7692, 12.75,\n      13.7308, 14.7115, 15.6923, 16.6731, 17.6538, 18.6346, 19.6154, 20.5962, 21.5769, 22.5577, 23.5385,\n      24.5192, 25.5, 26.4808, 27.4615, 28.4423, 29.4231, 30.4038, 31.3846, 32.3654, 33.3462, 34.3269,\n      35.3077, 36.2885, 37.2692, 38.25, 39.2308, 40.2115, 41.1923, 42.1731, 43.1538, 44.1346, 45.1154, 46.0962,\n      47.0769, 48.0577, 49.0385, 50.0192, 51.0, 51.9808, 52.9615, 53.9423, 54.9231, 55.9038, 56.8846,\n      57.8654, 58.8462, 59.8269, 60.8077, 61.7885, 62.7692, 63.75, 64.7308, 65.7115, 66.6923, 67.6731,\n      68.6538, 69.6346, 70.6154, 71.5962, 72.5769, 73.5577, 74.5385, 75.5192, 76.5, 77.4808, 78.4615, 79.4423,\n      80.4231, 81.4038, 82.3846, 83.3654, 84.3462, 85.3269, 86.3077, 87.2885, 88.2692, 89.25, 90.2308,\n      91.2115, 92.1923, 93.1731, 94.1538, 95.1346, 96.1154, 97.0962, 98.0769, 99.0577, 100.038,\n      101.019, 102.0, 102.981, 103.962, 104.942, 105.923, 106.904, 107.885, 108.865, 109.846, 110.827,\n      111.808, 112.788, 113.769, 114.75, 115.731, 116.711, 117.692, 118.673, 119.654, 120.634,\n      121.615, 122.596, 123.577, 124.557, 125.538, 126.519, 127.5\n    ]\n  },\n  gray: {\n    name: 'gray',\n    r: [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n      25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\n      47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\n      67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,\n      89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,\n      108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,\n      124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138,\n      139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,\n      153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,\n      165, 166, 167, 168, 169, 170, 171, 172,\n      173, 174, 175, 176, 177,\n      178, 179,\n      180,\n      181,\n      182,\n      183,\n      184,\n      185,\n      186,\n      187,\n      188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,\n      201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,\n      213, 214, 215, 216, 217, 218, 219, 220,\n      221, 222,\n      223,\n      224,\n      225,\n      226,\n      227,\n      228,\n      229,\n      230,\n      231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242,\n      243, 244, 245, 246, 247, 248, 249, 250,\n      251,\n      252,\n      253,\n      254,\n      255\n    ],\n    g: [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n      25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\n      46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\n      57,\n      58,\n      59,\n      60,\n      61,\n      62,\n      63,\n      64,\n      65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\n      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\n      95,\n      96,\n      97,\n      98,\n      99,\n      100,\n      101,\n      102,\n      103,\n      104,\n      105, 106, 107, 108, 109, 110, 111, 112, 113, 114,\n      115,\n      116,\n      117,\n      118,\n      119,\n      120,\n      121,\n      122,\n      123,\n      124,\n      125, 126, 127, 128, 129, 130, 131, 132, 133, 134,\n      135,\n      136,\n      137,\n      138,\n      139,\n      140,\n      141,\n      142,\n      143,\n      144,\n      145, 146, 147, 148, 149, 150, 151, 152, 153, 154,\n      155,\n      156,\n      157,\n      158,\n      159,\n      160,\n      161,\n      162,\n      163,\n      164,\n      165, 166, 167, 168, 169, 170, 171, 172, 173, 174,\n      175,\n      176,\n      177,\n      178,\n      179,\n      180,\n      181,\n      182,\n      183,\n      184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,\n      197, 198, 199, 200, 201, 202, 203, 204, 205, 206,\n      207,\n      208,\n      209,\n      210,\n      211,\n      212,\n      213,\n      214,\n      215,\n      216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227,\n      228, 229, 230, 231, 232, 233, 234, 235, 236, 237,\n      238,\n      239,\n      240,\n      241,\n      242,\n      243,\n      244,\n      245,\n      246,\n      247, 248, 249, 250,\n      251,\n      252,\n      253,\n      254,\n      255\n    ],\n    b: [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n      59,\n      60,\n      61,\n      62,\n      63,\n      64,\n      65,\n      66,\n      67,\n      68,\n      69,\n      70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,\n      89,\n      90,\n      91,\n      92,\n      93,\n      94,\n      95,\n      96,\n      97,\n      98,\n      99,\n      100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,\n      117,\n      118,\n      119,\n      120,\n      121,\n      122,\n      123,\n      124,\n      125,\n      126,\n      127,\n      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144,\n      145,\n      146,\n      147,\n      148,\n      149,\n      150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,\n      165,\n      166,\n      167,\n      168,\n      169,\n      170,\n      171,\n      172,\n      173,\n      174,\n      175,\n      176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192,\n      193,\n      194,\n      195,\n      196,\n      197,\n      198,\n      199,\n      200,\n      201,\n      202,\n      203,\n      204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,\n      221,\n      222,\n      223,\n      224,\n      225,\n      226,\n      227,\n      228,\n      229,\n      230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,\n      241,\n      242,\n      243,\n      244,\n      245,\n      246,\n      247,\n      248,\n      249,\n      250,\n      251,\n      252,\n      253,\n      254,\n      255\n    ]\n  },\n}\n\nexport default ColorMaps;","'use strict'\n\nimport global from '../../Global.js'\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport { fovHelper } from './FoVHelper.js'\nimport HiPS from './HiPS.js'\n\ninterface Vec3 { x: number; y: number; z: number }\ninterface Xyf { ix: number; iy: number; face: number }\ninterface HealpixLike {\n  order: number\n  nest2xyf(nest: number): Xyf\n  xyf2nest(x: number, y: number, face: number): number\n  getBoundaries(nest: number): Vec3[]\n  getPointsForXyfNoStep(x: number, y: number, face: number): Vec3[]\n}\n\nclass AncestorTile {\n  private _hips: HiPS\n  private _tileno: number\n  private _baseurl: string\n  private _order: number\n\n  private _ready = false\n  private _format: string\n  \n  private _isGalacticHips: boolean\n\n  public opacity = 1.0\n  private _hipsShaderIndex = 0\n  private _pixels: number[] = []\n\n  private _texture: WebGLTexture | null = null\n  private _image!: HTMLImageElement\n  private _texurl = ''\n\n\n  private vertexPosition!: Float32Array[]\n  private vertexPositionBuffer!: WebGLBuffer[]\n  private vertexIndices!: Uint16Array\n  private vertexIndexBuffer!: WebGLBuffer\n\n  constructor(tileno: number, order: number, hips: HiPS) {\n    this._hips = hips\n    this._tileno = tileno\n\n    this._format = hips.format\n    this._baseurl = hips.baseURL\n\n    this._isGalacticHips = hips.isGalacticHips\n\n    this._order = order\n    this.initImage()\n  }\n\n  // Kept for API parity; there is no interval created in this class.\n  destroyIntervals(): void {\n    // no-op\n  }\n\n  private initImage(): void {\n    const dirnumber = Math.floor(this._tileno / 10000) * 10000\n    this._texurl = `${this._baseurl}/Norder${this._order}/Dir${dirnumber}/Npix${this._tileno}.${this._format}`\n\n    this._image = new Image()\n    this._image.onload = () => this.imageLoaded()\n    this._image.onerror = () => {\n      console.error('File not found? %s', this._texurl)\n    }\n    this._image.crossOrigin = 'anonymous'\n    // If you ever need FITS handling, call this.loadImage() instead.\n    this._image.src = this._texurl\n  }\n\n  private imageLoaded(): void {\n    this.textureLoaded()\n    this.initModelBuffer()\n\n    const gl = (global as any).gl as WebGL2RenderingContext\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image)\n\n    this._ready = true\n  }\n\n  private textureLoaded(): void {\n    hipsShaderProgram.enableProgram()\n\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this._texture = gl.createTexture()\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n\n    gl.uniform1i((hipsShaderProgram as any).shaderProgram.samplerUniform, this._hipsShaderIndex)\n\n    if (!gl.isTexture(this._texture)) {\n      console.log('error in texture')\n    }\n  }\n\n  private initModelBuffer(): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this.vertexPosition = []\n    this.vertexPositionBuffer = []\n    this.vertexIndices = new Uint16Array()\n    // this.vertexIndexBuffer created later\n\n    const reforder = fovHelper.getRefOrder(this._order)\n    const orighealpix = (global as any).getHealpix(this._order) as HealpixLike\n    const origxyf = orighealpix.nest2xyf(this._tileno)\n\n    const orderjump = reforder - this._order\n\n    const dxmin = origxyf.ix << orderjump\n    const dxmax = (origxyf.ix << orderjump) + (1 << orderjump)\n    const dymin = origxyf.iy << orderjump\n    const dymax = (origxyf.iy << orderjump) + (1 << orderjump)\n\n    const healpix = (global as any).getHealpix(reforder) as HealpixLike\n\n    this._pixels = []\n\n    // Using getBoundaries (like the JS source)\n    this.setupPositionAndTexture4Quadrant(dxmin, dxmax / 2, dymin, dymax / 2, 0, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant(dxmax / 2, dxmax, dymin, dymax / 2, 1, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant(dxmin, dxmax / 2, dymax / 2, dymax, 2, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant(dxmax / 2, dxmax, dymax / 2, dymax, 3, healpix, orderjump, origxyf)\n\n    const pixelsXQuadrant = this.vertexPosition[0].length / 20\n    this.vertexIndices = this.computeVertexIndices(pixelsXQuadrant)\n\n    this.vertexIndexBuffer = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndices, gl.STATIC_DRAW)\n  }\n\n  private computeVertexIndices(pixelsXQuadrant: number): Uint16Array {\n    const vertexIndices = new Uint16Array(6 * pixelsXQuadrant)\n    let baseFaceIndex = 0\n    for (let j = 0; j < pixelsXQuadrant; j++) {\n      vertexIndices[6 * j] = baseFaceIndex\n      vertexIndices[6 * j + 1] = baseFaceIndex + 1\n      vertexIndices[6 * j + 2] = baseFaceIndex + 2\n\n      vertexIndices[6 * j + 3] = baseFaceIndex + 2\n      vertexIndices[6 * j + 4] = baseFaceIndex + 3\n      vertexIndices[6 * j + 5] = baseFaceIndex\n\n      baseFaceIndex += 4\n    }\n    return vertexIndices\n  }\n\n  // Version that uses getPointsForXyfNoStep (kept for reference; not used in this class)\n  private setupPositionAndTexture4Quadrant2(\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    qidx: number,\n    healpix: HealpixLike,\n    orderjump: number,\n    origxyf: Xyf\n  ): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this.vertexPosition[qidx] = new Float32Array(20 * (dxmax - dxmin) * (dymax - dymin))\n\n    const step = 1 / (1 << orderjump)\n    let p = 0\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        const facesVec3Array = healpix.getPointsForXyfNoStep(dx, dy, origxyf.face)\n        const uindex = dy - (origxyf.iy << orderjump)\n        const vindex = dx - (origxyf.ix << orderjump)\n\n        this.vertexPosition[qidx][20 * p] = facesVec3Array[0].x\n        this.vertexPosition[qidx][20 * p + 1] = facesVec3Array[0].y\n        this.vertexPosition[qidx][20 * p + 2] = facesVec3Array[0].z\n        this.vertexPosition[qidx][20 * p + 3] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 4] = 1 - (step + step * vindex)\n\n        this.vertexPosition[qidx][20 * p + 5] = facesVec3Array[1].x\n        this.vertexPosition[qidx][20 * p + 6] = facesVec3Array[1].y\n        this.vertexPosition[qidx][20 * p + 7] = facesVec3Array[1].z\n        this.vertexPosition[qidx][20 * p + 8] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 9] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 10] = facesVec3Array[2].x\n        this.vertexPosition[qidx][20 * p + 11] = facesVec3Array[2].y\n        this.vertexPosition[qidx][20 * p + 12] = facesVec3Array[2].z\n        this.vertexPosition[qidx][20 * p + 13] = step * uindex\n        this.vertexPosition[qidx][20 * p + 14] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 15] = facesVec3Array[3].x\n        this.vertexPosition[qidx][20 * p + 16] = facesVec3Array[3].y\n        this.vertexPosition[qidx][20 * p + 17] = facesVec3Array[3].z\n        this.vertexPosition[qidx][20 * p + 18] = step * uindex\n        this.vertexPosition[qidx][20 * p + 19] = 1 - (step + step * vindex)\n        p++\n      }\n    }\n\n    this.vertexPositionBuffer[qidx] = (global as any).gl.createBuffer()\n    ;(global as any).gl.bindBuffer((global as any).gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n    ;(global as any).gl.bufferData(\n      (global as any).gl.ARRAY_BUFFER,\n      this.vertexPosition[qidx],\n      (global as any).gl.STATIC_DRAW\n    )\n  }\n\n  // Version used by the original JS, collecting _pixels via xyf2nest + getBoundaries\n  private setupPositionAndTexture4Quadrant(\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    qidx: number,\n    healpix: HealpixLike,\n    orderjump: number,\n    origxyf: Xyf\n  ): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this.vertexPosition[qidx] = new Float32Array(20 * (dxmax - dxmin) * (dymax - dymin))\n\n    const step = 1 / (1 << orderjump)\n    let p = 0\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        const ipix3 = healpix.xyf2nest(dx, dy, origxyf.face)\n        this._pixels.push(ipix3)\n\n        const facesVec3Array = healpix.getBoundaries(ipix3)\n        const uindex = dy - (origxyf.iy << orderjump)\n        const vindex = dx - (origxyf.ix << orderjump)\n\n        this.vertexPosition[qidx][20 * p] = facesVec3Array[0].x\n        this.vertexPosition[qidx][20 * p + 1] = facesVec3Array[0].y\n        this.vertexPosition[qidx][20 * p + 2] = facesVec3Array[0].z\n        this.vertexPosition[qidx][20 * p + 3] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 4] = 1 - (step + step * vindex)\n\n        this.vertexPosition[qidx][20 * p + 5] = facesVec3Array[1].x\n        this.vertexPosition[qidx][20 * p + 6] = facesVec3Array[1].y\n        this.vertexPosition[qidx][20 * p + 7] = facesVec3Array[1].z\n        this.vertexPosition[qidx][20 * p + 8] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 9] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 10] = facesVec3Array[2].x\n        this.vertexPosition[qidx][20 * p + 11] = facesVec3Array[2].y\n        this.vertexPosition[qidx][20 * p + 12] = facesVec3Array[2].z\n        this.vertexPosition[qidx][20 * p + 13] = step * uindex\n        this.vertexPosition[qidx][20 * p + 14] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 15] = facesVec3Array[3].x\n        this.vertexPosition[qidx][20 * p + 16] = facesVec3Array[3].y\n        this.vertexPosition[qidx][20 * p + 17] = facesVec3Array[3].z\n        this.vertexPosition[qidx][20 * p + 18] = step * uindex\n        this.vertexPosition[qidx][20 * p + 19] = 1 - (step + step * vindex)\n        p++\n      }\n    }\n\n    this.vertexPositionBuffer[qidx] = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexPosition[qidx], gl.STATIC_DRAW)\n  }\n\n  public draw(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): boolean {\n    if (!this._ready) return false\n\n    let quadrantsToDraw: Set<number> = new Set([0, 1, 2, 3])\n    if (visibleOrder > this._order) {\n      const q = this.drawChildren(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n      if (q) quadrantsToDraw = q\n    }\n\n    hipsShaderProgram.enableShaders(pMatrix, vMatrix, mMatrix, colorMapIdx)\n\n    const gl = (global as any).gl as WebGL2RenderingContext\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.vertexPositionAttribute)\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.textureCoordAttribute)\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n    gl.uniform1f((hipsShaderProgram as any).locations.textureAlpha, this.opacity)\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    const elemno = this.vertexIndices.length\n\n    quadrantsToDraw.forEach((qidx) => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n\n      gl.vertexAttribPointer(\n        (hipsShaderProgram as any).locations.vertexPositionAttribute,\n        3,\n        gl.FLOAT,\n        false,\n        5 * 4,\n        0\n      )\n      gl.vertexAttribPointer(\n        (hipsShaderProgram as any).locations.textureCoordAttribute,\n        2,\n        gl.FLOAT,\n        false,\n        5 * 4,\n        3 * 4\n      )\n\n      gl.drawElements(gl.TRIANGLES, elemno, gl.UNSIGNED_SHORT, 0)\n    })\n\n    gl.disableVertexAttribArray((hipsShaderProgram as any).locations.vertexPositionAttribute)\n    gl.disableVertexAttribArray((hipsShaderProgram as any).locations.textureCoordAttribute)\n\n    return true\n  }\n\n  private drawChildren(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): Set<number> | undefined {\n    const quadrantsToDraw = new Set<number>([0, 1, 2, 3])\n    const childrenOrder = this._order + 1\n    if (!visibleTilesMap.has(childrenOrder)) return\n\n    for (let c = 0; c < 4; c++) {\n      const childTileNo = (this._tileno << 2) + c\n      const visibleChildren = visibleTilesMap.get(childrenOrder)!\n      if (visibleChildren.includes(childTileNo)) {\n        const childTile = this._isGalacticHips\n          ? newTileBuffer.getGalTile(childTileNo, childrenOrder, this._hips)\n          : newTileBuffer.getTile(childTileNo, childrenOrder, this._hips)\n\n        childTile.draw(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n        if ((childTile as any)._ready) {\n          quadrantsToDraw.delete((childTile as any)._tileno - (this._tileno << 2))\n        }\n      }\n    }\n    return quadrantsToDraw\n  }\n}\n\nexport default AncestorTile","'use strict'\n\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport global from '../../Global.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport HiPS from './HiPS.js'\n\n\nexport default class AllSky {\n  private _ready = false\n  private _hips: HiPS\n\n  private _format: string\n  private _baseurl: string\n  private _isGalacticHips: boolean\n\n  private _order = 3\n  public opacity = 1.0\n\n  private _hipsShaderIndex = 0\n  private _texture: WebGLTexture | null = null\n  private _image!: HTMLImageElement\n  private _texurl!: string\n\n  private _textureLoaded = false\n\n  private _maxTiles = 0\n  private _numFacesXTile = 0\n  private _numFaces = 0\n\n  private vertexPosition!: Float32Array\n  private vertexPositionBuffer!: WebGLBuffer\n  private vertexIndexBuffer!: WebGLBuffer\n  private vidx = 0\n\n  constructor(hips: HiPS) {\n    this._hips = hips\n\n    this._format = hips.format\n    this._baseurl = hips.baseURL\n    this._isGalacticHips = hips.isGalacticHips\n\n    this.initImage()\n  }\n\n  private initImage(): void {\n    this._image = new Image()\n    this._texurl = `${this._baseurl}/Norder3/Allsky.${this._format}`\n\n    this._image.onload = () => this.imageLoaded()\n    this._image.onerror = () => {\n      console.error('File not found? %s', this._texurl)\n    }\n\n    this._image.setAttribute('crossorigin', 'anonymous')\n    this._image.src = this._texurl\n  }\n\n  private imageLoaded(): void {\n    this.textureLoaded()\n    this.initModelBuffer()\n\n    this._textureLoaded = true\n    this._ready = true\n  }\n\n  private textureLoaded(): void {\n    hipsShaderProgram.enableProgram()\n\n    const gl = global.gl as WebGL2RenderingContext\n    this._texture = gl.createTexture()\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    // gl.uniform1i(hipsShaderProgram.shaderProgram.samplerUniform, this._hipsShaderIndex)\n\n    if (!gl.isTexture(this._texture)) {\n      console.log('error in texture')\n    }\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n\n    const useMipmaps = true\n    gl.texParameteri(\n      gl.TEXTURE_2D,\n      gl.TEXTURE_MIN_FILTER,\n      useMipmaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR\n    );\n    // MAG filter: ONLY NEAREST or LINEAR are valid\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n    // gl.generateMipmap(gl.TEXTURE_2D)\n\n    if (useMipmaps) gl.generateMipmap(gl.TEXTURE_2D);\n\n  }\n\n  private initModelBuffer(): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n\n    const hpx = (global as any).getHealpix(this._order)\n    this._maxTiles = hpx.getNPix()\n\n    const orderjump = 1\n    const tgtHpxOrder = this._order + orderjump\n    const healpix = (global as any).getHealpix(this._order)\n    const tgtHealpix = (global as any).getHealpix(tgtHpxOrder)\n\n    this._numFacesXTile = 4 ** orderjump // used in gl.draw\n    this._numFaces = this._numFacesXTile * this._maxTiles\n    this.vertexPosition = new Float32Array(20 * this._numFaces)\n\n    let sindex = 0\n    let tindex = 0\n    this.vidx = 0\n\n    for (let t = 0; t < this._maxTiles; t++) {\n      const xyf = healpix.nest2xyf(t)\n      const dxmin = xyf.ix << orderjump\n      const dxmax = (xyf.ix << orderjump) + (1 << orderjump)\n      const dymin = xyf.iy << orderjump\n      const dymax = (xyf.iy << orderjump) + (1 << orderjump)\n\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin,\n        dxmin + (dxmax - dxmin) / 2,\n        dymin,\n        dymin + (dymax - dymin) / 2,\n        tgtHealpix,\n        xyf,\n        0,\n        0\n      )\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin + (dxmax - dxmin) / 2,\n        dxmax,\n        dymin,\n        dymin + (dymax - dymin) / 2,\n        tgtHealpix,\n        xyf,\n        0,\n        1\n      )\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin,\n        dxmin + (dxmax - dxmin) / 2,\n        dymin + (dymax - dymin) / 2,\n        dymax,\n        tgtHealpix,\n        xyf,\n        1,\n        0\n      )\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin + (dxmax - dxmin) / 2,\n        dxmax,\n        dymin + (dymax - dymin) / 2,\n        dymax,\n        tgtHealpix,\n        xyf,\n        1,\n        1\n      )\n\n      sindex++\n      if (sindex === 27) {\n        tindex++\n        sindex = 0\n      }\n    }\n\n    const vertexIndices = new Uint16Array(6 * this._numFaces)\n    let baseFaceIndex = 0\n    for (let i = 0; i < this._numFaces; i++) {\n      vertexIndices[6 * i] = baseFaceIndex\n      vertexIndices[6 * i + 1] = baseFaceIndex + 1\n      vertexIndices[6 * i + 2] = baseFaceIndex + 3\n\n      vertexIndices[6 * i + 3] = baseFaceIndex + 1\n      vertexIndices[6 * i + 4] = baseFaceIndex + 2\n      vertexIndices[6 * i + 5] = baseFaceIndex + 3\n\n      baseFaceIndex += 4\n    }\n\n    this.vertexPositionBuffer = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexPosition, gl.STATIC_DRAW)\n\n    this.vertexIndexBuffer = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, vertexIndices, gl.STATIC_DRAW)\n  }\n\n  private setupPositionAndTexture4Quadrant(\n    sindex: number,\n    tindex: number,\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    tgthealpix: any,\n    xyf: any,\n    qx: number,\n    qy: number\n  ): void {\n    let facesVec3Array: Array<{ x: number; y: number; z: number }> = []\n\n    const factor = 2 ** (tgthealpix.order - 3)\n    const s_step = 1 / (27 * factor) // 0.037037037...\n    const t_step = 1 / (29 * factor) // 0.034482759...\n\n    const s_pixel_size = s_step / 64\n    const t_pixel_size = t_step / 64\n\n    const base_s = factor * s_step * sindex + s_step * qx\n    const base_t = factor * t_step * tindex + t_step * qy\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        facesVec3Array = tgthealpix.getPointsForXyfNoStep(dx, dy, xyf.face)\n\n        // bottom right\n        this.vertexPosition[20 * this.vidx] = facesVec3Array[0].x\n        this.vertexPosition[20 * this.vidx + 1] = facesVec3Array[0].y\n        this.vertexPosition[20 * this.vidx + 2] = facesVec3Array[0].z\n        this.vertexPosition[20 * this.vidx + 3] = s_step + base_s - s_pixel_size\n        this.vertexPosition[20 * this.vidx + 4] = 1 - (t_step + base_t) + t_pixel_size\n\n        // top right\n        this.vertexPosition[20 * this.vidx + 5] = facesVec3Array[1].x\n        this.vertexPosition[20 * this.vidx + 6] = facesVec3Array[1].y\n        this.vertexPosition[20 * this.vidx + 7] = facesVec3Array[1].z\n        this.vertexPosition[20 * this.vidx + 8] = s_step + base_s - s_pixel_size\n        this.vertexPosition[20 * this.vidx + 9] = 1 - base_t - t_pixel_size\n\n        // top left\n        this.vertexPosition[20 * this.vidx + 10] = facesVec3Array[2].x\n        this.vertexPosition[20 * this.vidx + 11] = facesVec3Array[2].y\n        this.vertexPosition[20 * this.vidx + 12] = facesVec3Array[2].z\n        this.vertexPosition[20 * this.vidx + 13] = base_s + s_pixel_size\n        this.vertexPosition[20 * this.vidx + 14] = 1 - base_t - t_pixel_size\n\n        // bottom left\n        this.vertexPosition[20 * this.vidx + 15] = facesVec3Array[3].x\n        this.vertexPosition[20 * this.vidx + 16] = facesVec3Array[3].y\n        this.vertexPosition[20 * this.vidx + 17] = facesVec3Array[3].z\n        this.vertexPosition[20 * this.vidx + 18] = base_s + s_pixel_size\n        this.vertexPosition[20 * this.vidx + 19] = 1 - (t_step + base_t) + t_pixel_size\n\n        this.vidx++\n      }\n    }\n  }\n\n  /**\n   * Renders the all-sky layer and, when available, delegates to higher-resolution child tiles.\n   * Returns `true` if it attempted to draw (ready), `false` if still not ready.\n   */\n  public draw(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): boolean {\n    if (!this._ready) return false\n\n    let allSkyTiles2Skip: number[] = []\n    if (visibleOrder >= this._order) {\n      const skipped = this.drawChildren(\n        visibleOrder,\n        visibleTilesMap,\n        pMatrix,\n        vMatrix,\n        mMatrix,\n        colorMapIdx\n      )\n      if (skipped) allSkyTiles2Skip = skipped\n    }\n\n    const gl = global.gl as WebGL2RenderingContext\n\n    hipsShaderProgram.enableShaders(pMatrix, vMatrix, mMatrix, colorMapIdx)\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.vertexPositionAttribute)\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.textureCoordAttribute)\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n    gl.uniform1f(hipsShaderProgram.locations.textureAlpha, this.opacity)\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n\n    gl.vertexAttribPointer(\n      hipsShaderProgram.locations.vertexPositionAttribute,\n      3,\n      gl.FLOAT,\n      false,\n      5 * 4,\n      0\n    )\n    gl.vertexAttribPointer(\n      hipsShaderProgram.locations.textureCoordAttribute,\n      2,\n      gl.FLOAT,\n      false,\n      5 * 4,\n      3 * 4\n    )\n\n    for (let t = 0; t < this._maxTiles; t++) {\n      if (!allSkyTiles2Skip.includes(t)) {\n        gl.drawElements(\n          gl.TRIANGLES,\n          6 * this._numFacesXTile,\n          gl.UNSIGNED_SHORT,\n          12 * t * this._numFacesXTile\n        )\n      }\n    }\n\n    gl.disableVertexAttribArray(hipsShaderProgram.locations.vertexPositionAttribute)\n    gl.disableVertexAttribArray(hipsShaderProgram.locations.textureCoordAttribute)\n\n    return true\n  }\n\n  private drawChildren(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): number[] | undefined {\n    const childrenOrder = this._order\n    if (!visibleTilesMap.has(childrenOrder)) return\n\n    const visibleTiles = visibleTilesMap.get(childrenOrder) as number[]\n    const allSkyTiles2Skip: number[] = []\n\n    for (let i = 0; i < visibleTiles.length; i++) {\n      const tileno = visibleTiles[i]\n      const childTile = this._isGalacticHips\n        ? newTileBuffer.getGalTile(tileno, childrenOrder, this._hips)\n        : newTileBuffer.getTile(tileno, childrenOrder, this._hips)\n\n      childTile.draw(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n      if (childTile.getReadyState()) {\n        allSkyTiles2Skip.push(tileno)\n      }\n    }\n    return allSkyTiles2Skip\n  }\n}","'use strict'\n/**\n * @author Fabrizio Giordano (Fab77)\n */\n\nimport AbstractSkyEntity from '../AbstractSkyEntity.js'\nimport { fovHelper } from './FoVHelper.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport ColorMaps, { ColorMap } from '../ColorMaps.js'\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport AncestorTile from './AncestorTile.js'\nimport { visibleTilesManager } from './VisibleTilesManager.js'\nimport AllSky from './AllSky.js'\nimport healpixGridSingleton from '../grid/HealpixGridSingleton.js'\nimport global from '../../Global.js'\nimport {HiPSDescriptor} from './HiPSDescriptor.js'\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js'\n\n\nclass HiPS extends AbstractSkyEntity {\n  \n  private _ancestorTiles: AncestorTile[]\n  private _allSkyTile: AllSky | null\n\n  private _format: string\n  private _baseurl: string\n  private _maxorder: number\n  private _minorder: number\n\n  private _visibleorder = 3\n  private _allSky = true\n\n  public samplerIdx = 0\n  public colorMapIdx = 0\n  public colorMap = ColorMaps['native']\n\n  // exposed read-only helpers\n  get maxOrder(): number { return this._maxorder }\n  get minOrder(): number { return this._minorder }\n  get baseURL(): string { return this._baseurl }\n  get format(): string { return this._format }\n\n  constructor(\n    radius: number,\n    position: [number, number, number],\n    xrad: number,\n    yrad: number,\n    descriptor: HiPSDescriptor\n  ) {\n    super(radius, position, xrad, yrad, descriptor.surveyName, descriptor.isGalactic)\n    this.initGL((global as any).gl as WebGL2RenderingContext)\n\n    newTileBuffer.addHiPS(this)\n\n    // DEBUG logs kept from JS (optional)\n    // eslint-disable-next-line no-console\n    console.log('HiPS frame ' + descriptor.hipsFrame)\n    // eslint-disable-next-line no-console\n    console.log('HiPS minOrder ' + descriptor.minOrder)\n\n    this._format = descriptor.imgFormats[0]\n    this._baseurl = descriptor.url\n    this._maxorder = descriptor.maxOrder\n    this._minorder = descriptor.minOrder\n\n    this.initShaders()\n\n    // pick initial order from a starting FoV\n    const fov = 180\n    let order = fovHelper.getHiPSNorder(fov)\n    this._visibleorder = Math.min(order, this._maxorder)\n\n    this._ancestorTiles = []\n    this._allSkyTile = null\n\n    // auto-detect all-sky: original code forces true\n    this._allSky = true\n    if (this._allSky) {\n      this._allSkyTile = new AllSky(this)\n    } else {\n      for (let t = 0; t < 12; t++) {\n        this._ancestorTiles.push(new AncestorTile(t, 0, this))\n      }\n    }\n  }\n\n  changeFormat(format: string): void {\n    this._format = format\n    // original code referenced _tileBuffer; if you have one, wire it back.\n    // Keeping calls no-op to avoid breaking at runtime if _tileBuffer is undefined.\n    // (newVisibleTilesManager + TileBuffer drive the actual tile lifecycle)\n    // @ts-ignore\n    if (this._tileBuffer?.clearAll) this._tileBuffer.clearAll()\n    // @ts-ignore\n    if (this._tileBuffer) this._tileBuffer._format = this._format\n    const pixelByOrder =\n      this.isGalacticHips\n        ? visibleTilesManager.galVisibleTilesByOrder\n        : visibleTilesManager.visibleTilesByOrder\n    // @ts-ignore\n    if (this._tileBuffer?.updateTiles) this._tileBuffer.updateTiles(pixelByOrder.pixels, pixelByOrder.order)\n  }\n\n  /**\n   * Shader colormap switcher\n   * 0 -> native\n   * 1 -> grayscale\n   * 2 -> planck\n   * 3 -> cmb\n   * 4 -> rainbow\n   * 5 -> eosb\n   * 6 -> cubehelix\n   */\n  changeColorMap(colorMap: ColorMap): void {\n    this.colorMap = colorMap\n    switch (colorMap.name) {\n      case 'grayscale':\n        this.colorMapIdx = 1\n        hipsShaderProgram.setGrayscaleShader()\n        break\n      case 'planck':\n        this.colorMapIdx = 2\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'cmb':\n        this.colorMapIdx = 3\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'rainbow':\n        this.colorMapIdx = 4\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'eosb':\n        this.colorMapIdx = 5\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'cubehelix':\n        this.colorMapIdx = 6\n        hipsShaderProgram.setColorMapShader()\n        break\n      default:\n        this.colorMapIdx = 0\n        hipsShaderProgram.setNativeShader()\n    }\n  }\n\n  private initShaders(): void {\n    hipsShaderProgram.enableProgram()\n    this.shaderProgram = hipsShaderProgram.shaderProgram\n  }\n\n  getCurrentHealpixOrder(): number {\n    return this._visibleorder\n  }\n\n  private refresh(): void {\n    const fov = healpixGridSingleton.getMinFoV()\n    this._visibleorder = Math.min(fovHelper.getHiPSNorder(fov), this._maxorder)\n  }\n\n  draw(): void {\n    \n    if (!global.camera || global.camera.getCameraMatrix() === undefined) return\n    this.refresh()\n    \n    const vMatrix = global.camera.getCameraMatrix() as Float32Array\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as Float32Array\n    const mMatrix = this.getModelMatrix() as Float32Array\n\n    if (this._allSky && this._allSkyTile) {\n      if (this.isGalacticHips) {\n        this._allSkyTile.draw(\n          visibleTilesManager.galVisibleTilesByOrder.order,\n          visibleTilesManager.galAncestorsMap,\n          pMatrix,\n          vMatrix,\n          mMatrix,\n          this.colorMapIdx\n        )\n      } else {\n        this._allSkyTile.draw(\n          visibleTilesManager.visibleTilesByOrder.order,\n          visibleTilesManager.ancestorsMap,\n          pMatrix,\n          vMatrix,\n          mMatrix,\n          this.colorMapIdx\n        )\n      }\n      return\n    }\n\n    // Non all-sky path\n    const order = this.isGalacticHips\n      ? visibleTilesManager.galVisibleTilesByOrder.order\n      : visibleTilesManager.visibleTilesByOrder.order\n    const map = this.isGalacticHips\n      ? visibleTilesManager.galAncestorsMap\n      : visibleTilesManager.ancestorsMap\n\n    this._ancestorTiles.forEach((ancestor) => {\n      ancestor.draw(order, map, pMatrix, vMatrix, mMatrix, this.colorMapIdx)\n    })\n  }\n}\n\nexport default HiPS","'use strict'\n/**\n * @author Fabrizio Giordano (Fab77)\n */\n\nclass TapMetadata {\n  private _name: string\n  private _description: string\n  private _unit: string\n  private _dataType: string\n  private _ucd: string\n  private _uType: string\n  private _index?: number\n\n  /**\n   *\n   * @param name - column name\n   * @param description - column description\n   * @param unit - physical unit\n   * @param datatype - ADQL datatype\n   * @param ucd - Unified Content Descriptor\n   * @param utype - ObsCore / STC-S type\n   */\n  constructor(\n    name: string,\n    description: string,\n    unit: string,\n    datatype: string,\n    ucd: string,\n    utype: string\n  ) {\n    this._name = name\n    this._description = description\n    this._unit = unit\n    this._dataType = datatype\n    this._ucd = ucd\n    this._uType = utype\n  }\n\n  get name(): string {\n    return this._name\n  }\n\n  get description(): string {\n    return this._description\n  }\n\n  get unit(): string {\n    return this._unit\n  }\n\n  get datatype(): string {\n    return this._dataType\n  }\n\n  get ucd(): string {\n    return this._ucd\n  }\n\n  get uType(): string {\n    return this._uType\n  }\n\n  get index(): number | undefined {\n    return this._index\n  }\n\n  set index(idx: number | undefined) {\n    this._index = idx\n  }\n}\n\nexport default TapMetadata","'use strict'\n\n/**\n * @author Fabrizio Giordano (Fab77)\n */\nimport TapMetadata from './TapMetadata.js'\n\nclass TapMetadataList {\n  private _posEqRAMetaColumns: TapMetadata[] // ucd.includes('pos.eq.ra')\n  private _posEqDecMetaColumns: TapMetadata[] // ucd.includes('pos.eq.dec')\n  private _sRegionMetaColumns: TapMetadata[]  // STC-S / s_region candidates\n  private _pgSphereMetaColumns: TapMetadata[] // ucd.includes('pos.outline.meta.pgsphere')\n  private _metadataList: TapMetadata[]\n\n  constructor() {\n    this._metadataList = []\n    this._posEqRAMetaColumns = []\n    this._posEqDecMetaColumns = []\n    this._sRegionMetaColumns = []\n    this._pgSphereMetaColumns = []\n  }\n\n  /**\n   * Add a TapMetadata entry and classify it into relevant groups\n   */\n  addMetadata(tapMetadata: TapMetadata): void {\n    const length = this._metadataList.push(tapMetadata)\n    const idx = length - 1\n    tapMetadata.index = idx\n\n    if (tapMetadata.ucd?.includes('pos.eq.ra')) {\n      this._posEqRAMetaColumns.push(tapMetadata)\n    } else if (tapMetadata.ucd?.includes('pos.eq.dec')) {\n      this._posEqDecMetaColumns.push(tapMetadata)\n    }\n\n    if (tapMetadata.ucd?.includes('pos.outline;meta.pgsphere')) {\n      this._pgSphereMetaColumns.push(tapMetadata)\n    }\n\n    if (\n      tapMetadata.uType?.includes('Char.SpatialAxis.Coverage.Support.Area') ||\n      tapMetadata.datatype?.includes('adql:REGION') ||\n      tapMetadata.ucd?.includes('pos.outline;obs.field') ||\n      tapMetadata.name === 'stc_s' // for ESASky\n    ) {\n      this._sRegionMetaColumns.push(tapMetadata)\n    }\n  }\n\n  get metadataList(): TapMetadata[] {\n    return this._metadataList\n  }\n\n  set metadataList(metadataList: TapMetadata[]) {\n    this._metadataList = metadataList\n  }\n\n  get pgSphereMetaColumns(): TapMetadata[] {\n    return this._pgSphereMetaColumns\n  }\n\n  get sRegionMetaColumns(): TapMetadata[] {\n    return this._sRegionMetaColumns\n  }\n\n  get posEqRAMetaColumns(): TapMetadata[] {\n    return this._posEqRAMetaColumns\n  }\n\n  get posEqDecMetaColumns(): TapMetadata[] {\n    return this._posEqDecMetaColumns\n  }\n}\n\nexport default TapMetadataList","/**\n * @author Fabrizio Giordano (Fab77)\n */\nimport FootprintSetGL from '../footprints/FootprintSetGL.js'\nimport CatalogueGL from '../catalogues/CatalogueGL.js'\n\nexport type ADQLFunction = string | { name: string; signature?: string; doc?: string }\n\nexport class TapRepo {\n  private _adqlFunctionList: ADQLFunction[]\n\n  private _cataloguesList: CatalogueGL[]\n  private _observationsList: FootprintSetGL[]\n  private _notClassified: unknown[]\n\n  private _activeObservations: FootprintSetGL[]\n  private _activeCatalogues: CatalogueGL[]\n\n  private _tapBaseURL: string\n\n  constructor(tapUrl: string) {\n    this._tapBaseURL = tapUrl\n\n    this._cataloguesList = []\n    this._observationsList = []\n    this._notClassified = []\n\n    this._activeObservations = []\n    this._activeCatalogues = []\n\n    this._adqlFunctionList = []\n  }\n\n  get tapBaseUrl(): string {\n    return this._tapBaseURL\n  }\n\n  setCataloguesList(cataloguesList: CatalogueGL[]): void {\n    this._cataloguesList = cataloguesList\n  }\n\n  setObservationsList(observationList: FootprintSetGL[]): void {\n    this._observationsList = observationList\n  }\n\n  setNotClassifiedList(notClassifiedList: unknown[]): void {\n    this._notClassified = notClassifiedList\n  }\n\n  setCatalogueActive(catalogue: CatalogueGL): void {\n    this._activeCatalogues.push(catalogue)\n  }\n\n  setObservationActive(observation: FootprintSetGL): void {\n    this._activeObservations.push(observation)\n  }\n\n  get cataloguesList(): CatalogueGL[] {\n    return this._cataloguesList\n  }\n\n  get observationsList(): FootprintSetGL[] {\n    return this._observationsList\n  }\n\n  set adqlFunctionList(adqlFunctionList: ADQLFunction[] | undefined) {\n    if (adqlFunctionList !== undefined) {\n      this._adqlFunctionList = adqlFunctionList\n    }\n  }\n\n  get adqlFunctionList(): ADQLFunction[] {\n    return this._adqlFunctionList\n  }\n}","// CatalogueProps.ts\ntype UCD = string | undefined;\n\nimport TapMetadata from \"../tap/TapMetadata.js\";\nimport TapMetadataList from \"../tap/TapMetadataList.js\";\n\nfunction colName(col?: TapMetadata): string | undefined {\n  return col?.name ?? col?.name;\n}\n\nfunction sameName(a?: TapMetadata, name?: string): boolean {\n  if (!a || !name) return false;\n  return colName(a) === name;\n}\n\n\n\nexport default class CatalogueProps {\n\n  static STANDARD_SIZE: string = \"STANDARD_SIZE\"\n\n  raColumn!: TapMetadata;\n  decColumn!: TapMetadata;\n  nameColumn?: TapMetadata;\n  /** Optional: numeric/size-mapped column */\n  shapeSizeColumn?: TapMetadata;\n  /** Optional: hue/category-mapped column */\n  shapeHueColumn?: TapMetadata;\n\n  /** Base color (hex string like #RRGGBB) */\n  shapeColor: string;\n\n  /** Full metadata list reference (kept in sync by updateColumnsIndex) */\n  tapMetadataList: TapMetadataList;\n\n  constructor(tapMetadataList: TapMetadataList, color: string) {\n    this.raColumn = this.setRAColumns(tapMetadataList);\n    this.decColumn = this.setDecColumns(tapMetadataList);\n    this.nameColumn = this.setNameColumn(tapMetadataList);\n\n    this.shapeSizeColumn = undefined;\n    this.shapeHueColumn = undefined;\n    this.shapeColor = color;\n    this.tapMetadataList = tapMetadataList;\n  }\n\n  /** Rebinds saved column references to the new metadata objects (preserves indices, etc.). */\n  updateColumnsIndex(metadataList: TapMetadataList['_metadataList']): void {\n    for (const col of metadataList) {\n      if (sameName(this.raColumn, colName(col))) this.raColumn = col;\n      else if (sameName(this.decColumn, colName(col))) this.decColumn = col;\n      else if (this.shapeHueColumn && sameName(this.shapeHueColumn, colName(col))) this.shapeHueColumn = col;\n      else if (this.shapeSizeColumn && sameName(this.shapeSizeColumn, colName(col))) this.shapeSizeColumn = col;\n      else if (this.nameColumn && sameName(this.nameColumn, colName(col))) this.nameColumn = col;\n    }\n    // Keep the container reference up to date if needed elsewhere.\n    this.tapMetadataList.metadataList = metadataList;\n  }\n\n  private setRAColumns(tapMetadataList: TapMetadataList): TapMetadata {\n    let column: TapMetadata | undefined;\n\n    for (const tapMetadata of tapMetadataList.posEqRAMetaColumns) {\n      const u = tapMetadata.ucd;\n      if (u && u.includes('pos.eq.ra')) {\n        if (u.includes('meta.main')) {\n          column = tapMetadata; // prefer the main one\n          break;\n        }\n        if (!column) column = tapMetadata; // fallback to first valid one\n      }\n    }\n\n    if (!column) {\n      throw new Error('No RA column found (UCD pos.eq.ra) in _posEqRAMetaColumns');\n    }\n    return column;\n  }\n\n  private setDecColumns(tapMetadataList: TapMetadataList): TapMetadata {\n    let column: TapMetadata | undefined;\n\n    for (const tapMetadata of tapMetadataList.posEqDecMetaColumns) {\n      const u = tapMetadata.ucd;\n      if (u && u.includes('pos.eq.dec')) {\n        if (u.includes('meta.main')) {\n          column = tapMetadata; // prefer the main one\n          break;\n        }\n        if (!column) column = tapMetadata; // fallback to first valid one\n      }\n    }\n\n    if (!column) {\n      throw new Error('No Dec column found (UCD pos.eq.dec) in _posEqDecMetaColumns');\n    }\n    return column;\n  }\n\n  private setNameColumn(tapMetadataList: TapMetadataList): TapMetadata | undefined {\n    let column: TapMetadata | undefined;\n\n    for (const tapMetadata of tapMetadataList.metadataList) {\n      const u = tapMetadata.ucd;\n      if (u && u.includes('meta.id') && u.includes('meta.main')) {\n        column = tapMetadata; // prefer id+main\n      }\n    }\n    // It’s okay if there’s no strong \"name\" column; methods below handle undefined.\n    return column;\n  }\n\n  changeColor(color: string): void {\n    this.shapeColor = color;\n  }\n\n  changeMetaName(metacolumnName: string): void {\n    if (this.nameColumn && colName(this.nameColumn) === metacolumnName) return;\n\n    for (const column of this.tapMetadataList.metadataList) {\n      if (colName(column) === metacolumnName) {\n        this.nameColumn = column;\n        break;\n      }\n    }\n  }\n\n  /** Returns true to indicate a refresh-by-FoV is needed (preserves original behavior). */\n  changeCatalogueMetaRA(metacolumnName: string): boolean {\n    if (colName(this.raColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.raColumn = column;\n          break;\n        }\n      }\n    }\n    return true;\n  }\n\n  /** Returns true to indicate a refresh-by-FoV is needed (preserves original behavior). */\n  changeCatalogueMetaDec(metacolumnName: string): boolean {\n    if (colName(this.decColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.decColumn = column;\n          break;\n        }\n      }\n    }\n    return true;\n  }\n\n  resetCatalogueMetaShapeSize(): void {\n    this.shapeSizeColumn = undefined;\n  }\n\n  changeCatalogueMetaShapeSize(metacolumnName: string): void {\n    if (!this.shapeSizeColumn || colName(this.shapeSizeColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.shapeSizeColumn = column;\n          break;\n        }\n      }\n    }\n  }\n\n  resetCatalogueMetaShapeHue() {\n    this.shapeHueColumn = undefined;\n  }\n\n  changeCatalogueMetaShapeHue(metacolumnName: string): void {\n    if (!this.shapeHueColumn || colName(this.shapeHueColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.shapeHueColumn = column;\n          break;\n        }\n      }\n    }\n  }\n}","'use strict';\n\nimport { Healpix, Vec3, Pointing } from 'healpixjs';\nimport global from '../Global.js';\nimport Point from './Point.js';\n\nexport interface SourceDetail {\n  key: string;\n  value: string | number;\n  valueType?: string;\n  unit?: string;\n}\n\nclass Source {\n  private _point: Point;\n  private _name?: string;\n  private _details: any[];\n  private _h_pix!: number;\n  private _shapesize: number;\n  private _brightnessFactor: number;\n\n  /**\n   * @param in_point Point.js (Cartesian/RA-Dec wrapper)\n   * @param in_details Optional array of key/value metadata\n   */\n  constructor(in_point: Point, in_details: any[] = []) {\n    this._point = in_point;\n    this._details = in_details;\n    this._shapesize = 8.0;\n    this._brightnessFactor = -99;\n\n    this.computeHealpixPixel();\n  }\n  \n  getDetailByindex(index: number): string | number | undefined {\n    if (index < 0 || index >= this._details.length) {\n      return undefined;\n    }\n    return this._details[index];\n  }\n\n  get details(): any[] {\n    return this._details;\n  }\n  private computeHealpixPixel(): void {\n    // Get Healpix instance from global\n    const healpix: Healpix = global.getHealpix(global.nsideForSelection);\n    const vec3 = new Vec3(this._point.x, this._point.y, this._point.z);\n    const ptg = new Pointing(vec3, false);\n    this._h_pix = healpix.ang2pix(ptg, false);\n  }\n\n  get point(): Point {\n    return this._point;\n  }\n\n  get name(): string | undefined {\n    return this._name;\n  }\n\n  get healpixPixel(): number {\n    return this._h_pix;\n  }\n\n  get shapeSize(): number {\n    return this._shapesize;\n  }\n  set shapeSize(size: number) {\n    this._shapesize = size;\n  }\n\n  get brightnessFactor(): number {\n    return this._brightnessFactor;\n  }\n  /**\n   * @param factor Must be in [-1..1]\n   */\n  set brightnessFactor(factor: number) {\n    this._brightnessFactor = factor;\n  }\n}\n\nexport default Source;","// HiPSShaderProgram.ts\nimport { mat4 } from 'gl-matrix';\nimport global from '../Global.js'\nimport ShaderManager from './ShaderManager.js'\n\ntype GL = WebGL2RenderingContext;\n\ntype UniformNames = {\n  vertex_color: string,\n  m_perspective: string,\n  m_model_view: string,\n}\n\ntype AttributeNames = {\n  vertex_pos: string\n  vertex_selected: string\n  point_size: string\n  point_hue: string\n}\n\ntype Locations = {\n  pMatrix: WebGLUniformLocation | null\n  mvMatrix: WebGLUniformLocation | null\n  color: WebGLUniformLocation | null\n  position: number\n  hovered: number\n  pointSize: number\n  brightness: number\n}\n\nexport default class CatalogueShaderProgram {\n  private _shaderProgram: WebGLProgram | undefined\n  private _vertexShader!: WebGLShader\n  private _fragmentShader!: WebGLShader\n\n  readonly gl_uniforms: UniformNames\n  readonly gl_attributes: AttributeNames\n  readonly locations: Locations\n\n  \n  constructor() {\n    this.gl_uniforms = {\n      vertex_color: 'u_fragcolor',\n      m_perspective: 'uPMatrix',\n      m_model_view: 'uMVMatrix'\n    }\n\n    this.gl_attributes = {\n      vertex_pos: 'aCatPosition',\n      vertex_selected: 'a_selected',\n      point_size: 'a_pointsize',\n      point_hue: 'a_brightness'\n    }\n\n    this.locations = {\n      pMatrix: null,\n      mvMatrix: null,\n      color: null,\n      position: -1,\n      hovered: -1,\n      pointSize: -1,\n      brightness: -1\n    }\n  }\n\n  get shaderProgram(): WebGLProgram {\n    if (!this._shaderProgram) {\n      const gl = global.gl as GL\n      this._shaderProgram = gl.createProgram() as WebGLProgram\n      this.initShaders()\n    }\n    return this._shaderProgram\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL\n\n    const fragmentShaderStr = ShaderManager.catalogueFS()\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    console.log('FS log:', gl.getShaderInfoLog(this._fragmentShader) || 'ok');\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n\n    const vertexShaderStr = ShaderManager.catalogueVS()\n    this._vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader\n    gl.shaderSource(this._vertexShader, vertexShaderStr)\n    gl.compileShader(this._vertexShader)\n    console.log('VS log:', gl.getShaderInfoLog(this._vertexShader) || 'ok');\n    if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._vertexShader) || 'Vertex shader compile error')\n      return\n    }\n\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._vertexShader)\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this.shaderProgram as WebGLProgram)\n\n    if (!gl.getProgramParameter(this.shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n\n    // shaderUtility.useProgram(this.shaderProgram)\n    gl.useProgram(this.shaderProgram);\n\n    this.locations.position = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_pos\n    )\n    this.locations.hovered = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_selected\n    )\n    this.locations.pointSize = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.point_size\n    )\n    this.locations.brightness = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.point_hue\n    )\n    this.locations.color = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.vertex_color\n    )\n\n\n  }\n\n  enableShaders(\n    pMatrix: Float32Array,\n    modelMatrix: Float32Array,\n    viewMatrix: Float32Array\n  ): void {\n    const gl = global.gl as GL\n    \n    // shaderUtility.useProgram(this.shaderProgram)\n    gl.useProgram(this.shaderProgram);\n\n\n    this.locations.pMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_perspective\n    )\n\n    this.locations.mvMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_model_view\n    )\n\n    let mvMatrix = mat4.create()\n    mvMatrix = mat4.multiply(mvMatrix, viewMatrix, modelMatrix)\n    gl.uniformMatrix4fv(this.locations.pMatrix, false, pMatrix)\n    gl.uniformMatrix4fv(this.locations.mvMatrix, false, mvMatrix as Float32Array)\n  }\n}\n\nexport const catalogueShaderProgram = new CatalogueShaderProgram()","import global from '../../Global.js';\nimport CatalogueProps from './CatalogueProps.js';\nimport Source from '../Source.js';\nimport Point from '../Point.js';\nimport { visibleTilesManager } from '../hips/VisibleTilesManager.js';\nimport CoordsType from '../..//utils/CoordsType.js';\nimport { mat4 } from 'gl-matrix';\nimport { colorHex2RGB } from '../../utils/Utils.js';\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js';\nimport MouseHelper from '../../utils/MouseHelper.js';\nimport { TapRepo } from '../tap/TapRepo.js';\nimport TapMetadataList from '../tap/TapMetadataList.js';\nimport { catalogueShaderProgram } from '../../shader/CatalogueShaderProgram.js';\nimport TapMetadata from '../tap/TapMetadata.js';\n\n// ---- Minimal typings for external classes you already have ----\ntype GL = WebGL2RenderingContext;\n\n// `Source` is assumed to expose at least these:\n\nclass CatalogueGL {\n    static ELEM_SIZE: number;\n    static BYTES_X_ELEM: number;\n    static STANDARD_SHAPE_SIZE: number = 8.0\n    static STANDARD_SHAPE_HUE: number = 3.0\n\n    // Core state\n    ready: boolean;\n    catalogueProps: CatalogueProps;\n    name: string;\n    description: string;\n    tapRepo: TapRepo;\n\n    // Data\n    sources: Source[];\n\n    gl: GL;\n    // shaderProgram: WebGLProgram;\n\n    // Buffers & arrays\n    vertexCataloguePositionBuffer: WebGLBuffer | null;\n    vertexhoveredCataloguePositionBuffer: WebGLBuffer | null;\n    vertexCataloguePosition: Float32Array;\n\n    // Index/selection bookkeeping\n    hoveredIndexes: number[];\n    selectedIndexes: number[];\n    extHoveredIndexes: number[];\n\n    oldMouseCoords: [number, number, number] | null;\n\n    _isVisible: boolean = true\n\n    // Healpix pixel => indices map\n    healpixDensityMap: Map<number, number[]>;\n\n    /**\n     * @param tablename - String\n     * @param tabledesc - String\n     * @param tapRepo   - Object with `_tapBaseURL`\n     * @param tapMetadataList - TapMetadataList (as used by CatalogueProps)\n     */\n    constructor(\n        tablename: string,\n        tabledesc: string,\n        provider: TapRepo,\n        tapMetadataList: TapMetadataList\n    ) {\n        this.ready = false;\n        (this as any).TYPE = 'SOURCE_CATALOGUE';\n\n        CatalogueGL.ELEM_SIZE = 6; // x,y,z, hoveredFlag, size, brightness\n        CatalogueGL.BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT;\n\n        this.name = tablename;\n        this.description = tabledesc;\n        this.tapRepo = provider;\n\n\n        this.sources = [];\n\n        // GL init\n        this.gl = global.gl as GL;\n        this.vertexCataloguePositionBuffer = this.gl.createBuffer();\n        this.vertexhoveredCataloguePositionBuffer = this.gl.createBuffer();\n\n        this.vertexCataloguePosition = new Float32Array(0);\n        this.hoveredIndexes = [];\n        this.selectedIndexes = [];\n        this.extHoveredIndexes = [];\n\n        this.oldMouseCoords = null;\n\n\n        this.healpixDensityMap = new Map<number, number[]>();\n        const defaultColor = '#8F00FF';\n\n        this.catalogueProps = new CatalogueProps(tapMetadataList, defaultColor);\n\n        // call catalogueShaderProgram to init shaders if they are not yet initialised \n        catalogueShaderProgram.shaderProgram\n\n        this._isVisible = true\n\n    }\n\n    public setIsVisible(visibility: boolean) {\n        this._isVisible = visibility\n    }\n\n    get isVisible() {\n        return this._isVisible\n    }\n\n    private minMax(columnindex: number): { min: number, max: number } {\n        if (!this.sources.length) return { min: 0, max: 0 };\n        let min = this.sources[0].details[columnindex]\n\n        if (isNaN(Number(min))) {\n            // console.warn(`${this.catalogueProps.tapMetadataList.metadataList[columnindex].name} doesn't contain number only values`)\n            console.warn(`${this.catalogueProps.tapMetadataList.metadataList[columnindex].name} doesn't contain only number values`)\n            return { min: 0, max: 0 };\n        }\n        let max = min;\n\n        for (const source of this.sources) {\n            const v = source.details[columnindex]\n            if (isNaN(Number(v))) {\n                console.warn(`${this.catalogueProps.tapMetadataList.metadataList[columnindex].name} doesn't contain number only values`)\n                return { min: 0, max: 0 };\n            }\n            if (v < min) min = v;\n            if (v > max) max = v;\n        }\n        return {\n            min: Number(min),\n            max: Number(max)\n        };\n    }\n\n\n    changeCatalogueMetaShapeSize(metacolumnName: string) {\n        if (metacolumnName == CatalogueProps.STANDARD_SIZE) {\n            this.catalogueProps.resetCatalogueMetaShapeSize()\n            for (const source of this.sources) {\n                const size = CatalogueGL.STANDARD_SHAPE_SIZE;\n                source.shapeSize = size;\n            }\n            this.initBuffer();\n            return\n        }\n        const oldShapeSizeName = this.catalogueProps.shapeSizeColumn?.name\n        this.catalogueProps.changeCatalogueMetaShapeSize(metacolumnName);\n        const idx = this.catalogueProps.shapeSizeColumn?.index ?? this.catalogueProps.shapeSizeColumn?.index;\n        if (idx == null) {\n            if (oldShapeSizeName) this.catalogueProps.changeCatalogueMetaShapeSize(oldShapeSizeName);\n            return;\n        }\n        const minmax = this.minMax(idx);\n        if (minmax.min == minmax.max) {\n            console.warn(`${minmax} min and max are equals. No resizing will be applied.`)\n            return\n        }\n\n        for (const source of this.sources) {\n            const raw = Number(source.getDetailByindex(idx));\n            const min = Number(minmax.min);\n            const max = Number(minmax.max);\n            const norm = (raw - min) / Math.max(1e-12, (max - min));\n            const size = norm * (20 - 8) + 8;\n            source.shapeSize = size;\n        }\n        this.initBuffer();\n    }\n\n    changeCatalogueMetaShapeHue(metacolumnName: string) {\n        if (metacolumnName == CatalogueProps.STANDARD_SIZE) {\n            this.catalogueProps.resetCatalogueMetaShapeHue()\n            for (const source of this.sources) {\n                const hue = CatalogueGL.STANDARD_SHAPE_HUE;\n                source.brightnessFactor = hue;\n            }\n            this.initBuffer();\n            return\n        }\n\n        const oldHueSizeName = this.catalogueProps.shapeHueColumn?.name\n        this.catalogueProps.changeCatalogueMetaShapeHue(metacolumnName);\n        const idx = this.catalogueProps.shapeHueColumn?.index ?? this.catalogueProps.shapeHueColumn?.index;\n        if (idx == null) {\n            if (oldHueSizeName) this.catalogueProps.changeCatalogueMetaShapeHue(oldHueSizeName);\n            return;\n        }\n        const minmax = this.minMax(idx);\n        if (minmax.min == minmax.max) {\n            console.warn(`${minmax} min and max are equals. No resizing will be applied.`)\n            return\n        }\n\n        for (const source of this.sources) {\n            const raw = Number(source.getDetailByindex(idx));\n            const min = Number(minmax.min);\n            const max = Number(minmax.max);\n            const norm = (raw - min) / Math.max(1e-12, (max - min));\n            // map [0,1] -> [1,-1]\n            source.brightnessFactor = -(norm * 2 - 1);\n        }\n        this.initBuffer();\n    }\n\n    addSource(source: Source) {\n        this.sources.push(source);\n    }\n\n    /**\n     * @param in_data Rows of TAP results\n     * @param columnsmeta TapMetadataList (unused here because `CatalogueProps` already holds indices)\n     */\n    addSources(in_data: any[][], columnsmeta: TapMetadata[]) {\n        this.ready = false;\n        this.sources = []\n\n        const raDataIndex = (this.catalogueProps.raColumn as any).index ?? (this.catalogueProps.raColumn as any)._index;\n        const decDataIndex = (this.catalogueProps.decColumn as any).index ?? (this.catalogueProps.decColumn as any)._index;\n\n        for (let j = 0; j < in_data.length; j++) {\n            const point = new Point(\n                {\n                    raDeg: in_data[j][raDataIndex],\n                    decDeg: in_data[j][decDataIndex]\n                },\n                CoordsType.ASTRO\n            );\n\n            const source = new Source(point, in_data[j]);\n            // Ensure optional fields exist\n            source.shapeSize = source.shapeSize ?? CatalogueGL.STANDARD_SHAPE_SIZE;\n            source.brightnessFactor = 3;\n            this.addSource(source);\n        }\n\n        this.initBuffer();\n        this.ready = true;\n    }\n\n    clearSources() {\n        this.sources = [];\n        this.hoveredIndexes = [];\n        this.healpixDensityMap.clear();\n        this.vertexCataloguePosition = new Float32Array(0);\n    }\n\n    extHighlightSource(source: Source, highlighted: boolean) {\n        const sIdx = this.sources.indexOf(source);\n        if (sIdx < 0) return;\n\n        if (highlighted) {\n            if (!this.extHoveredIndexes.includes(sIdx)) {\n                this.extHoveredIndexes.push(sIdx);\n            }\n        } else {\n            const i = this.extHoveredIndexes.indexOf(sIdx);\n            if (i >= 0) this.extHoveredIndexes.splice(i, 1);\n        }\n    }\n\n    extAddSources2Selected(sources: Source[]) {\n        for (const s of sources) {\n            const sIdx = this.sources.indexOf(s);\n            if (sIdx >= 0 && !this.selectedIndexes.includes(sIdx)) {\n                this.selectedIndexes.push(sIdx);\n            }\n        }\n    }\n\n    extRemoveSourceFromSelection(source: Source) {\n        const indexOfObject = this.sources.indexOf(source);\n        if (indexOfObject < 0) return;\n\n        const sidx = this.selectedIndexes.indexOf(indexOfObject);\n        if (sidx >= 0) this.selectedIndexes.splice(sidx, 1);\n\n        const eidx = this.extHoveredIndexes.indexOf(indexOfObject);\n        if (eidx >= 0) this.extHoveredIndexes.splice(eidx, 1);\n\n        // Clear hovered flag in buffer view (if present)\n        if (this.vertexCataloguePosition.length >= (indexOfObject + 1) * CatalogueGL.ELEM_SIZE) {\n            this.vertexCataloguePosition[indexOfObject * CatalogueGL.ELEM_SIZE + 3] = 0.0;\n        }\n    }\n\n    private initBuffer() {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer);\n\n        const nSources = this.sources.length;\n        this.vertexCataloguePosition = new Float32Array(nSources * CatalogueGL.ELEM_SIZE);\n        let positionIndex = 0;\n\n        for (let j = 0; j < nSources; j++) {\n            const currSource = this.sources[j];\n            const currPix = currSource.healpixPixel;\n\n            // density map\n            const bucket = this.healpixDensityMap.get(currPix);\n            if (bucket) {\n                if (!bucket.includes(j)) bucket.push(j);\n            } else {\n                this.healpixDensityMap.set(currPix, [j]);\n            }\n\n            // position\n            this.vertexCataloguePosition[positionIndex + 0] = currSource.point.x;\n            this.vertexCataloguePosition[positionIndex + 1] = currSource.point.y;\n            this.vertexCataloguePosition[positionIndex + 2] = currSource.point.z;\n\n            // hovered flag\n            this.vertexCataloguePosition[positionIndex + 3] = 0.0;\n\n            // size\n            this.vertexCataloguePosition[positionIndex + 4] = currSource.shapeSize ?? CatalogueGL.STANDARD_SHAPE_SIZE;\n\n            // brightness\n            this.vertexCataloguePosition[positionIndex + 5] = currSource.brightnessFactor ?? 0.0;\n\n            positionIndex += CatalogueGL.ELEM_SIZE;\n        }\n\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexCataloguePosition, this.gl.STATIC_DRAW);\n    }\n\n    private getSelectionRadius(): number {\n        const order = visibleTilesManager.getVisibleOrder();\n        switch (order) {\n            case 0:\n            case 1:\n            case 2:\n                return 0.005;\n            case 3:\n                return 0.001;\n            case 4:\n                return 0.0009;\n            case 5:\n                return 0.0005;\n            case 6:\n                return 0.0001;\n            case 7:\n                return 0.00009;\n            case 8:\n                return 0.00005;\n            case 9:\n                return 0.00001;\n            default:\n                return 0.000005;\n        }\n    }\n\n    private checkSelection(in_mouseHelper: MouseHelper): number[] {\n\n        if (in_mouseHelper.x == null || in_mouseHelper.y == null || in_mouseHelper.z == null) {\n            console.log('CatalogueGL.checkSelection: missing mouse coords');\n            return [];\n        }\n\n        const hoveredIndexes: number[] = [];\n        const sourcesHovered: Source[] = [];\n        const mousePix = in_mouseHelper.computeNpix();\n\n        if (mousePix != null && this.healpixDensityMap.has(mousePix)) {\n            const candidates = this.healpixDensityMap.get(mousePix)!;\n            const selR = this.getSelectionRadius();\n\n            for (let i = 0; i < candidates.length; i++) {\n                const sourceIdx = candidates[i];\n                const source = this.sources[sourceIdx];\n                if (!source) continue;\n\n                const dx = source.point.x - in_mouseHelper.x;\n                const dy = source.point.y - in_mouseHelper.y;\n                const dz = source.point.z - in_mouseHelper.z;\n                const dist = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n                if (dist <= selR) {\n                    hoveredIndexes.push(sourceIdx);\n                    sourcesHovered.push(source);\n                }\n            }\n        }\n\n        // session.updateHoveredSources(this, sourcesHovered);\n        return hoveredIndexes;\n    }\n\n   \n    /**\n     * @param in_mMatrix Model matrix the current catalogue is associated to (e.g. HiPS matrix)\n     */\n    draw(in_mMatrix: mat4, in_mouseHelper: MouseHelper) {\n        if (!this.isVisible) return\n        if (!this.ready) return\n        if (!global.camera) return\n\n        catalogueShaderProgram.enableShaders(computePerspectiveMatrixSingleton.pMatrix as Float32Array,\n            in_mMatrix as Float32Array,\n            global.camera.getCameraMatrix() as Float32Array\n        )\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer);\n\n        // positions\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.position,\n            3,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            0\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.position);\n\n        // hovered flag\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.hovered,\n            1,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            CatalogueGL.BYTES_X_ELEM * 3\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.hovered);\n\n        // point size\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.pointSize,\n            1,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            CatalogueGL.BYTES_X_ELEM * 4\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.pointSize);\n\n        // brightness\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.brightness,\n            1,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            CatalogueGL.BYTES_X_ELEM * 5\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.brightness);\n\n        // color\n        const rgb = colorHex2RGB(this.catalogueProps.shapeColor);\n        if (catalogueShaderProgram.locations.color) {\n            this.gl.uniform4f(catalogueShaderProgram.locations.color, rgb[0], rgb[1], rgb[2], 1.0);\n        }\n\n        // Hover logic on mouse move\n        if (in_mouseHelper != null && in_mouseHelper.xyz !== this.oldMouseCoords) {\n            // clear old hovered\n            for (let k = 0; k < this.hoveredIndexes.length; k++) {\n                const base = this.hoveredIndexes[k] * CatalogueGL.ELEM_SIZE;\n                this.vertexCataloguePosition[base + 3] = 0.0; // not hovered\n                this.vertexCataloguePosition[base + 4] = this.sources[this.hoveredIndexes[k]].shapeSize; // size\n            }\n\n            this.hoveredIndexes = this.checkSelection(in_mouseHelper);\n\n            // new hovered\n            for (let i = 0; i < this.hoveredIndexes.length; i++) {\n                const idx = this.hoveredIndexes[i];\n                const base = idx * CatalogueGL.ELEM_SIZE;\n                this.vertexCataloguePosition[base + 3] = 1.0; // hovered\n                this.vertexCataloguePosition[base + 4] = this.sources[idx].shapeSize; // size\n            }\n        }\n\n        // selected flags\n        for (let s = 0; s < this.selectedIndexes.length; s++) {\n            const idx = this.selectedIndexes[s];\n            const base = idx * CatalogueGL.ELEM_SIZE;\n            this.vertexCataloguePosition[base + 3] = 2.0; // selected\n            this.vertexCataloguePosition[base + 4] = this.sources[idx].shapeSize; // size\n        }\n\n        // external hovered\n        for (let e = 0; e < this.extHoveredIndexes.length; e++) {\n            const idx = this.extHoveredIndexes[e];\n            const base = idx * CatalogueGL.ELEM_SIZE;\n            this.vertexCataloguePosition[base + 3] = 1.0; // hovered\n            this.vertexCataloguePosition[base + 4] = this.sources[idx].shapeSize; // size\n        }\n\n        // upload buffer\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexCataloguePosition, this.gl.STATIC_DRAW);\n\n        // draw\n        const numItems = this.vertexCataloguePosition.length / CatalogueGL.ELEM_SIZE;\n        this.gl.drawArrays(this.gl.POINTS, 0, numItems);\n\n        this.oldMouseCoords = in_mouseHelper.xyz;\n    }\n\n}\n\nexport default CatalogueGL;","/**\n * @author Fabrizio Giordano (Fab77)\n */\nimport Point from \"../model/Point.js\";\nimport CoordsType from \"./CoordsType.js\";\nimport global from \"../Global.js\";\n\nexport interface STCSParseResult {\n  totpoints: number;\n  polygons: Point[][];\n}\n\nclass STCSParser {\n  static parseSTCS(stcs: string): STCSParseResult {\n    const stcsParsed = STCSParser.cleanStcs(stcs);\n    let totPoints = 0;\n    const polygons: Point[][] = [];\n\n    if (stcsParsed.includes(\"POLYGON\")) {\n      return STCSParser.parsePolygon(stcsParsed);\n    } else if (stcsParsed.includes(\"CIRCLE\")) {\n      return STCSParser.parseCircle(stcsParsed);\n    } else {\n      console.warn(\"STCS not recognised\");\n    }\n\n    return { totpoints: totPoints, polygons };\n  }\n\n  static cleanStcs(stcs: string): string {\n    // Uppercase once\n    let s = stcs.toUpperCase();\n\n    // Remove tokens\n    s = s\n      .replace(/'ICRS'/g, '')\n      .replace(/\\bICRS\\b/g, '')\n      .replace(/\\bJ2000\\b/g, '')\n      .replace(/\\bUNION\\b/g, '')\n      .replace(/\\bTOPOCENTER\\b/g, '');\n\n    // Remove parentheses\n    s = s.replace(/[()]/g, '');\n\n    // Collapse extra spaces and trim\n    s = s.replace(/ {2,}/g, ' ').trim();\n\n    return s;\n  }\n\n  static parsePolygon(stcs: string): STCSParseResult {\n    let totPoints = 0;\n    const polygons: Point[][] = [];\n\n    const MAX_DECIMALS: number = global.MAX_DECIMALS ?? 12;\n\n    const polys = stcs.split(\"POLYGON \");\n\n    for (let i = 1; i < polys.length; i++) {\n      const currPoly: Point[] = [];\n      const points = polys[i].trim().split(\" \");\n\n      // If first point is repeated as last, remove the duplicate\n      const p0 = Number(parseFloat(points[0]).toFixed(MAX_DECIMALS));\n      const p1 = Number(parseFloat(points[1]).toFixed(MAX_DECIMALS));\n      const plast0 = Number(parseFloat(points[points.length - 2]).toFixed(MAX_DECIMALS));\n      const plast1 = Number(parseFloat(points[points.length - 1]).toFixed(MAX_DECIMALS));\n\n      if (p0 === plast0 && p1 === plast1) {\n        points.splice(points.length - 2, 2);\n      }\n\n      if (points.length > 2) {\n        for (let p = 0; p < points.length - 1; p += 2) {\n          const raDeg = Number(parseFloat(points[p]).toFixed(MAX_DECIMALS));\n          const decDeg = Number(parseFloat(points[p + 1]).toFixed(MAX_DECIMALS));\n\n          const point = new Point({ raDeg, decDeg }, CoordsType.ASTRO);\n          currPoly.push(point);\n          totPoints += 1;\n        }\n        polygons.push(currPoly);\n      }\n    }\n\n    return { totpoints: totPoints, polygons };\n  }\n\n  // Example format: \"CIRCLE ICRS 8.739685 4.38147 0.027833\"\n  static parseCircle(stcs: string): STCSParseResult {\n    let totPoints = 0;\n    const polygons: Point[][] = [];\n\n    const polys = stcs.split(\"CIRCLE \");\n\n    for (let i = 1; i < polys.length; i++) {\n      const currPoly: Point[] = [];\n      const tokens = polys[i].trim().split(\" \");\n\n      const ra = Number(tokens[0]);\n      const dec = Number(tokens[1]);\n      const radius = Number(tokens[2]);\n\n      const POINTS_PER_QUADRANT = 6;\n      const npoints = POINTS_PER_QUADRANT * 4;\n\n      const alpha = (2 * Math.PI) / npoints;\n\n      // Generate points around the circle\n      for (let p = npoints; p > 0; p--) {\n        const curra = radius * Math.cos(p * alpha) + ra;\n        const curdec = radius * Math.sin(p * alpha) + dec;\n\n        const point = new Point({ raDeg: curra, decDeg: curdec }, CoordsType.ASTRO);\n        currPoly.push(point);\n        totPoints += 1;\n      }\n\n      polygons.push(currPoly);\n    }\n\n    return { totpoints: totPoints, polygons };\n  }\n}\n\nexport default STCSParser;","'use strict';\n/**\n * @author Fabrizio Giordano (Fab)\n */\n\n// import { Pointing, Healpix } from 'healpixjs';\n// import { degToRad } from '../../utils/Utils.js';\nimport GeomUtils, { SelectionObj } from '../../utils/GeomUtils.js';\n// import global from '../../Global.js';\nimport STCSParser, { STCSParseResult } from '../../utils/STCSParser.js';\nimport Point from '../Point.js';\n\nexport interface FootprintDetail {\n  key: string;\n  value: string | number;\n  valueType?: string;\n  unit?: string;\n}\n\n// export interface ParsedSTCS {\n//   polygons: Point[][]; // array of polygons (each polygon is array of Point objects)\n//   totpoints: number;\n// }\n\nclass Footprint {\n  private _polygons: Point[][] = []; // array of polygons (-> array of points)\n  private _convexPolygons: any[][] = []; // convex polygons\n  private _stcs?: string; // STC-S string\n  private _valid = false;\n  private _details: FootprintDetail[];\n  private _totPoints = 0;\n  private _totConvexPoints = 0;\n  private _npix256?: number[];\n  private _footprintsPointsOrder?: 1 | -1;\n  private _selectionObj: SelectionObj | undefined;\n\n  private _identifier?: string;\n  private _center?: unknown; // could be typed if you have a Point type\n\n  /**\n   * @param in_stcs STC-S representation of the footprint\n   * @param in_details optional metadata\n   * @param footprintsPointsOrder 1-> clockwise, -1 counter clockwise\n   */\n  constructor(\n    in_stcs?: string,\n    in_details: FootprintDetail[] = [],\n    footprintsPointsOrder?: 1 | -1\n  ) {\n    if (in_stcs) {\n      this._stcs = in_stcs.toUpperCase();\n      this._details = in_details;\n      this._totPoints = 0;\n      this._totConvexPoints = 0;\n      this._footprintsPointsOrder = footprintsPointsOrder;\n\n      this.computePoints();\n      this._selectionObj = this.computeSelectionObject();\n\n      this._valid = true;\n    } else {\n      this._details = [];\n    }\n  }\n\n  private computeSelectionObject(): SelectionObj {\n    return GeomUtils.computeSelectionObject(this._polygons);\n  }\n\n  \n  // /**\n  //  * Return array of HEALPix pixels covering the footprint\n  //  * NOTE: despite the name, nside is not fixed at 256. It comes from Global.js\n  //  */\n  // private computeNpix256(): number[] {\n  //   const healpix256 = new Healpix(global.nsideForSelection);\n\n  //   const points: Pointing[] = [];\n  //   for (const poly of this._convexPolygons) {\n  //     for (const currPoint of poly) {\n  //       const phiTheta = currPoint.computeHealpixPhiTheta();\n  //       const phiRad = degToRad(phiTheta.phi);\n  //       const thetaRad = degToRad(phiTheta.theta);\n  //       points.push(new Pointing(null, false, thetaRad, phiRad));\n  //     }\n  //   }\n\n  //   const rangeSet = healpix256.queryPolygonInclusive(points, 32);\n  //   return Array.from(rangeSet.r);\n  // }\n\n  private computePoints(): void {\n    const res: STCSParseResult = STCSParser.parseSTCS(this._stcs!);\n    this._polygons = res.polygons;\n    this._totPoints = res.totpoints;\n  }\n\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  get totPoints(): number {\n    return this._totPoints;\n  }\n\n  get totConvexPoints(): number {\n    return this._totConvexPoints;\n  }\n\n  get polygons(): Point[][] {\n    return this._polygons;\n  }\n\n  get convexPolygons(): Point[][] {\n    return this._convexPolygons;\n  }\n\n  get identifier(): string | undefined {\n    return this._identifier;\n  }\n\n  get center(): unknown {\n    return this._center;\n  }\n\n  get pixels(): number[] | undefined {\n    return this._npix256;\n  }\n\n  get details(): FootprintDetail[] {\n    return this._details;\n  }\n\n  get selectionObj(): SelectionObj | undefined{\n    return this._selectionObj\n  }\n}\n\nexport default Footprint;","\nimport TapMetadata from '../tap/TapMetadata.js';\nimport TapMetadataList from '../tap/TapMetadataList.js';\n\nexport default class FootprintProps {\n  // resolved columns\n  pgSphereColumn?: TapMetadata;\n  geomColumn?: TapMetadata;\n  raColumn?: TapMetadata;\n  decColumn?: TapMetadata;\n  nameColumn?: TapMetadata;\n\n  shapeColor: string;\n  tapMetadataList: TapMetadataList;\n\n  constructor(tapMetadataList: TapMetadataList, color: string) {\n    this.tapMetadataList = tapMetadataList;\n    this.shapeColor = color;\n\n    this.setPositionColumns(tapMetadataList);\n    this.nameColumn = this.setNameColumn(tapMetadataList);\n  }\n\n  private setPositionColumns(tapMetadataList: TapMetadataList): void {\n    // pgSphere\n    for (const meta of tapMetadataList.pgSphereMetaColumns) {\n      this.pgSphereColumn = meta;\n    }\n\n    // s_region (choose the 'pos.outline;obs.field' if available; otherwise first)\n    for (const meta of tapMetadataList.sRegionMetaColumns) {\n      if (meta.ucd && meta.ucd.includes('pos.outline;obs.field')) {\n        this.geomColumn = meta;\n        break;\n      }\n      if (!this.geomColumn) {\n        this.geomColumn = meta;\n      }\n    }\n\n    // RA (prefer meta.main)\n    for (const meta of tapMetadataList.posEqRAMetaColumns) {\n      if (meta.ucd && meta.ucd.includes('meta.main')) {\n        this.raColumn = meta;\n        break;\n      }\n      if (!this.raColumn) {\n        this.raColumn = meta;\n      }\n    }\n\n    // DEC (prefer meta.main) – supports both posEqDecMetaColumns and _posEqDecMetaColumns\n    const decList =\n      tapMetadataList.posEqDecMetaColumns?.length\n        ? tapMetadataList.posEqDecMetaColumns\n        : tapMetadataList.posEqDecMetaColumns ?? [];\n\n    for (const meta of decList) {\n      if (meta.ucd && meta.ucd.includes('meta.main')) {\n        this.decColumn = meta;\n        break;\n      }\n      if (!this.decColumn) {\n        this.decColumn = meta;\n      }\n    }\n  }\n\n  private setNameColumn(tapMetadataList: TapMetadataList): TapMetadata | undefined {\n    let nameColumn: TapMetadata | undefined;\n    for (const meta of tapMetadataList.metadataList) {\n      if (meta.ucd?.includes('meta.id') && meta.ucd?.includes('meta.main')) {\n        nameColumn = meta;\n      }\n    }\n    return nameColumn;\n  }\n\n  changeColor(color: string): void {\n    this.shapeColor = color;\n  }\n\n  changeMetaName(metacolumnName: string): void {\n    const currentName = this.getMetaName(this.nameColumn);\n    if (currentName !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (this.getMetaName(column) === metacolumnName) {\n          this.nameColumn = column;\n          break;\n        }\n      }\n    }\n  }\n\n  // helper to normalize `name` / `_name`\n  private getMetaName(meta?: TapMetadata): string | undefined {\n    return meta?.name ?? meta?.name;\n  }\n}","// HiPSShaderProgram.ts\nimport { mat4 } from 'gl-matrix';\nimport global from '../Global.js'\nimport ShaderManager from './ShaderManager.js'\n\ntype GL = WebGL2RenderingContext;\n\ntype UniformNames = {\n  vertex_color: string,\n  m_perspective: string,\n  m_model_view: string,\n  point_size: string\n}\n\ntype AttributeNames = {\n  vertex_pos: string\n  \n}\n\ntype Locations = {\n  pMatrix: WebGLUniformLocation | null\n  mvMatrix: WebGLUniformLocation | null\n  color: WebGLUniformLocation | null\n  position: number\n  pointSize: WebGLUniformLocation | null\n}\n\nexport default class FootprintShaderProgram {\n  private _shaderProgram: WebGLProgram | undefined\n  private _vertexShader!: WebGLShader\n  private _fragmentShader!: WebGLShader\n\n  readonly gl_uniforms: UniformNames\n  readonly gl_attributes: AttributeNames\n  readonly locations: Locations\n\n  \n  constructor() {\n    this.gl_uniforms = {\n      vertex_color: 'u_fragcolor',\n      m_perspective: 'uPMatrix',\n      m_model_view: 'uMVMatrix',\n      point_size: 'u_pointsize'\n    }\n\n    this.gl_attributes = {\n      vertex_pos: 'aCatPosition'      \n    }\n\n    this.locations = {\n      pMatrix: null,\n      mvMatrix: null,\n      color: null,\n      position: -1,\n      pointSize: -1\n    }\n  }\n\n  get shaderProgram(): WebGLProgram {\n    if (!this._shaderProgram) {\n      const gl = global.gl as GL\n      this._shaderProgram = gl.createProgram() as WebGLProgram\n      this.initShaders()\n    }\n    return this._shaderProgram\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL\n\n    const fragmentShaderStr = ShaderManager.footprintFS()\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    console.log('FS log:', gl.getShaderInfoLog(this._fragmentShader) || 'ok');\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n\n    const vertexShaderStr = ShaderManager.footprintVS()\n    this._vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader\n    gl.shaderSource(this._vertexShader, vertexShaderStr)\n    gl.compileShader(this._vertexShader)\n    console.log('VS log:', gl.getShaderInfoLog(this._vertexShader) || 'ok');\n    if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._vertexShader) || 'Vertex shader compile error')\n      return\n    }\n\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._vertexShader)\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this.shaderProgram as WebGLProgram)\n\n    if (!gl.getProgramParameter(this.shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n\n    gl.useProgram(this.shaderProgram);\n\n    this.locations.position = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_pos\n    )\n    \n    this.locations.pointSize = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.point_size\n    )\n    \n    this.locations.color = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.vertex_color\n    )\n  }\n\n  enableShaders(\n    pMatrix: Float32Array,\n    modelMatrix: Float32Array,\n    viewMatrix: Float32Array\n  ): void {\n    const gl = global.gl as GL\n    \n    gl.useProgram(this.shaderProgram);\n\n    this.locations.pMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_perspective\n    )\n\n    this.locations.mvMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_model_view\n    )\n\n    let mvMatrix = mat4.create()\n    mvMatrix = mat4.multiply(mvMatrix, viewMatrix, modelMatrix)\n    gl.uniformMatrix4fv(this.locations.pMatrix, false, pMatrix)\n    gl.uniformMatrix4fv(this.locations.mvMatrix, false, mvMatrix as Float32Array)\n  }\n}\n\nexport const footprintShaderProgram = new FootprintShaderProgram()","import { shaderUtility } from '../../utils/ShaderUtility.js'\nimport Footprint from './Footprint.js'\nimport FootprintProps from './FootprintProps.js'\nimport { mat4 } from 'gl-matrix'\nimport global from '../../Global.js'\nimport { colorHex2RGB } from '../../utils/Utils.js'\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js'\nimport { TapRepo } from '../tap/TapRepo.js'\nimport TapMetadataList from '../tap/TapMetadataList.js'\nimport { footprintShaderProgram } from '../../shader/FootprintShaderProgram.js'\nimport TapMetadata from '../tap/TapMetadata.js'\nimport MouseHelper from '../../utils/MouseHelper.js'\nimport Point from '../Point.js'\nimport GeomUtils from '../../utils/GeomUtils.js'\nimport CoordsType from '../../utils/CoordsType.js'\n\ntype GL = WebGL2RenderingContext;\n\nexport interface HoveredFootprintDetail {\n  metadata: TapMetadataList\n  footprints: Footprint[]\n  tableName: string\n  description: string\n  provider: string\n}\n\n\n\nclass FootprintSetGL {\n  static ELEM_SIZE = 3\n  static BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT\n  static CONVEXPOLY_ELEM_SIZE = 3\n\n  ready: boolean\n  footprintsetProps: FootprintProps\n  name: string\n  description: string\n  tapRepo: TapRepo\n\n  extHoveredIndexes!: Uint32Array\n\n  oldMouseCoords: any\n  healpixDensityMap: any\n\n\n\n  totConvexPoints!: number\n\n  // footprintsInPix256: Map<number, Footprint[]>\n\n  gl: GL;\n\n  // shaderProgram: WebGLProgram\n  vertexCataloguePositionBuffer!: WebGLBuffer\n  indexBuffer!: WebGLBuffer\n\n  hoveredVertexPositionBuffer!: WebGLBuffer\n  hoveredIndexBuffer!: WebGLBuffer\n\n  selectedVertexPositionBuffer!: WebGLBuffer\n  selectedIndexBuffer!: WebGLBuffer\n\n\n  indexes!: Uint32Array\n  footprintPolygons: Footprint[] = []\n  vertexCataloguePosition!: Float32Array\n  totPoints!: number\n  nPrimitiveFlags: number = 0\n\n\n  hoveredIndexes!: Uint32Array\n  private _hoveredFootprints: Footprint[] = []\n  hoveredVertexPosition!: Float32Array\n  totHoveredPoints!: number\n  nHoveredPrimitiveFlags: number = 0\n\n  selectedIndexes!: Uint32Array\n  private _selectedFootprints: Footprint[] = []\n  selectedVertexPosition!: Float32Array\n  totSelectedPoints!: number\n  nSlectedPrimitiveFlags: number = 0\n\n\n  _isVisible: boolean = true\n\n  constructor(\n    tablename: string,\n    tabledesc: string,\n    tapRepo: TapRepo,\n    tapMetadataList: TapMetadataList) {\n\n    this.ready = false;\n    (this as any).TYPE = 'FOOTPRINT_SET';\n\n    this.name = tablename\n    this.description = tabledesc\n    this.tapRepo = tapRepo\n\n    // this.footprintsInPix256 = new Map()\n\n    this.initFootprintArrays()\n    if (!global.gl) {\n      throw new Error('WebGL2RenderingContext is not initialized (global.gl is null)')\n    }\n\n    this.gl = global.gl as GL\n    this.initGLBuffers()\n\n    this.oldMouseCoords = null\n\n    const defaultColor = '#00fff2ff'\n    this.footprintsetProps = new FootprintProps(tapMetadataList, defaultColor)\n\n    footprintShaderProgram.shaderProgram\n\n  }\n\n  private initFootprintArrays(): void {\n    this.footprintPolygons = []\n    this.indexes = new Uint32Array()\n    this.vertexCataloguePosition = new Float32Array()\n    this.totPoints = 0\n    this.totConvexPoints = 0\n    this.extHoveredIndexes = new Uint32Array\n\n    this._hoveredFootprints = []\n    this.hoveredVertexPosition = new Float32Array()\n    this.totHoveredPoints = 0\n    this.hoveredIndexes = new Uint32Array\n\n    this._selectedFootprints = []\n    this.selectedVertexPosition = new Float32Array()\n    this.totSelectedPoints = 0\n    this.selectedIndexes = new Uint32Array\n  }\n\n  private initGLBuffers(): void {\n\n    this.vertexCataloguePositionBuffer = this.gl.createBuffer()\n    this.indexBuffer = this.gl.createBuffer()\n\n    this.hoveredVertexPositionBuffer = this.gl.createBuffer()\n    this.hoveredIndexBuffer = this.gl.createBuffer()\n\n    this.selectedVertexPositionBuffer = this.gl.createBuffer()\n    this.selectedIndexBuffer = this.gl.createBuffer()\n\n  }\n\n  public setIsVisible(visibility: boolean) {\n    this._isVisible = visibility\n  }\n\n  get isVisible() {\n    return this._isVisible\n  }\n\n  addFootprint(in_footprint: Footprint): void {\n    this.footprintPolygons.push(in_footprint)\n  }\n\n  addFootprints(in_data: any[], columnsmeta: TapMetadata[]): void {\n    this.ready = false\n    const geomDataIndex = this.footprintsetProps.geomColumn?.index\n    if (geomDataIndex === undefined) {\n      throw new Error('geomColumn or its index is undefined in footprintsetProps')\n    }\n\n    for (let j = 0; j < in_data.length; j++) {\n      if (in_data[j][0] !== null) {\n        const footprint = new Footprint(in_data[j][geomDataIndex], in_data[j])\n        if ((footprint as any)._valid) {\n          this.addFootprint(footprint)\n          this.totPoints += footprint.totPoints\n          this.totConvexPoints += footprint.totConvexPoints\n        }\n      }\n    }\n\n    this.initBuffer()\n    this.ready = true\n  }\n\n  clearFootprints(): void {\n    this.initFootprintArrays()\n  }\n\n\n  private initBuffer(): void {\n    const nFootprints = this.footprintPolygons.length\n    let npolygons = nFootprints - 1\n\n    for (let j = 0; j < nFootprints; j++) {\n      npolygons += this.footprintPolygons[j].polygons.length - 1\n    }\n\n    this.indexes = new Uint32Array(this.totPoints + npolygons + 1)\n    const MAX_UNSIGNED_INT = 0xffffffff\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer)\n    this.vertexCataloguePosition = new Float32Array(3 * this.totPoints)\n\n    let positionIndex = 0\n    let vIdx = 0\n    const R = 1.0\n    this.nPrimitiveFlags = 0\n\n    for (let j = 0; j < nFootprints; j++) {\n      const footprint = this.footprintPolygons[j]\n      const footprintPoly = footprint.polygons\n\n      if (j > 0) {\n        this.indexes[vIdx++] = MAX_UNSIGNED_INT\n        this.nPrimitiveFlags++\n      }\n\n      for (const poly of footprintPoly) {\n        if (poly !== footprintPoly[0]) {\n          this.indexes[vIdx++] = MAX_UNSIGNED_INT\n          this.nPrimitiveFlags++\n        }\n\n        for (const point of poly) {\n          this.vertexCataloguePosition[positionIndex++] = R * point.x\n          this.vertexCataloguePosition[positionIndex++] = R * point.y\n          this.vertexCataloguePosition[positionIndex++] = R * point.z\n          this.indexes[vIdx++] = Math.floor((positionIndex - 1) / 3)\n        }\n      }\n    }\n\n    this.indexes[this.indexes.length - 1] = MAX_UNSIGNED_INT\n    console.log('Buffer initialized')\n  }\n\n  checkSelection(mouseHelper: MouseHelper) {\n\n    if (!mouseHelper.x || !mouseHelper.y || !mouseHelper.z) return\n\n    let mousePix = mouseHelper.computeNpix()\n    if (!mousePix) return\n\n    this._hoveredFootprints = []\n    this.totHoveredPoints = 0\n\n    const mousePoint = new Point(\n      { x: mouseHelper.x, y: mouseHelper.y, z: mouseHelper.z },\n      CoordsType.CARTESIAN\n    )\n\n    for (let i = 0; i < this.footprintPolygons.length; i++) {\n      const footprint: Footprint = this.footprintPolygons[i]\n      if (!footprint.selectionObj) continue\n\n      if (GeomUtils.checkPointInsidePolygon5(footprint.selectionObj, mousePoint)) {\n        const details = [...footprint.details]\n        const geomDataIndex = this.footprintsetProps.geomColumn?.index\n\n        if (geomDataIndex === undefined) continue;\n\n        details.splice(geomDataIndex, 1)\n        this._hoveredFootprints.push(footprint)\n        this.totHoveredPoints += footprint.totPoints\n      }\n    }\n    this.initHoveringBuffer()\n  }\n\n  get hoveredFootprints(): HoveredFootprintDetail {\n    return {\n      metadata: this.footprintsetProps.tapMetadataList,\n      footprints: this._hoveredFootprints,\n      tableName: this.name,\n      description: this.description,\n      provider: this.tapRepo.tapBaseUrl\n    }\n  }\n\n  get selectedFootprints(): Footprint[] {\n    return this._selectedFootprints\n  }\n\n  highlightFootprint(footprint: Footprint, highlighted: boolean) {\n    if (highlighted) {\n      this._hoveredFootprints.push(footprint)\n      this.totHoveredPoints += footprint.totPoints\n    } else {\n      const indexOfFootprint = this._hoveredFootprints.indexOf(footprint)\n      this._hoveredFootprints.splice(indexOfFootprint, 1)\n      this.totHoveredPoints -= footprint.totPoints\n    }\n    this.initHoveringBuffer()\n  }\n\n  /**\n   *\n   * @param {Footprint[]} footprints\n   */\n\n  addFootprint2Selected(footprints: Footprint[]) {\n    let refreshBuffer = false\n    for (let f of footprints) {\n      if (!this._selectedFootprints.includes(f)) {\n        this._selectedFootprints.push(f)\n        this.totSelectedPoints += f.totPoints\n        refreshBuffer = true\n      }\n    }\n    if (refreshBuffer) {\n      this.initSelectionBuffer()\n    }\n  }\n\n  /**\n   *\n   * @param {Footprint} footprint\n   */\n  removeFootprintFromSelection(footprint: Footprint) {\n    const indexOfObject = this._selectedFootprints.indexOf(footprint)\n    if (indexOfObject >= 0) {\n      this._selectedFootprints.splice(indexOfObject, 1)\n      this.totSelectedPoints -= footprint.totPoints\n      if (this._selectedFootprints.length > 0) {\n        this.initSelectionBuffer()\n      }\n    }\n\n  }\n\n  initHoveringBuffer() {\n    /*\n            TODO better approach. when creating the indexbuffer of footprints, \n            add 1 extra position for the selection (set to 0 == not selected), \n            and save the position \"positionIndex\" in an array (selectionIndexes).\n            When checking the selection, I get the index of the footprint, which\n            matches with the index in the selectionIndexes to retrieve the position \n            of the flag to be set to 1 in the vertexposition\n            This will ease checking the selection in the vertex/fragment shader and\n            set the pointsize and shape color.\n            */\n\n    if (this._hoveredFootprints.length == 0) {\n      return\n    }\n    let nFootprints = this._hoveredFootprints.length\n\n    let npolygons = nFootprints - 1\n    for (let j = 0; j < nFootprints; j++) {\n      npolygons += this._hoveredFootprints[j].polygons.length - 1\n    }\n    // this._selectedIndex = new Uint16Array(this._totSelectedPoints + npolygons);\n    // let MAX_UNSIGNED_SHORT = 65535; // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n\n    this.hoveredIndexes = new Uint32Array(this.totHoveredPoints + npolygons)\n    const MAX_UNSIGNED_INT = 0xffffffff // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n    // let MAX_UNSIGNED_SHORT = Number.MAX_SAFE_INTEGER;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.hoveredVertexPositionBuffer)\n\n    this.hoveredVertexPosition = new Float32Array(3 * this.totHoveredPoints)\n    let positionIndex = 0\n    let vIdx = 0\n\n    let R = 1.0\n    this.nHoveredPrimitiveFlags = 0\n\n    for (let j = 0; j < nFootprints; j++) {\n      let hoveredFootprintPoly = this._hoveredFootprints[j].polygons\n\n      if (j > 0) {\n        this.hoveredIndexes[vIdx] = MAX_UNSIGNED_INT\n        this.nHoveredPrimitiveFlags += 1\n        vIdx += 1\n      }\n\n      for (let polyIdx = 0; polyIdx < hoveredFootprintPoly.length; polyIdx++) {\n        if (polyIdx > 0) {\n          this.hoveredIndexes[vIdx] = MAX_UNSIGNED_INT;\n          this.nHoveredPrimitiveFlags += 1;\n          vIdx += 1;\n        }\n        const poly = hoveredFootprintPoly[polyIdx];\n        for (let pointIdx = 0; pointIdx < poly.length; pointIdx++) {\n          const p = poly[pointIdx];\n          this.hoveredVertexPosition[positionIndex] = R * p.x;\n          this.hoveredVertexPosition[positionIndex + 1] = R * p.y;\n          this.hoveredVertexPosition[positionIndex + 2] = R * p.z;\n\n          this.hoveredIndexes[vIdx] = Math.floor(positionIndex / 3);\n\n          vIdx += 1;\n          positionIndex += 3;\n        }\n      }\n    }\n  }\n\n  initSelectionBuffer() {\n    /*\n            TODO better approach. when creating the indexbuffer of footprints, \n            add 1 extra position for the selection (set to 0 == not selected), \n            and save the position \"positionIndex\" in an array (selectionIndexes).\n            When checking the selection, I get the index of the footprint, which\n            matches with the index in the selectionIndexes to retrieve the position \n            of the flag to be set to 1 in the vertexposition\n            This will ease checking the selection in the vertex/fragment shader and\n            set the pointsize and shape color.\n            */\n\n    let nFootprints = this._selectedFootprints.length\n\n    let npolygons = nFootprints - 1\n    for (let j = 0; j < nFootprints; j++) {\n      npolygons += this._selectedFootprints[j].polygons.length - 1\n    }\n    // this._selectedIndex = new Uint16Array(this._totSelectedPoints + npolygons);\n    // let MAX_UNSIGNED_SHORT = 65535; // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n\n    this.selectedIndexes = new Uint32Array(this.totSelectedPoints + npolygons)\n    const MAX_UNSIGNED_INT = 0xffffffff // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n    // let MAX_UNSIGNED_SHORT = Number.MAX_SAFE_INTEGER;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.selectedVertexPositionBuffer)\n\n    this.selectedVertexPosition = new Float32Array(3 * this.totSelectedPoints)\n    let positionIndex = 0\n    let vIdx = 0\n\n    let R = 1.0\n    this.nSlectedPrimitiveFlags = 0\n\n    for (let j = 0; j < nFootprints; j++) {\n      let footprintPoly = this._selectedFootprints[j].polygons\n\n      if (j > 0) {\n        this.selectedIndexes[vIdx] = MAX_UNSIGNED_INT\n        this.nSlectedPrimitiveFlags += 1\n        vIdx += 1\n      }\n\n      for (let polyIdx = 0; polyIdx < footprintPoly.length; polyIdx++) {\n        if (polyIdx > 0) {\n          this.selectedIndexes[vIdx] = MAX_UNSIGNED_INT;\n          this.nSlectedPrimitiveFlags += 1;\n          vIdx += 1;\n        }\n        const poly = footprintPoly[polyIdx];\n        for (let pointIdx = 0; pointIdx < poly.length; pointIdx++) {\n          const p = poly[pointIdx];\n          this.selectedVertexPosition[positionIndex] = R * p.x;\n          this.selectedVertexPosition[positionIndex + 1] = R * p.y;\n          this.selectedVertexPosition[positionIndex + 2] = R * p.z;\n\n          this.selectedIndexes[vIdx] = Math.floor(positionIndex / 3);\n\n          vIdx += 1;\n          positionIndex += 3;\n        }\n      }\n    }\n  }\n\n\n  draw(in_mMatrix: mat4, in_mouseHelper: MouseHelper): void {\n    if (!this.isVisible) return\n    if (!this.ready) return\n    if (!global.camera) return\n\n\n    footprintShaderProgram.enableShaders(\n      computePerspectiveMatrixSingleton.pMatrix as Float32Array,\n      in_mMatrix as Float32Array,\n      global.camera.getCameraMatrix() as Float32Array\n    )\n\n    if (in_mouseHelper != null && in_mouseHelper.xyz != this.oldMouseCoords) {\n      this.checkSelection(in_mouseHelper);\n    }\n\n\n    if (this._hoveredFootprints.length > 0) {\n      // TODO POINT_SIZE doesn't have any effect on line thickness!! it only applies to points\n      const rgb = colorHex2RGB('#00FF00')\n      const alpha = 1.0\n      this.gl.uniform4f(footprintShaderProgram.locations.color, rgb[0], rgb[1], rgb[2], alpha)\n      this.gl.uniform1f(footprintShaderProgram.locations.pointSize, 14.0) // <--- POINT_SIZE in LINE_LOOP is not applicable\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.hoveredVertexPositionBuffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, this.hoveredVertexPosition, this.gl.STATIC_DRAW)\n\n      // setting footprint position\n      this.gl.vertexAttribPointer(\n        footprintShaderProgram.locations.position,\n        FootprintSetGL.ELEM_SIZE,\n        this.gl.FLOAT,\n        false,\n        FootprintSetGL.BYTES_X_ELEM * FootprintSetGL.ELEM_SIZE,\n        0\n      )\n      this.gl.enableVertexAttribArray(footprintShaderProgram.locations.position)\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.hoveredIndexBuffer)\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.hoveredIndexes, this.gl.STATIC_DRAW)\n\n      // this._gl.drawElements (this._gl.LINE_LOOP, this._selectedVertexPosition.length / 3 + this._nSlectedPrimitiveFlags,this._gl.UNSIGNED_SHORT, 0);\n      this.gl.drawElements(\n        this.gl.LINE_LOOP,\n        this.hoveredVertexPosition.length / 3 + this.nHoveredPrimitiveFlags,\n        this.gl.UNSIGNED_INT,\n        0\n      )\n    }\n\n    if (this._selectedFootprints.length > 0) {\n      const rgb = colorHex2RGB('#ECB462')\n      const alpha = 1.0\n      this.gl.uniform4f(footprintShaderProgram.locations.color, rgb[0], rgb[1], rgb[2], alpha)\n      this.gl.uniform1f(footprintShaderProgram.locations.pointSize, 14.0) // <--- POINT_SIZE in LINE_LOOP is not applicable\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.selectedVertexPositionBuffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, this.selectedVertexPosition, this.gl.STATIC_DRAW)\n\n      // setting footprint position\n      this.gl.vertexAttribPointer(\n        footprintShaderProgram.locations.position,\n        FootprintSetGL.ELEM_SIZE,\n        this.gl.FLOAT,\n        false,\n        FootprintSetGL.BYTES_X_ELEM * FootprintSetGL.ELEM_SIZE,\n        0\n      )\n      this.gl.enableVertexAttribArray(footprintShaderProgram.locations.position)\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.selectedIndexBuffer)\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.selectedIndexes, this.gl.STATIC_DRAW)\n\n      // this._gl.drawElements (this._gl.LINE_LOOP, this._selectedVertexPosition.length / 3 + this._nSlectedPrimitiveFlags,this._gl.UNSIGNED_SHORT, 0);\n      this.gl.drawElements(\n        this.gl.LINE_LOOP,\n        this.selectedVertexPosition.length / 3 + this.nSlectedPrimitiveFlags,\n        this.gl.UNSIGNED_INT,\n        0\n      )\n    }\n\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexCataloguePosition, this.gl.STATIC_DRAW)\n\n    this.gl.vertexAttribPointer(\n      footprintShaderProgram.locations.position as number,\n      FootprintSetGL.ELEM_SIZE,\n      this.gl.FLOAT,\n      false,\n      FootprintSetGL.BYTES_X_ELEM * FootprintSetGL.ELEM_SIZE,\n      0\n    )\n    this.gl.enableVertexAttribArray(footprintShaderProgram.locations.position as number)\n\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.indexes, this.gl.STATIC_DRAW)\n\n    const shapeColor = [...colorHex2RGB(this.footprintsetProps.shapeColor), 1.0] as [number, number, number, number]\n    this.gl.uniform4f(footprintShaderProgram.locations.color as WebGLUniformLocation, ...shapeColor)\n\n    this.gl.drawElements(this.gl.LINE_LOOP, this.indexes.length, this.gl.UNSIGNED_INT, 0)\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null)\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null)\n    this.oldMouseCoords = in_mouseHelper.xyz\n  }\n}\n\nexport default FootprintSetGL","// addTAPRepo.ts\nimport { TapRepo } from '../model/tap/TapRepo.js'\nimport TapMetadata from '../model/tap/TapMetadata.js'\nimport TapMetadataList from '../model/tap/TapMetadataList.js'\nimport global from '../Global.js'\n\nimport CatalogueGL from '../model/catalogues/CatalogueGL.js'\nimport FootprintSetGL from '../model/footprints/FootprintSetGL.js'\n\nlet catId = 1\nlet obsId = 1\n\nexport interface TapDatasets {\n  obsList: FootprintSetGL[]\n  catalogueList: CatalogueGL[]\n  notClassifiedList: string[]\n}\n\n/**\n * Initialize a TapRepo and populate capabilities + datasets.\n */\nexport async function addTAPRepo(repoUrl: string): Promise<TapRepo> {\n  const tapRepo = new TapRepo(repoUrl)\n  tapRepo.adqlFunctionList = await loadCapabilities(repoUrl)\n\n  const datasets = await loadTables(repoUrl, tapRepo)\n  tapRepo.setCataloguesList(datasets.catalogueList)\n  tapRepo.setObservationsList(datasets.obsList)\n  tapRepo.setNotClassifiedList(datasets.notClassifiedList)\n\n  return tapRepo\n}\n\nexport async function queryAsync(\n  tapRepo: TapRepo,\n  adql: string,\n  TAP_QUERY_TIMEOUT_MS: number\n): Promise<any | null> {\n  const base = global.corsProxyUrl.replace(/\\/?$/, '/'); // ensure trailing /\n  const url = new URL('adql', base);\n  url.searchParams.set('tapurl', tapRepo.tapBaseUrl);\n  url.searchParams.set('query', adql);\n\n  const ac = new AbortController();\n  const t = setTimeout(() => ac.abort(), TAP_QUERY_TIMEOUT_MS || 30000);\n\n  try {\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      mode: 'cors',\n      signal: ac.signal,\n      headers: { Accept: 'application/json' }\n    });\n    if (!response.ok) {\n      const text = await response.text().catch(() => '');\n      throw new Error(`HTTP ${response.status} ${response.statusText} – ${text}`);\n    }\n    return await response.json(); // return type is 'any'\n  } catch (err: any) {\n    console.error('queryAsync error:', err?.message || err);\n    return null;\n  } finally {\n    clearTimeout(t);\n  }\n}\n\n\n/**\n * Fetch and parse tables from a TAP service.\n */\nconst loadTables = async (tapUrl: string, tapRepo: TapRepo): Promise<TapDatasets> => {\n  const tablesUrl = `${tapUrl}/tables`\n  const requestUrl = `${global.corsProxyUrl}exturl?url=${encodeURIComponent(tablesUrl)}`\n  const result: TapDatasets = { obsList: [], catalogueList: [], notClassifiedList: [] }\n\n  try {\n    const response = await fetch(requestUrl, { method: 'GET', mode: 'cors' })\n    const raw = await response.text()\n    const data = raw.replace(/\\n\\t|\\t|\\n/g, '')\n\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(data, 'application/xml')\n    const root = doc.firstElementChild\n\n    if (!root) throw new Error('Error parsing TAP XML. Missing root element.')\n    if (!/tableset$/i.test(root.nodeName)) {\n      throw new Error(`Error parsing TAP XML. ${root.nodeName} not recognised`)\n    }\n\n    const catalogueList: CatalogueGL[] = []\n    const obsList: FootprintSetGL[] = []\n    const notClassifiedList: string[] = []\n\n    // schemas\n    for (const schema of Array.from(root.children)) {\n      if (schema.nodeName !== 'schema') continue\n\n      for (const table of Array.from(schema.children)) {\n        if (table.nodeName !== 'table') continue\n\n        const dataset = parseTable(table as Element, tablesUrl, tapRepo)\n        if (!dataset) continue\n\n        if (dataset.catalogue) {\n          ; (dataset.catalogue as any).id = catId++ // keep parity with existing code\n          catalogueList.push(dataset.catalogue)\n        }\n        if (dataset.footprint) {\n          ; (dataset.footprint as any).id = obsId++\n          obsList.push(dataset.footprint)\n        }\n        if (dataset.notClassified) {\n          notClassifiedList.push(dataset.notClassified)\n        }\n      }\n    }\n\n    return { catalogueList, obsList, notClassifiedList }\n  } catch (err: any) {\n    console.error(err?.message ?? err)\n    return result\n  }\n}\n\n/**\n * Fetch and parse TAP capabilities to extract ADQL functions.\n */\nconst loadCapabilities = async (repoUrl: string): Promise<string[]> => {\n  const capabilitiesUrl = `${repoUrl}/capabilities`\n  const requestUrl = `${global.corsProxyUrl}exturl?url=${encodeURIComponent(capabilitiesUrl)}`\n  let capabilities: string[] = []\n\n  try {\n    const response = await fetch(requestUrl, { method: 'GET', mode: 'cors' })\n    const raw = await response.text()\n    const data = raw.replace(/\\n\\t|\\t|\\n/g, '')\n\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(data, 'application/xml')\n    const root = doc.firstElementChild\n\n    if (!root) throw new Error('Error parsing TAP XML. Missing root element.')\n    if (!/capabilities$/i.test(root.nodeName)) {\n      throw new Error(`Error parsing TAP XML. ${root.nodeName} not recognised`)\n    }\n\n    for (const capability of Array.from(root.children)) {\n      if (capability.nodeName !== 'capability') continue\n\n      for (const child of Array.from(capability.children)) {\n        if (child.nodeName === 'language') {\n          capabilities = parseCapabilities(child as Element)\n        }\n      }\n    }\n\n    return capabilities\n  } catch (err: any) {\n    console.error(err?.message ?? err)\n    return capabilities\n  }\n}\n\n/**\n * Parse the <language> node to extract ADQL functions.\n */\nconst parseCapabilities = (languageNode: Element): string[] => {\n  const out: string[] = []\n  const featuresContainers = languageNode.getElementsByTagName('languageFeatures')\n  if (!featuresContainers.length) return out\n\n  const featureNodeList = featuresContainers[0].getElementsByTagName('feature')\n  for (const feature of Array.from(featureNodeList)) {\n    const formNode = feature.getElementsByTagName('form')[0]\n    if (formNode?.textContent) out.push(formNode.textContent)\n  }\n  return out\n}\n\ntype TableParseResult = {\n  catalogue: CatalogueGL | null\n  footprint: FootprintSetGL | null\n  notClassified: string | null\n}\n\n/**\n * Parse a <table> node and build dataset wrappers.\n */\nconst parseTable = (tableNode: Element, tablesUrl: string, tapRepo: TapRepo): TableParseResult => {\n  const nameNode = tableNode.getElementsByTagName('name')[0]\n  if (!nameNode?.textContent) {\n    return { catalogue: null, footprint: null, notClassified: 'Missing table name' }\n  }\n\n  const tableName = nameNode.textContent\n  const tableDesc = tableNode.getElementsByTagName('description')[0]?.textContent ?? null\n\n  const metaColumns = tableNode.getElementsByTagName('column')\n  const tapMetas = new TapMetadataList()\n\n  for (const col of Array.from(metaColumns)) {\n    const name = col.getElementsByTagName('name')[0]?.textContent ?? ''\n    const description = col.getElementsByTagName('description')[0]?.textContent ?? undefined\n    const unit = col.getElementsByTagName('unit')[0]?.textContent ?? undefined\n    const dataType = col.getElementsByTagName('dataType')[0]?.textContent ?? undefined\n    const ucd = col.getElementsByTagName('ucd')[0]?.textContent ?? undefined\n    const utype = col.getElementsByTagName('utype')[0]?.textContent ?? undefined\n\n    const tapMeta = new TapMetadata(name, description, unit, dataType, ucd, utype)\n    tapMetas.addMetadata(tapMeta)\n  }\n\n  let catalogue: CatalogueGL | null = null\n  let footprint: FootprintSetGL | null = null\n  let notClassified: string | null = null\n\n  if (tapMetas.pgSphereMetaColumns.length > 0 || tapMetas.sRegionMetaColumns.length > 0) {\n    footprint = new FootprintSetGL(tableName, tableDesc, tapRepo, tapMetas)\n  } else if (tapMetas.posEqRAMetaColumns.length > 0 && tapMetas.posEqDecMetaColumns.length > 0) {\n    catalogue = new CatalogueGL(tableName, tableDesc, tapRepo, tapMetas)\n  } else {\n    notClassified = `TODO: create NC entity for ${tablesUrl}#${tableName}`\n  }\n\n  return { catalogue, footprint, notClassified }\n}","import CatalogueGL from '../model/catalogues/CatalogueGL.js'\nimport TapMetadata from '../model/tap/TapMetadata.js'\nimport TapMetadataList from '../model/tap/TapMetadataList.js'\nimport { queryAsync } from './tapRepoService.js'\n\n// Optional timeout; adjust or remove if you don’t use timeouts.\nconst TAP_QUERY_TIMEOUT_MS = 60_000\n\n// Small helpers to be robust with slightly different metadata shapes\nfunction getColName(col: TapMetadata | undefined): string {\n    if (!col) return ''\n    return (col.name ?? col.name ?? '').toString()\n}\n\nexport default async function queryCatalogueByFoV(\n    catalogue: CatalogueGL,\n    polygonAdql: String\n): Promise<CatalogueGL | undefined> {\n    try {\n\n        // Resolve RA/Dec column names (CatalogueProps already picked them from metadata)\n        const raCol = getColName(catalogue.catalogueProps.raColumn)\n        const decCol = getColName(catalogue.catalogueProps.decColumn)\n        const tapTable = catalogue.name\n\n        if (!raCol || !decCol) {\n            console.warn('[queryCatalogueByFoV] RA/Dec columns were not resolved from metadata.')\n            return\n        }\n\n        const adql = `SELECT * FROM ${tapTable} WHERE 1 = CONTAINS(POINT('ICRS', ${raCol}, ${decCol}), POLYGON('ICRS',${polygonAdql}))`\n        \n        // Fire the TAP query\n        const rows = await queryAsync(catalogue.tapRepo, adql, TAP_QUERY_TIMEOUT_MS)\n        console.log(rows)\n    \n        if (rows && rows.data.length  > 0) {\n            const metadata = rows.metadata\n            const data = rows.data\n\n            console.log(data.length)\n            let tapMetadataList = new TapMetadataList()\n            for (const element of metadata) {\n                const name = element.name\n                const description = element.description !== undefined ? element.description : undefined\n                const unit = element.unit !== undefined ? element.unit : undefined\n                const datatype = element.datatype !== undefined ? element.datatype : undefined\n                const ucd = element.ucd !== undefined ? element.ucd : undefined\n                const utype = element.utype !== undefined ? element.utype : undefined\n                const tapMeta = new TapMetadata(name, description, unit, datatype, ucd, utype)\n                tapMetadataList.addMetadata(tapMeta)\n            }\n            catalogue.addSources(data, tapMetadataList.metadataList)\n            return catalogue\n        } else {\n            console.log('[queryCatalogueByFoV] No results found.')\n            return\n        }\n    } catch (err: any) {\n        console.error('[queryCatalogueByFoV] Error:', err?.message ?? err)\n        return\n    }\n}","import FootprintSetGL from '../model/footprints/FootprintSetGL.js'\nimport healpixGridSingleton from '../model/grid/HealpixGridSingleton.js';\nimport Point from '../model/Point.js';\nimport TapMetadata from '../model/tap/TapMetadata.js'\nimport TapMetadataList from '../model/tap/TapMetadataList.js'\nimport { TapRepo } from '../model/tap/TapRepo.js';\nimport FoVUtils from '../utils/FoVUtils.js';\nimport { queryAsync } from './tapRepoService.js'\n\n\ninterface ColumnLike {\n  _name: string;\n}\n\n// If your FoVUtils already has TS types, feel free to delete these:\ntype FoVPolygonString = string; // \"ra1,dec1, ra2,dec2, ...\"\ninterface J2000Center { _raDeg: number; _decDeg: number; }\n\n// Optional timeout; adjust or remove if you don’t use timeouts.\nconst TAP_QUERY_TIMEOUT_MS = 60_000\n\n\n// --- Function ---\n// Small helpers to be robust with slightly different metadata shapes\nfunction getColName(col: TapMetadata | undefined): string {\n  if (!col) return ''\n  return (col.name ?? col.name ?? '').toString()\n}\n\nfunction prepareADQL(\n  tapTable: string,\n  tapRa: string | undefined,\n  tapDec: string | undefined,\n  polygonAdql: String, tapRepo: TapRepo,\n  centralPoint: Point): string {\n  let adql = \"\"\n  if (tapRepo.adqlFunctionList.includes('POLYGON')) {\n    adql =\n      'select * from ' +\n      tapTable +\n      ' where 1=CONTAINS(POINT(\\'ICRS\\',' +\n      tapRa +\n      ',' +\n      tapDec +\n      '), POLYGON(\\'ICRS\\', ' +\n      polygonAdql +\n      '))';\n  } else {\n    const radius = healpixGridSingleton.getMinFoV() / 2;\n    adql =\n      'select * from ' +\n      tapTable +\n      ' where 1=CONTAINS(POINT(\\'ICRS\\',' +\n      tapRa +\n      ',' +\n      tapDec +\n      '), CIRCLE(\\'ICRS\\', ' +\n      centralPoint.raDeg +\n      ', ' +\n      centralPoint.decDeg +\n      ', ' +\n      radius +\n      '))';\n  }\n  return adql\n}\n\n/**\n * Builds an ADQL query from current FoV and fetches footprints.\n * Returns the enriched FootprintSet (if any rows were found), otherwise undefined.\n */\nexport default async function queryFootprintSetByFov(\n  footprintSet: FootprintSetGL,\n  polygonAdql: String,\n  centralPoint: Point): Promise<FootprintSetGL | undefined> {\n\n  try {\n\n    // Resolve RA/Dec column names (CatalogueProps already picked them from metadata)\n    const raCol = getColName(footprintSet.footprintsetProps.raColumn)\n    const decCol = getColName(footprintSet.footprintsetProps.decColumn)\n    const tapTable = footprintSet.name\n\n    if (!raCol || !decCol) {\n      console.warn('[queryCatalogueByFoV] RA/Dec columns were not resolved from metadata.')\n      return\n    }\n    const adql = prepareADQL(tapTable, raCol, decCol, polygonAdql, footprintSet.tapRepo, centralPoint)\n\n    const rows = await queryAsync(footprintSet.tapRepo, adql, TAP_QUERY_TIMEOUT_MS)\n    console.log(rows)\n    // if (rows && rows.data.length > 0) {\n    // const metadata = rows.metadata\n    // const data = rows.data\n\n    if (\n      typeof rows === 'object' &&\n      rows !== null &&\n      Array.isArray((rows as any).metadata) &&\n      Array.isArray((rows as any).data)\n    ) {\n      const { metadata, data } = rows as {\n        metadata: Array<{\n          name: string;\n          description: string;\n          unit: string;\n          datatype: string;\n          ucd: string;\n          utype: string;\n        }>;\n        data: unknown[];\n      };\n      const tapMetadataList = new TapMetadataList();\n      for (const m of metadata) {\n        const tapMeta = new TapMetadata(\n          m.name,\n          m.description ?? undefined,\n          m.unit ?? undefined,\n          m.datatype ?? undefined,\n          m.ucd ?? undefined,\n          m.utype ?? undefined\n        );\n        tapMetadataList.addMetadata(tapMeta);\n      }\n\n      if (data.length > 0) {\n        footprintSet.addFootprints(data, tapMetadataList.metadataList);\n        return footprintSet;\n      } else {\n        console.log('No results found');\n      }\n      // }\n\n    } else {\n      console.log('[queryFootprintSetByFov] No results found.')\n      return\n    }\n  } catch (err: any) {\n    console.error('[queryFootprintSetByFov] Error:', err?.message ?? err)\n    return\n  }\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { vec4, mat4, ReadonlyMat4 } from 'gl-matrix';\n\nimport global from '../../Global.js';\nimport { fovHelper } from '../hips/FoVHelper.js';\nimport { colorHex2RGB, degToRad } from '../../utils/Utils.js';\nimport GridShaderManager from '../../shader/GridShaderManager.js';\nimport Point from '../Point.js';\nimport CoordsType from '../../utils/CoordsType.js';\nimport FoVUtils from '../../utils/FoVUtils.js';\n\nimport GridTextHelper from './GridTextHelper.js';\nimport HealpixGridSingleton from './HealpixGridSingleton.js';\nimport AbstractSkyEntity from '../AbstractSkyEntity.js';\nimport healpixGridSingleton from './HealpixGridSingleton.js';\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js';\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\n/** Equatorial grid rendered as RA/Dec great-circle line loops */\nclass EquatorialGrid extends AbstractSkyEntity {\n\tstatic ELEM_SIZE = 3;\n\tstatic BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT;\n\n\tprivate showGrid: boolean = true\n\n\t// private _gl: GL;\n\tprivate _shaderProgram!: WebGLProgram;\n\tprivate _vertexShader!: WebGLShader;\n\tprivate _fragmentShader!: WebGLShader;\n\n\tprivate defaultColor = '#41d421'\n\tprivate gridText: GridTextHelper = new GridTextHelper()\n\n\tprivate _attribLocations: { position: number; selected: number; pointSize: number; color: number } = {\n\t\tposition: 0,\n\t\tselected: 1,\n\t\tpointSize: 2,\n\t\tcolor: 3,\n\t};\n\n\n\tprivate _phiVertexPositionBuffer!: WebGLBuffer;\n\tprivate _thetaVertexPositionBuffer!: WebGLBuffer;\n\n\tprivate _fov!: number;\n\n\t// Step sizes (degrees + radians) and label caches\n\tprivate _phiStep = 0;\n\tprivate _phiStepRad = 0;\n\tprivate _thetaStep = 0;\n\tprivate _thetaStepRad = 0;\n\n\tprivate _phiArray: Float32Array[] = [];\n\tprivate _thetaArray: Float32Array[] = [];\n\n\t// For placing text labels near current view center:\n\t//  - _dec4Labels: key = RA(deg), value = points along that RA ring (for Dec labels)\n\t//  - _ra4Labels : key = Dec(deg), value = points along that Dec ring (for RA labels)\n\tprivate _dec4Labels: Map<number, number[][]> = new Map();\n\tprivate _ra4Labels: Map<number, number[][]> = new Map();\n\n\t/**\n\t * @param radius Not used by current implementation (sphere is unit-radius)\n\t * @param fov    Field of view in degrees\n\t */\n\tconstructor() {\n\t\tsuper(HealpixGridSingleton.RADIUS, HealpixGridSingleton.INITIAL_POSITION, HealpixGridSingleton.INITIAL_PhiRad, HealpixGridSingleton.INITIAL_ThetaRad, 'equatorial-grid');\n\t}\n\n\tinit(fov: number) {\n\t\tthis._fov = fov\n\n\t\tthis.initGL(global.gl as GL);\n\n\t\t// Program & buffers\n\t\tthis._shaderProgram = (global.gl as GL).createProgram() as WebGLProgram;\n\t\tthis.initShaders();\n\n\t\tthis._phiVertexPositionBuffer = (global.gl as GL).createBuffer()!;\n\t\tthis._thetaVertexPositionBuffer = (global.gl as GL).createBuffer()!;\n\n\t\t// Build initial RA/Dec line buffers\n\t\tthis.initBuffers(this._fov);\n\t}\n\n\t/** Compile/link shaders and fetch uniform/attribute locations */\n\tprivate initShaders(): void {\n\t\t// Fragment\n\t\tconst fsSource = GridShaderManager.healpixGridFS();\n\t\tthis._fragmentShader = (global.gl as GL).createShader((global.gl as GL).FRAGMENT_SHADER)!;\n\t\t(global.gl as GL).shaderSource(this._fragmentShader, fsSource);\n\t\t(global.gl as GL).compileShader(this._fragmentShader);\n\t\tif (!(global.gl as GL).getShaderParameter(this._fragmentShader, (global.gl as GL).COMPILE_STATUS)) {\n\t\t\t// Keep identical behavior (alert) but surface errors in console too\n\t\t\tconst log = (global.gl as GL).getShaderInfoLog(this._fragmentShader) || 'Unknown fragment shader error';\n\t\t\tconsole.error(log);\n\t\t\talert(log);\n\t\t\treturn;\n\t\t}\n\n\t\t// Vertex\n\t\tconst vsSource = GridShaderManager.healpixGridVS();\n\t\tthis._vertexShader = (global.gl as GL).createShader((global.gl as GL).VERTEX_SHADER)!;\n\t\t(global.gl as GL).shaderSource(this._vertexShader, vsSource);\n\t\t(global.gl as GL).compileShader(this._vertexShader);\n\t\tif (!(global.gl as GL).getShaderParameter(this._vertexShader, (global.gl as GL).COMPILE_STATUS)) {\n\t\t\tconst log = (global.gl as GL).getShaderInfoLog(this._vertexShader) || 'Unknown vertex shader error';\n\t\t\tconsole.error(log);\n\t\t\talert(log);\n\t\t\treturn;\n\t\t}\n\n\t\t// Link\n\t\t(global.gl as GL).attachShader(this._shaderProgram, this._vertexShader);\n\t\t(global.gl as GL).attachShader(this._shaderProgram, this._fragmentShader);\n\t\t(global.gl as GL).linkProgram(this._shaderProgram);\n\n\t\tif (!(global.gl as GL).getProgramParameter(this._shaderProgram, (global.gl as GL).LINK_STATUS)) {\n\t\t\talert('Could not initialise shaders');\n\t\t}\n\n\t\t(global.gl as GL).useProgram(this._shaderProgram);\n\n\t}\n\n\t/** Build RA/Dec line vertex arrays based on FoV step helper */\n\tprivate initBuffers(fovDeg: number): void {\n\t\tconst R = 1.0;\n\n\t\tconst steps = fovHelper.getRADegSteps(fovDeg);\n\t\tconst phiStep = steps.raStep as number;   // RA step (deg)\n\t\tconst thetaStep = steps.decStep as number; // Dec step (deg)\n\n\t\tthis._phiStep = phiStep;\n\t\tthis._phiStepRad = degToRad(phiStep);\n\t\tthis._thetaStep = thetaStep;\n\t\tthis._thetaStepRad = degToRad(thetaStep);\n\n\t\tthis._ra4Labels = new Map();\n\t\tthis._dec4Labels = new Map();\n\t\tthis._phiArray = [];\n\t\tthis._thetaArray = [];\n\n\t\t// Lines of constant Dec (varying RA): for each Dec, a ring with vertices every phiStep°\n\t\tfor (let theta = thetaStep; theta < 180; theta += thetaStep) {\n\t\t\tconst phiVertexPosition = new Float32Array((360 / phiStep) * 3);\n\n\t\t\tconst thetaRad = degToRad(theta);\n\t\t\tfor (let phi = 0; phi < 360; phi += phiStep) {\n\t\t\t\tconst phiRad = degToRad(phi);\n\t\t\t\tconst x = R * Math.sin(thetaRad) * Math.cos(phiRad);\n\t\t\t\tconst y = R * Math.sin(thetaRad) * Math.sin(phiRad);\n\t\t\t\tconst z = R * Math.cos(thetaRad);\n\n\t\t\t\tconst idx = Math.floor(phi / phiStep);\n\t\t\t\tphiVertexPosition[3 * idx + 0] = x;\n\t\t\t\tphiVertexPosition[3 * idx + 1] = y;\n\t\t\t\tphiVertexPosition[3 * idx + 2] = z;\n\n\t\t\t\tif (!this._dec4Labels.has(phi)) this._dec4Labels.set(phi, []);\n\t\t\t\tthis._dec4Labels.get(phi)!.push([x, y, z]);\n\t\t\t}\n\n\t\t\tthis._phiArray.push(phiVertexPosition);\n\t\t}\n\n\t\t// Lines of constant RA (varying Dec): for each RA, a ring with vertices every thetaStep°\n\t\tfor (let phi = 0; phi < 360; phi += phiStep) {\n\t\t\tconst thetaVertexPosition = new Float32Array((360 / thetaStep) * 3);\n\n\t\t\tconst phiRad = degToRad(phi);\n\t\t\tfor (let theta = 0; theta < 360; theta += thetaStep) {\n\t\t\t\tconst thetaRad = degToRad(theta);\n\t\t\t\tconst x = R * Math.sin(thetaRad) * Math.cos(phiRad);\n\t\t\t\tconst y = R * Math.sin(thetaRad) * Math.sin(phiRad);\n\t\t\t\tconst z = R * Math.cos(thetaRad);\n\n\t\t\t\tconst idx = Math.floor(theta / thetaStep);\n\t\t\t\tthetaVertexPosition[3 * idx + 0] = x;\n\t\t\t\tthetaVertexPosition[3 * idx + 1] = y;\n\t\t\t\tthetaVertexPosition[3 * idx + 2] = z;\n\n\t\t\t\tconst decKey = 90 - theta; // original code’s keying for RA labels\n\t\t\t\tif (!this._ra4Labels.has(decKey)) this._ra4Labels.set(decKey, []);\n\t\t\t\tthis._ra4Labels.get(decKey)!.push([x, y, z]);\n\t\t\t}\n\n\t\t\tthis._thetaArray.push(thetaVertexPosition);\n\t\t}\n\t}\n\n\t/** Update buffers when FoV (in degrees) changes */\n\trefresh(): void {\n\t\tconst fovDeg = healpixGridSingleton.getMinFoV()\n\t\tif (this._fov !== fovDeg) {\n\t\t\tthis._fov = fovDeg;\n\t\t\tthis.initBuffers(this._fov);\n\t\t}\n\t}\n\n\tprivate vectorDistance(p1: Point, p2: Point): number {\n\t\tconst dx = p1.x - p2.x;\n\t\tconst dy = p1.y - p2.y;\n\t\tconst dz = p1.z - p2.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n\n\tprivate enableShader(mMatrix: ReadonlyMat4, pMatrix: ReadonlyMat4): void {\n\t\tconst gl = global.gl as GL;\n\t\tgl.useProgram(this._shaderProgram);\n\n\t\t// uMVMatrix = camera * model\n\t\tconst mvMatrix = mat4.create();\n\t\tmat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix() as mat4, mMatrix);\n\n\t\t// TODO move locations retrieval elsewhere\n\n\t\t// Uniform locations\n\t\tconst uMVMatrixLoc = gl.getUniformLocation(this._shaderProgram, 'uMVMatrix');\n\t\tconst uPMatrixLoc = gl.getUniformLocation(this._shaderProgram, 'uPMatrix');\n\t\tconst uColor = gl.getUniformLocation(this._shaderProgram, 'u_fragcolor');\n\n\t\t// Attribute locations\n\t\tthis._attribLocations.position = gl.getAttribLocation(this._shaderProgram, 'aCatPosition');\n\n\t\tif (uMVMatrixLoc) gl.uniformMatrix4fv(uMVMatrixLoc, false, mvMatrix as Float32Array);\n\t\tif (uPMatrixLoc) gl.uniformMatrix4fv(uPMatrixLoc, false, pMatrix as Float32Array);\n\t\tif (uColor) {\n\t\t\tconst rgb = colorHex2RGB(this.defaultColor);\n\t\t\tgl.uniform4f(uColor, rgb[0], rgb[1], rgb[2], 1.0);\n\t\t}\n\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGrid\n\t}\n\n\ttoggleShowGrid() {\n\t\tthis.showGrid = !this.showGrid\n\t}\n\t/**\n\t * @param mMatrix model matrix associated with current HiPS (or scene) transform\n\t * @param fovObj  current field-of-view (degrees). If your FoV type differs,\n\t *                pass the numeric value here; this signature matches original usage.\n\t */\n\tdraw(): void {\n\n\t\tconst gl = global.gl as GL;\n\t\tconst mMatrix = this.getModelMatrix();\n\t\tif (this._thetaArray.length === 0) return;\n\n\t\tthis.refresh();\n\n\t\tif (!this.showGrid) {\n\t\t\t// gridTextHelper.resetDivSets();\n\t\t\tthis.gridText.resetDivSets();\n\t\t\treturn;\n\t\t}\n\n\t\tconst pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n\t\tthis.enableShader(mMatrix, pMatrix);\n\n\t\t// Draw Dec rings\n\t\tfor (let i = 0; i < this._phiArray.length; i++) {\n\t\t\t(global.gl as GL).bindBuffer((global.gl as GL).ARRAY_BUFFER, this._phiVertexPositionBuffer);\n\t\t\t(global.gl as GL).bufferData((global.gl as GL).ARRAY_BUFFER, this._phiArray[i], (global.gl as GL).STATIC_DRAW);\n\t\t\t(global.gl as GL).vertexAttribPointer(this._attribLocations.position, 3, (global.gl as GL).FLOAT, false, 0, 0);\n\t\t\t(global.gl as GL).enableVertexAttribArray(this._attribLocations.position);\n\n\t\t\t(global.gl as GL).drawArrays((global.gl as GL).LINE_LOOP, 0, 360 / this._phiStep);\n\t\t}\n\n\t\t// Draw RA rings\n\t\tfor (let j = 0; j < this._thetaArray.length; j++) {\n\t\t\t(global.gl as GL).bindBuffer((global.gl as GL).ARRAY_BUFFER, this._thetaVertexPositionBuffer);\n\t\t\t(global.gl as GL).bufferData((global.gl as GL).ARRAY_BUFFER, this._thetaArray[j], (global.gl as GL).STATIC_DRAW);\n\t\t\t(global.gl as GL).vertexAttribPointer(this._attribLocations.position, 3, (global.gl as GL).FLOAT, false, 0, 0);\n\t\t\t(global.gl as GL).enableVertexAttribArray(this._attribLocations.position);\n\n\t\t\t(global.gl as GL).drawArrays((global.gl as GL).LINE_LOOP, 0, 360 / this._thetaStep);\n\t\t}\n\n\t\t// Label layout (HTML overlay)\n\t\tconst center = FoVUtils.getCenterJ2000(gl.canvas as HTMLCanvasElement);\n\t\t// MVP = P * V * M\n\t\tconst mvMatrix = mat4.create();\n\t\tmat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix() as unknown as mat4, mMatrix);\n\t\tconst mvpMatrix = mat4.create();\n\t\tmat4.multiply(mvpMatrix, pMatrix as unknown as mat4, mvMatrix);\n\n\t\t// Dec labels (loop over RA keys)\n\t\tfor (const [raDegKey, points] of this._dec4Labels.entries()) {\n\t\t\tif (Math.abs(raDegKey - center.raDeg) <= this._phiStep) {\n\t\t\t\tfor (let p = 0; p < points.length; p++) {\n\t\t\t\t\tconst [x, y, z] = points[p];\n\t\t\t\t\tconst phiPoint: [number, number, number, number] = [x, y, z, 1];\n\t\t\t\t\tconst point = new Point({ x, y, z }, CoordsType.CARTESIAN);\n\t\t\t\t\tconst decDeg = point.decDeg;\n\n\t\t\t\t\tif (Math.abs(decDeg - center.decDeg) < 60) {\n\t\t\t\t\t\tconst clipspace = vec4.create();\n\t\t\t\t\t\tvec4.transformMat4(clipspace, phiPoint, mvpMatrix);\n\n\t\t\t\t\t\t// perspective divide\n\t\t\t\t\t\tclipspace[0] /= clipspace[3];\n\t\t\t\t\t\tclipspace[1] /= clipspace[3];\n\n\t\t\t\t\t\t// clip->pixel\n\t\t\t\t\t\tconst pixelX = (clipspace[0] * 0.5 + 0.5) * (global.gl as GL).canvas.width;\n\t\t\t\t\t\tconst pixelY = (clipspace[1] * -0.5 + 0.5) * (global.gl as GL).canvas.height;\n\t\t\t\t\t\tthis.gridText.addEqDivSet(decDeg.toFixed(2), pixelX, pixelY, 'dec');\n\t\t\t\t\t\t// gridTextHelper.addEqDivSet(decDeg.toFixed(2), pixelX, pixelY, 'dec');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// RA labels (loop over Dec keys)\n\t\tfor (const [decDegKey, points] of this._ra4Labels.entries()) {\n\t\t\tif (Math.abs(decDegKey - center.decDeg) <= this._thetaStep) {\n\t\t\t\tfor (let p = 0; p < points.length; p++) {\n\t\t\t\t\tconst [x, y, z] = points[p];\n\t\t\t\t\tconst phiPoint: [number, number, number, number] = [x, y, z, 1];\n\t\t\t\t\tconst point = new Point({ x, y, z }, CoordsType.CARTESIAN);\n\t\t\t\t\tconst d = this.vectorDistance(point, center);\n\n\t\t\t\t\tconst raDeg = point.raDeg;\n\t\t\t\t\tif (d < degToRad(50)) {\n\t\t\t\t\t\tconst clipspace = vec4.create();\n\t\t\t\t\t\tvec4.transformMat4(clipspace, phiPoint, mvpMatrix);\n\n\t\t\t\t\t\tclipspace[0] /= clipspace[3];\n\t\t\t\t\t\tclipspace[1] /= clipspace[3];\n\n\t\t\t\t\t\tconst pixelX = (clipspace[0] * 0.5 + 0.5) * (global.gl as GL).canvas.width;\n\t\t\t\t\t\tconst pixelY = (clipspace[1] * -0.5 + 0.5) * (global.gl as GL).canvas.height;\n\n\t\t\t\t\t\t// gridTextHelper.addEqDivSet(raDeg.toFixed(2), pixelX, pixelY, 'ra');\n\t\t\t\t\t\tthis.gridText.addEqDivSet(raDeg.toFixed(2), pixelX, pixelY, 'ra');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.gridText.resetDivSets();\n\t\t// gridTextHelper.resetDivSets();\n\n\t\t// Cleanup\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\t}\n}\n\nconst equatorialGridSingleton = new EquatorialGrid();\nexport default equatorialGridSingleton;","// AstroSphere.ts\nimport { bootSetup } from './Config.js'\nimport Camera from './Camera.js'\nimport RayPickingUtils from './utils/RayPickingUtils.js'\nimport global from './Global.js'\nimport { visibleTilesManager } from './model/hips/VisibleTilesManager.js'\nimport MouseHelper from './utils/MouseHelper.js'\n\nimport {\n  cartesianToSpherical,\n  sphericalToAstroDeg,\n  raDegToHMS,\n  decDegToDMS,\n  AstroCoords,\n  HMS,\n  SphericalCoords,\n  DMS,\n} from './utils/Utils.js'\n\n\nimport healpixGridSingleton from './model/grid/HealpixGridSingleton.js'\nimport HiPS from './model/hips/HiPS.js'\nimport { HiPSDescriptor } from './model/hips/HiPSDescriptor.js'\nimport computePerspectiveMatrixSingleton from './utils/ComputePerspectiveMatrix.js'\nimport { FoV } from './model/FoV.js'\nimport Point from './model/Point.js'\nimport FoVUtils from './utils/FoVUtils.js'\nimport queryCatalogueByFoV from './services/queryCatalogueByFoV.js'\nimport CatalogueGL from './model/catalogues/CatalogueGL.js'\nimport FootprintSetGL, { HoveredFootprintDetail } from './model/footprints/FootprintSetGL.js'\nimport queryFootprintSetByFov from './services/queryFootprintSetByFov.js'\nimport Footprint from './model/footprints/Footprint.js'\nimport EquatorialGrid from './model/grid/EquatorialGrid.js'\nimport equatorialGridSingleton from './model/grid/EquatorialGrid.js'\n\nexport type PointCoordinates = {\n  astroDeg: AstroCoords\n  raHMS: HMS\n  decDMS: DMS\n  sphericalDeg: SphericalCoords\n}\n\n/**\n * AstroSphere — main WebGL scene controller (TS port)\n */\nclass AstroSphere {\n  private camera!: Camera\n\n  private centralPoinCoords: PointCoordinates | undefined\n  private mousePointCoords: PointCoordinates | undefined\n\n  private canvas: HTMLCanvasElement\n  private showHPXGrid = false\n  private mouseHelper: MouseHelper\n\n  private mouseDown = false\n  private lastMouseX: number | null = null\n  private lastMouseY: number | null = null\n  private inertiaX = 0.0\n  private inertiaY = 0.0\n  private zoomInertia = 0.0\n\n  private activeHiPS: HiPS | null = null\n\n  private startup = true\n\n  // private insideSphere: boolean\n  private fov: FoV\n\n  private activeCatalogues: CatalogueGL[] = []\n  private activeFootprintSets: FootprintSetGL[] = []\n\n  constructor(canvas: HTMLCanvasElement, webgl: WebGL2RenderingContext) {\n    // Keep global GL context (as in original JS)\n    global.gl = webgl\n    this.mouseHelper = new MouseHelper()\n    this.canvas = canvas\n    // this.insideSphere = bootSetup.insideSphere\n    global.insideSphere = bootSetup.insideSphere\n    this.init(canvas)\n    this.fov = healpixGridSingleton.refreshFoV()\n  }\n\n  private updateCentralPoint(): PointCoordinates {\n\n    // const sphericalCoords = cartesianToSpherical(this.camera.getCameraPosition())\n    const sphericalCoords = this.getPhiThetaDeg(this.canvas)\n    const astroCoords = sphericalToAstroDeg(sphericalCoords.phi, sphericalCoords.theta)\n    const raHMS = raDegToHMS(astroCoords.ra)\n    const decDMS = decDegToDMS(astroCoords.dec)\n    this.centralPoinCoords = {\n      astroDeg: astroCoords,\n      sphericalDeg: sphericalCoords,\n      raHMS: raHMS,\n      decDMS: decDMS\n    }\n    return this.centralPoinCoords\n  }\n\n\n  private updateLastMousePoint(): PointCoordinates {\n\n    const sphericalCoords = { phi: this.mouseHelper.phi, theta: this.mouseHelper.theta } as SphericalCoords\n    const astroCoords = { ra: this.mouseHelper.ra, dec: this.mouseHelper.dec } as AstroCoords\n    const raHMS = this.mouseHelper.raHMS as HMS\n    const decDMS = this.mouseHelper.decDMS as DMS\n    this.mousePointCoords = {\n      astroDeg: astroCoords,\n      sphericalDeg: sphericalCoords,\n      raHMS: raHMS,\n      decDMS: decDMS\n    }\n    return this.mousePointCoords\n  }\n\n  getCentralPointCoordinates(): PointCoordinates | undefined {\n    return this.centralPoinCoords\n  }\n\n  getLastMousePointCoordinates(): PointCoordinates | undefined {\n    return this.mousePointCoords\n  }\n\n  private init(canvas: HTMLCanvasElement) {\n    this.initCamera()\n\n    healpixGridSingleton.init()\n    computePerspectiveMatrixSingleton.computePerspectiveMatrix(canvas, this.camera, bootSetup.camera_fov_deg, bootSetup.camera_near_plane, bootSetup.insideSphere)\n    visibleTilesManager.init(bootSetup.insideSphere)\n    equatorialGridSingleton.init(healpixGridSingleton.getMinFoV())\n    this.updateCentralPoint()\n\n    this.startup = true\n\n    this.addEventListeners(canvas)\n  }\n\n  private initCamera() {\n    if (bootSetup.insideSphere) {\n      this.camera = new Camera([0.0, 0.0, -0.005], true)\n    } else {\n      this.camera = new Camera([0.0, 0.0, 4.0], false)\n    }\n    global.camera = this.camera\n  }\n\n  private addEventListeners(canvas: HTMLCanvasElement) {\n    if (global.debug) {\n      console.log('[AstroSphere::addEventListeners]')\n    }\n\n    const handleMouseDown = (event: PointerEvent) => {\n      canvas.setPointerCapture(event.pointerId)\n      this.mouseDown = true\n      // this.lastMouseX = event.pageX\n      // this.lastMouseY = event.pageY\n      this.lastMouseX = event.clientX\n      this.lastMouseY = event.clientY\n\n      // session.clearHoveredFootprints()\n      event.preventDefault()\n      return false\n    }\n\n    const handleMouseUp = (event: PointerEvent) => {\n      canvas.releasePointerCapture(event.pointerId)\n      this.mouseDown = false\n      document.body.style.cursor = 'auto'\n      this.lastMouseX = event.clientX\n      this.lastMouseY = event.clientY\n\n    }\n\n    const handleMouseMove = (event: PointerEvent) => {\n      const newX = event.clientX\n      const newY = event.clientY\n\n      if (!healpixGridSingleton) return\n\n      if (this.mouseDown) {\n        document.body.style.cursor = 'grab'\n\n        const deltaX = ((newX - (this.lastMouseX ?? newX)) * Math.PI) / canvas.width\n        const deltaY = ((newY - (this.lastMouseY ?? newY)) * Math.PI) / canvas.height\n\n        this.inertiaX += 0.1 * deltaX\n        this.inertiaY += 0.1 * deltaY\n      } else {\n        const mousePoint = RayPickingUtils.getIntersectionPointWithSingleModel(\n          newX,\n          newY\n        )\n\n        if (mousePoint && mousePoint.length > 0) {\n          this.mouseHelper.update(mousePoint)\n          this.updateLastMousePoint()\n        }\n      }\n      this.updateCentralPoint()\n\n      this.lastMouseX = newX\n      this.lastMouseY = newY\n      event.preventDefault()\n    }\n\n    const handleMouseWheel = (event: WheelEvent) => {\n      if (event.deltaY < 0) {\n        this.zoomInertia -= 0.001\n      } else {\n        this.zoomInertia += 0.001\n      }\n      event.preventDefault()\n    }\n\n    canvas.onpointerdown = handleMouseDown\n    canvas.onpointerup = handleMouseUp\n    canvas.onpointermove = handleMouseMove\n    // canvas.onwheel = handleMouseWheel\n    canvas.addEventListener('wheel', handleMouseWheel, { passive: false })\n  }\n\n  // REVIEW THIS METHOD AND MOVE IT\n  getPhiThetaDeg(canvas: HTMLCanvasElement) {\n    const maxX = canvas.width\n    const maxY = canvas.height\n    const pickerPoint = RayPickingUtils.getIntersectionPointWithSingleModel(\n      maxX / 2,\n      maxY / 2\n    )\n\n    return cartesianToSpherical(pickerPoint)\n  }\n\n  activateHiPS(hipsDescriptor: HiPSDescriptor) {\n\n    this.activeHiPS = new HiPS(\n      1,\n      [0.0, 0.0, 0.0],\n      0,\n      0,\n      hipsDescriptor\n    )\n  }\n\n  // Catalogue section\n  async showCatalogue(catalogue: CatalogueGL) {\n    const fovPolyAstro = FoVUtils.getFoVPolygon(this.camera, this.canvas, healpixGridSingleton)\n    const polygonAdql = FoVUtils.getAstroFoVPolygon(fovPolyAstro) // -> \"POLYGON('ICRS', ra1, dec1, ...)\"\n    const cat = await queryCatalogueByFoV(catalogue, polygonAdql)\n    console.log(cat)\n    if (cat) this.activeCatalogues.push(cat)\n    return cat\n  }\n\n  deleteCatalogue(catalogue: CatalogueGL) {\n    this.activeCatalogues = this.activeCatalogues.filter(c => c !== catalogue);\n  }\n  // End Catalogue section\n\n  // Footprint section\n  async showFootprintSet(footprintSet: FootprintSetGL) {\n    const fovPolyAstro = FoVUtils.getFoVPolygon(this.camera, this.canvas, healpixGridSingleton)\n    const polygonAdql = FoVUtils.getAstroFoVPolygon(fovPolyAstro) // -> \"POLYGON('ICRS', ra1, dec1, ...)\"\n    const centralPoint = FoVUtils.getCenterJ2000(this.canvas)\n\n    const fset = await queryFootprintSetByFov(footprintSet, polygonAdql, centralPoint)\n    console.log(fset)\n    if (fset) this.activeFootprintSets.push(fset)\n    return fset\n  }\n\n  deleteFootprintSet(footprintSet: FootprintSetGL) {\n    this.activeFootprintSets = this.activeFootprintSets.filter(fst => fst !== footprintSet);\n  }\n\n  getHoveredFootprints(): HoveredFootprintDetail[]{\n    let footprintsHovered: HoveredFootprintDetail[] = []\n    this.activeFootprintSets.forEach(fset => {\n      footprintsHovered.push(fset.hoveredFootprints)\n    });\n    return footprintsHovered\n  }\n  // End Footprint section\n\n\n  goTo(raDeg: number, decDeg: number): void {\n    this.camera.goTo(raDeg, decDeg)\n  }\n\n  getFoV(): FoV {\n    return this.fov\n  }\n\n  getFoVPolygon(): Point[] {\n    return FoVUtils.getFoVPolygon(this.camera, this.canvas, healpixGridSingleton)\n  }\n\n  changeFoV(deg: number) {\n    // throw new Error(\"not Implemented\")\n    const distance = healpixGridSingleton.getFoV().computeDistanceFromAngle(deg)\n    // this.camera.moveAlongView(distance)\n    this.camera.translate(distance)\n    healpixGridSingleton.refreshFoV()\n  }\n\n  changeFoV2(deg: number) {\n    // throw new Error(\"not Implemented\")\n    const newCameraPos = healpixGridSingleton.getFoV().computeCameraPositionForFoV(deg)\n    this.camera.setCameraPosition(newCameraPos)\n    // this.camera.moveAlongView(distance)\n    // this.camera.translate(distance)\n  }\n  changeFoV3(deg: number) {\n    const newPos = healpixGridSingleton.getFoV().computeCameraPositionForAngularDiameter(deg);\n    this.camera.setCameraPosition(newPos);\n\n\n    // Recompute projection after moving the camera\n    computePerspectiveMatrixSingleton.computePerspectiveMatrix(\n      this.canvas,\n      this.camera,\n      bootSetup.camera_fov_deg,\n      bootSetup.camera_near_plane, false\n    );\n  }\n\n  getInsideSphere(): boolean {\n    return global.insideSphere\n  }\n\n  toggleInsideSphere() {\n    // this.insideSphere = !this.insideSphere\n    global.insideSphere = !global.insideSphere\n    console.log(global.insideSphere)\n    this.camera.toggleInsideSphere()\n    // visibleTilesManager.toggleInsideSphere()\n  }\n\n  draw(canvas: HTMLCanvasElement) {\n\n    if (!global.gl) return\n    if (!this.activeHiPS) return\n    if (!healpixGridSingleton || Object.keys(healpixGridSingleton).length === 0) return\n    if ((healpixGridSingleton as any).fovObj === undefined) return\n\n    // In WebGL2, OES_element_index_uint is core, no need to fetch the extension each frame.\n    // global.gl.getExtension('OES_element_index_uint')\n    // global.gl.clear(global.gl.COLOR_BUFFER_BIT | global.gl.DEPTH_BUFFER_BIT)\n\n    computePerspectiveMatrixSingleton.computePerspectiveMatrix(canvas, this.camera, bootSetup.camera_fov_deg, bootSetup.camera_near_plane, global.insideSphere)\n\n    let cameraRotated = false\n    let THETA = 0\n    let PHI = 0\n\n    global.gl.viewport(0, 0, global.gl.drawingBufferWidth, global.gl.drawingBufferHeight);\n    global.gl.clear(global.gl.COLOR_BUFFER_BIT | global.gl.DEPTH_BUFFER_BIT)\n\n    // Zoom inertia\n    if ((healpixGridSingleton as any).fovObj.minFoV > 0.1 || this.zoomInertia > 0) {\n      if (Math.abs(this.zoomInertia) > 0.0001) {\n        this.camera.zoom(this.zoomInertia)\n        this.zoomInertia *= 0.95\n        this.fov = healpixGridSingleton.refreshFoV()\n      }\n    }\n\n    // Rotation inertia\n    if (this.mouseDown || Math.abs(this.inertiaX) > 0.02 || Math.abs(this.inertiaY) > 0.02) {\n      cameraRotated = true\n      THETA = this.inertiaY\n      PHI = this.inertiaX\n      this.inertiaX *= 0.95\n      this.inertiaY *= 0.95\n      this.camera.rotate(PHI, THETA)\n      computePerspectiveMatrixSingleton.computePerspectiveMatrix(canvas, this.camera, bootSetup.camera_fov_deg, bootSetup.camera_near_plane, global.insideSphere)\n\n    } else {\n      this.inertiaY = 0\n      this.inertiaX = 0\n    }\n\n    // GL state\n    global.gl.disable(global.gl.DEPTH_TEST)\n    global.gl.enable(global.gl.BLEND)\n    global.gl.enable(global.gl.CULL_FACE)\n    global.gl.cullFace(global.insideSphere ? global.gl.BACK : global.gl.FRONT)\n    global.gl.blendFunc(global.gl.SRC_ALPHA, global.gl.ONE_MINUS_SRC_ALPHA)\n\n    // DRAW HiPS\n\n    this.activeHiPS.draw()\n    healpixGridSingleton.draw()\n    equatorialGridSingleton.draw()\n\n    global.gl.enable(global.gl.DEPTH_TEST)\n    global.gl.disable(global.gl.CULL_FACE)\n\n\n\n\n\n\n    if (this.startup) {\n      this.startup = false\n      const phiTheta = this.getPhiThetaDeg(canvas)\n      const raDecDeg = sphericalToAstroDeg(phiTheta.phi, phiTheta.theta)\n      const raHMS = raDegToHMS(raDecDeg.ra)\n      const decDMS = decDegToDMS(raDecDeg.dec)\n      console.log('(startup coords)', {\n        raDeg: raDecDeg.ra,\n        decDeg: raDecDeg.dec,\n        raHMS,\n        decDMS,\n      })\n    }\n\n\n    this.activeCatalogues.forEach(cat => {\n      if (this.activeHiPS) {\n        cat.draw(this.activeHiPS.getModelMatrix() as Float32Array, this.mouseHelper)\n      }\n    })\n    this.activeFootprintSets.forEach(fst => {\n      if (this.activeHiPS) {\n        fst.draw(this.activeHiPS.getModelMatrix() as Float32Array, this.mouseHelper)\n      }\n    })\n\n\n  }\n}\n\n\n\nexport default AstroSphere\n","import global from './Global.js'\nimport AstroSphere from './AstroSphere.js'\nimport { HiPSDescriptor } from './model/hips/HiPSDescriptor.js'\nimport { FoV } from './model/FoV.js'\nimport Point from './model/Point.js'\nimport CatalogueGL from './model/catalogues/CatalogueGL.js'\nimport type { PointCoordinates } from './AstroSphere.js'\nimport FootprintSetGL, { HoveredFootprintDetail } from './model/footprints/FootprintSetGL.js'\nimport { bootSetup } from './Config.js'\nimport healpixGridSingleton from './model/grid/HealpixGridSingleton.js'\nimport equatorialGridSingleton from './model/grid/EquatorialGrid.js'\ntype GL2WithViewport = WebGL2RenderingContext & {\n  viewportWidth: number\n  viewportHeight: number\n}\n\nexport class AstroViewer {\n  private astroSphere!: AstroSphere\n  private canvas!: HTMLCanvasElement\n  private webgl!: GL2WithViewport\n  private rafId: number | null = null\n\n\n\n  // API\n  run(): number {\n    return this.tick()\n  }\n\n  // CATALOGUES\n  showCatalogue(catalogue: CatalogueGL) {\n    this.astroSphere.showCatalogue(catalogue)\n  }\n  hideCatalogue(catalogue: CatalogueGL, isVisible: boolean) {\n    catalogue.setIsVisible(isVisible)\n  }\n  deleteCatalogue(catalogue: CatalogueGL) {\n    this.astroSphere.deleteCatalogue(catalogue)\n  }\n\n  changeCatalogueColor(catalogue: CatalogueGL, hexColor: string) {\n    catalogue.catalogueProps.changeColor(hexColor)\n  }\n\n  setCatalogueShapeHue(catalogue: CatalogueGL, metadataColumnName: string) {\n    catalogue.changeCatalogueMetaShapeHue(metadataColumnName)\n  }\n\n  setCatalogueShapeSize(catalogue: CatalogueGL, metadataColumnName: string) {\n    catalogue.changeCatalogueMetaShapeSize(metadataColumnName)\n  }\n\n  //FOOTPRINT\n  showFootprintSet(footprintSet: FootprintSetGL) {\n    this.astroSphere.showFootprintSet(footprintSet)\n  }\n\n  hideFootprintSet(footprintSet: FootprintSetGL, isVisible: boolean) {\n    footprintSet.setIsVisible(isVisible)\n  }\n\n  deleteFootprintSet(footprintSet: FootprintSetGL) {\n    this.astroSphere.deleteFootprintSet(footprintSet)\n  }\n\n  changeFootprintSetColor(footprintSet: FootprintSetGL, hexColor: string) {\n    footprintSet.footprintsetProps.changeColor(hexColor)\n  }\n\n  getHoveredFootprints(): HoveredFootprintDetail[]{\n    return this.astroSphere.getHoveredFootprints()\n  }\n\n  // HIPS\n  getDefaultHiPSURL(): string {\n    return bootSetup.defaultHipsUrl\n  }\n\n  activateHiPS(hipsDescriptor: HiPSDescriptor): void {\n    this.astroSphere.activateHiPS(hipsDescriptor)\n  }\n\n  // GOTOs and COORDS\n  goTo(raDeg: number, decDeg: number): void {\n    this.astroSphere.goTo(raDeg, decDeg)\n  }\n  getCenterCoordinates(): PointCoordinates | undefined {\n    return this.astroSphere.getCentralPointCoordinates()\n  }\n\n  getCoordinatesFromMouse(): PointCoordinates | undefined {\n    return this.astroSphere.getLastMousePointCoordinates()\n  }\n\n  // GRIDs\n  toggleHealpixGrid() {\n    healpixGridSingleton.toggleShowGrid()\n  }\n\n  isHealpixGridVisible(): boolean{\n    return healpixGridSingleton.isVisible()\n  }\n\n  toggleEquatorialGrid() {\n    equatorialGridSingleton.toggleShowGrid()\n  }\n\n  isEquatorialGridVisible(): boolean {\n      return equatorialGridSingleton.isVisible()\n  }\n\n  // FOV\n  getFoV(): FoV {\n    return this.astroSphere.getFoV()\n  }\n\n  getFoVPolygon(): Point[] {\n    return this.astroSphere.getFoVPolygon()\n  }\n\n  changeFoV(deg: number) {\n    this, this.astroSphere.changeFoV(deg)\n  }\n\n  changeFoV2(deg: number) {\n    this, this.astroSphere.changeFoV2(deg)\n  }\n  changeFoV3(deg: number) {\n    this, this.astroSphere.changeFoV3(deg)\n  }\n\n  getInsideSphere(): boolean {\n    return this.astroSphere.getInsideSphere()\n  }\n\n  toggleInsideSphere() {\n    this.astroSphere.toggleInsideSphere()\n  }\n\n  // Internal\n  constructor() {\n    this.init()\n  }\n\n  private init(): void {\n    console.log('init webgl')\n\n    const c = document.getElementById('astrocanvas')\n    if (!(c instanceof HTMLCanvasElement)) {\n      throw new Error(\"Element with id 'canvas-ab' is not a canvas.\")\n    }\n    this.canvas = c\n\n    const gl = this.canvas.getContext('webgl2', { alpha: false })\n    if (!gl) {\n      alert('Could not initialise WebGL, sorry :-(')\n      throw new Error('WebGL2 not available')\n    }\n\n    // Extend with custom fields used elsewhere\n    this.webgl = gl as GL2WithViewport\n    this.webgl.viewportWidth = this.canvas.width\n    this.webgl.viewportHeight = this.canvas.height\n\n    try {\n      // 1/255 = 0.00392156862\n      this.webgl.clearColor(0 * 0.00392156862, 16 * 0.00392156862, 50 * 0.00392156862, 0.7)\n    } catch (e) {\n      console.log('Error instantiating WebGL context')\n    }\n\n    this.initListeners()\n      ; (global as any).gl = this.webgl\n    this.astroSphere = new AstroSphere(this.canvas, this.webgl)\n  }\n\n  private initListeners(): void {\n    console.log('inside initListeners')\n\n    const resizeCanvas = () => {\n      console.log('[resizeCanvas]')\n      const newWidth = window.innerWidth - 3\n      const newHeight = window.innerHeight - 3\n\n      this.canvas.width = newWidth\n      this.canvas.height = newHeight\n\n      this.webgl.viewportWidth = this.canvas.width\n      this.webgl.viewportHeight = this.canvas.height\n      this.webgl.viewport(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    const handleContextLost = (event: Event) => {\n      console.log('[handleContextLost]')\n      event.preventDefault()\n      if (this.rafId !== null) {\n        cancelAnimationFrame(this.rafId)\n        this.rafId = null\n      }\n    }\n\n    const handleContextRestored = (_event: Event) => {\n      console.log('[handleContextRestored]')\n      this.webgl.viewportWidth = this.canvas.width\n      this.webgl.viewportHeight = this.canvas.height\n      this.webgl.clearColor(0 * 0.00392156862, 16 * 0.00392156862, 50 * 0.00392156862, 0.7)\n      this.webgl.enable(this.webgl.DEPTH_TEST)\n      this.rafId = requestAnimationFrame(() => this.tick())\n    }\n\n    window.addEventListener('resize', resizeCanvas)\n    this.canvas.addEventListener('webglcontextlost', handleContextLost as EventListener, false)\n    this.canvas.addEventListener('webglcontextrestored', handleContextRestored as EventListener, false)\n    resizeCanvas()\n  }\n\n\n  private tick(): number {\n    this.drawScene()\n    this.rafId = requestAnimationFrame(() => this.tick())\n    return this.rafId\n  }\n\n  private drawScene(): void {\n    this.astroSphere.draw(this.canvas)\n  }\n\n\n}","// HiPSDescriptor.ts\n'use strict'\n\nexport interface HiPSDataRange {\n  min: number | undefined\n  max: number | undefined\n}\n\nexport type HiPSFrame = 'equatorial' | 'galactic' | string\n\nexport class HiPSDescriptor {\n  private _minOrder: number = 3\n  private _imgformats: string[] = []\n  private _datarange: HiPSDataRange = { min: undefined, max: undefined }\n  private _maxOrder: number | undefined\n  private _tilewidth: number | undefined\n  private _hipsFrame: HiPSFrame | undefined\n  private _hipsName: string = 'NONAME'\n  private _hipsurl: string\n  private _emMin: number | undefined\n  private _emMax: number | undefined\n  private _isGalctic: boolean = false\n\n  constructor(hipsproperties: string, hipsurl: string) {\n    this._hipsurl = hipsurl\n\n    const lines = hipsproperties.split(/\\r\\n|\\n/)\n    for (const raw of lines) {\n      const line = raw.trim()\n      if (!line || line.startsWith('#')) continue\n\n      if (line.startsWith('hips_tile_format') || line.startsWith('format')) {\n        // normalize jpeg→jpg\n        const list = this.getValue(line)?.replace(/jpeg/gi, 'jpg') ?? ''\n        this._imgformats = list.split(/\\s+/).filter(Boolean)\n      } else if (line.startsWith('hips_data_range')) {\n        const v = this.getValue(line)\n        if (v) {\n          const [minStr, maxStr] = v.split(/\\s+/)\n          this._datarange.min = parseFloat(minStr)\n          this._datarange.max = parseFloat(maxStr)\n        }\n      } else if (line.startsWith('hips_tile_width')) {\n        const n = Number(this.getValue(line))\n        this._tilewidth = Number.isFinite(n) ? n : undefined\n      } else if (line.startsWith('hips_order_min')) {\n        const n = Number(this.getValue(line))\n        this._minOrder = Number.isFinite(n) ? n : this._minOrder\n      } else if (line.startsWith('hips_order') || line.startsWith('maxOrder')) {\n        const n = Number(this.getValue(line))\n        this._maxOrder = Number.isFinite(n) ? n : this._maxOrder\n      } else if (line.startsWith('hips_frame') || line.startsWith('frame')) {\n        this._hipsFrame = this.getValue(line) as HiPSFrame\n      } else if (line.startsWith('obs_collection') || line.startsWith('label')) {\n        this._hipsName = this.getValue(line) ?? this._hipsName\n      } else if (line.startsWith('em_min')) {\n        const n = Number(this.getValue(line))\n        this._emMin = Number.isFinite(n) ? n : undefined\n      } else if (line.startsWith('em_max')) {\n        const n = Number(this.getValue(line))\n        this._emMax = Number.isFinite(n) ? n : undefined\n      }\n      \n    }\n\n    if (!this._hipsName) {\n      console.warn(`[HiPSDescriptor] hipsName not defined in properties of ${this._hipsurl}. Defaulting to 'NONAME'.`)\n    }\n    if (!this._hipsFrame) {\n      console.warn(\n        `[HiPSDescriptor] hips_frame not defined in properties of ${this._hipsurl}. Defaulting to 'equatorial'.`\n      )\n      this._hipsFrame = 'equatorial'\n    }\n    this._isGalctic = this._hipsFrame.toLowerCase().includes('gal')\n\n    if (this._maxOrder === undefined || this._imgformats.length === 0) {\n      throw new Error(\n        `[HiPSDescriptor] Invalid properties for ${this._hipsurl}. maxOrder=${this._maxOrder}, imgFormats.length=${this._imgformats.length}`\n      )\n    }\n  }\n\n  private getValue(line: string): string | undefined {\n    const idx = line.indexOf('=')\n    if (idx < 0) return undefined\n    return line.slice(idx + 1).trim()\n  }\n\n  // --- Getters ---\n  get surveyName(): string {\n    return this._hipsName\n  }\n\n  get url(): string {\n    return this._hipsurl\n  }\n\n  get maxOrder(): number {\n    return this._maxOrder as number\n  }\n\n  get minOrder(): number {\n    return this._minOrder\n  }\n\n  get imgFormats(): string[] {\n    return this._imgformats\n  }\n\n  get hipsFrame(): HiPSFrame {\n    return this._hipsFrame as HiPSFrame\n  }\n\n  get isGalactic(): boolean {\n    return this._isGalctic\n  }\n\n  get emMin(): number | undefined {\n    return this._emMin\n  }\n\n  get emMax(): number | undefined {\n    return this._emMax\n  }\n\n  get tileWidth(): number | undefined {\n    return this._tilewidth\n  }\n\n  get dataRange(): HiPSDataRange {\n    return this._datarange\n  }\n}","export { AstroViewer } from './AstroViewer.js';\nexport { HiPSDescriptor } from './model/hips/HiPSDescriptor.js';\nexport { FoV } from './model/FoV.js'\nexport { TapRepo } from './model/tap/TapRepo.js'\nexport { addTAPRepo } from './services/tapRepoService.js'\nexport type {PointCoordinates} from './AstroSphere.js';\nexport {HoveredFootprintDetail} from './model/footprints/FootprintSetGL.js'\nconsole.log('astroviewer UMD loaded')"],"names":[],"sourceRoot":""}