!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("astroviewer",[],e):"object"==typeof exports?exports.astroviewer=e():t.astroviewer=e()}(self,()=>(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{AstroViewer:()=>Qt,FoV:()=>tt,HiPSDescriptor:()=>Kt,TapRepo:()=>yt,addTAPRepo:()=>Ot});class i{}i.halfpi=1.5707963267948966,i.inv_halfpi=2/Math.PI,i.twopi=2*Math.PI,i.inv_twopi=1/(2*Math.PI);class s{constructor(t,e,i,s){null!=t?(this.theta=o.atan2(Math.sqrt(t.x*t.x+t.y*t.y),t.z),this.phi=e?-o.atan2(t.y,t.x):o.atan2(t.y,t.x),this.phi<0&&(this.phi=this.phi+2*Math.PI),this.phi>=2*Math.PI&&(this.phi=this.phi-2*Math.PI)):(this.theta=i,this.phi=s)}}class r{constructor(t,e){this.z=t,this.phi=e}}class o{constructor(t){o.PI4_A=.7853981554508209,o.PI4_B=7.946627356147928e-9,o.PI4_C=3061616997868383e-32,o.M_1_PI=.3183098861837907,t&&(this.sth=0,this.have_sth=!1,this.z=o.cos(t.theta),this._phi=t.phi,Math.abs(this.z)>.99&&(this.sth=o.sin(t.theta),this.have_sth=!0))}setZ(t){this.z=t}get phi(){return this._phi}set phi(t){this._phi=t}setSth(t){this.sth=t}toPointing(t){const e=this.have_sth?this.sth:Math.sqrt((1-this.z)*(1+this.z));return new s(null,!1,o.atan2(e,this.z),this._phi)}toVec3(){var t=this.have_sth?this.sth:Math.sqrt((1-this.z)*(1+this.z));return new a(t*o.cos(this.phi),t*o.sin(this.phi),this.z)}toZphi(){return new r(this.z,this.phi)}static sin(t){let e=t*o.M_1_PI,i=Math.floor(e<0?e-.5:e+.5),s=4*i;return t-=s*o.PI4_A,t-=s*o.PI4_B,t-=s*o.PI4_C,1&i&&(t=-t),this.sincoshelper(t)}static cos(t){let e=t*o.M_1_PI-.5,i=1+2*Math.floor(e<0?e-.5:e+.5),s=2*i;return t-=s*o.PI4_A,t-=s*o.PI4_B,t-=s*o.PI4_C,2&i||(t=-t),o.sincoshelper(t)}static sincoshelper(t){let e=t*t,i=-7972559550090379e-33;return i=i*e+2810099727108632e-30,i=i*e-7647122191181588e-28,i=i*e+1.605904306056645e-10,i=i*e-2.5052108376350205e-8,i=i*e+27557319223919875e-22,i=i*e-.00019841269841269616,i=i*e+.00833333333333333,i=i*e-.16666666666666666,e*i*t+t}static asin(t){return o.mulsign(o.atan2k(Math.abs(t),Math.sqrt((1+t)*(1-t))),t)}static acos(t){return o.mulsign(o.atan2k(Math.sqrt((1+t)*(1-t)),Math.abs(t)),t)+(t<0?Math.PI:0)}static mulsign(t,e){return o.copySign(1,e)*t}static copySign(t,e){return e<0?-Math.abs(t):Math.abs(t)}static atanhelper(t){let e=t*t,i=-1887960084630735e-20;return i=i*e+.00020985007664581698,i=i*e-.0011061183148667248,i=i*e+.003700267441887131,i=i*e-.008898961958876555,i=i*e+.016599329773529202,i=i*e-.025451762493231264,i=i*e+.03378525800013531,i=i*e-.04076291912768365,i=i*e+.04666671500778406,i=i*e-.052367485230348246,i=i*e+.05876663929266736,i=i*e-.06665735793610805,i=i*e+.07692195383117696,i=i*e-.09090899500824501,i=i*e+.11111110564826142,i=i*e-.1428571426677133,i=i*e+.19999999999659127,i=i*e-.3333333333333111,i*e*t+t}static atan2k(t,e){let i=0;if(e<0&&(e=-e,i=-2),t>e){let s=e;e=t,t=-s,i+=1}return o.atanhelper(t/e)+i*(Math.PI/2)}static atan2(t,e){let i=o.atan2k(Math.abs(t),e);return i=o.mulsign(i,e),(o.isinf(e)||0==e)&&(i=Math.PI/2-(o.isinf(e)?o.copySign(1,e)*(Math.PI/2):0)),o.isinf(t)&&(i=Math.PI/2-(o.isinf(e)?o.copySign(1,e)*(1*Math.PI/4):0)),0==t&&(i=-1==o.copySign(1,e)?Math.PI:0),o.isnan(e)||o.isnan(t)?NaN:o.mulsign(i,t)}static isnan(t){return t!=t}static isinf(t){return Math.abs(t)===1/0}}o.PI4_A=.7853981554508209,o.PI4_B=7.946627356147928e-9,o.PI4_C=3061616997868383e-32,o.M_1_PI=.3183098861837907;class a{constructor(t,e,i){if(t instanceof s){let e=t,i=o.sin(e.theta);this.x=i*o.cos(e.phi),this.y=i*o.sin(e.phi),this.z=o.cos(e.theta)}else this.x=t,this.y=e,this.z=i}getX(){return this.x}getY(){return this.y}getZ(){return this.z}scale(t){this.x*=t,this.y*=t,this.z*=t}cross(t){return new a(this.y*t.z-t.y*this.z,this.z*t.x-t.z*this.x,this.x*t.y-t.x*this.y)}add(t){return new a(this.x+t.x,this.y+t.y,this.z+t.z)}normalize(){let t=1/this.length();this.x*=t,this.y*=t,this.z*=t}norm(){let t=1/this.length();return new a(this.x*t,this.y*t,this.z*t)}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}sub(t){return new a(this.x-t.x,this.y-t.y,this.z-t.z)}angle(t){return o.atan2(this.cross(t).length(),this.dot(t))}flip(){this.x*=-1,this.y*=-1,this.z*=-1}static pointing2Vec3(t){let e=o.sin(t.theta),i=e*o.cos(t.phi),s=e*o.sin(t.phi),r=o.cos(t.theta);return new a(i,s,r)}}class n{constructor(t){let e=t.length;if(e>=2){this.center=t[0].add(t[1]),this.center.normalize(),this.cosrad=t[0].dot(this.center);for(let i=2;i<e;++i)t[i].dot(this.center)<this.cosrad&&this.getCircle(t,i)}else console.log("too few points")}getCircle(t,e){this.center=t[0].add(t[e]),this.center.normalize(),this.cosrad=t[0].dot(this.center);for(let i=1;i<e;++i)t[i].dot(this.center)<this.cosrad&&this.getCircle2(t,i,e)}getCircle2(t,e,i){this.center=t[e].add(t[i]),this.center.normalize(),this.cosrad=t[e].dot(this.center);for(let s=0;s<e;++s)t[s].dot(this.center)<this.cosrad&&(this.center=t[e].sub(t[s]).cross(t[i].sub(t[s])),this.center.normalize(),this.cosrad=t[s].dot(this.center),this.cosrad<0&&(this.center.flip(),this.cosrad=-this.cosrad))}getCenter(){return new a(this.center.x,this.center.y,this.center.z)}getCosrad(){return this.cosrad}}class h{constructor(t,e,i){this.fx=t,this.fy=e,this.face=i,this.jrll=new Uint8Array([2,2,2,2,3,3,3,3,4,4,4,4]),this.jpll=new Uint8Array([1,3,5,7,0,2,4,6,1,3,5,7]),this.halfpi=Math.PI/2}toHploc(){let t,e=new o,i=this.jrll[this.face]-this.fx-this.fy;if(i<1){t=i;let s=t*t/3;e.z=1-s,e.z>.99&&(e.sth=Math.sqrt(s*(2-s)),e.have_sth=!0)}else if(i>3){t=4-i;let s=t*t/3;e.z=s-1,e.z<-.99&&(e.sth=Math.sqrt(s*(2-s)),e.have_sth=!0)}else t=1,e.z=2*(2-i)/3;let s=this.jpll[this.face]*t+this.fx-this.fy;return s<0&&(s+=8),s>=8&&(s-=8),e.phi=t<1e-15?0:.5*this.halfpi*s/t,e}toVec3(){return this.toHploc().toVec3()}}class l{constructor(t){this.p=new Array(t),this.o=new Int32Array(t),this.s=0,this.m=0}push(t,e){this.p[this.s]=t,this.o[this.s]=e,++this.s}pop(){--this.s}popToMark(){this.s=this.m}size(){return this.s}mark(){this.m=this.s}otop(){return this.o[this.s-1]}ptop(){return this.p[this.s-1]}}class c{constructor(t){t<0&&console.error("capacity must be positive"),this.r=new Int32Array(t<<1),this.sz=0}append(t){this.append1(t,t+1)}append1(t,e){if(t>=e)return;if(this.sz>0&&t<=this.r[this.sz-1])return t<this.r[this.sz-2]&&console.error("bad append operation"),void(e>this.r[this.sz-1]&&(this.r[this.sz-1]=e));let i=this.sz+2;if(this.r.length<i){let t=Math.max(2*this.r.length,i),e=new Int32Array(t);e.set(this.r),this.r=e}this.r[this.sz]=t,this.r[this.sz+1]=e,this.sz+=2}ensureCapacity(t){this.r.length<t&&this.resize(Math.max(2*this.r.length,t))}resize(t){if(t<this.sz&&console.error("requested array size too small"),t==this.r.length)return;new Int32Array(t);let e=this.r.slice(0,this.sz+1);this.r=e}}class d{constructor(t,e,i){this.ix=t,this.iy=e,this.face=i}}class u{constructor(t){this.order_max=29,this.inv_halfpi=2/Math.PI,this.twothird=2/3,this.ns_max=Math.pow(2,this.order_max),this.ctab=new Uint16Array([0,1,256,257,2,3,258,259,512,513,768,769,514,515,770,771,4,5,260,261,6,7,262,263,516,517,772,773,518,519,774,775,1024,1025,1280,1281,1026,1027,1282,1283,1536,1537,1792,1793,1538,1539,1794,1795,1028,1029,1284,1285,1030,1031,1286,1287,1540,1541,1796,1797,1542,1543,1798,1799,8,9,264,265,10,11,266,267,520,521,776,777,522,523,778,779,12,13,268,269,14,15,270,271,524,525,780,781,526,527,782,783,1032,1033,1288,1289,1034,1035,1290,1291,1544,1545,1800,1801,1546,1547,1802,1803,1036,1037,1292,1293,1038,1039,1294,1295,1548,1549,1804,1805,1550,1551,1806,1807,2048,2049,2304,2305,2050,2051,2306,2307,2560,2561,2816,2817,2562,2563,2818,2819,2052,2053,2308,2309,2054,2055,2310,2311,2564,2565,2820,2821,2566,2567,2822,2823,3072,3073,3328,3329,3074,3075,3330,3331,3584,3585,3840,3841,3586,3587,3842,3843,3076,3077,3332,3333,3078,3079,3334,3335,3588,3589,3844,3845,3590,3591,3846,3847,2056,2057,2312,2313,2058,2059,2314,2315,2568,2569,2824,2825,2570,2571,2826,2827,2060,2061,2316,2317,2062,2063,2318,2319,2572,2573,2828,2829,2574,2575,2830,2831,3080,3081,3336,3337,3082,3083,3338,3339,3592,3593,3848,3849,3594,3595,3850,3851,3084,3085,3340,3341,3086,3087,3342,3343,3596,3597,3852,3853,3598,3599,3854,3855]),this.utab=new Uint16Array([0,1,4,5,16,17,20,21,64,65,68,69,80,81,84,85,256,257,260,261,272,273,276,277,320,321,324,325,336,337,340,341,1024,1025,1028,1029,1040,1041,1044,1045,1088,1089,1092,1093,1104,1105,1108,1109,1280,1281,1284,1285,1296,1297,1300,1301,1344,1345,1348,1349,1360,1361,1364,1365,4096,4097,4100,4101,4112,4113,4116,4117,4160,4161,4164,4165,4176,4177,4180,4181,4352,4353,4356,4357,4368,4369,4372,4373,4416,4417,4420,4421,4432,4433,4436,4437,5120,5121,5124,5125,5136,5137,5140,5141,5184,5185,5188,5189,5200,5201,5204,5205,5376,5377,5380,5381,5392,5393,5396,5397,5440,5441,5444,5445,5456,5457,5460,5461,16384,16385,16388,16389,16400,16401,16404,16405,16448,16449,16452,16453,16464,16465,16468,16469,16640,16641,16644,16645,16656,16657,16660,16661,16704,16705,16708,16709,16720,16721,16724,16725,17408,17409,17412,17413,17424,17425,17428,17429,17472,17473,17476,17477,17488,17489,17492,17493,17664,17665,17668,17669,17680,17681,17684,17685,17728,17729,17732,17733,17744,17745,17748,17749,20480,20481,20484,20485,20496,20497,20500,20501,20544,20545,20548,20549,20560,20561,20564,20565,20736,20737,20740,20741,20752,20753,20756,20757,20800,20801,20804,20805,20816,20817,20820,20821,21504,21505,21508,21509,21520,21521,21524,21525,21568,21569,21572,21573,21584,21585,21588,21589,21760,21761,21764,21765,21776,21777,21780,21781,21824,21825,21828,21829,21840,21841,21844,21845]),this.jrll=new Int16Array([2,2,2,2,3,3,3,3,4,4,4,4]),this.jpll=new Int16Array([1,3,5,7,0,2,4,6,1,3,5,7]),this.xoffset=new Int16Array([-1,-1,0,1,1,1,0,-1]),this.yoffset=new Int16Array([0,1,1,1,0,-1,-1,-1]),this.facearray=[new Int16Array([8,9,10,11,-1,-1,-1,-1,10,11,8,9]),new Int16Array([5,6,7,4,8,9,10,11,9,10,11,8]),new Int16Array([-1,-1,-1,-1,5,6,7,4,-1,-1,-1,-1]),new Int16Array([4,5,6,7,11,8,9,10,11,8,9,10]),new Int16Array([0,1,2,3,4,5,6,7,8,9,10,11]),new Int16Array([1,2,3,0,0,1,2,3,5,6,7,4]),new Int16Array([-1,-1,-1,-1,7,4,5,6,-1,-1,-1,-1]),new Int16Array([3,0,1,2,3,0,1,2,4,5,6,7]),new Int16Array([2,3,0,1,-1,-1,-1,-1,0,1,2,3])],this.swaparray=[new Int16Array([0,0,3]),new Int16Array([0,0,6]),new Int16Array([0,0,0]),new Int16Array([0,0,5]),new Int16Array([0,0,0]),new Int16Array([5,0,0]),new Int16Array([0,0,0]),new Int16Array([6,0,0]),new Int16Array([3,0,0])],t<=this.ns_max&&t>0&&(this.nside=t,this.npface=this.nside*this.nside,this.npix=12*this.npface,this.order=this.nside2order(this.nside),this.nl2=2*this.nside,this.nl3=3*this.nside,this.nl4=4*this.nside,this.fact2=4/this.npix,this.fact1=(this.nside<<1)*this.fact2,this.ncap=2*this.nside*(this.nside-1)),this.bn=[],this.mpr=[],this.cmpr=[],this.smpr=[]}computeBn(){for(let t=0;t<=this.order_max;++t)this.bn[t]=new u(1<<t),this.mpr[t]=this.bn[t].maxPixrad(),this.cmpr[t]=o.cos(this.mpr[t]),this.smpr[t]=o.sin(this.mpr[t])}getNPix(){return this.npix}getBoundaries(t){let e=new Array,i=this.nest2xyf(t),s=.5/this.nside,r=(i.ix+.5)/this.nside,o=(i.iy+.5)/this.nside;return e[0]=new h(r+s,o+s,i.face).toVec3(),e[1]=new h(r-s,o+s,i.face).toVec3(),e[2]=new h(r-s,o-s,i.face).toVec3(),e[3]=new h(r+s,o-s,i.face).toVec3(),e}getBoundariesWithStep(t,e){let i=new Array,s=this.nest2xyf(t),r=.5/this.nside,o=(s.ix+.5)/this.nside,a=(s.iy+.5)/this.nside,n=1/(this.nside*e);for(let t=0;t<e;t++)i[t]=new h(o+r-t*n,a+r,s.face).toVec3(),i[t+e]=new h(o-r,a+r-t*n,s.face).toVec3(),i[t+2*e]=new h(o-r+t*n,a-r,s.face).toVec3(),i[t+3*e]=new h(o+r,a-r+t*n,s.face).toVec3();return i}getPointsForXyfNoStep(t,e,i){let s=new Array,r=new d(t,e,i),o=.5/this.nside,a=(r.ix+.5)/this.nside,n=(r.iy+.5)/this.nside;return s[0]=new h(a+o,n+o,r.face).toVec3(),s[1]=new h(a-o,n+o,r.face).toVec3(),s[2]=new h(a-o,n-o,r.face).toVec3(),s[3]=new h(a+o,n-o,r.face).toVec3(),s}getPointsForXyf(t,e,i,s){let r=i*Math.pow(2,this.order),o=new Array,a=new d(t,e,s),n=.5/r,l=(a.ix+.5)/r,c=(a.iy+.5)/r;return o[0]=new h(l+n,c+n,a.face).toVec3(),o[1]=new h(l-n,c+n,a.face).toVec3(),o[2]=new h(l-n,c-n,a.face).toVec3(),o[3]=new h(l+n,c-n,a.face).toVec3(),o}neighbours(t){let e=new Int32Array(8),i=this.nest2xyf(t),s=i.ix,r=i.iy,o=i.face;var a=this.nside-1;if(s>0&&s<a&&r>0&&r<a){let t=Math.floor(o<<2*this.order),i=this.spread_bits(s),a=this.spread_bits(r)<<1,n=this.spread_bits(s+1),h=this.spread_bits(r+1)<<1,l=this.spread_bits(s-1),c=this.spread_bits(r-1)<<1;e[0]=t+l+a,e[1]=t+l+h,e[2]=t+i+h,e[3]=t+n+h,e[4]=t+n+a,e[5]=t+n+c,e[6]=t+i+c,e[7]=t+l+c}else for(let t=0;t<8;++t){let i=s+this.xoffset[t],a=r+this.yoffset[t],n=4;i<0?(i+=this.nside,n-=1):i>=this.nside&&(i-=this.nside,n+=1),a<0?(a+=this.nside,n-=3):a>=this.nside&&(a-=this.nside,n+=3);let h=this.facearray[n][o];if(h>=0){let s=this.swaparray[n][o>>>2];if((1&s)>0&&(i=Math.floor(this.nside-i-1)),(2&s)>0&&(a=Math.floor(this.nside-a-1)),(4&s)>0){let t=i;i=a,a=t}e[t]=this.xyf2nest(i,a,h)}else e[t]=-1}return e}nside2order(t){return t&t-1?-1:Math.log2(t)}nest2xyf(t){let e=Math.floor(t&this.npface-1);return new d(this.compress_bits(e),this.compress_bits(e>>1),Math.floor(t>>2*this.order))}xyf2nest(t,e,i){return Math.floor(i<<2*this.order)+this.spread_bits(t)+(this.spread_bits(e)<<1)}loc2pix(t){let e,i=t.z,s=t.phi,r=Math.abs(i),o=this.fmodulo(s*this.inv_halfpi,4);if(r<=this.twothird){let t=this.nside*(.5+o),s=this.nside*(.75*i),r=Math.floor(t-s),a=Math.floor(t+s),n=Math.floor(r>>>this.order),h=Math.floor(a>>>this.order),l=Math.floor(n==h?4|n:n<h?n:h+8),c=Math.floor(a&this.nside-1),d=Math.floor(this.nside-(r&this.nside-1)-1);e=this.xyf2nest(c,d,l)}else{let s=Math.min(3,Math.floor(o)),a=o-s,n=r<.99||!t.have_sth?this.nside*Math.sqrt(3*(1-r)):this.nside*t.sth/Math.sqrt((1+r)/3),h=Math.floor(a*n),l=Math.floor((1-a)*n);h>=this.nside&&(h=this.nside-1),l>=this.nside&&(l=this.nside-1),e=i>=0?this.xyf2nest(Math.floor(this.nside-l-1),Math.floor(this.nside-h-1),s):this.xyf2nest(Math.floor(h),Math.floor(l),s+8)}return e}pix2vec(t){return this.pix2loc(t).toVec3()}pix2zphi(t){return this.pix2loc(t).toZphi()}pix2ang(t,e){return this.pix2loc(t).toPointing(e)}pix2loc(t){let e,s=new o(void 0),r=this.nest2xyf(t),a=(this.jrll[r.face]<<this.order)-r.ix-r.iy-1;if(a<this.nside){e=a;let t=e*e*this.fact2;s.z=1-t,s.z>.99&&(s.sth=Math.sqrt(t*(2-t)),s.have_sth=!0)}else if(a>this.nl3){e=this.nl4-a;let t=e*e*this.fact2;s.z=t-1,s.z<-.99&&(s.sth=Math.sqrt(t*(2-t)),s.have_sth=!0)}else e=this.nside,s.z=(this.nl2-a)*this.fact1;let n=this.jpll[r.face]*e+r.ix-r.iy;return n<0&&(n+=8*e),s.phi=e==this.nside?.75*i.halfpi*n*this.fact1:.5*i.halfpi*n/e,s}za2vec(t,e){const i=Math.sqrt(1-t*t),s=i*Math.cos(e),r=i*Math.sin(e);return new a(s,r,t)}ang2vec(t,e){const i=Math.cos(t);return this.za2vec(i,e)}vec2ang(t){const{z:e,a:i}=this.vec2za(t.getX(),t.getY(),t.getZ());return{theta:Math.acos(e),phi:i}}vec2za(t,e,i){const s=t*t+e*e;if(0==s)return{z:i<0?-1:1,a:0};{const r=Math.PI/2,o=(Math.atan2(e,t)+r)%r;return{z:i/=Math.sqrt(i*i+s),a:o}}}ang2pix(t,e){return this.loc2pix(new o(t))}fmodulo(t,e){if(t>=0)return t<e?t:t%e;var i=t%e+e;return i===e?0:i}compress_bits(t){var e=Math.floor(21845&t)|Math.floor((1431633920&t)>>>15);return this.ctab[255&e]|this.ctab[e>>>8]<<4}spread_bits(t){return Math.floor(this.utab[255&t])|Math.floor(this.utab[t>>>8&255]<<16)|Math.floor(this.utab[t>>>16&255]<<32)|Math.floor(this.utab[t>>>24&255]<<48)}queryPolygonInclusive(t,e){let r=0!=e,h=t.length;if(!(h>=3))return void console.log("not enough vertices in polygon");let l=new Array;for(let e=0;e<h;++e)l[e]=a.pointing2Vec3(t[e]);let c=new Array,d=0,u=0,g=!1;for(;u<l.length;){let t=l[u],e=null,i=null;u==l.length-1?(i=l[1],e=l[0]):u==l.length-2?(i=l[0],e=l[u+1]):(e=l[u+1],i=l[u+2]),c[u]=t.cross(e).norm();let r=c[u].dot(i);if(0==u)d=r<0?-1:1,new s(t),g=!1;else{if(d*r<0){new s(e),l.splice(u+1,1),c.splice(u,1),g=!0,u-=1;continue}new s(t),g=!1}c[u].scale(d),u+=1}h=l.length;let _=new Array(r?h+1:h);if(_=_.fill(i.halfpi),r){let t=new n(l);c[h]=t.getCenter(),_[h]=o.acos(t.getCosrad())}return this.queryMultiDisc(c,_,e)}queryMultiDisc(t,e,i){this.computeBn();let s=0!=i,r=t.length;if(r!=e.length)return void console.error("inconsistent input arrays");let a=new c(8),n=0;s&&(Math.pow(2,this.order_max-this.order)>=i||console.error("invalid oversampling factor"),i&i-1&&console.error("oversampling factor must be a power of 2"),n=this.ilog2(i));let h,d,u=this.order+n,g=new Array(u+1);for(h=0;h<=u;++h){g[h]=new Array(r);let t=this.bn[h].maxPixrad();for(d=0;d<r;++d)g[h][d]=new Float64Array(3),g[h][d][0]=e[d]+t>Math.PI?-1:o.cos(e[d]+t),g[h][d][1]=0==h?o.cos(e[d]):g[0][d][1],g[h][d][2]=e[d]-t<0?1:o.cos(e[d]-t)}let _=new l(12+3*u);for(let t=0;t<12;t++)_.push(11-t,0);for(;_.size()>0;){let e=_.ptop(),i=_.otop();_.pop();let o=this.bn[i].pix2vec(e),n=3;for(let e=0;e<r&&n>0;++e){let s=o.dot(t[e]);for(let t=0;t<n;++t)s<g[i][e][t]&&(n=t)}n>0&&this.check_pixel(i,u,n,a,e,_,s)}return a}ilog2(t){let e=Math.max(t,1);return 31-Math.clz32(e)}cosdist_zphi(t,e,i,s){return t*i+o.cos(e-s)*Math.sqrt((1-t*t)*(1-i*i))}check_pixel(t,e,i,s,r,o,a){if(0!=i)if(t<this.order)if(i>=3){let e=2*(this.order-t);s.append1(r<<e,r+1<<e)}else for(let e=0;e<4;++e)o.push(4*r+3-e,t+1);else if(t>this.order)if(i>=2)s.append(r>>>2*(t-this.order)),o.popToMark();else if(t<e)for(let e=0;e<4;++e)o.push(4*r+3-e,t+1);else s.append(r>>>2*(t-this.order)),o.popToMark();else if(i>=2)s.append(r);else if(a)if(this.order<e){o.mark();for(let e=0;e<4;++e)o.push(4*r+3-e,t+1)}else s.append(r)}maxPixrad(){let t=new r(2/3,Math.PI/this.nl4),e=this.convertZphi2xyz(t),i=new a(e[0],e[1],e[2]),s=1-1/this.nside;s*=s;let o=new r(1-s/3,0),n=this.convertZphi2xyz(o),h=new a(n[0],n[1],n[2]);return i.angle(h)}convertZphi2xyz(t){let e=Math.sqrt((1-t.z)*(1+t.z));return[e*o.cos(t.phi),e*o.sin(t.phi),t.z]}queryDiscInclusive(t,e,i){this.computeBn();let s=0!=i,r=new c;if(e>=Math.PI)return r.append1(0,this.npix),r;let n=0;s&&(i&i-1&&console.error("oversampling factor must be a power of 2"),n=this.ilog2(i));let h=Math.min(this.order_max,this.order+n),d=a.pointing2Vec3(t),u=new Array(h+1),g=new Array(h+1),_=o.cos(e),f=o.sin(e);for(let t=0;t<=h;t++){let i=this.mpr[t],s=this.cmpr[t],r=this.smpr[t];u[t]=e+i>Math.PI?-1:_*s-f*r,g[t]=e-i<0?1:_*s+f*r}let p=new l(12+3*h);for(let t=0;t<12;t++)p.push(11-t,0);for(;p.size()>0;){let e=p.ptop(),i=p.otop();p.pop();let o=this.bn[i].pix2zphi(e),a=this.cosdist_zphi(d.z,t.phi,o.z,o.phi);if(a>u[i]){let t=a<_?1:a<=g[i]?2:3;this.check_pixel(i,h,t,r,e,p,s)}}return r}}const g=!1,_=(Math.PI,1e-5),f=new class{_camera;_gl;_healpix;_selectionnside;_useCORSProxy;_corsProxyUrl;_maxDecimals;_debug;_insideSphere;_version;constructor(){this._useCORSProxy=false,this._corsProxyUrl="http://localhost:4000/",this._maxDecimals=15,this._debug=false,this._insideSphere=false,this._version="Astrobrowser v1.0.0",this._camera=null,this._gl=null,this._healpix={},this._selectionnside=32}init(){console.log("Global.init()")}get version(){return this._version}set corsProxyUrl(t){this._corsProxyUrl=t}get corsProxyUrl(){return this._corsProxyUrl}get useCORSProxy(){return this._useCORSProxy}set useCORSProxy(t){this._useCORSProxy=t}get debug(){return this._debug}getHealpix(t){return void 0===this._healpix[t]&&(this._healpix[t]=new u(Math.pow(2,t))),this._healpix[t]}get MAX_DECIMALS(){return this._maxDecimals}get camera(){return this._camera}set camera(t){this._camera=t}get gl(){return this._gl}set gl(t){this._gl=t}set insideSphere(t){this._insideSphere=t}get insideSphere(){return this._insideSphere}get nsideForSelection(){return this._selectionnside}};var p="undefined"!=typeof Float32Array?Float32Array:Array;function m(){var t=new p(3);return p!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function x(t){var e=new p(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function v(t){var e=t[0],i=t[1],s=t[2];return Math.sqrt(e*e+i*i+s*s)}function S(t,e,i){var s=new p(3);return s[0]=t,s[1]=e,s[2]=i,s}function P(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t}function M(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t}function y(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t}function A(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function E(t,e,i){var s=e[0],r=e[1],o=e[2],a=i[3]*s+i[7]*r+i[11]*o+i[15];return a=a||1,t[0]=(i[0]*s+i[4]*r+i[8]*o+i[12])/a,t[1]=(i[1]*s+i[5]*r+i[9]*o+i[13])/a,t[2]=(i[2]*s+i[6]*r+i[10]*o+i[14])/a,t}function C(){var t=new p(16);return p!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function T(t,e,i,s,r,o,a,n,h,l,c,d,u,g,_,f,p){return t[0]=e,t[1]=i,t[2]=s,t[3]=r,t[4]=o,t[5]=a,t[6]=n,t[7]=h,t[8]=l,t[9]=c,t[10]=d,t[11]=u,t[12]=g,t[13]=_,t[14]=f,t[15]=p,t}function b(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function I(t,e){var i=e[0],s=e[1],r=e[2],o=e[3],a=e[4],n=e[5],h=e[6],l=e[7],c=e[8],d=e[9],u=e[10],g=e[11],_=e[12],f=e[13],p=e[14],m=e[15],x=i*n-s*a,v=i*h-r*a,S=i*l-o*a,P=s*h-r*n,M=s*l-o*n,y=r*l-o*h,A=c*f-d*_,E=c*p-u*_,C=c*m-g*_,T=d*p-u*f,b=d*m-g*f,I=u*m-g*p,F=x*I-v*b+S*T+P*C-M*E+y*A;return F?(F=1/F,t[0]=(n*I-h*b+l*T)*F,t[1]=(r*b-s*I-o*T)*F,t[2]=(f*y-p*M+m*P)*F,t[3]=(u*M-d*y-g*P)*F,t[4]=(h*C-a*I-l*E)*F,t[5]=(i*I-r*C+o*E)*F,t[6]=(p*S-_*y-m*v)*F,t[7]=(c*y-u*S+g*v)*F,t[8]=(a*b-n*C+l*A)*F,t[9]=(s*C-i*b-o*A)*F,t[10]=(_*M-f*S+m*x)*F,t[11]=(d*S-c*M-g*x)*F,t[12]=(n*E-a*T-h*A)*F,t[13]=(i*T-s*E+r*A)*F,t[14]=(f*v-_*P-p*x)*F,t[15]=(c*P-d*v+u*x)*F,t):null}function F(t,e,i){var s=e[0],r=e[1],o=e[2],a=e[3],n=e[4],h=e[5],l=e[6],c=e[7],d=e[8],u=e[9],g=e[10],_=e[11],f=e[12],p=e[13],m=e[14],x=e[15],v=i[0],S=i[1],P=i[2],M=i[3];return t[0]=v*s+S*n+P*d+M*f,t[1]=v*r+S*h+P*u+M*p,t[2]=v*o+S*l+P*g+M*m,t[3]=v*a+S*c+P*_+M*x,v=i[4],S=i[5],P=i[6],M=i[7],t[4]=v*s+S*n+P*d+M*f,t[5]=v*r+S*h+P*u+M*p,t[6]=v*o+S*l+P*g+M*m,t[7]=v*a+S*c+P*_+M*x,v=i[8],S=i[9],P=i[10],M=i[11],t[8]=v*s+S*n+P*d+M*f,t[9]=v*r+S*h+P*u+M*p,t[10]=v*o+S*l+P*g+M*m,t[11]=v*a+S*c+P*_+M*x,v=i[12],S=i[13],P=i[14],M=i[15],t[12]=v*s+S*n+P*d+M*f,t[13]=v*r+S*h+P*u+M*p,t[14]=v*o+S*l+P*g+M*m,t[15]=v*a+S*c+P*_+M*x,t}function R(t,e,i){var s,r,o,a,n,h,l,c,d,u,g,_,f=i[0],p=i[1],m=i[2];return e===t?(t[12]=e[0]*f+e[4]*p+e[8]*m+e[12],t[13]=e[1]*f+e[5]*p+e[9]*m+e[13],t[14]=e[2]*f+e[6]*p+e[10]*m+e[14],t[15]=e[3]*f+e[7]*p+e[11]*m+e[15]):(s=e[0],r=e[1],o=e[2],a=e[3],n=e[4],h=e[5],l=e[6],c=e[7],d=e[8],u=e[9],g=e[10],_=e[11],t[0]=s,t[1]=r,t[2]=o,t[3]=a,t[4]=n,t[5]=h,t[6]=l,t[7]=c,t[8]=d,t[9]=u,t[10]=g,t[11]=_,t[12]=s*f+n*p+d*m+e[12],t[13]=r*f+h*p+u*m+e[13],t[14]=o*f+l*p+g*m+e[14],t[15]=a*f+c*p+_*m+e[15]),t}function w(t,e,i,s){var r,o,a,n,h,l,c,d,u,g,_,f,p,m,x,v,S,P,M,y,A,E,C,T,b=s[0],I=s[1],F=s[2],R=Math.sqrt(b*b+I*I+F*F);return R<1e-6?null:(b*=R=1/R,I*=R,F*=R,r=Math.sin(i),a=1-(o=Math.cos(i)),n=e[0],h=e[1],l=e[2],c=e[3],d=e[4],u=e[5],g=e[6],_=e[7],f=e[8],p=e[9],m=e[10],x=e[11],v=b*b*a+o,S=I*b*a+F*r,P=F*b*a-I*r,M=b*I*a-F*r,y=I*I*a+o,A=F*I*a+b*r,E=b*F*a+I*r,C=I*F*a-b*r,T=F*F*a+o,t[0]=n*v+d*S+f*P,t[1]=h*v+u*S+p*P,t[2]=l*v+g*S+m*P,t[3]=c*v+_*S+x*P,t[4]=n*M+d*y+f*A,t[5]=h*M+u*y+p*A,t[6]=l*M+g*y+m*A,t[7]=c*M+_*y+x*A,t[8]=n*E+d*C+f*T,t[9]=h*E+u*C+p*T,t[10]=l*E+g*C+m*T,t[11]=c*E+_*C+x*T,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)}Math.random,Math.PI,Math.PI,m();function D(t){const e=A(t,t),i=Math.sqrt(e);let s=Math.acos(t[2]/i);s=N(s);let r=Math.atan2(t[1],t[0]);return r=N(r),r<0&&(r+=360),{phi:r,theta:s}}function L(t){const e=t.substring(1,3),i=t.substring(3,5),s=t.substring(5,7),r=parseInt(e,16),o=parseInt(i,16),a=parseInt(s,16),n=(r/255).toFixed(2),h=(o/255).toFixed(2),l=(a/255).toFixed(2);return[parseFloat(n),parseFloat(h),parseFloat(l)]}function B(t){return t/180*Math.PI}function N(t){return 180*t/Math.PI}function V(t,e){let i=t;return i<0&&(i+=360),{ra:i,dec:90-e}}function z(t,e,i=1){return[i*Math.sin(B(e))*Math.cos(B(t)),i*Math.sin(B(e))*Math.sin(B(t)),i*Math.cos(B(e))]}function U(t,e){let i=t;return i<0&&(i+=360),{phi:i,theta:90-e}}function O(t){const e=Math.floor(t/15),i=Math.floor(60*(t/15-e));return{h:e,m:i,s:3600*(t/15-e-i/60)}}function H(t){let e=1;t<0&&(e=-1);const i=Math.abs(t);let s=Math.trunc(i);const r=Math.trunc(60*(i-s)),o=3600*(i-s-r/60);return s*=e,{d:s,m:r,s:o}}const G=class{insideSphere=!1;cam_pos=m();cam_speed=1;vMatrix=C();T=C();R=C();FoV=180;previousFoV=180;move=m();phi=0;theta=0;constructor(t,e){this.init(t,e)}init(t,e){this.insideSphere=e,this.cam_pos=x(t),this.vMatrix=C(),this.T=C(),this.R=C(),R(this.T,this.T,[this.cam_pos[0],this.cam_pos[1],this.cam_pos[2]]),this.FoV=this.previousFoV=180,this.move=x([0,0,0]),this.goTo(0,0)}goTo(t,e){console.log(`global.insideSphere: ${f.insideSphere}`);const i=360-t;this.goToPhiTheta(U(i,e))}goToPhiTheta(t){const e=z(t.phi,t.theta,this.cam_pos[2]);let i=C();i=R(i,i,S(e[0],e[1],e[2]));const s=x([0,1,0]);var r,o;i=function(t,e,i,s){var r=e[0],o=e[1],a=e[2],n=s[0],h=s[1],l=s[2],c=r-i[0],d=o-i[1],u=a-i[2],g=c*c+d*d+u*u;g>0&&(c*=g=1/Math.sqrt(g),d*=g,u*=g);var _=h*u-l*d,f=l*c-n*u,p=n*d-h*c;return(g=_*_+f*f+p*p)>0&&(_*=g=1/Math.sqrt(g),f*=g,p*=g),t[0]=_,t[1]=f,t[2]=p,t[3]=0,t[4]=d*p-u*f,t[5]=u*_-c*p,t[6]=c*f-d*_,t[7]=0,t[8]=c,t[9]=d,t[10]=u,t[11]=0,t[12]=r,t[13]=o,t[14]=a,t[15]=1,t}(i,[i[12],i[13],i[14]],[0,0,0],s),this.R=(r=i,(o=new p(16))[0]=r[0],o[1]=r[1],o[2]=r[2],o[3]=r[3],o[4]=r[4],o[5]=r[5],o[6]=r[6],o[7]=r[7],o[8]=r[8],o[9]=r[9],o[10]=r[10],o[11]=r[11],o[12]=r[12],o[13]=r[13],o[14]=r[14],o[15]=r[15],o),this.R[12]=0,this.R[13]=0,this.R[14]=0;const a=C();0!==this.cam_pos[2]&&I(a,i),this.vMatrix=a}toggleInsideSphere(){f.insideSphere?this.cam_pos[2]<=2?this.cam_pos[2]=-2+this.cam_pos[2]:this.cam_pos[2]=-.005:this.cam_pos[2]=2+this.cam_pos[2],R(this.T,C(),this.cam_pos),this.refreshViewMatrix()}zoom(t){this.move=x([0,0,0]),this.move[2]+=this.cam_speed*t,f.insideSphere?this.cam_pos[2]+this.move[2]>=-.005&&t>0?(this.cam_pos[2]=-.005,t=0):this.cam_pos[2]+this.move[2]<=-.9885&&t<0?(this.cam_pos[2]=-.9885,t=0):this.cam_pos[2]+=this.move[2]:(this.cam_pos[2]<1.005?this.move[2]*=this.cam_pos[2]/100:this.cam_pos[2]<1.05?this.move[2]*=this.cam_pos[2]/20:this.cam_pos[2]<1.3&&(this.move[2]*=this.cam_pos[2]/3),this.cam_pos[2]+this.move[2]<=1.000001&&t<0?this.cam_pos[2]=1.000001:this.cam_pos[2]+=this.move[2]);const e=C();R(this.T,e,this.cam_pos),this.refreshViewMatrix()}moveAlongView(t){const e=C();I(e,this.R);const i=S(0,0,-1),s=m();E(s,i,e);const r=Math.hypot(s[0],s[1],s[2]);r>0&&(s[0]/=r,s[1]/=r,s[2]/=r),this.cam_pos[0]+=s[0]*t,this.cam_pos[1]+=s[1]*t,this.cam_pos[2]+=s[2]*t;const o=C();R(this.T,o,this.cam_pos),this.refreshViewMatrix()}translate(t){this.cam_pos[2]=t+1;const e=C();R(this.T,e,this.cam_pos),this.refreshViewMatrix()}rotateZ(t){const e=.01*t;this.phi+=e,w(this.R,this.R,e,[0,0,1]),this.refreshViewMatrix()}rotateY(t){const e=.01*t;this.phi+=e,w(this.R,this.R,e,[0,1,0]),this.refreshViewMatrix()}rotateXRadian(t){w(this.R,this.R,t,[1,0,0]),this.refreshViewMatrix()}rotateYRadian(t){this.phi+=t,w(this.R,this.R,t,[0,1,0]),this.refreshViewMatrix()}rotateZRadian(t){w(this.R,this.R,t,[0,0,1]),this.refreshViewMatrix()}rotateX(t){const e=.01*t;this.theta+=e,w(this.R,this.R,e,[1,0,0]),this.refreshViewMatrix()}rotate(t,e){const i=Math.sqrt(t*t+e*e);if(0===i)return;const s=this.getCameraPosition(),r=i*(Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2])-1)/3;w(this.R,this.R,-r,[e/i,t/i,0]),this.refreshViewMatrix()}refreshViewMatrix(){const t=C(),e=C();I(t,this.T),I(e,this.R),F(this.vMatrix,t,e)}refreshFoV(t){this.previousFoV=this.FoV,this.FoV=t}getCameraMatrix(){return this.vMatrix}getCameraPosition(){const t=C();return I(t,this.vMatrix)?[t[12],t[13],t[14]]:[this.cam_pos[0],this.cam_pos[1],this.cam_pos[2]]}setCameraPosition(t){this.cam_pos=S(t[0],t[1],t[2]),R(this.T,C(),this.cam_pos),this.refreshViewMatrix()}getCameraAngle(){const[t,e,i]=this.getCameraPosition(),s=D(S(t,e,i));return console.log("[Camera::getCameraAngle]",s),s}},X=new class{_pMatrix=null;_aspectRatio=1;get pMatrix(){return this._pMatrix}computePerspectiveMatrix(t,e,i,s=.1,r){this._aspectRatio=t.width/t.height;const o=C();let a;if(r)a=1.1;else{const t=e.getCameraMatrix(),i=-Number(t[14]),s=1,r=Math.sqrt(Math.max(i**2-s**2,0)),o=Math.atan2(r,s),n=r*Math.sin(o);a=n>0?n:s}return function(t,e,i,s,r){var o=1/Math.tan(e/2);if(t[0]=o/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=r&&r!==1/0){var a=1/(s-r);t[10]=(r+s)*a,t[14]=2*r*s*a}else t[10]=-1,t[14]=-2*s}(o,i*Math.PI/180,this._aspectRatio,s,a),this._pMatrix=o,o}},q=class{refreshMe=!1;fovX_deg=180;fovY_deg=180;xRad;yRad;prevFoV=this.fovX_deg;name;center;radius;isGalacticHips;vertexTextureCoordBuffer=null;vertexPositionBuffer=null;vertexIndexBuffer=null;shaderProgram=null;T=C();R=C();modelMatrix=C();inverseModelMatrix=C();galacticMatrixInverted=C();constructor(t,e,i,s,r,o){this.xRad=i,this.yRad=s,this.name=r,this.center=x(e),this.radius=t,this.isGalacticHips=!!o,T(this.galacticMatrixInverted,-.054875582456588745,-.8734370470046997,-.48383501172065735,0,.49410945177078247,-.4448296129703522,.7469822764396667,0,-.8676661849021912,-.19807636737823486,.4559837877750397,0,0,0,0,1)}initGL(t){this.vertexTextureCoordBuffer=t.createBuffer(),this.vertexPositionBuffer=t.createBuffer(),this.vertexIndexBuffer=t.createBuffer(),this.shaderProgram=t.createProgram(),this.T=C(),this.R=C(),this.modelMatrix=C(),this.inverseModelMatrix=C(),this.translate(this.center),this.rotate(this.xRad,this.yRad)}translate(t){R(this.T,this.T,t),this.refreshModelMatrix()}rotate(t,e){w(this.R,this.R,e,[0,0,1]),w(this.R,this.R,t,[1,0,0]),this.refreshModelMatrix()}rotateFromZero(t,e){b(this.R),w(this.R,this.R,t,[1,0,0]),w(this.R,this.R,e,[0,0,1]),this.refreshModelMatrix()}refreshModelMatrix(){const t=C();I(t,this.R),F(this.modelMatrix,this.T,t),f.insideSphere||(this.modelMatrix[1]=-this.modelMatrix[1],this.modelMatrix[5]=-this.modelMatrix[5],this.modelMatrix[9]=-this.modelMatrix[9],this.modelMatrix[13]=-this.modelMatrix[13]),this.isGalacticHips&&F(this.modelMatrix,this.modelMatrix,this.galacticMatrixInverted)}getModelMatrixInverse(){return b(this.inverseModelMatrix),I(this.inverseModelMatrix,this.modelMatrix),this.inverseModelMatrix}getModelMatrix(){return this.modelMatrix}setGeometryNeedsToBeRefreshed(){this.refreshGeometryOnFoVChanged=!1}rotateX(t,e){const i=Math.cos(e),s=Math.sin(e),r=t[1],o=t[5],a=t[9];return t[1]=t[1]*i-t[2]*s,t[5]=t[5]*i-t[6]*s,t[9]=t[9]*i-t[10]*s,t[2]=t[2]*i+r*s,t[6]=t[6]*i+o*s,t[10]=t[10]*i+a*s,t}rotateY(t,e){const i=Math.cos(e),s=Math.sin(e),r=t[0],o=t[4],a=t[8];return t[0]=i*t[0]+s*t[2],t[4]=i*t[4]+s*t[6],t[8]=i*t[8]+s*t[10],t[2]=i*t[2]-s*r,t[6]=i*t[6]-s*o,t[10]=i*t[10]-s*a,t}};function Y(){var t=new p(4);return p!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function W(t,e,i){var s=e[0],r=e[1],o=e[2],a=e[3];return t[0]=i[0]*s+i[4]*r+i[8]*o+i[12]*a,t[1]=i[1]*s+i[5]*r+i[9]*o+i[13]*a,t[2]=i[2]*s+i[6]*r+i[10]*o+i[14]*a,t[3]=i[3]*s+i[7]*r+i[11]*o+i[15]*a,t}Y();const k=new class{getHiPSNorder(t){return t>=179?0:t>=90?1:t>=30?2:t>=20?3:t>=6?4:t>=3.2?5:t>=1.6?6:t>=.85?7:t>=.42?8:t>=.21?9:t>=.12?10:t>=.06?11:t<.015?12:13}getRADegSteps(t){let e,i;return t>=179?(e=10,i=10):t>=25?(e=9,i=9):t>=12.5?(e=8,i=8):t>=6?(e=6,i=6):t>=3.2?(e=5,i=5):t>=1.6?(e=4,i=4):t>=.85?(e=3,i=3):t>=.42?(e=2,i=2):t>=.21?(e=1,i=1):t>=.12?(e=.5,i=.5):t>=.06?(e=.25,i=.25):(e=10,i=10),{raStep:e,decStep:i}}getRefOrder(t){switch(t){case 0:case 1:case 2:case 3:return t+6;case 4:case 5:case 6:case 7:return t+5;case 8:return t+4;default:return t+3}}};var $;!function(t){t.CARTESIAN="cartesian",t.SPHERICAL="spherical",t.ASTRO="astro"}($||($={}));const j=$;class Z{_x;_y;_z;_xyz;_raDeg;_decDeg;_raRad;_decRad;_raDecDeg;constructor(t,e){this._xyz=[0,0,0],this._raDecDeg=[0,0];const i=f.MAX_DECIMALS??f.maxDecimals??12;if(e===j.CARTESIAN){const{x:e,y:s,z:r}=t;this._x=Number(e.toFixed(i)),this._y=Number(s.toFixed(i)),this._z=Number(r.toFixed(i)),this._xyz=[this._x,this._y,this._z];const[o,a]=this.computeAstroCoords();this._raDeg=Number(o),this._decDeg=Number(a),this._raRad=this._raDeg*Math.PI/180,this._decRad=this._decDeg*Math.PI/180,this._raDecDeg=[this._raDeg,this._decDeg]}else if(e===j.ASTRO){const{raDeg:e,decDeg:s}=t;this._raDeg=Number(e),this._decDeg=Number(s),this._raDecDeg=[this._raDeg,this._decDeg],this._raRad=this._raDeg*Math.PI/180,this._decRad=this._decDeg*Math.PI/180;const[r,o,a]=this.computeCartesianCoords();this._x=Number(r.toFixed(i)),this._y=Number(o.toFixed(i)),this._z=Number(a.toFixed(i)),this._xyz=[this._x,this._y,this._z]}else e===j.SPHERICAL?(console.log(`${j.SPHERICAL} not implemented yet`),this._x=0,this._y=0,this._z=0,this._raDeg=0,this._decDeg=0,this._raRad=0,this._decRad=0):(console.error("CoordsType "+String(e)+" not recognised."),this._x=0,this._y=0,this._z=0,this._raDeg=0,this._decDeg=0,this._raRad=0,this._decRad=0)}computeAstroCoords(){const t=D(S(this._xyz[0],this._xyz[1],this._xyz[2])),e=V(t.phi,t.theta);return[e.ra,e.dec]}computeCartesianCoords(){const t=U(this._raDeg,this._decDeg),[e,i,s]=z(t.phi,t.theta,1);return[e,i,s]}computeHealpixPhiTheta(){return U(this._raDeg,this._decDeg)}scale(t){return new Z({x:this.x*t,y:this.y*t,z:this.z*t},j.CARTESIAN)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){return new Z({x:this.y*t.z-t.y*this.z,y:this.z*t.x-t.z*this.x,z:this.x*t.y-t.x*this.y},j.CARTESIAN)}norm(){const t=1/this.length();return new Z({x:this.x*t,y:this.y*t,z:this.z*t},j.CARTESIAN)}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}subtract(t){return new Z({x:this.x-t.x,y:this.y-t.y,z:this.z-t.z},j.CARTESIAN)}add(t){return new Z({x:this.x+t.x,y:this.y+t.y,z:this.z+t.z},j.CARTESIAN)}get x(){return this._x}get y(){return this._y}get z(){return this._z}get xyz(){return this._xyz}get raDeg(){return this._raDeg}get decDeg(){return this._decDeg}get raDecDeg(){return this._raDecDeg}toADQL(){return`${this._raDecDeg[0]},${this._raDecDeg[1]}`}toString(){return`(raDeg, decDeg) => (${this._raDecDeg[0]},${this._raDecDeg[1]}) (x, y,z) => (${this._xyz[0]},${this._xyz[1]},${this._xyz[2]})`}}const Q=Z;class K{getMinFoV(){return this._fovY_deg<=this._fovX_deg?this._fovY_deg:this._fovX_deg}static getFoVPolygon(t,e,i){const s=X.pMatrix,r=t.getCameraMatrix(),o=i.getModelMatrix(),a=e.clientWidth,n=e.clientHeight;let h=[];if(ft.getIntersectionPointWithSingleModel(0,0).length>0)h=K.getScreenCornersIntersection(s,t,e);else{let t=C();t=F(t,r,o),t=F(t,s,t);const e=[t[3]-t[1],t[7]-t[5],t[11]-t[9],t[15]-t[13]],i=[t[3]+t[1],t[7]+t[5],t[11]+t[9],t[15]+t[13]],l=[t[3]-t[0],t[7]-t[4],t[11]-t[8],t[15]-t[12]],c=[t[3]+t[0],t[7]+t[4],t[11]+t[8],t[15]+t[12]],d=ft.getIntersectionPointWithSingleModel(a/2,0),u=ft.getIntersectionPointWithSingleModel(a,n/2);if(0===d.length&&0===u.length){const t=K.getNearestSpherePoint(e),s=K.getNearestSpherePoint(i),r=K.getNearestSpherePoint(c),o=K.getNearestSpherePoint(l),a=K.computeMiddlePoint(r[0],t[0])[0],n=K.computeMiddlePoint(t[0],o[0])[0],d=K.computeMiddlePoint(o[0],s[0])[0],u=K.computeMiddlePoint(s[0],r[0])[0];h.push(t[0],n,o[0],d,s[0],u,r[0],a)}else if(0===d.length){const s=K.getNearestSpherePoint(e),r=K.getNearestSpherePoint(i),o=K.getFrustumIntersectionWithSphere(t,c,i,e),a=K.getFrustumIntersectionWithSphere(t,l,e,i),n=K.computeMiddlePoint(o[1],s[0])[0],d=K.computeMiddlePoint(s[0],a[0])[0],u=K.computeMiddlePoint(a[1],r[0])[0],g=K.computeMiddlePoint(r[0],o[0])[0];h.push(s[0],d,a[0],a[1],u,r[0],g,o[0],o[1],n)}else if(0===u.length){const s=K.getFrustumIntersectionWithSphere(t,e,c,l),r=K.getFrustumIntersectionWithSphere(t,i,l,c),o=K.getNearestSpherePoint(c),a=K.getNearestSpherePoint(l),n=K.computeMiddlePoint(o[0],s[0])[0],d=K.computeMiddlePoint(s[1],a[0])[0],u=K.computeMiddlePoint(a[0],r[0])[0],g=K.computeMiddlePoint(r[1],o[0])[0];h.push(s[0],s[1],d,a[0],u,r[0],r[1],g,o[0],n)}else{const s=K.getFrustumIntersectionWithSphere(t,e,c,l),r=K.getFrustumIntersectionWithSphere(t,i,l,c),o=K.getFrustumIntersectionWithSphere(t,c,i,e),a=K.getFrustumIntersectionWithSphere(t,l,e,i);h.push(s[0],s[1],a[0],a[1],r[0],r[1],o[0],o[1])}}return h}static getScreenCornersIntersection(t,e,i){const s=i.clientWidth,r=i.clientHeight,o=ft.getIntersectionPointWithSingleModel(0,0),a=ft.getIntersectionPointWithSingleModel(s/2,0),n=ft.getIntersectionPointWithSingleModel(s,0),h=ft.getIntersectionPointWithSingleModel(s,r/2),l=ft.getIntersectionPointWithSingleModel(s,r),c=ft.getIntersectionPointWithSingleModel(s/2,r),d=ft.getIntersectionPointWithSingleModel(0,r),u=ft.getIntersectionPointWithSingleModel(0,r/2),g=[],_=t=>{t.length>0&&g.push(new Q({x:t[0],y:t[1],z:t[2]},j.CARTESIAN))};return _(o),_(a),_(n),_(h),_(l),_(c),_(d),_(u),g}static getCenterJ2000(t){const e=t.clientWidth,i=t.clientHeight,s=ft.getIntersectionPointWithSingleModel(e/2,i/2);return new Q({x:s[0],y:s[1],z:s[2]},j.CARTESIAN)}static computeMiddlePoint(t,e){const i=(t.x+e.x)/2,s=(t.y+e.y)/2,r=(t.z+e.z)/2,o=Math.hypot(i,s,r)||1;return[new Q({x:i/o,y:s/o,z:r/o},j.CARTESIAN)]}static getNearestSpherePoint(t){const[e,i,s,r]=t,o=1/Math.sqrt(e*e+i*i+s*s),a=1*o,n=-1*o,h=[e*a,i*a,s*a],l=[e*n,i*n,s*n],c=Math.sqrt(e*e+i*i+s*s)||1,d=Math.abs(e*h[0]+i*h[1]+s*h[2]+r)/c<=Math.abs(e*l[0]+i*l[1]+s*l[2]+r)/c?h:l;return[new Q({x:d[0],y:d[1],z:d[2]},j.CARTESIAN)]}static getFrustumIntersectionWithSphere(t,e,i,s){const[r,o,a,n]=e,h=r*r+o*o+a*a||1,l=-r*n/h,c=-o*n/h,d=-a*n/h,u=Math.abs(n)/Math.sqrt(h),g=[];if(1>u){const t=Math.sqrt(1-u*u),e=e=>{const[i,s,r,o]=e,a=1/Math.sqrt(i*i+s*s+r*r),n=t*a,h=-t*a,u=[l+i*n,c+s*n,d+r*n],g=[l+i*h,c+s*h,d+r*h],_=Math.sqrt(i*i+s*s+r*r)||1;return Math.abs(i*u[0]+s*u[1]+r*u[2]+o)/_<=Math.abs(i*g[0]+s*g[1]+r*g[2]+o)/_?u:g},r=e(i),o=e(s);g.push(new Q({x:r[0],y:r[1],z:r[2]},j.CARTESIAN),new Q({x:o[0],y:o[1],z:o[2]},j.CARTESIAN))}else 1===u&&g.push(new Q({x:l,y:c,z:d},j.CARTESIAN),new Q({x:l,y:c,z:d},j.CARTESIAN));return g}static getAstroFoVPolygon(t){return t.map(t=>t.toADQL()).join(",")}}const J=K;class tt{fovXDeg=180;fovYDeg=180;ratio=0;_minFoV=180;constructor(){}getFoV(t){const e=f.gl;if(!e||!e.canvas)return this.fovXDeg=180,this.fovYDeg=180,this._minFoV=this.minFoV,this;const i=this.computeAngle(0,e.canvas.height/2,t);this.fovXDeg=i.angleDeg;const s=this.computeAngle(e.canvas.width/2,0,t);return this.fovYDeg=s.angleDeg,this._minFoV=this.minFoV,this.ratio=this.computeRatio(),this}computeRatio(){const t=f.camera;if(!t)throw Error("Camera not defined");const e=t.getCameraPosition();return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])/this.fovYDeg}changeMinFov(t){console.log("inside changeMinFov"),this.fovYDeg<=this.fovXDeg?this.fovYDeg=t:this.fovXDeg=t,console.log("changeMinFov: ping"),this.minFoV}get minFoV(){return this._minFoV=this.fovYDeg<=this.fovXDeg?this.fovYDeg:this.fovXDeg,this._minFoV}computeDistanceFromAngle(t){return t*this.ratio}computeAngle(t,e,i){const s=f.camera,r=X.pMatrix;if(!r)return console.warn("FoV: projection matrix is null"),{angleDeg:180,distance:1};if(!s)return console.warn("FoV: camera is null"),{angleDeg:180,distance:1};const o=ft.getRayFromMouse(t,e,r),a=ft.raySphere(s.getCameraPosition(),o);let n;if(a>0){const t=m();y(t,o,a),P(t,s.getCameraPosition(),t);const e=gt.center,i=m();M(i,t,e);const r=S(e[0],e[1],e[2]+gt.radius),h=C();I(h,s.getCameraMatrix());const l=m();E(l,r,h);const c=m();M(c,l,e);const d=A(i,c),u=v(i),g=v(c),_=Math.min(1,Math.max(-1,d/(u*g)));n=2*N(Math.acos(_))}else n=180;return{angleDeg:i?360-n:n,distance:a}}computeCameraPositionForMinFoV(t){const e=f.camera,i=gt.center,s=gt.radius;if(!e)return console.warn("FoV.computeCameraPositionForMinFoV: camera not available; returning a sensible default."),[i[0],i[1],i[2]+2*s];const r=1e-6,o=Math.max(r,Math.min(180-r,t))*Math.PI/180*.5,a=Math.sin(o);if(a<=0)return console.warn("FoV.computeCameraPositionForMinFoV: invalid targetMinFoVDeg, using fallback."),[i[0],i[1],i[2]+2*s];let n=s/a;n=Math.max(n,s+1e-4);const h=e.getCameraPosition();let l=h[0]-i[0],c=h[1]-i[1],d=h[2]-i[2];const u=Math.hypot(l,c,d);return u<r?(l=0,c=0,d=1):(l/=u,c/=u,d/=u),[i[0]+l*n,i[1]+c*n,i[2]+d*n]}computeCameraPositionForFoV(t){const e=f.camera,i=gt.center,s=gt.radius;if(!e)return console.warn("FoV.computeCameraPositionForFoV: camera missing."),[i[0],i[1],i[2]+2*s];const r=1e-6,o=Math.max(r,Math.min(180-r,t))*Math.PI/360,a=Math.sin(o);if(a<=0)return console.warn("FoV.computeCameraPositionForFoV: invalid FoV."),[i[0],i[1],i[2]+2*s];let n=s/a;n=Math.max(n,s+1e-4);const h=e.getCameraPosition();let l=h[0]-i[0],c=h[1]-i[1],d=h[2]-i[2];const u=Math.hypot(l,c,d);return u<r?(l=0,c=0,d=1):(l/=u,c/=u,d/=u),[i[0]+l*n,i[1]+c*n,i[2]+d*n]}computeCameraPositionForAngularDiameter(t){const e=f.camera,i=gt.center,s=gt.radius;if(!e)return console.warn("computeCameraPositionForAngularDiameter: camera missing."),[i[0],i[1],i[2]+2*s];const r=1e-6,o=Math.max(r,Math.min(180-r,t))*Math.PI/360;let a=s/Math.sin(o);a=Math.max(a,s+1e-4);const[n,h,l]=i,[c,d,u]=e.getCameraPosition();let g=c-n,_=d-h,p=u-l;const m=Math.hypot(g,_,p);return m<r?(g=0,_=0,p=1):(g/=m,_/=m,p/=m),[n+g*a,h+_*a,l+p*a]}}const et=class{static healpixGridVS(){return"#version 300 es\n        in vec4 aCatPosition;\n        uniform mat4 uMVMatrix;\n        uniform mat4 uPMatrix;\n\n        void main() {\n            gl_Position = uPMatrix * uMVMatrix * aCatPosition;\n            gl_PointSize = 7.0;\n        }"}static healpixGridFS(){return"#version 300 es\n        precision mediump float;\n\n        uniform vec4 u_fragcolor;\n        out vec4 fragColor;\n\n        void main() {\n            // fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n            fragColor = u_fragcolor;\n        }"}},it=class{_x;_y;constructor(t,e){this._x=t,this._y=e}get x(){return this._x}get y(){return this._y}};class st{static orthodromicDistance(t,e){return Math.acos(Math.sin(t.decDeg*Math.PI/180)*Math.sin(e.decDeg*Math.PI/180)+Math.cos(t.decDeg*Math.PI/180)*Math.cos(e.decDeg*Math.PI/180)*Math.cos((e.raDeg-t.raDeg)*Math.PI/180))}static computeSelectionObject(t){let e,i,s,r,o=[],a=0,n=0;if(t[0][0].decDeg>=10?n=1:t[0][0].decDeg<=-10?n=-1:a=1,0===a){const h=st.projectIn2D(t[0][0]);e=s=h.x,i=r=h.y;for(const h of t){const t=[];for(const l of h){if(l.decDeg>10*n&&-1===n||l.decDeg<10*n&&1===n){a=1,o=[];break}const h=st.projectIn2D(l);t.push(h),h.x>e&&(e=h.x),h.y>i&&(i=h.y),h.x<s&&(s=h.x),h.y<r&&(r=h.y)}o.push(t)}}if(0===a)return{poly4selection:o,flag:a,maxx:e,maxy:i,minx:s,miny:r};const h=180;let l=t[0][0].raDeg<h;e=s=t[0][0].raDeg,i=r=t[0][0].decDeg;for(const n of t){const t=[];for(const c of n){const n=new it(c.raDeg,c.decDeg);if(t.push(n),c.raDeg>e&&(e=c.raDeg),c.decDeg>i&&(i=c.decDeg),c.raDeg<s&&(s=c.raDeg),c.decDeg<r&&(r=c.decDeg),c.raDeg>=h&&l||c.raDeg<=h&&!l){a=2,o=[];break}}o.push(t)}if(1===a)return{poly4selection:o,flag:a,maxx:e,maxy:i,minx:s,miny:r};let c=t[0][0].raDeg;e=c>=h?c-360:c,i=t[0][0].decDeg,s=e,r=i;for(const a of t){const t=[];for(const o of a){const a=o.raDeg>=h?o.raDeg-360:o.raDeg;a>e&&(e=a),o.decDeg>i&&(i=o.decDeg),a<s&&(s=a),o.decDeg<r&&(r=o.decDeg),t.push(new it(a,o.decDeg))}o.push(t)}return{poly4selection:o,flag:a,maxx:e,maxy:i,minx:s,miny:r}}static stereographic(t){const e=Number(t.xyz[0]),i=Number(t.xyz[1]),s=Number(t.xyz[2]);return{x:2*e/(1-s),y:2*i/(1-s)}}static projectIn2D(t){const e=st.stereographic(t);return new it(e.x,e.y)}static checkPointInsidePolygon5(t,e){let i;if(0===t.flag)i=st.projectIn2D(e);else if(1===t.flag)i=new it(e.raDeg,e.decDeg);else{const t=180,s=e.raDeg>=t?e.raDeg-360:e.raDeg;i=new it(s,e.decDeg)}const s=new it(i.x,i.y+2*Math.abs(t.maxy-t.miny));if(i.x>t.maxx||i.x<t.minx||i.y>t.maxy||i.y<t.miny)return!1;for(const e of t.poly4selection){let t=0;for(let r=0;r<e.length-1;r++){const o=e[r],a=e[r+1],n=(a.y-o.y)*(s.x-i.x)-(a.x-o.x)*(s.y-i.y),h=(a.x-o.x)*(i.y-o.y)-(a.y-o.y)*(i.x-o.x),l=(s.x-i.x)*(i.y-o.y)-(s.y-i.y)*(i.x-o.x);if(0!==n){const e=h/n,i=l/n;e>=0&&e<=1&&i>=0&&i<=1&&t++}}{const r=e[e.length-1],o=e[0],a=(o.y-r.y)*(s.x-i.x)-(o.x-r.x)*(s.y-i.y),n=(o.x-r.x)*(i.y-r.y)-(o.y-r.y)*(i.x-r.x),h=(s.x-i.x)*(i.y-r.y)-(s.y-i.y)*(i.x-r.x);if(0!==a){const e=n/a,i=h/a;e>=0&&e<=1&&i>=0&&i<=1&&t++}}if(t%2==1)return!0}return!1}static checkPointInsidePolygon4(t,e){const i=st.projectIn2D(e);let s=e.raDeg+15;s>360&&(s=e.raDeg-15);const r=new Q({raDeg:s,decDeg:e.decDeg},j.ASTRO),o=st.projectIn2D(r);for(const e of t){let t=0;for(let s=0;s<e.length-1;s++){const r=st.projectIn2D(e[s]),a=st.projectIn2D(e[s+1]),n=(a.y-r.y)*(o.x-i.x)-(a.x-r.x)*(o.y-i.y),h=(a.x-r.x)*(i.y-r.y)-(a.y-r.y)*(i.x-r.x),l=(o.x-i.x)*(i.y-r.y)-(o.y-i.y)*(i.x-r.x);if(0!==n){const e=h/n,i=l/n;e>=0&&e<=1&&i>=0&&i<=1&&t++}}{const s=st.projectIn2D(e[e.length-1]),r=st.projectIn2D(e[0]),a=(r.y-s.y)*(o.x-i.x)-(r.x-s.x)*(o.y-i.y),n=(r.x-s.x)*(i.y-s.y)-(r.y-s.y)*(i.x-s.x),h=(o.x-i.x)*(i.y-s.y)-(o.y-i.y)*(i.x-s.x);if(0!==a){const e=n/a,i=h/a;e>=0&&e<=1&&i>=0&&i<=1&&t++}}if(t%2==1)return!0}return!1}}const rt=st,ot=class{_divEqContainerElement;_divHPXContainerElement;_divSets;_divSetNdx;constructor(){this._divEqContainerElement=document.querySelector("#gridcoords"),this._divHPXContainerElement=document.querySelector("#gridhpx"),this._divSetNdx=0,this._divSets=[]}initHtml(){}resetDivSets(){for(;this._divSetNdx<this._divSets.length;++this._divSetNdx)this._divSets[this._divSetNdx].style.display="none";this._divSetNdx=0}addHPXDivSet(t,e,i){let s=this._divSets[this._divSetNdx++];if(!s){const t=document.createElement("div"),e=document.createTextNode("");if(t.className="floating-div-ra",t.appendChild(e),this._divHPXContainerElement||(this._divHPXContainerElement=document.querySelector("#gridhpx")),!this._divHPXContainerElement)return;this._divHPXContainerElement.appendChild(t),s={div:t,textNode:e,style:t.style},this._divSets.push(s)}s.style.display="block",s.style.left=`${Math.floor(e+25)}px`,s.style.top=`${Math.floor(i)}px`,s.textNode.nodeValue=t}addEqDivSet(t,e,i,s){let r=this._divSets[this._divSetNdx++];if(!r){const t=document.createElement("div"),e=document.createTextNode("");if(t.className="ra"===s?"floating-div-ra":"floating-div-dec",t.appendChild(e),this._divEqContainerElement||(this._divEqContainerElement=document.querySelector("#gridcoords")),!this._divEqContainerElement)return;this._divEqContainerElement.appendChild(t),r={div:t,textNode:e,style:t.style},this._divSets.push(r)}r.style.display="block","ra"===s?(r.style.left=`${Math.floor(e+25)}px`,r.style.top=`${Math.floor(i)}px`):(r.style.left=`${Math.floor(e)}px`,r.style.top=`${Math.floor(i+25)}px`),r.textNode.nodeValue=t}};class at{static catalogueVS(){return"#version 300 es\n    in vec4 aCatPosition;\n    in float a_selected;\n    in float a_pointsize;\n    in float a_brightness;\n\n    out float v_selected;\n    out float v_brightness;\n    out lowp vec4 vColor;  // not used\n\n    uniform mat4 uPMatrix;\n    uniform mat4 uMVMatrix;\n\n    void main() {\n\n      gl_Position = (uPMatrix * uMVMatrix * aCatPosition);\n      gl_PointSize = a_pointsize;\n      v_selected = a_selected;\n      v_brightness = a_brightness;\n    }"}static catalogueFS(){return"#version 300 es\n    precision mediump float;\n    \n    #ifdef GL_OES_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n    #endif\n\n    // https://www.desultoryquest.com/blog/drawing-anti-aliased-circular-points-using-opengl-slash-webgl/\n\n    // precision mediump float;\n\n    in float v_selected;\n    in float v_brightness;\n\n    uniform vec4 u_fragcolor;\n\n    out vec4 fragColor;\n\n    // varying float v_selected;\n    // varying float v_brightness;\n\n    const float EPSILON = 1e-10;\n    \n    vec3 RGBtoHCV(in vec3 rgb) {\n      // RGB [0..1] to Hue-Chroma-Value [0..1]\n      // Based on work by Sam Hocevar and Emil Persson\n      vec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1., 2. / 3.) : vec4(rgb.gb, 0., -1. / 3.);\n      vec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);\n      float c = q.x - min(q.w, q.y);\n      float h = abs((q.w - q.y) / (6. * c + EPSILON) + q.z);\n      return vec3(h, c, q.x);\n    }\n\n    vec3 RGBtoHSL(in vec3 rgb) {\n      // RGB [0..1] to Hue-Saturation-Lightness [0..1]\n      vec3 hcv = RGBtoHCV(rgb);\n      //vec3 hcv = vec3(1., 1., 1.);\n      float z = hcv.z - hcv.y * 0.5;\n      float s = hcv.y / (1. - abs(z * 2. - 1.) + EPSILON);\n      return vec3(hcv.x, s, z);\n    }\n\n    vec3 HUEtoRGB(in float hue){\n      // Hue [0..1] to RGB [0..1]\n      // See http://www.chilliant.com/rgb2hsv.html\n      vec3 rgb = abs(hue * 6. - vec3(3, 2, 4)) * vec3(1, -1, -1) + vec3(-1, 2, 2);\n      return clamp(rgb, 0., 1.);\n    }\n\n    vec3 HSLtoRGB(in vec3 hsl) {\n      // Hue-Saturation-Lightness [0..1] to RGB [0..1]\n      vec3 rgb = HUEtoRGB(hsl.x);\n      float c = (1. - abs(2. * hsl.z - 1.)) * hsl.y;\n      return (rgb - 0.5) * c + hsl.z;\n    }\n  \n    void main() {\n\n      float r = 0.0, delta = 0.0, alpha = 1.0;\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      r = dot(cxy, cxy);\n      if (r > 1.0) {\n        discard;\n      }\n\n      #ifdef GL_OES_standard_derivatives\n        delta = fwidth(r);\n        alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      #endif\n\n      if (v_selected == 1.0){\n        // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0) * (alpha);\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0) * (alpha);\n      } else if (v_selected == 2.0){\n        // gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0) * (alpha);\n        fragColor = vec4(1.0, 1.0, 0.0, 1.0) * (alpha);\n      }else{\n        if (r < 0.4) {\n          discard;\n        }\n        if ( v_brightness >= -1.0 && v_brightness <= 1.0) {\n          // Round-trip RGB->HSL->RGB with time-dependent lightness\n          vec3 hsl = RGBtoHSL(vec3(u_fragcolor));\n          //hsl.z = pow(hsl.z, sin(iTime) + 1.5);\n          // hsl.z = pow(hsl.z, v_brightness + 1.5);\n          hsl.z = pow(hsl.z, v_brightness + 1.5);\n          vec3 hslcolor = HSLtoRGB(hsl);\n          // gl_FragColor = vec4(hslcolor, u_fragcolor[3]) * (alpha);\n          fragColor = vec4(hslcolor, u_fragcolor[3]) * (alpha);\n        } else {\n          // gl_FragColor = u_fragcolor * (alpha);\n          fragColor = u_fragcolor * (alpha);\n        }\n      }\n    }"}static footprintVS(){return"#version 300 es\n    precision highp float;\n\n    layout(location = 0) in vec4 aCatPosition;\n\n    uniform float u_pointsize;\n    uniform mat4 uMVMatrix;\n    uniform mat4 uPMatrix;\n\n    void main() {\n      gl_Position = uPMatrix * uMVMatrix * aCatPosition;\n      gl_PointSize = u_pointsize;   // Works in WebGL2\n    }"}static footprintFS(){return"#version 300 es\n    precision mediump float;\n\n    uniform vec4 u_fragcolor;\n    out vec4 fragColor;\n\n    void main() {\n      fragColor = u_fragcolor;\n    }"}static hipsVS(){return"#version 300 es\n    in vec3 aVertexPosition;\n    in vec2 aTextureCoord;\n\n    uniform mat4 uMMatrix;\n    uniform mat4 uVMatrix;\n    uniform mat4 uPMatrix;\n\n    out vec2 vTextureCoord;\n\n    void main() {\n      gl_Position = uPMatrix * uVMatrix * uMMatrix * vec4(aVertexPosition, 1.0);\n      vTextureCoord = aTextureCoord;\n    }"}static hipsNativeFS(){return"#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    uniform sampler2D uSampler0;\n    uniform sampler2D uSampler1;\n    uniform sampler2D uSampler2;\n    uniform sampler2D uSampler3;\n    uniform sampler2D uSampler4;\n    uniform sampler2D uSampler5;\n    uniform sampler2D uSampler6;\n    uniform sampler2D uSampler7;\n\n    uniform float uFactor0;\n    uniform float uFactor1;\n    uniform float uFactor2;\n    uniform float uFactor3;\n    uniform float uFactor4;\n    uniform float uFactor5;\n    uniform float uFactor6;\n    uniform float uFactor7;\n\n    out vec4 fragColor;\n\n    void main() {\n      vec3 finalColor = vec3(0.0);\n\n      if (uFactor0 >= 0.0){\n        vec4 mycolor;\n        #if __VERSION__ > 120\n          vec4 color0 = texture(uSampler0, vTextureCoord);\n        #else\n          vec4 color0 = texture2D(uSampler0, vTextureCoord);\n        #endif\n        mycolor = color0;\n        finalColor += mycolor.rgb * uFactor0;\n      } else if (uFactor7 >= 0.0){\n        finalColor = vec3(1.0, 0.0, 0.0);\n      }\n      fragColor = vec4(finalColor, 1.0);\n    }"}static hipsGrayscaleFS(){return"#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    uniform sampler2D uSampler0;\n    uniform sampler2D uSampler1;\n    uniform sampler2D uSampler2;\n    uniform sampler2D uSampler3;\n    uniform sampler2D uSampler4;\n    uniform sampler2D uSampler5;\n    uniform sampler2D uSampler6;\n    uniform sampler2D uSampler7;\n\n    uniform float uFactor0;\n    uniform float uFactor1;\n    uniform float uFactor2;\n    uniform float uFactor3;\n    uniform float uFactor4;\n    uniform float uFactor5;\n    uniform float uFactor6;\n    uniform float uFactor7;\n\n    out vec4 fragColor;\n\n    void main() {\n      vec3 finalColor = vec3(0.0);\n\n      if (uFactor0 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color0 = texture(uSampler0, vTextureCoord);\n        #else\n          vec4 color0 = texture2D(uSampler0, vTextureCoord);\n        #endif\n        float gray = 0.21 * color0.r + 0.71 * color0.g + 0.07 * color0.b;\n        finalColor = color0.rgb * (1.0 - uFactor0) + vec3(gray) * uFactor0;\n      }\n      if (uFactor1 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color1 = texture(uSampler1, vTextureCoord);\n        #else\n          vec4 color1 = texture2D(uSampler1, vTextureCoord);\n        #endif\n        finalColor += color1.rgb * uFactor1;\n      }\n      if (uFactor2 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color2 = texture(uSampler2, vTextureCoord);\n        #else\n          vec4 color2 = texture2D(uSampler2, vTextureCoord);\n        #endif\n        finalColor += color2.rgb * uFactor2;\n      }\n      if (uFactor3 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color3 = texture(uSampler3, vTextureCoord);\n        #else\n          vec4 color3 = texture2D(uSampler3, vTextureCoord);\n        #endif\n        finalColor += color3.rgb * uFactor3;\n      }\n      if (uFactor4 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color4 = texture(uSampler4, vTextureCoord);\n        #else\n          vec4 color4 = texture2D(uSampler4, vTextureCoord);\n        #endif\n        finalColor += color4.rgb * uFactor4;\n      }\n      if (uFactor5 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color5 = texture(uSampler5, vTextureCoord);\n        #else\n          vec4 color5 = texture2D(uSampler5, vTextureCoord);\n        #endif\n        finalColor += color5.rgb * uFactor5;\n      }\n      if (uFactor6 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color6 = texture(uSampler6, vTextureCoord);\n        #else\n          vec4 color6 = texture2D(uSampler6, vTextureCoord);\n        #endif\n        finalColor += color6.rgb * uFactor6;\n      }\n      if (uFactor7 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color7 = texture(uSampler7, vTextureCoord);\n        #else\n          vec4 color7 = texture2D(uSampler7, vTextureCoord);\n        #endif\n        finalColor += color7.rgb * uFactor7;\n      }\n      fragColor = vec4(finalColor, 1.0);\n    }"}static hipsColorMapFS(){return"#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    // UBO\n    layout (std140) uniform colormap {\n      float r_palette[256];\n      float g_palette[256];\n      float b_palette[256];\n    };\n\n    uniform sampler2D uSampler0;\n    uniform float uFactor0;\n\n    out vec4 fragColor;\n\n    void main() {\n      #if __VERSION__ > 120\n        vec4 color0 = texture(uSampler0, vTextureCoord);\n      #else\n        vec4 color0 = texture2D(uSampler0, vTextureCoord);\n      #endif\n\n      int x = int(color0.r * 255.0);\n      float px = r_palette[x] / 256.0;\n\n      int y = int(color0.g * 255.0);\n      float py = g_palette[y] / 256.0;\n\n      int z = int(color0.b * 255.0);\n      float pz = b_palette[z] / 256.0;\n\n      // uFactor0 reserved for future blending if needed\n      fragColor = vec4(px, py, pz, 1.0);\n    }"}}const nt=new class{PLANCK={r:new Float32Array([0,0,0,0,.769231,0,0,0,1.53846,0,0,0,2.30769,0,0,0,3.07692,0,0,0,3.84615,0,0,0,4.61538,0,0,0,5.38462,0,0,0,6.15385,0,0,0,6.92308,0,0,0,7.69231,0,0,0,8.46154,0,0,0,9.23077,0,0,0,10,0,0,0,11.5385,0,0,0,13.0769,0,0,0,14.6154,0,0,0,16.1538,0,0,0,17.6923,0,0,0,19.2308,0,0,0,20.7692,0,0,0,22.3077,0,0,0,23.8462,0,0,0,25.3846,0,0,0,26.9231,0,0,0,28.4615,0,0,0,30,0,0,0,33.8462,0,0,0,37.6923,0,0,0,41.5385,0,0,0,45.3846,0,0,0,49.2308,0,0,0,53.0769,0,0,0,56.9231,0,0,0,60.7692,0,0,0,64.6154,0,0,0,68.4615,0,0,0,72.3077,0,0,0,76.1538,0,0,0,80,0,0,0,88.5385,0,0,0,97.0769,0,0,0,105.615,0,0,0,114.154,0,0,0,122.692,0,0,0,131.231,0,0,0,139.769,0,0,0,148.308,0,0,0,156.846,0,0,0,165.385,0,0,0,173.923,0,0,0,182.462,0,0,0,191,0,0,0,193.846,0,0,0,196.692,0,0,0,199.538,0,0,0,202.385,0,0,0,205.231,0,0,0,208.077,0,0,0,210.923,0,0,0,213.769,0,0,0,216.615,0,0,0,219.462,0,0,0,222.308,0,0,0,225.154,0,0,0,228,0,0,0,229.182,0,0,0,230.364,0,0,0,231.545,0,0,0,232.727,0,0,0,233.909,0,0,0,235.091,0,0,0,236.273,0,0,0,237.455,0,0,0,238.636,0,0,0,239.818,0,0,0,241,0,0,0,241,0,0,0,241.364,0,0,0,241.727,0,0,0,242.091,0,0,0,242.455,0,0,0,242.818,0,0,0,243.182,0,0,0,243.545,0,0,0,243.909,0,0,0,244.273,0,0,0,244.636,0,0,0,245,0,0,0,245.231,0,0,0,245.462,0,0,0,245.692,0,0,0,245.923,0,0,0,246.154,0,0,0,246.385,0,0,0,246.615,0,0,0,246.846,0,0,0,247.077,0,0,0,247.308,0,0,0,247.538,0,0,0,247.769,0,0,0,248,0,0,0,248.146,0,0,0,248.292,0,0,0,248.438,0,0,0,248.585,0,0,0,248.731,0,0,0,248.877,0,0,0,249.023,0,0,0,249.169,0,0,0,249.315,0,0,0,249.462,0,0,0,249.608,0,0,0,249.754,0,0,0,249.9,0,0,0,249.312,0,0,0,248.723,0,0,0,248.135,0,0,0,247.546,0,0,0,246.958,0,0,0,246.369,0,0,0,245.781,0,0,0,245.192,0,0,0,244.604,0,0,0,244.015,0,0,0,243.427,0,0,0,242.838,0,0,0,242.25,0,0,0,239.308,0,0,0,236.365,0,0,0,233.423,0,0,0,230.481,0,0,0,227.538,0,0,0,224.596,0,0,0,221.654,0,0,0,218.712,0,0,0,215.769,0,0,0,212.827,0,0,0,209.885,0,0,0,206.942,0,0,0,204,0,0,0,201,0,0,0,198,0,0,0,195,0,0,0,192,0,0,0,189,0,0,0,186,0,0,0,183,0,0,0,180,0,0,0,177,0,0,0,174,0,0,0,171,0,0,0,168,0,0,0,165,0,0,0,161.077,0,0,0,157.154,0,0,0,153.231,0,0,0,149.308,0,0,0,145.385,0,0,0,141.462,0,0,0,137.538,0,0,0,133.615,0,0,0,129.692,0,0,0,125.769,0,0,0,121.846,0,0,0,117.923,0,0,0,114,0,0,0,115.038,0,0,0,116.077,0,0,0,117.115,0,0,0,118.154,0,0,0,119.192,0,0,0,120.231,0,0,0,121.269,0,0,0,122.308,0,0,0,123.346,0,0,0,124.385,0,0,0,125.423,0,0,0,126.462,0,0,0,127.5,0,0,0,131.423,0,0,0,135.346,0,0,0,139.269,0,0,0,143.192,0,0,0,147.115,0,0,0,151.038,0,0,0,154.962,0,0,0,158.885,0,0,0,162.808,0,0,0,166.731,0,0,0,170.654,0,0,0,174.577,0,0,0,178.5,0,0,0,180.462,0,0,0,182.423,0,0,0,184.385,0,0,0,186.346,0,0,0,188.308,0,0,0,190.269,0,0,0,192.231,0,0,0,194.192,0,0,0,196.154,0,0,0,198.115,0,0,0,200.077,0,0,0,202.038,0,0,0,204,0,0,0,205.962,0,0,0,207.923,0,0,0,209.885,0,0,0,211.846,0,0,0,213.808,0,0,0,215.769,0,0,0,217.731,0,0,0,219.692,0,0,0,221.654,0,0,0,223.615,0,0,0,225.577,0,0,0,227.538,0,0,0,229.5,0,0,0,230.481,0,0,0,231.462,0,0,0,232.442,0,0,0,233.423,0,0,0,234.404,0,0,0,235.385,0,0,0,236.365,0,0,0,237.346,0,0,0,238.327,0,0,0,239.308,0,0,0,240.288,0,0,0,241.269,0,0,0,242.25,0,0,0,242.642,0,0,0,243.035,0,0,0,243.427,0,0,0,243.819,0,0,0,244.212,0,0,0,244.604,0,0,0,244.996,0,0,0,245.388,0,0,0,245.781,0,0,0,246.173,0,0,0,246.565,0,0,0,246.958,0,0,0,247.35,0,0,0,247.814,0,0,0,248.277,0,0,0,248.741,0,0,0,249.205,0,0,0,249.668,0,0,0,250.132,0,0,0,250.595,0,0,0,251.059,0,0,0,251.523,0,0,0,251.986,0,0,0,252.45,0,0,0]),g:new Float32Array([0,0,0,0,1.53846,0,0,0,3.07692,0,0,0,4.61538,0,0,0,6.15385,0,0,0,7.69231,0,0,0,9.23077,0,0,0,10.7692,0,0,0,12.3077,0,0,0,13.8462,0,0,0,15.3846,0,0,0,16.9231,0,0,0,18.4615,0,0,0,20,0,0,0,32.6154,0,0,0,45.2308,0,0,0,57.8462,0,0,0,70.4615,0,0,0,83.0769,0,0,0,95.6923,0,0,0,108.308,0,0,0,120.923,0,0,0,133.538,0,0,0,146.154,0,0,0,158.769,0,0,0,171.385,0,0,0,184,0,0,0,187.923,0,0,0,191.846,0,0,0,195.769,0,0,0,199.692,0,0,0,203.615,0,0,0,207.538,0,0,0,211.462,0,0,0,215.385,0,0,0,219.308,0,0,0,223.231,0,0,0,227.154,0,0,0,231.077,0,0,0,235,0,0,0,235.308,0,0,0,235.615,0,0,0,235.923,0,0,0,236.231,0,0,0,236.538,0,0,0,236.846,0,0,0,237.154,0,0,0,237.462,0,0,0,237.769,0,0,0,238.077,0,0,0,238.385,0,0,0,238.692,0,0,0,239,0,0,0,239.077,0,0,0,239.154,0,0,0,239.231,0,0,0,239.308,0,0,0,239.385,0,0,0,239.462,0,0,0,239.538,0,0,0,239.615,0,0,0,239.692,0,0,0,239.769,0,0,0,239.846,0,0,0,239.923,0,0,0,240,0,0,0,240.091,0,0,0,240.182,0,0,0,240.273,0,0,0,240.364,0,0,0,240.455,0,0,0,240.545,0,0,0,240.636,0,0,0,240.727,0,0,0,240.818,0,0,0,240.909,0,0,0,241,0,0,0,241,0,0,0,240.909,0,0,0,240.818,0,0,0,240.727,0,0,0,240.636,0,0,0,240.545,0,0,0,240.455,0,0,0,240.364,0,0,0,240.273,0,0,0,240.182,0,0,0,240.091,0,0,0,240,0,0,0,239.615,0,0,0,239.231,0,0,0,238.846,0,0,0,238.462,0,0,0,238.077,0,0,0,237.692,0,0,0,237.308,0,0,0,236.923,0,0,0,236.538,0,0,0,236.154,0,0,0,235.769,0,0,0,235.385,0,0,0,235,0,0,0,232.615,0,0,0,230.231,0,0,0,227.846,0,0,0,225.462,0,0,0,223.077,0,0,0,220.692,0,0,0,218.308,0,0,0,215.923,0,0,0,213.538,0,0,0,211.154,0,0,0,208.769,0,0,0,206.385,0,0,0,204,0,0,0,200.077,0,0,0,196.154,0,0,0,192.231,0,0,0,188.308,0,0,0,184.385,0,0,0,180.462,0,0,0,176.538,0,0,0,172.615,0,0,0,168.692,0,0,0,164.769,0,0,0,160.846,0,0,0,156.923,0,0,0,153,0,0,0,147.115,0,0,0,141.231,0,0,0,135.346,0,0,0,129.462,0,0,0,123.577,0,0,0,117.692,0,0,0,111.808,0,0,0,105.923,0,0,0,100.038,0,0,0,94.1538,0,0,0,88.2692,0,0,0,82.3846,0,0,0,76.5,0,0,0,73.0769,0,0,0,69.6538,0,0,0,66.2308,0,0,0,62.8077,0,0,0,59.3846,0,0,0,55.9615,0,0,0,52.5385,0,0,0,49.1154,0,0,0,45.6923,0,0,0,42.2692,0,0,0,38.8462,0,0,0,35.4231,0,0,0,32,0,0,0,29.5385,0,0,0,27.0769,0,0,0,24.6154,0,0,0,22.1538,0,0,0,19.6923,0,0,0,17.2308,0,0,0,14.7692,0,0,0,12.3077,0,0,0,9.84615,0,0,0,7.38462,0,0,0,4.92308,0,0,0,2.46154,0,0,0,0,0,0,0,9.80769,0,0,0,19.6154,0,0,0,29.4231,0,0,0,39.2308,0,0,0,49.0385,0,0,0,58.8462,0,0,0,68.6538,0,0,0,78.4615,0,0,0,88.2692,0,0,0,98.0769,0,0,0,107.885,0,0,0,117.692,0,0,0,127.5,0,0,0,131.423,0,0,0,135.346,0,0,0,139.269,0,0,0,143.192,0,0,0,147.115,0,0,0,151.038,0,0,0,154.962,0,0,0,158.885,0,0,0,162.808,0,0,0,166.731,0,0,0,170.654,0,0,0,174.577,0,0,0,178.5,0,0,0,180.462,0,0,0,182.423,0,0,0,184.385,0,0,0,186.346,0,0,0,188.308,0,0,0,190.269,0,0,0,192.231,0,0,0,194.192,0,0,0,196.154,0,0,0,198.115,0,0,0,200.077,0,0,0,202.038,0,0,0,204,0,0,0,205.962,0,0,0,207.923,0,0,0,209.885,0,0,0,211.846,0,0,0,213.808,0,0,0,215.769,0,0,0,217.731,0,0,0,219.692,0,0,0,221.654,0,0,0,223.615,0,0,0,225.577,0,0,0,227.538,0,0,0,229.5,0,0,0,230.481,0,0,0,231.462,0,0,0,232.442,0,0,0,233.423,0,0,0,234.404,0,0,0,235.385,0,0,0,236.365,0,0,0,237.346,0,0,0,238.327,0,0,0,239.308,0,0,0,240.288,0,0,0,241.269,0,0,0,242.25,0,0,0,242.642,0,0,0,243.035,0,0,0,243.427,0,0,0,243.819,0,0,0,244.212,0,0,0,244.604,0,0,0,244.996,0,0,0,245.388,0,0,0,245.781,0,0,0,246.173,0,0,0,246.565,0,0,0,246.958,0,0,0,247.35,0,0,0,247.814,0,0,0,248.277,0,0,0,248.741,0,0,0,249.205,0,0,0,249.668,0,0,0,250.132,0,0,0,250.595,0,0,0,251.059,0,0,0,251.523,0,0,0,251.986,0,0,0,252.45,0,0,0]),b:new Float32Array([255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,254.615,0,0,0,254.231,0,0,0,253.846,0,0,0,253.462,0,0,0,253.077,0,0,0,252.692,0,0,0,252.308,0,0,0,251.923,0,0,0,251.538,0,0,0,251.154,0,0,0,250.769,0,0,0,250.385,0,0,0,250,0,0,0,249.615,0,0,0,249.231,0,0,0,248.846,0,0,0,248.462,0,0,0,248.077,0,0,0,247.692,0,0,0,247.308,0,0,0,246.923,0,0,0,246.538,0,0,0,246.154,0,0,0,245.769,0,0,0,245.385,0,0,0,245,0,0,0,242,0,0,0,239,0,0,0,236,0,0,0,233,0,0,0,230,0,0,0,227,0,0,0,224,0,0,0,221,0,0,0,218,0,0,0,215,0,0,0,212,0,0,0,212,0,0,0,208.636,0,0,0,205.273,0,0,0,201.909,0,0,0,198.545,0,0,0,195.182,0,0,0,191.818,0,0,0,188.455,0,0,0,185.091,0,0,0,181.727,0,0,0,178.364,0,0,0,175,0,0,0,171.538,0,0,0,168.077,0,0,0,164.615,0,0,0,161.154,0,0,0,157.692,0,0,0,154.231,0,0,0,150.769,0,0,0,147.308,0,0,0,143.846,0,0,0,140.385,0,0,0,136.923,0,0,0,133.462,0,0,0,130,0,0,0,122.942,0,0,0,115.885,0,0,0,108.827,0,0,0,101.769,0,0,0,94.7115,0,0,0,87.6539,0,0,0,80.5962,0,0,0,73.5385,0,0,0,66.4808,0,0,0,59.4231,0,0,0,52.3654,0,0,0,45.3077,0,0,0,38.25,0,0,0,36.2885,0,0,0,34.3269,0,0,0,32.3654,0,0,0,30.4038,0,0,0,28.4423,0,0,0,26.4808,0,0,0,24.5192,0,0,0,22.5577,0,0,0,20.5962,0,0,0,18.6346,0,0,0,16.6731,0,0,0,14.7115,0,0,0,12.75,0,0,0,11.7692,0,0,0,10.7885,0,0,0,9.80769,0,0,0,8.82692,0,0,0,7.84615,0,0,0,6.86539,0,0,0,5.88461,0,0,0,4.90385,0,0,0,3.92308,0,0,0,2.94231,0,0,0,1.96154,0,0,0,.980769,0,0,0,0,0,0,0,2.46154,0,0,0,4.92308,0,0,0,7.38462,0,0,0,9.84616,0,0,0,12.3077,0,0,0,14.7692,0,0,0,17.2308,0,0,0,19.6923,0,0,0,22.1538,0,0,0,24.6154,0,0,0,27.0769,0,0,0,29.5385,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,41.3077,0,0,0,50.6154,0,0,0,59.9231,0,0,0,69.2308,0,0,0,78.5385,0,0,0,87.8462,0,0,0,97.1539,0,0,0,106.462,0,0,0,115.769,0,0,0,125.077,0,0,0,134.385,0,0,0,143.692,0,0,0,153,0,0,0,156.923,0,0,0,160.846,0,0,0,164.769,0,0,0,168.692,0,0,0,172.615,0,0,0,176.538,0,0,0,180.462,0,0,0,184.385,0,0,0,188.308,0,0,0,192.231,0,0,0,196.154,0,0,0,200.077,0,0,0,204,0,0,0,205.962,0,0,0,207.923,0,0,0,209.885,0,0,0,211.846,0,0,0,213.808,0,0,0,215.769,0,0,0,217.731,0,0,0,219.692,0,0,0,221.654,0,0,0,223.615,0,0,0,225.577,0,0,0,227.538,0,0,0,229.5,0,0,0,230.481,0,0,0,231.462,0,0,0,232.442,0,0,0,233.423,0,0,0,234.404,0,0,0,235.385,0,0,0,236.365,0,0,0,237.346,0,0,0,238.327,0,0,0,239.308,0,0,0,240.288,0,0,0,241.269,0,0,0,242.25,0,0,0,242.838,0,0,0,243.427,0,0,0,244.015,0,0,0,244.604,0,0,0,245.192,0,0,0,245.781,0,0,0,246.369,0,0,0,246.958,0,0,0,247.546,0,0,0,248.135,0,0,0,248.723,0,0,0,249.312,0,0,0,249.9,0,0,0,250.096,0,0,0,250.292,0,0,0,250.488,0,0,0,250.685,0,0,0,250.881,0,0,0,251.077,0,0,0,251.273,0,0,0,251.469,0,0,0,251.665,0,0,0,251.862,0,0,0,252.058,0,0,0,252.254,0,0,0,252.45,0,0,0,252.682,0,0,0,252.914,0,0,0,253.145,0,0,0,253.377,0,0,0,253.609,0,0,0,253.841,0,0,0,254.073,0,0,0,254.305,0,0,0,254.536,0,0,0,254.768,0,0,0,255,0,0,0])};RAINBOW={r:new Float32Array([0,0,0,0,4,0,0,0,9,0,0,0,13,0,0,0,18,0,0,0,22,0,0,0,27,0,0,0,31,0,0,0,36,0,0,0,40,0,0,0,45,0,0,0,50,0,0,0,54,0,0,0,58,0,0,0,61,0,0,0,64,0,0,0,68,0,0,0,69,0,0,0,72,0,0,0,74,0,0,0,77,0,0,0,79,0,0,0,80,0,0,0,82,0,0,0,83,0,0,0,85,0,0,0,84,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,86,0,0,0,87,0,0,0,87,0,0,0,87,0,0,0,85,0,0,0,84,0,0,0,84,0,0,0,84,0,0,0,83,0,0,0,79,0,0,0,78,0,0,0,77,0,0,0,76,0,0,0,71,0,0,0,70,0,0,0,68,0,0,0,66,0,0,0,60,0,0,0,58,0,0,0,55,0,0,0,53,0,0,0,46,0,0,0,43,0,0,0,40,0,0,0,36,0,0,0,33,0,0,0,25,0,0,0,21,0,0,0,16,0,0,0,12,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,21,0,0,0,25,0,0,0,29,0,0,0,33,0,0,0,42,0,0,0,46,0,0,0,51,0,0,0,55,0,0,0,63,0,0,0,67,0,0,0,72,0,0,0,76,0,0,0,80,0,0,0,89,0,0,0,93,0,0,0,97,0,0,0,101,0,0,0,110,0,0,0,114,0,0,0,119,0,0,0,123,0,0,0,131,0,0,0,135,0,0,0,140,0,0,0,144,0,0,0,153,0,0,0,157,0,0,0,161,0,0,0,165,0,0,0,169,0,0,0,178,0,0,0,182,0,0,0,187,0,0,0,191,0,0,0,199,0,0,0,203,0,0,0,208,0,0,0,212,0,0,0,221,0,0,0,225,0,0,0,229,0,0,0,233,0,0,0,242,0,0,0,246,0,0,0,250,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0]),g:new Float32Arrayb:new Float32Array([0,0,0,0,3,0,0,0,7,0,0,0,10,0,0,0,14,0,0,0,19,0,0,0,23,0,0,0,28,0,0,0,32,0,0,0,38,0,0,0,43,0,0,0,48,0,0,0,53,0,0,0,59,0,0,0,63,0,0,0,68,0,0,0,72,0,0,0,77,0,0,0,81,0,0,0,86,0,0,0,91,0,0,0,95,0,0,0,100,0,0,0,104,0,0,0,109,0,0,0,113,0,0,0,118,0,0,0,122,0,0,0,127,0,0,0,132,0,0,0,136,0,0,0,141,0,0,0,145,0,0,0,150,0,0,0,154,0,0,0,159,0,0,0,163,0,0,0,168,0,0,0,173,0,0,0,177,0,0,0,182,0,0,0,186,0,0,0,191,0,0,0,195,0,0,0,200,0,0,0,204,0,0,0,209,0,0,0,214,0,0,0,218,0,0,0,223,0,0,0,227,0,0,0,232,0,0,0,236,0,0,0,241,0,0,0,245,0,0,0,250,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,246,0,0,0,242,0,0,0,238,0,0,0,233,0,0,0,225,0,0,0,220,0,0,0,216,0,0,0,212,0,0,0,203,0,0,0,199,0,0,0,195,0,0,0,191,0,0,0,187,0,0,0,178,0,0,0,174,0,0,0,170,0,0,0,165,0,0,0,157,0,0,0,152,0,0,0,148,0,0,0,144,0,0,0,135,0,0,0,131,0,0,0,127,0,0,0,123,0,0,0,114,0,0,0,110,0,0,0,106,0,0,0,102,0,0,0,97,0,0,0,89,0,0,0,84,0,0,0,80,0,0,0,76,0,0,0,67,0,0,0,63,0,0,0,59,0,0,0,55,0,0,0,46,0,0,0,42,0,0,0,38,0,0,0,34,0,0,0,25,0,0,0,21,0,0,0,16,0,0,0,12,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])};CMB={r:new Float32Arrayg:new Float32Array([0,0,0,0,2,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,13,0,0,0,16,0,0,0,18,0,0,0,21,0,0,0,24,0,0,0,26,0,0,0,29,0,0,0,32,0,0,0,34,0,0,0,37,0,0,0,40,0,0,0,42,0,0,0,45,0,0,0,48,0,0,0,50,0,0,0,53,0,0,0,56,0,0,0,58,0,0,0,61,0,0,0,64,0,0,0,66,0,0,0,69,0,0,0,72,0,0,0,74,0,0,0,77,0,0,0,80,0,0,0,82,0,0,0,85,0,0,0,88,0,0,0,90,0,0,0,93,0,0,0,96,0,0,0,98,0,0,0,101,0,0,0,104,0,0,0,106,0,0,0,109,0,0,0,112,0,0,0,114,0,0,0,117,0,0,0,119,0,0,0,122,0,0,0,124,0,0,0,127,0,0,0,129,0,0,0,132,0,0,0,134,0,0,0,137,0,0,0,139,0,0,0,142,0,0,0,144,0,0,0,147,0,0,0,150,0,0,0,152,0,0,0,155,0,0,0,157,0,0,0,160,0,0,0,162,0,0,0,165,0,0,0,167,0,0,0,170,0,0,0,172,0,0,0,175,0,0,0,177,0,0,0,180,0,0,0,182,0,0,0,185,0,0,0,188,0,0,0,190,0,0,0,193,0,0,0,195,0,0,0,198,0,0,0,200,0,0,0,203,0,0,0,205,0,0,0,208,0,0,0,210,0,0,0,213,0,0,0,215,0,0,0,218,0,0,0,221,0,0,0,221,0,0,0,221,0,0,0,222,0,0,0,222,0,0,0,222,0,0,0,223,0,0,0,223,0,0,0,224,0,0,0,224,0,0,0,224,0,0,0,225,0,0,0,225,0,0,0,225,0,0,0,226,0,0,0,226,0,0,0,227,0,0,0,227,0,0,0,227,0,0,0,228,0,0,0,228,0,0,0,229,0,0,0,229,0,0,0,229,0,0,0,230,0,0,0,230,0,0,0,230,0,0,0,231,0,0,0,231,0,0,0,232,0,0,0,232,0,0,0,232,0,0,0,233,0,0,0,233,0,0,0,233,0,0,0,234,0,0,0,234,0,0,0,235,0,0,0,235,0,0,0,235,0,0,0,236,0,0,0,236,0,0,0,237,0,0,0,235,0,0,0,234,0,0,0,233,0,0,0,231,0,0,0,230,0,0,0,229,0,0,0,227,0,0,0,226,0,0,0,225,0,0,0,223,0,0,0,222,0,0,0,221,0,0,0,219,0,0,0,218,0,0,0,217,0,0,0,215,0,0,0,214,0,0,0,213,0,0,0,211,0,0,0,210,0,0,0,209,0,0,0,207,0,0,0,206,0,0,0,205,0,0,0,203,0,0,0,202,0,0,0,201,0,0,0,199,0,0,0,198,0,0,0,197,0,0,0,195,0,0,0,194,0,0,0,193,0,0,0,191,0,0,0,190,0,0,0,189,0,0,0,187,0,0,0,186,0,0,0,185,0,0,0,183,0,0,0,182,0,0,0,181,0,0,0,180,0,0,0,177,0,0,0,175,0,0,0,172,0,0,0,170,0,0,0,167,0,0,0,165,0,0,0,162,0,0,0,160,0,0,0,157,0,0,0,155,0,0,0,152,0,0,0,150,0,0,0,147,0,0,0,145,0,0,0,142,0,0,0,140,0,0,0,137,0,0,0,135,0,0,0,132,0,0,0,130,0,0,0,127,0,0,0,125,0,0,0,122,0,0,0,120,0,0,0,117,0,0,0,115,0,0,0,112,0,0,0,110,0,0,0,107,0,0,0,105,0,0,0,102,0,0,0,100,0,0,0,97,0,0,0,95,0,0,0,92,0,0,0,90,0,0,0,87,0,0,0,85,0,0,0,82,0,0,0,80,0,0,0,77,0,0,0,75,0,0,0,73,0,0,0,71,0,0,0,69,0,0,0,68,0,0,0,66,0,0,0,64,0,0,0,62,0,0,0,61,0,0,0,59,0,0,0,57,0,0,0,55,0,0,0,54,0,0,0,52,0,0,0,50,0,0,0,48,0,0,0,47,0,0,0,45,0,0,0,43,0,0,0,41,0,0,0,40,0,0,0,38,0,0,0,36,0,0,0,34,0,0,0,33,0,0,0,31,0,0,0,29,0,0,0,27,0,0,0,26,0,0,0,24,0,0,0,22,0,0,0,20,0,0,0,19,0,0,0,17,0,0,0,15,0,0,0,13,0,0,0,12,0,0,0,10,0,0,0,8,0,0,0,6,0,0,0,5,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0]),b:new Float32Array([255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,254,0,0,0,253,0,0,0,252,0,0,0,251,0,0,0,250,0,0,0,249,0,0,0,248,0,0,0,247,0,0,0,246,0,0,0,245,0,0,0,245,0,0,0,244,0,0,0,243,0,0,0,242,0,0,0,241,0,0,0,240,0,0,0,239,0,0,0,238,0,0,0,237,0,0,0,236,0,0,0,236,0,0,0,235,0,0,0,234,0,0,0,233,0,0,0,232,0,0,0,231,0,0,0,230,0,0,0,229,0,0,0,228,0,0,0,227,0,0,0,226,0,0,0,226,0,0,0,225,0,0,0,224,0,0,0,223,0,0,0,222,0,0,0,221,0,0,0,220,0,0,0,219,0,0,0,218,0,0,0,217,0,0,0,217,0,0,0,211,0,0,0,206,0,0,0,201,0,0,0,196,0,0,0,191,0,0,0,186,0,0,0,181,0,0,0,176,0,0,0,171,0,0,0,166,0,0,0,161,0,0,0,156,0,0,0,151,0,0,0,146,0,0,0,141,0,0,0,136,0,0,0,131,0,0,0,126,0,0,0,121,0,0,0,116,0,0,0,111,0,0,0,105,0,0,0,100,0,0,0,95,0,0,0,90,0,0,0,85,0,0,0,80,0,0,0,75,0,0,0,70,0,0,0,65,0,0,0,60,0,0,0,55,0,0,0,50,0,0,0,45,0,0,0,40,0,0,0,35,0,0,0,30,0,0,0,25,0,0,0,20,0,0,0,15,0,0,0,10,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])};CUBEHELIX={r:new Float32Array([0,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,25,0,0,0,25,0,0,0,25,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,26,0,0,0,25,0,0,0,25,0,0,0,25,0,0,0,25,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,22,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,27,0,0,0,28,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,35,0,0,0,36,0,0,0,38,0,0,0,39,0,0,0,41,0,0,0,43,0,0,0,45,0,0,0,47,0,0,0,49,0,0,0,51,0,0,0,53,0,0,0,55,0,0,0,57,0,0,0,60,0,0,0,62,0,0,0,65,0,0,0,67,0,0,0,70,0,0,0,72,0,0,0,75,0,0,0,78,0,0,0,81,0,0,0,83,0,0,0,86,0,0,0,89,0,0,0,92,0,0,0,95,0,0,0,98,0,0,0,101,0,0,0,104,0,0,0,107,0,0,0,110,0,0,0,113,0,0,0,116,0,0,0,120,0,0,0,123,0,0,0,126,0,0,0,129,0,0,0,132,0,0,0,135,0,0,0,138,0,0,0,141,0,0,0,144,0,0,0,147,0,0,0,150,0,0,0,153,0,0,0,155,0,0,0,158,0,0,0,161,0,0,0,164,0,0,0,166,0,0,0,169,0,0,0,171,0,0,0,174,0,0,0,176,0,0,0,178,0,0,0,181,0,0,0,183,0,0,0,185,0,0,0,187,0,0,0,189,0,0,0,191,0,0,0,193,0,0,0,194,0,0,0,196,0,0,0,198,0,0,0,199,0,0,0,201,0,0,0,202,0,0,0,203,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,211,0,0,0,211,0,0,0,212,0,0,0,212,0,0,0,212,0,0,0,212,0,0,0,212,0,0,0,212,0,0,0,212,0,0,0,212,0,0,0,211,0,0,0,211,0,0,0,211,0,0,0,210,0,0,0,210,0,0,0,210,0,0,0,209,0,0,0,208,0,0,0,208,0,0,0,207,0,0,0,207,0,0,0,206,0,0,0,205,0,0,0,205,0,0,0,204,0,0,0,203,0,0,0,203,0,0,0,202,0,0,0,201,0,0,0,201,0,0,0,200,0,0,0,199,0,0,0,199,0,0,0,198,0,0,0,197,0,0,0,197,0,0,0,196,0,0,0,196,0,0,0,195,0,0,0,195,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,194,0,0,0,194,0,0,0,195,0,0,0,195,0,0,0,196,0,0,0,196,0,0,0,197,0,0,0,198,0,0,0,199,0,0,0,200,0,0,0,200,0,0,0,202,0,0,0,203,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,212,0,0,0,213,0,0,0,215,0,0,0,217,0,0,0,218,0,0,0,220,0,0,0,222,0,0,0,223,0,0,0,225,0,0,0,227,0,0,0,229,0,0,0,231,0,0,0,232,0,0,0,234,0,0,0,236,0,0,0,238,0,0,0,240,0,0,0,242,0,0,0,244,0,0,0,245,0,0,0,247,0,0,0,249,0,0,0,251,0,0,0,253,0,0,0,255]),g:new Float32Array([0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,28,0,0,0,29,0,0,0,31,0,0,0,32,0,0,0,34,0,0,0,35,0,0,0,37,0,0,0,38,0,0,0,40,0,0,0,41,0,0,0,43,0,0,0,45,0,0,0,46,0,0,0,48,0,0,0,50,0,0,0,52,0,0,0,53,0,0,0,55,0,0,0,57,0,0,0,58,0,0,0,60,0,0,0,62,0,0,0,64,0,0,0,66,0,0,0,67,0,0,0,69,0,0,0,71,0,0,0,73,0,0,0,74,0,0,0,76,0,0,0,78,0,0,0,79,0,0,0,81,0,0,0,83,0,0,0,84,0,0,0,86,0,0,0,88,0,0,0,89,0,0,0,91,0,0,0,92,0,0,0,94,0,0,0,95,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,118,0,0,0,119,0,0,0,119,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,120,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,121,0,0,0,122,0,0,0,122,0,0,0,122,0,0,0,123,0,0,0,123,0,0,0,124,0,0,0,124,0,0,0,125,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,127,0,0,0,128,0,0,0,129,0,0,0,130,0,0,0,131,0,0,0,131,0,0,0,132,0,0,0,133,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,142,0,0,0,143,0,0,0,144,0,0,0,146,0,0,0,147,0,0,0,149,0,0,0,150,0,0,0,152,0,0,0,154,0,0,0,155,0,0,0,157,0,0,0,158,0,0,0,160,0,0,0,162,0,0,0,164,0,0,0,165,0,0,0,167,0,0,0,169,0,0,0,171,0,0,0,172,0,0,0,174,0,0,0,176,0,0,0,178,0,0,0,180,0,0,0,182,0,0,0,183,0,0,0,185,0,0,0,187,0,0,0,189,0,0,0,191,0,0,0,193,0,0,0,194,0,0,0,196,0,0,0,198,0,0,0,200,0,0,0,202,0,0,0,203,0,0,0,205,0,0,0,207,0,0,0,208,0,0,0,210,0,0,0,212,0,0,0,213,0,0,0,215,0,0,0,216,0,0,0,218,0,0,0,219,0,0,0,221,0,0,0,222,0,0,0,224,0,0,0,225,0,0,0,226,0,0,0,228,0,0,0,229,0,0,0,230,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,235,0,0,0,236,0,0,0,237,0,0,0,238,0,0,0,239,0,0,0,240,0,0,0,240,0,0,0,241,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,244,0,0,0,245,0,0,0,246,0,0,0,247,0,0,0,247,0,0,0,248,0,0,0,248,0,0,0,249,0,0,0,250,0,0,0,250,0,0,0,251,0,0,0,251,0,0,0,252,0,0,0,252,0,0,0,253,0,0,0,253,0,0,0,254,0,0,0,255,0,0,0]),b:new Float32Array([0,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,9,0,0,0,11,0,0,0,13,0,0,0,15,0,0,0,17,0,0,0,19,0,0,0,21,0,0,0,23,0,0,0,25,0,0,0,27,0,0,0,29,0,0,0,31,0,0,0,33,0,0,0,35,0,0,0,37,0,0,0,39,0,0,0,41,0,0,0,43,0,0,0,45,0,0,0,47,0,0,0,48,0,0,0,50,0,0,0,52,0,0,0,54,0,0,0,56,0,0,0,57,0,0,0,59,0,0,0,60,0,0,0,62,0,0,0,63,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,76,0,0,0,77,0,0,0,77,0,0,0,77,0,0,0,78,0,0,0,78,0,0,0,78,0,0,0,78,0,0,0,78,0,0,0,78,0,0,0,78,0,0,0,77,0,0,0,77,0,0,0,77,0,0,0,76,0,0,0,76,0,0,0,75,0,0,0,75,0,0,0,74,0,0,0,73,0,0,0,73,0,0,0,72,0,0,0,71,0,0,0,70,0,0,0,69,0,0,0,68,0,0,0,67,0,0,0,66,0,0,0,66,0,0,0,65,0,0,0,64,0,0,0,63,0,0,0,61,0,0,0,60,0,0,0,59,0,0,0,58,0,0,0,58,0,0,0,57,0,0,0,56,0,0,0,55,0,0,0,54,0,0,0,53,0,0,0,52,0,0,0,51,0,0,0,51,0,0,0,50,0,0,0,49,0,0,0,49,0,0,0,48,0,0,0,48,0,0,0,47,0,0,0,47,0,0,0,47,0,0,0,46,0,0,0,46,0,0,0,46,0,0,0,46,0,0,0,46,0,0,0,47,0,0,0,47,0,0,0,47,0,0,0,48,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,59,0,0,0,60,0,0,0,62,0,0,0,64,0,0,0,65,0,0,0,67,0,0,0,69,0,0,0,71,0,0,0,74,0,0,0,76,0,0,0,78,0,0,0,81,0,0,0,83,0,0,0,86,0,0,0,88,0,0,0,91,0,0,0,94,0,0,0,96,0,0,0,99,0,0,0,102,0,0,0,105,0,0,0,108,0,0,0,111,0,0,0,114,0,0,0,117,0,0,0,120,0,0,0,124,0,0,0,127,0,0,0,130,0,0,0,133,0,0,0,136,0,0,0,140,0,0,0,143,0,0,0,146,0,0,0,149,0,0,0,153,0,0,0,156,0,0,0,159,0,0,0,162,0,0,0,165,0,0,0,169,0,0,0,172,0,0,0,175,0,0,0,178,0,0,0,181,0,0,0,184,0,0,0,186,0,0,0,189,0,0,0,192,0,0,0,195,0,0,0,197,0,0,0,200,0,0,0,203,0,0,0,205,0,0,0,207,0,0,0,210,0,0,0,212,0,0,0,214,0,0,0,216,0,0,0,218,0,0,0,220,0,0,0,222,0,0,0,224,0,0,0,226,0,0,0,227,0,0,0,229,0,0,0,230,0,0,0,231,0,0,0,233,0,0,0,234,0,0,0,235,0,0,0,236,0,0,0,237,0,0,0,238,0,0,0,239,0,0,0,239,0,0,0,240,0,0,0,241,0,0,0,241,0,0,0,242,0,0,0,242,0,0,0,242,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,243,0,0,0,242,0,0,0,242,0,0,0,242,0,0,0,242,0,0,0,241,0,0,0,241,0,0,0,241,0,0,0,241,0,0,0,240,0,0,0,240,0,0,0,240,0,0,0,239,0,0,0,239,0,0,0,239,0,0,0,239,0,0,0,239,0,0,0,238,0,0,0,238,0,0,0,238,0,0,0,238,0,0,0,238,0,0,0,238,0,0,0,238,0,0,0,238,0,0,0,239,0,0,0,239,0,0,0,239,0,0,0,240,0,0,0,240,0,0,0,240,0,0,0,241,0,0,0,242,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,245,0,0,0,246,0,0,0,247,0,0,0,248,0,0,0,249,0,0,0,250,0,0,0,252,0,0,0,253,0,0,0,255,0,0,0])};EOSB={r:new Float32Arrayg:new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,39,0,0,0,47,0,0,0,55,0,0,0,57,0,0,0,64,0,0,0,79,0,0,0,87,0,0,0,95,0,0,0,103,0,0,0,111,0,0,0,119,0,0,0,127,0,0,0,135,0,0,0,129,0,0,0,136,0,0,0,159,0,0,0,167,0,0,0,175,0,0,0,183,0,0,0,191,0,0,0,199,0,0,0,207,0,0,0,215,0,0,0,200,0,0,0,207,0,0,0,239,0,0,0,247,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,229,0,0,0,229,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,229,0,0,0,229,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,229,0,0,0,229,0,0,0,255,0,0,0,250,0,0,0,246,0,0,0,242,0,0,0,238,0,0,0,233,0,0,0,229,0,0,0,225,0,0,0,198,0,0,0,195,0,0,0,212,0,0,0,208,0,0,0,204,0,0,0,199,0,0,0,195,0,0,0,191,0,0,0,187,0,0,0,182,0,0,0,160,0,0,0,156,0,0,0,169,0,0,0,165,0,0,0,161,0,0,0,157,0,0,0,153,0,0,0,148,0,0,0,144,0,0,0,140,0,0,0,122,0,0,0,118,0,0,0,127,0,0,0,125,0,0,0,123,0,0,0,121,0,0,0,119,0,0,0,116,0,0,0,114,0,0,0,112,0,0,0,99,0,0,0,97,0,0,0,106,0,0,0,104,0,0,0,102,0,0,0,99,0,0,0,97,0,0,0,95,0,0,0,93,0,0,0,91,0,0,0,80,0,0,0,78,0,0,0,84,0,0,0,82,0,0,0,80,0,0,0,78,0,0,0,76,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,61,0,0,0,59,0,0,0,63,0,0,0,61,0,0,0,59,0,0,0,57,0,0,0,55,0,0,0,53,0,0,0,50,0,0,0,48,0,0,0,42,0,0,0,40,0,0,0,42,0,0,0,40,0,0,0,38,0,0,0,36,0,0,0,33,0,0,0,31,0,0,0,29,0,0,0,27,0,0,0,22,0,0,0,21,0,0,0,21,0,0,0,19,0,0,0,16,0,0,0,14,0,0,0,12,0,0,0,13,0,0,0,8,0,0,0,6,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),b:new Float32Array([116,0,0,0,121,0,0,0,127,0,0,0,131,0,0,0,136,0,0,0,140,0,0,0,144,0,0,0,148,0,0,0,153,0,0,0,157,0,0,0,145,0,0,0,149,0,0,0,170,0,0,0,174,0,0,0,178,0,0,0,182,0,0,0,187,0,0,0,191,0,0,0,195,0,0,0,199,0,0,0,183,0,0,0,187,0,0,0,212,0,0,0,216,0,0,0,221,0,0,0,225,0,0,0,229,0,0,0,233,0,0,0,238,0,0,0,242,0,0,0,221,0,0,0,225,0,0,0,255,0,0,0,247,0,0,0,239,0,0,0,231,0,0,0,223,0,0,0,215,0,0,0,207,0,0,0,199,0,0,0,172,0,0,0,164,0,0,0,175,0,0,0,167,0,0,0,159,0,0,0,151,0,0,0,143,0,0,0,135,0,0,0,127,0,0,0,119,0,0,0,100,0,0,0,93,0,0,0,95,0,0,0,87,0,0,0,79,0,0,0,71,0,0,0,63,0,0,0,55,0,0,0,47,0,0,0,39,0,0,0,28,0,0,0,21,0,0,0,15,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])}},ht=new class{_shaderProgram;_vertexShader;_fragmentShader;_UBO_colorMapBuffer=null;_UBO_colorMapVariableInfo={r_palette:{index:0,offset:0},g_palette:{index:0,offset:0},b_palette:{index:0,offset:0}};gl_uniforms;gl_attributes;locations;constructor(){this.gl_uniforms={sampler:"uSampler0",factor:"uFactor0",m_perspective:"uPMatrix",m_model:"uMMatrix",m_view:"uVMatrix",colormapIdx:"cmapIdx",colormap_red:"r",colormap_green:"g",colormap_blue:"b"},this.gl_attributes={vertex_pos:"aVertexPosition",text_coords:"aTextureCoord"},this.locations={pMatrix:null,mMatrix:null,vMatrix:null,sampler:null,textureAlpha:null,clorMapIdx:null,vertexPositionAttribute:-1,textureCoordAttribute:-1}}get shaderProgram(){if(!this._shaderProgram){const t=f.gl;this._shaderProgram=t.createProgram(),this.initShaders()}return f.gl.useProgram(this._shaderProgram),this._shaderProgram}initShaders(){const t=f.gl,e=at.hipsNativeFS();if(this._fragmentShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(this._fragmentShader,e),t.compileShader(this._fragmentShader),!t.getShaderParameter(this._fragmentShader,t.COMPILE_STATUS))return void alert(t.getShaderInfoLog(this._fragmentShader)||"Fragment shader compile error");const i=at.hipsVS();this._vertexShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(this._vertexShader,i),t.compileShader(this._vertexShader),t.getShaderParameter(this._vertexShader,t.COMPILE_STATUS)?(t.attachShader(this._shaderProgram,this._vertexShader),t.attachShader(this._shaderProgram,this._fragmentShader),t.linkProgram(this._shaderProgram),t.getProgramParameter(this._shaderProgram,t.LINK_STATUS)||alert("Could not initialise shaders")):alert(t.getShaderInfoLog(this._vertexShader)||"Vertex shader compile error")}enableProgram(){f.gl.useProgram(this._shaderProgram)}setGrayscaleShader(){f.gl.detachShader(this._shaderProgram,this._fragmentShader);const t=at.hipsGrayscaleFS();this.changeFSShader(t)}setNativeShader(){f.gl.detachShader(this._shaderProgram,this._fragmentShader);const t=at.hipsNativeFS();this.changeFSShader(t)}setColorMapShader(){const t=f.gl;t.detachShader(this._shaderProgram,this._fragmentShader);const e=at.hipsColorMapFS();this.changeFSShader(e);const i=t.getUniformBlockIndex(this._shaderProgram,"colormap"),s=(t.getActiveUniformBlockParameter(this._shaderProgram,i,t.UNIFORM_BLOCK_DATA_SIZE),["r_palette","g_palette","b_palette"]),r=t.getUniformIndices(this._shaderProgram,s),o=t.getActiveUniforms(this._shaderProgram,r,t.UNIFORM_OFFSET);this._UBO_colorMapBuffer=t.createBuffer(),t.bindBuffer(t.UNIFORM_BUFFER,this._UBO_colorMapBuffer),t.bufferData(t.UNIFORM_BUFFER,12288,t.STATIC_DRAW),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,0,this._UBO_colorMapBuffer),s.forEach((t,e)=>{this._UBO_colorMapVariableInfo[t]={index:r[e],offset:o[e]}})}changeFSShader(t){const e=f.gl;this._fragmentShader=e.createShader(e.FRAGMENT_SHADER),e.shaderSource(this._fragmentShader,t),e.compileShader(this._fragmentShader),e.getShaderParameter(this._fragmentShader,e.COMPILE_STATUS)?(e.attachShader(this._shaderProgram,this._fragmentShader),e.linkProgram(this._shaderProgram),e.getProgramParameter(this._shaderProgram,e.LINK_STATUS)||alert("Could not initialise shaders"),e.useProgram(this._shaderProgram)):alert(e.getShaderInfoLog(this._fragmentShader)||"Fragment shader compile error")}enableShaders(t,e,i,s){const r=f.gl;if(r.useProgram(this._shaderProgram),this.locations.pMatrix=r.getUniformLocation(this._shaderProgram,this.gl_uniforms.m_perspective),this.locations.mMatrix=r.getUniformLocation(this._shaderProgram,this.gl_uniforms.m_model),this.locations.vMatrix=r.getUniformLocation(this._shaderProgram,this.gl_uniforms.m_view),this.locations.sampler=r.getUniformLocation(this._shaderProgram,this.gl_uniforms.sampler),this.locations.textureAlpha=r.getUniformLocation(this._shaderProgram,this.gl_uniforms.factor),this.locations.clorMapIdx=r.getUniformLocation(this._shaderProgram,this.gl_uniforms.colormapIdx),this.locations.vertexPositionAttribute=r.getAttribLocation(this._shaderProgram,this.gl_attributes.vertex_pos),this.locations.textureCoordAttribute=r.getAttribLocation(this._shaderProgram,this.gl_attributes.text_coords),s>=2){const t=r.getUniformBlockIndex(this._shaderProgram,"colormap");let e;r.uniformBlockBinding(this._shaderProgram,t,0),r.bindBuffer(r.UNIFORM_BUFFER,this._UBO_colorMapBuffer),2===s?e=nt.PLANCK:3===s?e=nt.CMB:4===s?e=nt.RAINBOW:5===s?e=nt.EOSB:6===s&&(e=nt.CUBEHELIX),e&&(r.bufferSubData(r.UNIFORM_BUFFER,0,e.r,0),r.bufferSubData(r.UNIFORM_BUFFER,4096,e.g,0),r.bufferSubData(r.UNIFORM_BUFFER,8192,e.b,0)),r.bindBuffer(r.UNIFORM_BUFFER,null)}r.uniformMatrix4fv(this.locations.mMatrix,!1,i),r.uniformMatrix4fv(this.locations.pMatrix,!1,t),r.uniformMatrix4fv(this.locations.vMatrix,!1,e)}};class lt{_hips;_tileno;_baseurl;_order;_format;_maxorder;_isGalacticHips;_ready=!1;_abort=!1;_image;_textureLoaded=!1;_texture;_texurl="";_hipsShaderIndex=0;_cacheTime0;_inView=!0;_amIStillInFoV_requsetID;vertexPosition=[];vertexPositionBuffer=[];vertexIndices=new Uint16Array;vertexIndexBuffer;opacity=1;constructor(t,e,i){this._hips=i,this._tileno=t,this._format=i.format,this._baseurl=i.baseURL,this._maxorder=i.maxOrder,this._isGalacticHips=i.isGalacticHips,this._order=e,this._amIStillInFoV_requsetID=window.setInterval(()=>{this.amIStillInFoV()},5e3),this.initImage()}destroyIntervals(){window.clearInterval(this._amIStillInFoV_requsetID)}getReadyState(){return this._ready}get cacheTime0(){return this._cacheTime0}resetCacheTime0(){this._cacheTime0=void 0}setCacheTime0(){this._cacheTime0=(new Date).getTime()}initImage(){this._image=new Image;const t=1e4*Math.floor(this._tileno/1e4);this._texurl=`${this._baseurl}/Norder${this._order}/Dir${t}/Npix${this._tileno}.${this._format}`,this._image.onload=()=>this.imageLoaded(),this._image.onerror=()=>{console.error("File not found?",this._texurl),this._ready=!1,this._abort=!0,this.destroyIntervals()},this._image.crossOrigin="anonymous",this._image.src=this._texurl}imageLoaded(){this.textureLoaded(),this.initModelBuffer();const t=f.gl;t.activeTexture(t.TEXTURE0+this._hipsShaderIndex),t.bindTexture(t.TEXTURE_2D,this._texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this._image),this._textureLoaded=!0,this._textureLoaded&&(this._ready=!0)}textureLoaded(){const t=f.gl;ht.enableProgram(),this._texture=t.createTexture(),t.activeTexture(t.TEXTURE0+this._hipsShaderIndex),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.uniform1i(ht.locations.sampler,this._hipsShaderIndex),t.isTexture(this._texture)||console.warn("Texture creation failed")}initModelBuffer(){const t=f.gl;this.vertexPosition=[],this.vertexPositionBuffer=[],this.vertexIndices=new Uint16Array;const e=k.getRefOrder(this._order),i=f.getHealpix(this._order).nest2xyf(this._tileno),s=e-this._order,r=i.ix<<s,o=(i.ix<<s)+(1<<s),a=i.iy<<s,n=(i.iy<<s)+(1<<s),h=f.getHealpix(e);this.setupPositionAndTexture4Quadrant2(r,r+(o-r)/2,a,a+(n-a)/2,0,h,s,i),this.setupPositionAndTexture4Quadrant2(r+(o-r)/2,o,a,a+(n-a)/2,1,h,s,i),this.setupPositionAndTexture4Quadrant2(r,r+(o-r)/2,a+(n-a)/2,n,2,h,s,i),this.setupPositionAndTexture4Quadrant2(r+(o-r)/2,o,a+(n-a)/2,n,3,h,s,i);const l=this.vertexPosition[0].length/20,c=this.computeVertexIndices(l);c.length>65535?this.vertexIndices=new Uint32Array(c):this.vertexIndices=new Uint16Array(c),this.vertexIndexBuffer=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.vertexIndices,t.STATIC_DRAW)}computeVertexIndices(t){const e=new Uint32Array(6*t);let i=0;for(let s=0;s<t;s++){const t=i;e[6*s]=t,e[6*s+1]=t+1,e[6*s+2]=t+2,e[6*s+3]=t+2,e[6*s+4]=t+3,e[6*s+5]=t,i+=4}return e}setupPositionAndTexture4Quadrant2(t,e,i,s,r,o,a,n){const h=f.gl;this.vertexPosition[r]=new Float32Array(20*(e-t)*(s-i));const l=1/(1<<a);let c=0;for(let h=t;h<e;h++)for(let t=i;t<s;t++){const e=o.getPointsForXyfNoStep(h,t,n.face),i=t-(n.iy<<a),s=h-(n.ix<<a);this.vertexPosition[r][20*c]=e[0].x,this.vertexPosition[r][20*c+1]=e[0].y,this.vertexPosition[r][20*c+2]=e[0].z,this.vertexPosition[r][20*c+3]=l+l*i+0,this.vertexPosition[r][20*c+4]=1-(l+l*s)-0,this.vertexPosition[r][20*c+5]=e[1].x,this.vertexPosition[r][20*c+6]=e[1].y,this.vertexPosition[r][20*c+7]=e[1].z,this.vertexPosition[r][20*c+8]=l+l*i+0,this.vertexPosition[r][20*c+9]=1-l*s+0,this.vertexPosition[r][20*c+10]=e[2].x,this.vertexPosition[r][20*c+11]=e[2].y,this.vertexPosition[r][20*c+12]=e[2].z,this.vertexPosition[r][20*c+13]=l*i-0,this.vertexPosition[r][20*c+14]=1-l*s+0,this.vertexPosition[r][20*c+15]=e[3].x,this.vertexPosition[r][20*c+16]=e[3].y,this.vertexPosition[r][20*c+17]=e[3].z,this.vertexPosition[r][20*c+18]=l*i-0,this.vertexPosition[r][20*c+19]=1-(l+l*s)-0,c++}this.vertexPositionBuffer[r]=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,this.vertexPositionBuffer[r]),h.bufferData(h.ARRAY_BUFFER,this.vertexPosition[r],h.STATIC_DRAW)}get inView(){return this._inView}moveToCache(){ct.moveTileToCache(this._tileno,this._order,this._hips),this._inView=!1,this.destroyIntervals()}amIStillInFoV(){this._textureLoaded&&(this._ready=!0),this._isGalacticHips?(dt.galAncestorsMap.has(this._order)&&(dt.galAncestorsMap.get(this._order).includes(this._tileno)?this._inView=!0:this.moveToCache()),this._order==dt.visibleOrder&&(dt.galVisibleTilesByOrder.pixels.includes(this._tileno)?this._inView=!0:this.moveToCache())):(dt.ancestorsMap.has(this._order)&&(dt.ancestorsMap.get(this._order).includes(this._tileno)?this._inView=!0:this.moveToCache()),this._order==dt.visibleOrder&&(dt.visibleTilesByOrder.pixels.includes(this._tileno)?this._inView=!0:this.moveToCache()))}draw(t,e,i,s,r,o){if(!this._ready||this._abort)return;let a=new Set([0,1,2,3]);if(t>this._order&&this._order<this._maxorder){const n=this.drawChildren(t,e,i,s,r,o);n&&(a=n)}const n=f.gl;ht.enableShaders(i,s,r,o),n.enableVertexAttribArray(ht.locations.vertexPositionAttribute),n.enableVertexAttribArray(ht.locations.textureCoordAttribute),n.activeTexture(n.TEXTURE0+this._hipsShaderIndex),n.bindTexture(n.TEXTURE_2D,this._texture),n.uniform1f(ht.locations.textureAlpha,this.opacity),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer);const h=this.vertexIndices.length,l=this.vertexIndices instanceof Uint32Array?n.UNSIGNED_INT:n.UNSIGNED_SHORT;a.forEach(t=>{n.bindBuffer(n.ARRAY_BUFFER,this.vertexPositionBuffer[t]),n.vertexAttribPointer(ht.locations.vertexPositionAttribute,3,n.FLOAT,!1,20,0),n.vertexAttribPointer(ht.locations.textureCoordAttribute,2,n.FLOAT,!1,20,12),n.drawElements(n.TRIANGLES,h,l,0)}),n.disableVertexAttribArray(ht.locations.vertexPositionAttribute),n.disableVertexAttribArray(ht.locations.textureCoordAttribute)}drawChildren(t,e,i,s,r,o){const a=new Set([0,1,2,3]),n=this._order+1;if(e.has(n)){for(let h=0;h<4;h++){const l=(this._tileno<<2)+h;if(e.get(n).includes(l)){const h=this._isGalacticHips?ct.getGalTile(l,n,this._hips):ct.getTile(l,n,this._hips);h.draw(t,e,i,s,r,o),h._ready&&a.delete(l-(this._tileno<<2))}}return a}}}const ct=new class{_tiles;_cachedTiles;_activeHiPS;_galTiles;_galCachedTiles;_galActiveHiPS;_cacheAliveMilliSeconds;_cleanerId;constructor(t=1){this._tiles=new Map,this._cachedTiles=new Map,this._activeHiPS=new Map,this._galTiles=new Map,this._galCachedTiles=new Map,this._galActiveHiPS=new Map,this._cacheAliveMilliSeconds=60*t*1e3,this._cleanerId=window.setInterval(()=>{this.cacheCleaner()},1e4)}addHiPS(t){this._activeHiPS.has(t)?console.error("HiPS already present in TileBuffer"):this._activeHiPS.set(t,new Map)}addGalHiPS(t){this._galActiveHiPS.has(t)?console.error("HiPS already present in TileBuffer"):this._galActiveHiPS.set(t,new Map)}addTile(t,e){for(const i of this._activeHiPS.keys())this.getTile(e,t,i)}addGalTile(t,e){for(const i of this._galActiveHiPS.keys())this.getGalTile(e,t,i)}getTile(t,e,i){const s=this.key(e,t,i.baseURL);if(!this._tiles.has(s))if(this._cachedTiles.has(s)){const t=this._cachedTiles.get(s);this._tiles.set(s,t),this._cachedTiles.delete(s),t.resetCacheTime0()}else{const r=new lt(t,e,i);this._tiles.set(s,r)}return this._tiles.get(s)}getGalTile(t,e,i){const s=this.key(e,t,i.baseURL);if(!this._galTiles.has(s))if(this._galCachedTiles.has(s)){const t=this._galCachedTiles.get(s);this._galTiles.set(s,t),this._galCachedTiles.delete(s),t.resetCacheTime0()}else{const r=new lt(t,e,i);this._galTiles.set(s,r)}return this._galTiles.get(s)}moveTileToCache(t,e,i){const s=this.key(e,t,i.baseURL);if(this._tiles.has(s)){const t=this._tiles.get(s);t.setCacheTime0(),this._cachedTiles.set(s,t),this._tiles.delete(s)}if(this._galTiles.has(s)){const t=this._galTiles.get(s);t.setCacheTime0(),this._galCachedTiles.set(s,t),this._galTiles.delete(s)}}cacheCleaner(){const t=Date.now();for(const[e,i]of this._cachedTiles){const s=i.cacheTime0;!i.inView&&void 0!==s&&t-s>this._cacheAliveMilliSeconds&&(i.destroyIntervals(),this._cachedTiles.delete(e))}for(const[e,i]of this._galCachedTiles){const s=i.cacheTime0;!i.inView&&void 0!==s&&t-s>this._cacheAliveMilliSeconds&&(i.destroyIntervals(),this._galCachedTiles.delete(e))}}key(t,e,i){return`${t}#${e}#${i}`}dispose(){window.clearInterval(this._cleanerId)}},dt=new class{_visibleTilesByOrder;_ancestorsMap;initialised;_galVisibleTilesByOrder;_galAncestorsMap;_galacticMatrixInverted;_galacticMatrix;insideSphere=g;constructor(){this._visibleTilesByOrder={pixels:[],order:0},this._ancestorsMap=new Map,this.initialised=!1,this._galVisibleTilesByOrder={pixels:[],order:0},this._galAncestorsMap=new Map,this._galacticMatrixInverted=C(),this._galacticMatrix=C(),T(this._galacticMatrixInverted,-.054876,-.873437,-.483835,0,.494109,-.44483,.746982,-0,-.867666,-.198076,.455984,0,0,0,0,1),I(this._galacticMatrix,this._galacticMatrixInverted)}init(t){this.initialised=!0,this.insideSphere=t,this.computeVisiblePixels(),setInterval(()=>this.computeVisiblePixels(),500)}getVisibleOrder(){return gt.visibleorder}computeVisiblePixels(){if(!this.initialised)return;let t=gt.visibleorder;f.insideSphere&&t<3&&(t=3),this._ancestorsMap.set(t,[]),this._galAncestorsMap.set(t,[]);let e=[],i=[];if(0===t){const s=f.getHealpix(0).getNPix();for(let r=0;r<s;r++)e.push(r),this._ancestorsMap.get(t).push(r),i.push(r),this._galAncestorsMap.get(t).push(r)}else{const r=f.getHealpix(t),o=f.gl.canvas.width,n=f.gl.canvas.height;for(let h=0;h<=o;h+=o/30)for(let o=0;o<=n;o+=n/30){const n=ft.getIntersectionPointWithSingleModel(h,o);if(n.length>0){const o=Y();W(o,[n[0],n[1],n[2],1],this._galacticMatrix);const h=new s(new a(o[0],o[1],o[2])),l=r.ang2pix(h),c=new s(new a(n[0],n[1],n[2])),d=r.ang2pix(c);e.includes(d)||(e.push(d),this._ancestorsMap.get(t).push(d),ct.addTile(t,d)),i.includes(l)||(i.push(l),this._galAncestorsMap.get(t).push(l),ct.addGalTile(t,l))}}}this._visibleTilesByOrder={pixels:e,order:t},this._galVisibleTilesByOrder={pixels:i,order:t};for(let i=1;i<t;i++){const s=t-i,r=this._ancestorsMap.get(s)??[];this._ancestorsMap.set(s,r);for(let t=0;t<e.length;t++){const o=e[t]>>2*i;r.includes(o)||(r.push(o),ct.addTile(s,o))}}for(let e=1;e<t;e++){const s=t-e,r=this._galAncestorsMap.get(s)??[];this._galAncestorsMap.set(s,r);for(let t=0;t<i.length;t++){const o=i[t]>>2*e;r.includes(o)||(r.push(o),ct.addGalTile(s,o))}}}get visibleTilesByOrder(){return this._visibleTilesByOrder}get ancestorsMap(){return this._ancestorsMap}get galVisibleTilesByOrder(){return this._galVisibleTilesByOrder}get galAncestorsMap(){return this._galAncestorsMap}get visibleOrder(){return this._visibleTilesByOrder.order}};class ut extends q{static ELEM_SIZE=3;static BYTES_X_ELEM=(new Float32Array).BYTES_PER_ELEMENT;_visibleorder=0;showGrid=!1;_shaderProgram;fragmentShader;vertexShader;defaultColor="#ec0acaff";gridText=new ot;_attribLocations={position:0,selected:1,pointSize:2,color:3};_nPrimitiveFlags=0;_vertexCataloguePositionBuffer;_indexBuffer;_vertexCataloguePosition=new Float32Array(0);_indexes=new Uint32Array(0);fovObj;static INITIAL_FOV=180;static RADIUS=1;static INITIAL_POSITION=[0,0,0];static INITIAL_PhiRad=0;static INITIAL_ThetaRad=0;constructor(){super(ut.RADIUS,ut.INITIAL_POSITION,ut.INITIAL_PhiRad,ut.INITIAL_ThetaRad,"healpix-grid")}init(){console.log("HealpixGridSingleton.init()"),this.initGL(f.gl),this._shaderProgram=f.gl.createProgram(),this.initShaders();const t=k.getHiPSNorder(ut.INITIAL_FOV);this._visibleorder=t,this._nPrimitiveFlags=0,this._vertexCataloguePositionBuffer=f.gl.createBuffer(),this._indexBuffer=f.gl.createBuffer(),this._vertexCataloguePosition=new Float32Array(0),this.fovObj=new tt}get RADIUS(){return ut.RADIUS}get INITIAL_POSITION(){return ut.INITIAL_POSITION}get INITIAL_PhiRad(){return ut.INITIAL_PhiRad}get INITIAL_ThetaRad(){return ut.INITIAL_ThetaRad}refreshFoV(){return this.fovObj.getFoV(f.insideSphere)}getFoV(){return this.fovObj}getMinFoV(){return this.fovObj.minFoV}initShaders(){const t=f.gl,e=et.healpixGridFS();if(this.fragmentShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(this.fragmentShader,e),t.compileShader(this.fragmentShader),!t.getShaderParameter(this.fragmentShader,t.COMPILE_STATUS))return void alert(t.getShaderInfoLog(this.fragmentShader)||"Fragment shader compile error");const i=et.healpixGridVS();this.vertexShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(this.vertexShader,i),t.compileShader(this.vertexShader),t.getShaderParameter(this.vertexShader,t.COMPILE_STATUS)?(t.attachShader(this._shaderProgram,this.vertexShader),t.attachShader(this._shaderProgram,this.fragmentShader),t.linkProgram(this._shaderProgram),t.getProgramParameter(this._shaderProgram,t.LINK_STATUS)||alert("Could not initialise shaders"),t.useProgram(this._shaderProgram)):alert(t.getShaderInfoLog(this.vertexShader)||"Vertex shader compile error")}initBuffers(t,e){this._nPrimitiveFlags=0;const i=f.getHealpix(e),s=f.getHealpix(e+1),r=f.getHealpix(e+2);let o=0,a=0;this._indexes=new Uint32Array(17*t.length),this._vertexCataloguePosition=new Float32Array(48*t.length);for(let e=0;e<t.length;e++){const n=i.getBoundaries(t[e]),h=t[e]<<2,l=h+1,c=h+2,d=h+3,u=s.getBoundaries(h),g=s.getBoundaries(d),_=t=>{this._vertexCataloguePosition[o]=1*t.x,this._vertexCataloguePosition[o+1]=1*t.y,this._vertexCataloguePosition[o+2]=1*t.z,this._indexes[a]=Math.floor(o/3),a+=1,o+=3};_(n[0]);let f=3+(d<<2),p=r.getBoundaries(f);_(p[1]),_(g[1]);let m=2+(c<<2);p=r.getBoundaries(m),_(p[0]),_(n[1]),_(p[2]),_(u[1]);let x=h<<2;p=r.getBoundaries(x),_(p[1]),_(n[2]),_(p[3]),_(u[3]);let v=1+(l<<2);p=r.getBoundaries(v),_(p[2]),_(n[3]),_(p[0]),_(g[3]),p=r.getBoundaries(f),_(p[3]),this._indexes[a]=4294967295,this._nPrimitiveFlags+=1,a+=1}}refresh(){this.refreshFoV();const t=this.getMinFoV();this._visibleorder=k.getHiPSNorder(t)}enableShader(t,e){const i=f.gl;i.useProgram(this._shaderProgram);const s=i.getUniformLocation(this._shaderProgram,"uMVMatrix"),r=i.getUniformLocation(this._shaderProgram,"uPMatrix"),o=f.gl.getUniformLocation(this._shaderProgram,"u_fragcolor");this._attribLocations.position=i.getAttribLocation(this._shaderProgram,"aCatPosition");let a=C();if(a=F(a,f.camera.getCameraMatrix(),t),s&&i.uniformMatrix4fv(s,!1,a),r&&i.uniformMatrix4fv(r,!1,e),o){const t=L(this.defaultColor);i.uniform4f(o,t[0],t[1],t[2],1)}}isVisible(){return this.showGrid}toggleShowGrid(){this.showGrid=!this.showGrid}draw(){const t=f.gl,e=this.getModelMatrix();if(this.refresh(),!this.showGrid)return void this.gridText.resetDivSets();const i=dt.visibleTilesByOrder,s=i.pixels,r=i.order;this.initBuffers(s,r);const o=X.pMatrix;this.enableShader(e,o),t.bindBuffer(t.ARRAY_BUFFER,this._vertexCataloguePositionBuffer),t.bufferData(t.ARRAY_BUFFER,this._vertexCataloguePosition,t.STATIC_DRAW),t.vertexAttribPointer(this._attribLocations.position,ut.ELEM_SIZE,t.FLOAT,!1,ut.BYTES_X_ELEM*ut.ELEM_SIZE,0),t.enableVertexAttribArray(this._attribLocations.position),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this._indexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this._indexes,t.STATIC_DRAW),t.drawElements(t.LINE_LOOP,this._vertexCataloguePosition.length/3+this._nPrimitiveFlags,t.UNSIGNED_INT,0),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null);let a=C();a=F(a,f.camera.getCameraMatrix(),e);let n=C();n=F(n,o,a);const h=J.getCenterJ2000(t.canvas),l=this.getMinFoV()*Math.PI/180/2;for(let e=0;e<s.length;e++){const i=f.getHealpix(this._visibleorder).pix2vec(s[e]),r=new Q({x:i.x,y:i.y,z:i.z},j.CARTESIAN);if(rt.orthodromicDistance(h,r)<l){const r=[i.x,i.y,i.z,1],o=Y();W(o,r,n),o[0]/=o[3],o[1]/=o[3];const a=(.5*o[0]+.5)*t.canvas.width,h=(-.5*o[1]+.5)*t.canvas.height;this.gridText.addHPXDivSet(this._visibleorder+"/"+s[e],a,h)}}this.gridText.resetDivSets(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}get visibleorder(){return this._visibleorder}}const gt=new ut;class _t{static lastNearestVisibleObjectIdx=-1;static getNearestVisibleObjectIdx(){return this.lastNearestVisibleObjectIdx}static getRayFromMouse(t,e,i){if(!f.camera)throw new Error("Camera is not initialized.");const s=f.camera.getCameraMatrix(),r=f.gl,o=r.canvas.getBoundingClientRect(),a=t-o.left,n=e-o.top,h=[2*a/r.canvas.clientWidth-1,1-2*n/r.canvas.clientHeight,-1,1],l=C();I(l,i);const c=[0,0,0,0];_t.mat4MultiplyVec4(l,h,c);const d=[c[0],c[1],-1,0],u=C();I(u,s);const g=[0,0,0,0];_t.mat4MultiplyVec4(u,d,g);const _=S(g[0],g[1],g[2]);return p=_,x=(m=_)[0],v=m[1],P=m[2],(M=x*x+v*v+P*P)>0&&(M=1/Math.sqrt(M)),p[0]=m[0]*M,p[1]=m[1]*M,p[2]=m[2]*M,_;var p,m,x,v,P,M}static mat4MultiplyVec4(t,e,i){const s=e[0],r=e[1],o=e[2],a=e[3];return i[0]=t[0]*s+t[4]*r+t[8]*o+t[12]*a,i[1]=t[1]*s+t[5]*r+t[9]*o+t[13]*a,i[2]=t[2]*s+t[6]*r+t[10]*o+t[14]*a,i[3]=t[3]*s+t[7]*r+t[11]*o+t[15]*a,i}static raySphere(t,e){let i=-1;const s=m();M(s,t,gt.center);const r=A(e,s),o=r*r-(A(s,s)-gt.radius*gt.radius);if(o>0){const t=Math.sqrt(o),e=-r+t,s=-r-t;e<0&&s<0||(i=s<0?e:Math.min(e,s))}else if(0===o){const t=-r;t>=0&&(i=t)}return i}static getIntersectionPointWithSingleModel(t,e){const i=X.pMatrix,s=f.camera;if(!s)throw new Error("Camera is not initialized.");const r=_t.getRayFromMouse(t,e,i),o=_t.raySphere(s.getCameraPosition(),r);let a=[];if(o>=0){const t=m();y(t,r,o),P(t,s.getCameraPosition(),t);const e=[t[0],t[1],t[2],1],i=[0,0,0,0];_t.mat4MultiplyVec4(gt.getModelMatrixInverse(),e,i),a=[i[0],i[1],i[2]]}return a}}const ft=_t,pt=class{_xyz=null;_raDecDeg=null;_phiThetaDeg=null;raHMS;decDMS;constructor(t,e,i){null!=t&&(this._xyz=t),null!=e&&(this._raDecDeg=e),null!=i&&(this._phiThetaDeg=i),this._raDecDeg&&(this.raHMS=O(this._raDecDeg.ra),this.decDMS=H(this._raDecDeg.dec))}computeNpix(){if(!this._xyz)return null;const t=f.getHealpix(f.nsideForSelection),e=new a(this._xyz[0],this._xyz[1],this._xyz[2]),i=new s(e,!1);return t.ang2pix(i,!1)}update(t){const e=(i=t,Array.isArray(i)?S(i[0],i[1],i[2]):i);var i;const s=D(e),r=V(s.phi,s.theta);this._xyz=[e[0],e[1],e[2]],this._phiThetaDeg=s,this._raDecDeg=r,this.raHMS=O(r.ra),this.decDMS=H(r.dec)}clear(){this._xyz=null,this._raDecDeg=null,this._phiThetaDeg=null,this.raHMS=void 0,this.decDMS=void 0}get xyz(){return this._xyz}get x(){return this._xyz?this._xyz[0]:null}get y(){return this._xyz?this._xyz[1]:null}get z(){return this._xyz?this._xyz[2]:null}get ra(){return this._raDecDeg?this._raDecDeg.ra:null}get dec(){return this._raDecDeg?this._raDecDeg.dec:null}get phi(){return this._phiThetaDeg?this._phiThetaDeg.phi:null}get theta(){return this._phiThetaDeg?this._phiThetaDeg.theta:null}get raDecDeg(){return this._raDecDeg}get phiThetaDeg(){return this._phiThetaDeg}},mt={name:"native",r:[],g:[],b:[]},xt=class{_hips;_tileno;_baseurl;_order;_ready=!1;_format;_isGalacticHips;opacity=1;_hipsShaderIndex=0;_pixels=[];_texture=null;_image;_texurl="";vertexPosition;vertexPositionBuffer;vertexIndices;vertexIndexBuffer;constructor(t,e,i){this._hips=i,this._tileno=t,this._format=i.format,this._baseurl=i.baseURL,this._isGalacticHips=i.isGalacticHips,this._order=e,this.initImage()}destroyIntervals(){}initImage(){const t=1e4*Math.floor(this._tileno/1e4);this._texurl=`${this._baseurl}/Norder${this._order}/Dir${t}/Npix${this._tileno}.${this._format}`,this._image=new Image,this._image.onload=()=>this.imageLoaded(),this._image.onerror=()=>{console.error("File not found? %s",this._texurl)},this._image.crossOrigin="anonymous",this._image.src=this._texurl}imageLoaded(){this.textureLoaded(),this.initModelBuffer();const t=f.gl;t.activeTexture(t.TEXTURE0+this._hipsShaderIndex),t.bindTexture(t.TEXTURE_2D,this._texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this._image),this._ready=!0}textureLoaded(){ht.enableProgram();const t=f.gl;this._texture=t.createTexture(),t.activeTexture(t.TEXTURE0+this._hipsShaderIndex),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.uniform1i(ht.shaderProgram.samplerUniform,this._hipsShaderIndex),t.isTexture(this._texture)||console.log("error in texture")}initModelBuffer(){const t=f.gl;this.vertexPosition=[],this.vertexPositionBuffer=[],this.vertexIndices=new Uint16Array;const e=k.getRefOrder(this._order),i=f.getHealpix(this._order).nest2xyf(this._tileno),s=e-this._order,r=i.ix<<s,o=(i.ix<<s)+(1<<s),a=i.iy<<s,n=(i.iy<<s)+(1<<s),h=f.getHealpix(e);this._pixels=[],this.setupPositionAndTexture4Quadrant(r,o/2,a,n/2,0,h,s,i),this.setupPositionAndTexture4Quadrant(o/2,o,a,n/2,1,h,s,i),this.setupPositionAndTexture4Quadrant(r,o/2,n/2,n,2,h,s,i),this.setupPositionAndTexture4Quadrant(o/2,o,n/2,n,3,h,s,i);const l=this.vertexPosition[0].length/20;this.vertexIndices=this.computeVertexIndices(l),this.vertexIndexBuffer=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.vertexIndices,t.STATIC_DRAW)}computeVertexIndices(t){const e=new Uint16Array(6*t);let i=0;for(let s=0;s<t;s++)e[6*s]=i,e[6*s+1]=i+1,e[6*s+2]=i+2,e[6*s+3]=i+2,e[6*s+4]=i+3,e[6*s+5]=i,i+=4;return e}setupPositionAndTexture4Quadrant2(t,e,i,s,r,o,a,n){f.gl,this.vertexPosition[r]=new Float32Array(20*(e-t)*(s-i));const h=1/(1<<a);let l=0;for(let c=t;c<e;c++)for(let t=i;t<s;t++){const e=o.getPointsForXyfNoStep(c,t,n.face),i=t-(n.iy<<a),s=c-(n.ix<<a);this.vertexPosition[r][20*l]=e[0].x,this.vertexPosition[r][20*l+1]=e[0].y,this.vertexPosition[r][20*l+2]=e[0].z,this.vertexPosition[r][20*l+3]=h+h*i,this.vertexPosition[r][20*l+4]=1-(h+h*s),this.vertexPosition[r][20*l+5]=e[1].x,this.vertexPosition[r][20*l+6]=e[1].y,this.vertexPosition[r][20*l+7]=e[1].z,this.vertexPosition[r][20*l+8]=h+h*i,this.vertexPosition[r][20*l+9]=1-h*s,this.vertexPosition[r][20*l+10]=e[2].x,this.vertexPosition[r][20*l+11]=e[2].y,this.vertexPosition[r][20*l+12]=e[2].z,this.vertexPosition[r][20*l+13]=h*i,this.vertexPosition[r][20*l+14]=1-h*s,this.vertexPosition[r][20*l+15]=e[3].x,this.vertexPosition[r][20*l+16]=e[3].y,this.vertexPosition[r][20*l+17]=e[3].z,this.vertexPosition[r][20*l+18]=h*i,this.vertexPosition[r][20*l+19]=1-(h+h*s),l++}this.vertexPositionBuffer[r]=f.gl.createBuffer(),f.gl.bindBuffer(f.gl.ARRAY_BUFFER,this.vertexPositionBuffer[r]),f.gl.bufferData(f.gl.ARRAY_BUFFER,this.vertexPosition[r],f.gl.STATIC_DRAW)}setupPositionAndTexture4Quadrant(t,e,i,s,r,o,a,n){const h=f.gl;this.vertexPosition[r]=new Float32Array(20*(e-t)*(s-i));const l=1/(1<<a);let c=0;for(let h=t;h<e;h++)for(let t=i;t<s;t++){const e=o.xyf2nest(h,t,n.face);this._pixels.push(e);const i=o.getBoundaries(e),s=t-(n.iy<<a),d=h-(n.ix<<a);this.vertexPosition[r][20*c]=i[0].x,this.vertexPosition[r][20*c+1]=i[0].y,this.vertexPosition[r][20*c+2]=i[0].z,this.vertexPosition[r][20*c+3]=l+l*s,this.vertexPosition[r][20*c+4]=1-(l+l*d),this.vertexPosition[r][20*c+5]=i[1].x,this.vertexPosition[r][20*c+6]=i[1].y,this.vertexPosition[r][20*c+7]=i[1].z,this.vertexPosition[r][20*c+8]=l+l*s,this.vertexPosition[r][20*c+9]=1-l*d,this.vertexPosition[r][20*c+10]=i[2].x,this.vertexPosition[r][20*c+11]=i[2].y,this.vertexPosition[r][20*c+12]=i[2].z,this.vertexPosition[r][20*c+13]=l*s,this.vertexPosition[r][20*c+14]=1-l*d,this.vertexPosition[r][20*c+15]=i[3].x,this.vertexPosition[r][20*c+16]=i[3].y,this.vertexPosition[r][20*c+17]=i[3].z,this.vertexPosition[r][20*c+18]=l*s,this.vertexPosition[r][20*c+19]=1-(l+l*d),c++}this.vertexPositionBuffer[r]=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,this.vertexPositionBuffer[r]),h.bufferData(h.ARRAY_BUFFER,this.vertexPosition[r],h.STATIC_DRAW)}draw(t,e,i,s,r,o){if(!this._ready)return!1;let a=new Set([0,1,2,3]);if(t>this._order){const n=this.drawChildren(t,e,i,s,r,o);n&&(a=n)}ht.enableShaders(i,s,r,o);const n=f.gl;n.enableVertexAttribArray(ht.locations.vertexPositionAttribute),n.enableVertexAttribArray(ht.locations.textureCoordAttribute),n.activeTexture(n.TEXTURE0+this._hipsShaderIndex),n.bindTexture(n.TEXTURE_2D,this._texture),n.uniform1f(ht.locations.textureAlpha,this.opacity),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer);const h=this.vertexIndices.length;return a.forEach(t=>{n.bindBuffer(n.ARRAY_BUFFER,this.vertexPositionBuffer[t]),n.vertexAttribPointer(ht.locations.vertexPositionAttribute,3,n.FLOAT,!1,20,0),n.vertexAttribPointer(ht.locations.textureCoordAttribute,2,n.FLOAT,!1,20,12),n.drawElements(n.TRIANGLES,h,n.UNSIGNED_SHORT,0)}),n.disableVertexAttribArray(ht.locations.vertexPositionAttribute),n.disableVertexAttribArray(ht.locations.textureCoordAttribute),!0}drawChildren(t,e,i,s,r,o){const a=new Set([0,1,2,3]),n=this._order+1;if(e.has(n)){for(let h=0;h<4;h++){const l=(this._tileno<<2)+h;if(e.get(n).includes(l)){const h=this._isGalacticHips?ct.getGalTile(l,n,this._hips):ct.getTile(l,n,this._hips);h.draw(t,e,i,s,r,o),h._ready&&a.delete(h._tileno-(this._tileno<<2))}}return a}}};class vt{_ready=!1;_hips;_format;_baseurl;_isGalacticHips;_order=3;opacity=1;_hipsShaderIndex=0;_texture=null;_image;_texurl;_textureLoaded=!1;_maxTiles=0;_numFacesXTile=0;_numFaces=0;vertexPosition;vertexPositionBuffer;vertexIndexBuffer;vidx=0;constructor(t){this._hips=t,this._format=t.format,this._baseurl=t.baseURL,this._isGalacticHips=t.isGalacticHips,this.initImage()}initImage(){this._image=new Image,this._texurl=`${this._baseurl}/Norder3/Allsky.${this._format}`,this._image.onload=()=>this.imageLoaded(),this._image.onerror=()=>{console.error("File not found? %s",this._texurl)},this._image.setAttribute("crossorigin","anonymous"),this._image.src=this._texurl}imageLoaded(){this.textureLoaded(),this.initModelBuffer(),this._textureLoaded=!0,this._ready=!0}textureLoaded(){ht.enableProgram();const t=f.gl;this._texture=t.createTexture(),t.activeTexture(t.TEXTURE0+this._hipsShaderIndex),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.bindTexture(t.TEXTURE_2D,this._texture),t.isTexture(this._texture)||console.log("error in texture"),t.activeTexture(t.TEXTURE0+this._hipsShaderIndex),t.bindTexture(t.TEXTURE_2D,this._texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this._image),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.generateMipmap(t.TEXTURE_2D)}initModelBuffer(){const t=f.gl,e=f.getHealpix(this._order);this._maxTiles=e.getNPix();const i=this._order+1,s=f.getHealpix(this._order),r=f.getHealpix(i);this._numFacesXTile=4,this._numFaces=this._numFacesXTile*this._maxTiles,this.vertexPosition=new Float32Array(20*this._numFaces);let o=0,a=0;this.vidx=0;for(let t=0;t<this._maxTiles;t++){const e=s.nest2xyf(t),i=e.ix<<1,n=2+(e.ix<<1),h=e.iy<<1,l=2+(e.iy<<1);this.setupPositionAndTexture4Quadrant(o,a,i,i+(n-i)/2,h,h+(l-h)/2,r,e,0,0),this.setupPositionAndTexture4Quadrant(o,a,i+(n-i)/2,n,h,h+(l-h)/2,r,e,0,1),this.setupPositionAndTexture4Quadrant(o,a,i,i+(n-i)/2,h+(l-h)/2,l,r,e,1,0),this.setupPositionAndTexture4Quadrant(o,a,i+(n-i)/2,n,h+(l-h)/2,l,r,e,1,1),o++,27===o&&(a++,o=0)}const n=new Uint16Array(6*this._numFaces);let h=0;for(let t=0;t<this._numFaces;t++)n[6*t]=h,n[6*t+1]=h+1,n[6*t+2]=h+3,n[6*t+3]=h+1,n[6*t+4]=h+2,n[6*t+5]=h+3,h+=4;this.vertexPositionBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.vertexPositionBuffer),t.bufferData(t.ARRAY_BUFFER,this.vertexPosition,t.STATIC_DRAW),this.vertexIndexBuffer=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)}setupPositionAndTexture4Quadrant(t,e,i,s,r,o,a,n,h,l){let c=[];const d=2**(a.order-3),u=1/(27*d),g=1/(29*d),_=u/64,f=g/64,p=d*u*t+u*h,m=d*g*e+g*l;for(let t=i;t<s;t++)for(let e=r;e<o;e++)c=a.getPointsForXyfNoStep(t,e,n.face),this.vertexPosition[20*this.vidx]=c[0].x,this.vertexPosition[20*this.vidx+1]=c[0].y,this.vertexPosition[20*this.vidx+2]=c[0].z,this.vertexPosition[20*this.vidx+3]=u+p-_,this.vertexPosition[20*this.vidx+4]=1-(g+m)+f,this.vertexPosition[20*this.vidx+5]=c[1].x,this.vertexPosition[20*this.vidx+6]=c[1].y,this.vertexPosition[20*this.vidx+7]=c[1].z,this.vertexPosition[20*this.vidx+8]=u+p-_,this.vertexPosition[20*this.vidx+9]=1-m-f,this.vertexPosition[20*this.vidx+10]=c[2].x,this.vertexPosition[20*this.vidx+11]=c[2].y,this.vertexPosition[20*this.vidx+12]=c[2].z,this.vertexPosition[20*this.vidx+13]=p+_,this.vertexPosition[20*this.vidx+14]=1-m-f,this.vertexPosition[20*this.vidx+15]=c[3].x,this.vertexPosition[20*this.vidx+16]=c[3].y,this.vertexPosition[20*this.vidx+17]=c[3].z,this.vertexPosition[20*this.vidx+18]=p+_,this.vertexPosition[20*this.vidx+19]=1-(g+m)+f,this.vidx++}draw(t,e,i,s,r,o){if(!this._ready)return!1;let a=[];if(t>=this._order){const n=this.drawChildren(t,e,i,s,r,o);n&&(a=n)}const n=f.gl;ht.enableShaders(i,s,r,o),n.enableVertexAttribArray(ht.locations.vertexPositionAttribute),n.enableVertexAttribArray(ht.locations.textureCoordAttribute),n.activeTexture(n.TEXTURE0+this._hipsShaderIndex),n.bindTexture(n.TEXTURE_2D,this._texture),n.uniform1f(ht.locations.textureAlpha,this.opacity),n.bindBuffer(n.ARRAY_BUFFER,this.vertexPositionBuffer),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer),n.vertexAttribPointer(ht.locations.vertexPositionAttribute,3,n.FLOAT,!1,20,0),n.vertexAttribPointer(ht.locations.textureCoordAttribute,2,n.FLOAT,!1,20,12);for(let t=0;t<this._maxTiles;t++)a.includes(t)||n.drawElements(n.TRIANGLES,6*this._numFacesXTile,n.UNSIGNED_SHORT,12*t*this._numFacesXTile);return n.disableVertexAttribArray(ht.locations.vertexPositionAttribute),n.disableVertexAttribArray(ht.locations.textureCoordAttribute),!0}drawChildren(t,e,i,s,r,o){const a=this._order;if(!e.has(a))return;const n=e.get(a),h=[];for(let l=0;l<n.length;l++){const c=n[l],d=this._isGalacticHips?ct.getGalTile(c,a,this._hips):ct.getTile(c,a,this._hips);d.draw(t,e,i,s,r,o),d.getReadyState()&&h.push(c)}return h}}const St=class extends q{_ancestorTiles;_allSkyTile;_format;_baseurl;_maxorder;_minorder;_visibleorder=3;_allSky=!0;samplerIdx=0;colorMapIdx=0;colorMap=mt;get maxOrder(){return this._maxorder}get minOrder(){return this._minorder}get baseURL(){return this._baseurl}get format(){return this._format}constructor(t,e,i,s,r){super(t,e,i,s,r.surveyName,r.isGalactic),this.initGL(f.gl),ct.addHiPS(this),console.log("HiPS frame "+r.hipsFrame),console.log("HiPS minOrder "+r.minOrder),this._format=r.imgFormats[0],this._baseurl=r.url,this._maxorder=r.maxOrder,this._minorder=r.minOrder,this.initShaders();let o=k.getHiPSNorder(180);if(this._visibleorder=Math.min(o,this._maxorder),this._ancestorTiles=[],this._allSkyTile=null,this._allSky=!0,this._allSky)this._allSkyTile=new vt(this);else for(let t=0;t<12;t++)this._ancestorTiles.push(new xt(t,0,this))}changeFormat(t){this._format=t,this._tileBuffer?.clearAll&&this._tileBuffer.clearAll(),this._tileBuffer&&(this._tileBuffer._format=this._format);const e=this.isGalacticHips?dt.galVisibleTilesByOrder:dt.visibleTilesByOrder;this._tileBuffer?.updateTiles&&this._tileBuffer.updateTiles(e.pixels,e.order)}changeColorMap(t){switch(this.colorMap=t,t.name){case"grayscale":this.colorMapIdx=1,ht.setGrayscaleShader();break;case"planck":this.colorMapIdx=2,ht.setColorMapShader();break;case"cmb":this.colorMapIdx=3,ht.setColorMapShader();break;case"rainbow":this.colorMapIdx=4,ht.setColorMapShader();break;case"eosb":this.colorMapIdx=5,ht.setColorMapShader();break;case"cubehelix":this.colorMapIdx=6,ht.setColorMapShader();break;default:this.colorMapIdx=0,ht.setNativeShader()}}initShaders(){ht.enableProgram(),this.shaderProgram=ht.shaderProgram}getCurrentHealpixOrder(){return this._visibleorder}refresh(){const t=gt.getMinFoV();this._visibleorder=Math.min(k.getHiPSNorder(t),this._maxorder)}draw(){if(!f.camera||void 0===f.camera.getCameraMatrix())return;this.refresh();const t=f.camera.getCameraMatrix(),e=X.pMatrix,i=this.getModelMatrix();if(this._allSky&&this._allSkyTile)return void(this.isGalacticHips?this._allSkyTile.draw(dt.galVisibleTilesByOrder.order,dt.galAncestorsMap,e,t,i,this.colorMapIdx):this._allSkyTile.draw(dt.visibleTilesByOrder.order,dt.ancestorsMap,e,t,i,this.colorMapIdx));const s=this.isGalacticHips?dt.galVisibleTilesByOrder.order:dt.visibleTilesByOrder.order,r=this.isGalacticHips?dt.galAncestorsMap:dt.ancestorsMap;this._ancestorTiles.forEach(o=>{o.draw(s,r,e,t,i,this.colorMapIdx)})}},Pt=class{_name;_description;_unit;_dataType;_ucd;_uType;_index;constructor(t,e,i,s,r,o){this._name=t,this._description=e,this._unit=i,this._dataType=s,this._ucd=r,this._uType=o}get name(){return this._name}get description(){return this._description}get unit(){return this._unit}get datatype(){return this._dataType}get ucd(){return this._ucd}get uType(){return this._uType}get index(){return this._index}set index(t){this._index=t}},Mt=class{_posEqRAMetaColumns;_posEqDecMetaColumns;_sRegionMetaColumns;_pgSphereMetaColumns;_metadataList;constructor(){this._metadataList=[],this._posEqRAMetaColumns=[],this._posEqDecMetaColumns=[],this._sRegionMetaColumns=[],this._pgSphereMetaColumns=[]}addMetadata(t){const e=this._metadataList.push(t)-1;t.index=e,t.ucd?.includes("pos.eq.ra")?this._posEqRAMetaColumns.push(t):t.ucd?.includes("pos.eq.dec")&&this._posEqDecMetaColumns.push(t),t.ucd?.includes("pos.outline;meta.pgsphere")&&this._pgSphereMetaColumns.push(t),(t.uType?.includes("Char.SpatialAxis.Coverage.Support.Area")||t.datatype?.includes("adql:REGION")||t.ucd?.includes("pos.outline;obs.field")||"stc_s"===t.name)&&this._sRegionMetaColumns.push(t)}get metadataList(){return this._metadataList}set metadataList(t){this._metadataList=t}get pgSphereMetaColumns(){return this._pgSphereMetaColumns}get sRegionMetaColumns(){return this._sRegionMetaColumns}get posEqRAMetaColumns(){return this._posEqRAMetaColumns}get posEqDecMetaColumns(){return this._posEqDecMetaColumns}};class yt{_adqlFunctionList;_cataloguesList;_observationsList;_notClassified;_activeObservations;_activeCatalogues;_tapBaseURL;constructor(t){this._tapBaseURL=t,this._cataloguesList=[],this._observationsList=[],this._notClassified=[],this._activeObservations=[],this._activeCatalogues=[],this._adqlFunctionList=[]}get tapBaseUrl(){return this._tapBaseURL}setCataloguesList(t){this._cataloguesList=t}setObservationsList(t){this._observationsList=t}setNotClassifiedList(t){this._notClassified=t}setCatalogueActive(t){this._activeCatalogues.push(t)}setObservationActive(t){this._activeObservations.push(t)}get cataloguesList(){return this._cataloguesList}get observationsList(){return this._observationsList}set adqlFunctionList(t){void 0!==t&&(this._adqlFunctionList=t)}get adqlFunctionList(){return this._adqlFunctionList}}function At(t){return t?.name??t?.name}function Et(t,e){return!(!t||!e)&&At(t)===e}class Ct{static STANDARD_SIZE="STANDARD_SIZE";raColumn;decColumn;nameColumn;shapeSizeColumn;shapeHueColumn;shapeColor;tapMetadataList;constructor(t,e){this.raColumn=this.setRAColumns(t),this.decColumn=this.setDecColumns(t),this.nameColumn=this.setNameColumn(t),this.shapeSizeColumn=void 0,this.shapeHueColumn=void 0,this.shapeColor=e,this.tapMetadataList=t}updateColumnsIndex(t){for(const e of t)Et(this.raColumn,At(e))?this.raColumn=e:Et(this.decColumn,At(e))?this.decColumn=e:this.shapeHueColumn&&Et(this.shapeHueColumn,At(e))?this.shapeHueColumn=e:this.shapeSizeColumn&&Et(this.shapeSizeColumn,At(e))?this.shapeSizeColumn=e:this.nameColumn&&Et(this.nameColumn,At(e))&&(this.nameColumn=e);this.tapMetadataList.metadataList=t}setRAColumns(t){let e;for(const i of t.posEqRAMetaColumns){const t=i.ucd;if(t&&t.includes("pos.eq.ra")){if(t.includes("meta.main")){e=i;break}e||(e=i)}}if(!e)throw new Error("No RA column found (UCD pos.eq.ra) in _posEqRAMetaColumns");return e}setDecColumns(t){let e;for(const i of t.posEqDecMetaColumns){const t=i.ucd;if(t&&t.includes("pos.eq.dec")){if(t.includes("meta.main")){e=i;break}e||(e=i)}}if(!e)throw new Error("No Dec column found (UCD pos.eq.dec) in _posEqDecMetaColumns");return e}setNameColumn(t){let e;for(const i of t.metadataList){const t=i.ucd;t&&t.includes("meta.id")&&t.includes("meta.main")&&(e=i)}return e}changeColor(t){this.shapeColor=t}changeMetaName(t){if(!this.nameColumn||At(this.nameColumn)!==t)for(const e of this.tapMetadataList.metadataList)if(At(e)===t){this.nameColumn=e;break}}changeCatalogueMetaRA(t){if(At(this.raColumn)!==t)for(const e of this.tapMetadataList.metadataList)if(At(e)===t){this.raColumn=e;break}return!0}changeCatalogueMetaDec(t){if(At(this.decColumn)!==t)for(const e of this.tapMetadataList.metadataList)if(At(e)===t){this.decColumn=e;break}return!0}resetCatalogueMetaShapeSize(){this.shapeSizeColumn=void 0}changeCatalogueMetaShapeSize(t){if(!this.shapeSizeColumn||At(this.shapeSizeColumn)!==t)for(const e of this.tapMetadataList.metadataList)if(At(e)===t){this.shapeSizeColumn=e;break}}resetCatalogueMetaShapeHue(){this.shapeHueColumn=void 0}changeCatalogueMetaShapeHue(t){if(!this.shapeHueColumn||At(this.shapeHueColumn)!==t)for(const e of this.tapMetadataList.metadataList)if(At(e)===t){this.shapeHueColumn=e;break}}}const Tt=class{_point;_name;_details;_h_pix;_shapesize;_brightnessFactor;constructor(t,e=[]){this._point=t,this._details=e,this._shapesize=8,this._brightnessFactor=-99,this.computeHealpixPixel()}getDetailByindex(t){if(!(t<0||t>=this._details.length))return this._details[t]}get details(){return this._details}computeHealpixPixel(){const t=f.getHealpix(f.nsideForSelection),e=new a(this._point.x,this._point.y,this._point.z),i=new s(e,!1);this._h_pix=t.ang2pix(i,!1)}get point(){return this._point}get name(){return this._name}get healpixPixel(){return this._h_pix}get shapeSize(){return this._shapesize}set shapeSize(t){this._shapesize=t}get brightnessFactor(){return this._brightnessFactor}set brightnessFactor(t){this._brightnessFactor=t}},bt=new class{_shaderProgram;_vertexShader;_fragmentShader;gl_uniforms;gl_attributes;locations;constructor(){this.gl_uniforms={vertex_color:"u_fragcolor",m_perspective:"uPMatrix",m_model_view:"uMVMatrix"},this.gl_attributes={vertex_pos:"aCatPosition",vertex_selected:"a_selected",point_size:"a_pointsize",point_hue:"a_brightness"},this.locations={pMatrix:null,mvMatrix:null,color:null,position:-1,hovered:-1,pointSize:-1,brightness:-1}}get shaderProgram(){if(!this._shaderProgram){const t=f.gl;this._shaderProgram=t.createProgram(),this.initShaders()}return this._shaderProgram}initShaders(){const t=f.gl,e=at.catalogueFS();if(this._fragmentShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(this._fragmentShader,e),t.compileShader(this._fragmentShader),console.log("FS log:",t.getShaderInfoLog(this._fragmentShader)||"ok"),!t.getShaderParameter(this._fragmentShader,t.COMPILE_STATUS))return void alert(t.getShaderInfoLog(this._fragmentShader)||"Fragment shader compile error");const i=at.catalogueVS();this._vertexShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(this._vertexShader,i),t.compileShader(this._vertexShader),console.log("VS log:",t.getShaderInfoLog(this._vertexShader)||"ok"),t.getShaderParameter(this._vertexShader,t.COMPILE_STATUS)?(t.attachShader(this.shaderProgram,this._vertexShader),t.attachShader(this.shaderProgram,this._fragmentShader),t.linkProgram(this.shaderProgram),t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)||alert("Could not initialise shaders"),t.useProgram(this.shaderProgram),this.locations.position=t.getAttribLocation(this.shaderProgram,this.gl_attributes.vertex_pos),this.locations.hovered=t.getAttribLocation(this.shaderProgram,this.gl_attributes.vertex_selected),this.locations.pointSize=t.getAttribLocation(this.shaderProgram,this.gl_attributes.point_size),this.locations.brightness=t.getAttribLocation(this.shaderProgram,this.gl_attributes.point_hue),this.locations.color=t.getUniformLocation(this.shaderProgram,this.gl_uniforms.vertex_color)):alert(t.getShaderInfoLog(this._vertexShader)||"Vertex shader compile error")}enableShaders(t,e,i){const s=f.gl;s.useProgram(this.shaderProgram),this.locations.pMatrix=s.getUniformLocation(this.shaderProgram,this.gl_uniforms.m_perspective),this.locations.mvMatrix=s.getUniformLocation(this.shaderProgram,this.gl_uniforms.m_model_view);let r=C();r=F(r,i,e),s.uniformMatrix4fv(this.locations.pMatrix,!1,t),s.uniformMatrix4fv(this.locations.mvMatrix,!1,r)}};class It{static ELEM_SIZE;static BYTES_X_ELEM;static STANDARD_SHAPE_SIZE=8;static STANDARD_SHAPE_HUE=3;ready;catalogueProps;name;description;tapRepo;sources;gl;vertexCataloguePositionBuffer;vertexhoveredCataloguePositionBuffer;vertexCataloguePosition;hoveredIndexes;selectedIndexes;extHoveredIndexes;oldMouseCoords;_isVisible=!0;healpixDensityMap;constructor(t,e,i,s){this.ready=!1,this.TYPE="SOURCE_CATALOGUE",It.ELEM_SIZE=6,It.BYTES_X_ELEM=(new Float32Array).BYTES_PER_ELEMENT,this.name=t,this.description=e,this.tapRepo=i,this.sources=[],this.gl=f.gl,this.vertexCataloguePositionBuffer=this.gl.createBuffer(),this.vertexhoveredCataloguePositionBuffer=this.gl.createBuffer(),this.vertexCataloguePosition=new Float32Array(0),this.hoveredIndexes=[],this.selectedIndexes=[],this.extHoveredIndexes=[],this.oldMouseCoords=null,this.healpixDensityMap=new Map,this.catalogueProps=new Ct(s,"#8F00FF"),bt.shaderProgram,this._isVisible=!0}setIsVisible(t){this._isVisible=t}get isVisible(){return this._isVisible}minMax(t){if(!this.sources.length)return{min:0,max:0};let e=this.sources[0].details[t];if(isNaN(Number(e)))return console.warn(`${this.catalogueProps.tapMetadataList.metadataList[t].name} doesn't contain only number values`),{min:0,max:0};let i=e;for(const s of this.sources){const r=s.details[t];if(isNaN(Number(r)))return console.warn(`${this.catalogueProps.tapMetadataList.metadataList[t].name} doesn't contain number only values`),{min:0,max:0};r<e&&(e=r),r>i&&(i=r)}return{min:Number(e),max:Number(i)}}changeCatalogueMetaShapeSize(t){if(t==Ct.STANDARD_SIZE){this.catalogueProps.resetCatalogueMetaShapeSize();for(const t of this.sources){const e=It.STANDARD_SHAPE_SIZE;t.shapeSize=e}return void this.initBuffer()}const e=this.catalogueProps.shapeSizeColumn?.name;this.catalogueProps.changeCatalogueMetaShapeSize(t);const i=this.catalogueProps.shapeSizeColumn?.index??this.catalogueProps.shapeSizeColumn?.index;if(null==i)return void(e&&this.catalogueProps.changeCatalogueMetaShapeSize(e));const s=this.minMax(i);if(s.min!=s.max){for(const t of this.sources){const e=Number(t.getDetailByindex(i)),r=Number(s.min),o=Number(s.max),a=(e-r)/Math.max(1e-12,o-r)*12+8;t.shapeSize=a}this.initBuffer()}else console.warn(`${s} min and max are equals. No resizing will be applied.`)}changeCatalogueMetaShapeHue(t){if(t==Ct.STANDARD_SIZE){this.catalogueProps.resetCatalogueMetaShapeHue();for(const t of this.sources){const e=It.STANDARD_SHAPE_HUE;t.brightnessFactor=e}return void this.initBuffer()}const e=this.catalogueProps.shapeHueColumn?.name;this.catalogueProps.changeCatalogueMetaShapeHue(t);const i=this.catalogueProps.shapeHueColumn?.index??this.catalogueProps.shapeHueColumn?.index;if(null==i)return void(e&&this.catalogueProps.changeCatalogueMetaShapeHue(e));const s=this.minMax(i);if(s.min!=s.max){for(const t of this.sources){const e=Number(t.getDetailByindex(i)),r=Number(s.min),o=Number(s.max),a=(e-r)/Math.max(1e-12,o-r);t.brightnessFactor=-(2*a-1)}this.initBuffer()}else console.warn(`${s} min and max are equals. No resizing will be applied.`)}addSource(t){this.sources.push(t)}addSources(t,e){this.ready=!1,this.sources=[];const i=this.catalogueProps.raColumn.index??this.catalogueProps.raColumn._index,s=this.catalogueProps.decColumn.index??this.catalogueProps.decColumn._index;for(let e=0;e<t.length;e++){const r=new Q({raDeg:t[e][i],decDeg:t[e][s]},j.ASTRO),o=new Tt(r,t[e]);o.shapeSize=o.shapeSize??It.STANDARD_SHAPE_SIZE,o.brightnessFactor=3,this.addSource(o)}this.initBuffer(),this.ready=!0}clearSources(){this.sources=[],this.hoveredIndexes=[],this.healpixDensityMap.clear(),this.vertexCataloguePosition=new Float32Array(0)}extHighlightSource(t,e){const i=this.sources.indexOf(t);if(!(i<0))if(e)this.extHoveredIndexes.includes(i)||this.extHoveredIndexes.push(i);else{const t=this.extHoveredIndexes.indexOf(i);t>=0&&this.extHoveredIndexes.splice(t,1)}}extAddSources2Selected(t){for(const e of t){const t=this.sources.indexOf(e);t>=0&&!this.selectedIndexes.includes(t)&&this.selectedIndexes.push(t)}}extRemoveSourceFromSelection(t){const e=this.sources.indexOf(t);if(e<0)return;const i=this.selectedIndexes.indexOf(e);i>=0&&this.selectedIndexes.splice(i,1);const s=this.extHoveredIndexes.indexOf(e);s>=0&&this.extHoveredIndexes.splice(s,1),this.vertexCataloguePosition.length>=(e+1)*It.ELEM_SIZE&&(this.vertexCataloguePosition[e*It.ELEM_SIZE+3]=0)}initBuffer(){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexCataloguePositionBuffer);const t=this.sources.length;this.vertexCataloguePosition=new Float32Array(t*It.ELEM_SIZE);let e=0;for(let i=0;i<t;i++){const t=this.sources[i],s=t.healpixPixel,r=this.healpixDensityMap.get(s);r?r.includes(i)||r.push(i):this.healpixDensityMap.set(s,[i]),this.vertexCataloguePosition[e+0]=t.point.x,this.vertexCataloguePosition[e+1]=t.point.y,this.vertexCataloguePosition[e+2]=t.point.z,this.vertexCataloguePosition[e+3]=0,this.vertexCataloguePosition[e+4]=t.shapeSize??It.STANDARD_SHAPE_SIZE,this.vertexCataloguePosition[e+5]=t.brightnessFactor??0,e+=It.ELEM_SIZE}this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertexCataloguePosition,this.gl.STATIC_DRAW)}getSelectionRadius(){switch(dt.getVisibleOrder()){case 0:case 1:case 2:return.005;case 3:return.001;case 4:return 9e-4;case 5:return 5e-4;case 6:return 1e-4;case 7:return 9e-5;case 8:return 5e-5;case 9:return 1e-5;default:return 5e-6}}checkSelection(t){if(null==t.x||null==t.y||null==t.z)return console.log("CatalogueGL.checkSelection: missing mouse coords"),[];const e=[],i=[],s=t.computeNpix();if(null!=s&&this.healpixDensityMap.has(s)){const r=this.healpixDensityMap.get(s),o=this.getSelectionRadius();for(let s=0;s<r.length;s++){const a=r[s],n=this.sources[a];if(!n)continue;const h=n.point.x-t.x,l=n.point.y-t.y,c=n.point.z-t.z;Math.sqrt(h*h+l*l+c*c)<=o&&(e.push(a),i.push(n))}}return e}draw(t,e){if(!this.isVisible)return;if(!this.ready)return;if(!f.camera)return;bt.enableShaders(X.pMatrix,t,f.camera.getCameraMatrix()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexCataloguePositionBuffer),this.gl.vertexAttribPointer(bt.locations.position,3,this.gl.FLOAT,!1,It.BYTES_X_ELEM*It.ELEM_SIZE,0),this.gl.enableVertexAttribArray(bt.locations.position),this.gl.vertexAttribPointer(bt.locations.hovered,1,this.gl.FLOAT,!1,It.BYTES_X_ELEM*It.ELEM_SIZE,3*It.BYTES_X_ELEM),this.gl.enableVertexAttribArray(bt.locations.hovered),this.gl.vertexAttribPointer(bt.locations.pointSize,1,this.gl.FLOAT,!1,It.BYTES_X_ELEM*It.ELEM_SIZE,4*It.BYTES_X_ELEM),this.gl.enableVertexAttribArray(bt.locations.pointSize),this.gl.vertexAttribPointer(bt.locations.brightness,1,this.gl.FLOAT,!1,It.BYTES_X_ELEM*It.ELEM_SIZE,5*It.BYTES_X_ELEM),this.gl.enableVertexAttribArray(bt.locations.brightness);const i=L(this.catalogueProps.shapeColor);if(bt.locations.color&&this.gl.uniform4f(bt.locations.color,i[0],i[1],i[2],1),null!=e&&e.xyz!==this.oldMouseCoords){for(let t=0;t<this.hoveredIndexes.length;t++){const e=this.hoveredIndexes[t]*It.ELEM_SIZE;this.vertexCataloguePosition[e+3]=0,this.vertexCataloguePosition[e+4]=this.sources[this.hoveredIndexes[t]].shapeSize}this.hoveredIndexes=this.checkSelection(e);for(let t=0;t<this.hoveredIndexes.length;t++){const e=this.hoveredIndexes[t],i=e*It.ELEM_SIZE;this.vertexCataloguePosition[i+3]=1,this.vertexCataloguePosition[i+4]=this.sources[e].shapeSize}}for(let t=0;t<this.selectedIndexes.length;t++){const e=this.selectedIndexes[t],i=e*It.ELEM_SIZE;this.vertexCataloguePosition[i+3]=2,this.vertexCataloguePosition[i+4]=this.sources[e].shapeSize}for(let t=0;t<this.extHoveredIndexes.length;t++){const e=this.extHoveredIndexes[t],i=e*It.ELEM_SIZE;this.vertexCataloguePosition[i+3]=1,this.vertexCataloguePosition[i+4]=this.sources[e].shapeSize}this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertexCataloguePosition,this.gl.STATIC_DRAW);const s=this.vertexCataloguePosition.length/It.ELEM_SIZE;this.gl.drawArrays(this.gl.POINTS,0,s),this.oldMouseCoords=e.xyz}}const Ft=It;class Rt{static parseSTCS(t){const e=Rt.cleanStcs(t);return e.includes("POLYGON")?Rt.parsePolygon(e):e.includes("CIRCLE")?Rt.parseCircle(e):(console.warn("STCS not recognised"),{totpoints:0,polygons:[]})}static cleanStcs(t){let e=t.toUpperCase();return e=e.replace(/'ICRS'/g,"").replace(/\bICRS\b/g,"").replace(/\bJ2000\b/g,"").replace(/\bUNION\b/g,"").replace(/\bTOPOCENTER\b/g,""),e=e.replace(/[()]/g,""),e=e.replace(/ {2,}/g," ").trim(),e}static parsePolygon(t){let e=0;const i=[],s=f.MAX_DECIMALS??12,r=t.split("POLYGON ");for(let t=1;t<r.length;t++){const o=[],a=r[t].trim().split(" "),n=Number(parseFloat(a[0]).toFixed(s)),h=Number(parseFloat(a[1]).toFixed(s)),l=Number(parseFloat(a[a.length-2]).toFixed(s)),c=Number(parseFloat(a[a.length-1]).toFixed(s));if(n===l&&h===c&&a.splice(a.length-2,2),a.length>2){for(let t=0;t<a.length-1;t+=2){const i=Number(parseFloat(a[t]).toFixed(s)),r=Number(parseFloat(a[t+1]).toFixed(s)),n=new Q({raDeg:i,decDeg:r},j.ASTRO);o.push(n),e+=1}i.push(o)}}return{totpoints:e,polygons:i}}static parseCircle(t){let e=0;const i=[],s=t.split("CIRCLE ");for(let t=1;t<s.length;t++){const r=[],o=s[t].trim().split(" "),a=Number(o[0]),n=Number(o[1]),h=Number(o[2]),l=24,c=2*Math.PI/l;for(let t=l;t>0;t--){const i=h*Math.cos(t*c)+a,s=h*Math.sin(t*c)+n,o=new Q({raDeg:i,decDeg:s},j.ASTRO);r.push(o),e+=1}i.push(r)}return{totpoints:e,polygons:i}}}const wt=Rt,Dt=class{_polygons=[];_convexPolygons=[];_stcs;_valid=!1;_details;_totPoints=0;_totConvexPoints=0;_npix256;_footprintsPointsOrder;_selectionObj;_identifier;_center;constructor(t,e=[],i){t?(this._stcs=t.toUpperCase(),this._details=e,this._totPoints=0,this._totConvexPoints=0,this._footprintsPointsOrder=i,this.computePoints(),this._selectionObj=this.computeSelectionObject(),this._valid=!0):this._details=[]}computeSelectionObject(){return rt.computeSelectionObject(this._polygons)}computePoints(){const t=wt.parseSTCS(this._stcs);this._polygons=t.polygons,this._totPoints=t.totpoints}get valid(){return this._valid}get totPoints(){return this._totPoints}get totConvexPoints(){return this._totConvexPoints}get polygons(){return this._polygons}get convexPolygons(){return this._convexPolygons}get identifier(){return this._identifier}get center(){return this._center}get pixels(){return this._npix256}get details(){return this._details}get selectionObj(){return this._selectionObj}};class Lt{pgSphereColumn;geomColumn;raColumn;decColumn;nameColumn;shapeColor;tapMetadataList;constructor(t,e){this.tapMetadataList=t,this.shapeColor=e,this.setPositionColumns(t),this.nameColumn=this.setNameColumn(t)}setPositionColumns(t){for(const e of t.pgSphereMetaColumns)this.pgSphereColumn=e;for(const e of t.sRegionMetaColumns){if(e.ucd&&e.ucd.includes("pos.outline;obs.field")){this.geomColumn=e;break}this.geomColumn||(this.geomColumn=e)}for(const e of t.posEqRAMetaColumns){if(e.ucd&&e.ucd.includes("meta.main")){this.raColumn=e;break}this.raColumn||(this.raColumn=e)}const e=t.posEqDecMetaColumns?.length?t.posEqDecMetaColumns:t.posEqDecMetaColumns??[];for(const t of e){if(t.ucd&&t.ucd.includes("meta.main")){this.decColumn=t;break}this.decColumn||(this.decColumn=t)}}setNameColumn(t){let e;for(const i of t.metadataList)i.ucd?.includes("meta.id")&&i.ucd?.includes("meta.main")&&(e=i);return e}changeColor(t){this.shapeColor=t}changeMetaName(t){if(this.getMetaName(this.nameColumn)!==t)for(const e of this.tapMetadataList.metadataList)if(this.getMetaName(e)===t){this.nameColumn=e;break}}getMetaName(t){return t?.name??t?.name}}const Bt=new class{_shaderProgram;_vertexShader;_fragmentShader;gl_uniforms;gl_attributes;locations;constructor(){this.gl_uniforms={vertex_color:"u_fragcolor",m_perspective:"uPMatrix",m_model_view:"uMVMatrix",point_size:"u_pointsize"},this.gl_attributes={vertex_pos:"aCatPosition"},this.locations={pMatrix:null,mvMatrix:null,color:null,position:-1,pointSize:-1}}get shaderProgram(){if(!this._shaderProgram){const t=f.gl;this._shaderProgram=t.createProgram(),this.initShaders()}return this._shaderProgram}initShaders(){const t=f.gl,e=at.footprintFS();if(this._fragmentShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(this._fragmentShader,e),t.compileShader(this._fragmentShader),console.log("FS log:",t.getShaderInfoLog(this._fragmentShader)||"ok"),!t.getShaderParameter(this._fragmentShader,t.COMPILE_STATUS))return void alert(t.getShaderInfoLog(this._fragmentShader)||"Fragment shader compile error");const i=at.footprintVS();this._vertexShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(this._vertexShader,i),t.compileShader(this._vertexShader),console.log("VS log:",t.getShaderInfoLog(this._vertexShader)||"ok"),t.getShaderParameter(this._vertexShader,t.COMPILE_STATUS)?(t.attachShader(this.shaderProgram,this._vertexShader),t.attachShader(this.shaderProgram,this._fragmentShader),t.linkProgram(this.shaderProgram),t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)||alert("Could not initialise shaders"),t.useProgram(this.shaderProgram),this.locations.position=t.getAttribLocation(this.shaderProgram,this.gl_attributes.vertex_pos),this.locations.pointSize=t.getUniformLocation(this.shaderProgram,this.gl_uniforms.point_size),this.locations.color=t.getUniformLocation(this.shaderProgram,this.gl_uniforms.vertex_color)):alert(t.getShaderInfoLog(this._vertexShader)||"Vertex shader compile error")}enableShaders(t,e,i){const s=f.gl;s.useProgram(this.shaderProgram),this.locations.pMatrix=s.getUniformLocation(this.shaderProgram,this.gl_uniforms.m_perspective),this.locations.mvMatrix=s.getUniformLocation(this.shaderProgram,this.gl_uniforms.m_model_view);let r=C();r=F(r,i,e),s.uniformMatrix4fv(this.locations.pMatrix,!1,t),s.uniformMatrix4fv(this.locations.mvMatrix,!1,r)}};class Nt{static ELEM_SIZE=3;static BYTES_X_ELEM=(new Float32Array).BYTES_PER_ELEMENT;static CONVEXPOLY_ELEM_SIZE=3;ready;footprintsetProps;name;description;tapRepo;extHoveredIndexes;oldMouseCoords;healpixDensityMap;totConvexPoints;gl;vertexCataloguePositionBuffer;indexBuffer;hoveredVertexPositionBuffer;hoveredIndexBuffer;selectedVertexPositionBuffer;selectedIndexBuffer;indexes;footprintPolygons=[];vertexCataloguePosition;totPoints;nPrimitiveFlags=0;hoveredIndexes;_hoveredFootprints=[];hoveredVertexPosition;totHoveredPoints;nHoveredPrimitiveFlags=0;selectedIndexes;_selectedFootprints=[];selectedVertexPosition;totSelectedPoints;nSlectedPrimitiveFlags=0;_isVisible=!0;constructor(t,e,i,s){if(this.ready=!1,this.TYPE="FOOTPRINT_SET",this.name=t,this.description=e,this.tapRepo=i,this.initFootprintArrays(),!f.gl)throw new Error("WebGL2RenderingContext is not initialized (global.gl is null)");this.gl=f.gl,this.initGLBuffers(),this.oldMouseCoords=null,this.footprintsetProps=new Lt(s,"#00fff2ff"),Bt.shaderProgram}initFootprintArrays(){this.footprintPolygons=[],this.indexes=new Uint32Array,this.vertexCataloguePosition=new Float32Array,this.totPoints=0,this.totConvexPoints=0,this.extHoveredIndexes=new Uint32Array,this._hoveredFootprints=[],this.hoveredVertexPosition=new Float32Array,this.totHoveredPoints=0,this.hoveredIndexes=new Uint32Array,this._selectedFootprints=[],this.selectedVertexPosition=new Float32Array,this.totSelectedPoints=0,this.selectedIndexes=new Uint32Array}initGLBuffers(){this.vertexCataloguePositionBuffer=this.gl.createBuffer(),this.indexBuffer=this.gl.createBuffer(),this.hoveredVertexPositionBuffer=this.gl.createBuffer(),this.hoveredIndexBuffer=this.gl.createBuffer(),this.selectedVertexPositionBuffer=this.gl.createBuffer(),this.selectedIndexBuffer=this.gl.createBuffer()}setIsVisible(t){this._isVisible=t}get isVisible(){return this._isVisible}addFootprint(t){this.footprintPolygons.push(t)}addFootprints(t,e){this.ready=!1;const i=this.footprintsetProps.geomColumn?.index;if(void 0===i)throw new Error("geomColumn or its index is undefined in footprintsetProps");for(let e=0;e<t.length;e++)if(null!==t[e][0]){const s=new Dt(t[e][i],t[e]);s._valid&&(this.addFootprint(s),this.totPoints+=s.totPoints,this.totConvexPoints+=s.totConvexPoints)}this.initBuffer(),this.ready=!0}clearFootprints(){this.initFootprintArrays()}initBuffer(){const t=this.footprintPolygons.length;let e=t-1;for(let i=0;i<t;i++)e+=this.footprintPolygons[i].polygons.length-1;this.indexes=new Uint32Array(this.totPoints+e+1);const i=4294967295;this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexCataloguePositionBuffer),this.vertexCataloguePosition=new Float32Array(3*this.totPoints);let s=0,r=0;this.nPrimitiveFlags=0;for(let e=0;e<t;e++){const t=this.footprintPolygons[e].polygons;e>0&&(this.indexes[r++]=i,this.nPrimitiveFlags++);for(const e of t){e!==t[0]&&(this.indexes[r++]=i,this.nPrimitiveFlags++);for(const t of e)this.vertexCataloguePosition[s++]=1*t.x,this.vertexCataloguePosition[s++]=1*t.y,this.vertexCataloguePosition[s++]=1*t.z,this.indexes[r++]=Math.floor((s-1)/3)}}this.indexes[this.indexes.length-1]=i,console.log("Buffer initialized")}checkSelection(t){if(!t.x||!t.y||!t.z)return;if(!t.computeNpix())return;this._hoveredFootprints=[],this.totHoveredPoints=0;const e=new Q({x:t.x,y:t.y,z:t.z},j.CARTESIAN);for(let t=0;t<this.footprintPolygons.length;t++){const i=this.footprintPolygons[t];if(i.selectionObj&&rt.checkPointInsidePolygon5(i.selectionObj,e)){const t=[...i.details],e=this.footprintsetProps.geomColumn?.index;if(void 0===e)continue;t.splice(e,1),this._hoveredFootprints.push(i),this.totHoveredPoints+=i.totPoints}}this.initHoveringBuffer()}get hoveredFootprints(){return{metadata:this.footprintsetProps.tapMetadataList,footprints:this._hoveredFootprints,tableName:this.name,description:this.description,provider:this.tapRepo.tapBaseUrl}}get selectedFootprints(){return this._selectedFootprints}highlightFootprint(t,e){if(e)this._hoveredFootprints.push(t),this.totHoveredPoints+=t.totPoints;else{const e=this._hoveredFootprints.indexOf(t);this._hoveredFootprints.splice(e,1),this.totHoveredPoints-=t.totPoints}this.initHoveringBuffer()}addFootprint2Selected(t){let e=!1;for(let i of t)this._selectedFootprints.includes(i)||(this._selectedFootprints.push(i),this.totSelectedPoints+=i.totPoints,e=!0);e&&this.initSelectionBuffer()}removeFootprintFromSelection(t){const e=this._selectedFootprints.indexOf(t);e>=0&&(this._selectedFootprints.splice(e,1),this.totSelectedPoints-=t.totPoints,this._selectedFootprints.length>0&&this.initSelectionBuffer())}initHoveringBuffer(){if(0==this._hoveredFootprints.length)return;let t=this._hoveredFootprints.length,e=t-1;for(let i=0;i<t;i++)e+=this._hoveredFootprints[i].polygons.length-1;this.hoveredIndexes=new Uint32Array(this.totHoveredPoints+e);const i=4294967295;this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.hoveredVertexPositionBuffer),this.hoveredVertexPosition=new Float32Array(3*this.totHoveredPoints);let s=0,r=0;this.nHoveredPrimitiveFlags=0;for(let e=0;e<t;e++){let t=this._hoveredFootprints[e].polygons;e>0&&(this.hoveredIndexes[r]=i,this.nHoveredPrimitiveFlags+=1,r+=1);for(let e=0;e<t.length;e++){e>0&&(this.hoveredIndexes[r]=i,this.nHoveredPrimitiveFlags+=1,r+=1);const o=t[e];for(let t=0;t<o.length;t++){const e=o[t];this.hoveredVertexPosition[s]=1*e.x,this.hoveredVertexPosition[s+1]=1*e.y,this.hoveredVertexPosition[s+2]=1*e.z,this.hoveredIndexes[r]=Math.floor(s/3),r+=1,s+=3}}}}initSelectionBuffer(){let t=this._selectedFootprints.length,e=t-1;for(let i=0;i<t;i++)e+=this._selectedFootprints[i].polygons.length-1;this.selectedIndexes=new Uint32Array(this.totSelectedPoints+e);const i=4294967295;this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.selectedVertexPositionBuffer),this.selectedVertexPosition=new Float32Array(3*this.totSelectedPoints);let s=0,r=0;this.nSlectedPrimitiveFlags=0;for(let e=0;e<t;e++){let t=this._selectedFootprints[e].polygons;e>0&&(this.selectedIndexes[r]=i,this.nSlectedPrimitiveFlags+=1,r+=1);for(let e=0;e<t.length;e++){e>0&&(this.selectedIndexes[r]=i,this.nSlectedPrimitiveFlags+=1,r+=1);const o=t[e];for(let t=0;t<o.length;t++){const e=o[t];this.selectedVertexPosition[s]=1*e.x,this.selectedVertexPosition[s+1]=1*e.y,this.selectedVertexPosition[s+2]=1*e.z,this.selectedIndexes[r]=Math.floor(s/3),r+=1,s+=3}}}}draw(t,e){if(!this.isVisible)return;if(!this.ready)return;if(!f.camera)return;if(Bt.enableShaders(X.pMatrix,t,f.camera.getCameraMatrix()),null!=e&&e.xyz!=this.oldMouseCoords&&this.checkSelection(e),this._hoveredFootprints.length>0){const t=L("#00FF00"),e=1;this.gl.uniform4f(Bt.locations.color,t[0],t[1],t[2],e),this.gl.uniform1f(Bt.locations.pointSize,14),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.hoveredVertexPositionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.hoveredVertexPosition,this.gl.STATIC_DRAW),this.gl.vertexAttribPointer(Bt.locations.position,Nt.ELEM_SIZE,this.gl.FLOAT,!1,Nt.BYTES_X_ELEM*Nt.ELEM_SIZE,0),this.gl.enableVertexAttribArray(Bt.locations.position),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.hoveredIndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.hoveredIndexes,this.gl.STATIC_DRAW),this.gl.drawElements(this.gl.LINE_LOOP,this.hoveredVertexPosition.length/3+this.nHoveredPrimitiveFlags,this.gl.UNSIGNED_INT,0)}if(this._selectedFootprints.length>0){const t=L("#ECB462"),e=1;this.gl.uniform4f(Bt.locations.color,t[0],t[1],t[2],e),this.gl.uniform1f(Bt.locations.pointSize,14),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.selectedVertexPositionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.selectedVertexPosition,this.gl.STATIC_DRAW),this.gl.vertexAttribPointer(Bt.locations.position,Nt.ELEM_SIZE,this.gl.FLOAT,!1,Nt.BYTES_X_ELEM*Nt.ELEM_SIZE,0),this.gl.enableVertexAttribArray(Bt.locations.position),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.selectedIndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.selectedIndexes,this.gl.STATIC_DRAW),this.gl.drawElements(this.gl.LINE_LOOP,this.selectedVertexPosition.length/3+this.nSlectedPrimitiveFlags,this.gl.UNSIGNED_INT,0)}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexCataloguePositionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertexCataloguePosition,this.gl.STATIC_DRAW),this.gl.vertexAttribPointer(Bt.locations.position,Nt.ELEM_SIZE,this.gl.FLOAT,!1,Nt.BYTES_X_ELEM*Nt.ELEM_SIZE,0),this.gl.enableVertexAttribArray(Bt.locations.position),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.indexes,this.gl.STATIC_DRAW);const i=[...L(this.footprintsetProps.shapeColor),1];this.gl.uniform4f(Bt.locations.color,...i),this.gl.drawElements(this.gl.LINE_LOOP,this.indexes.length,this.gl.UNSIGNED_INT,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null),this.oldMouseCoords=e.xyz}}const Vt=Nt;let zt=1,Ut=1;async function Ot(t){const e=new yt(t);e.adqlFunctionList=await Xt(t);const i=await Gt(t,e);return e.setCataloguesList(i.catalogueList),e.setObservationsList(i.obsList),e.setNotClassifiedList(i.notClassifiedList),e}async function Ht(t,e,i){const s=f.corsProxyUrl.replace(/\/?$/,"/"),r=new URL("adql",s);r.searchParams.set("tapurl",t.tapBaseUrl),r.searchParams.set("query",e);const o=new AbortController,a=setTimeout(()=>o.abort(),i||3e4);try{const t=await fetch(r.toString(),{method:"GET",mode:"cors",signal:o.signal,headers:{Accept:"application/json"}});if(!t.ok){const e=await t.text().catch(()=>"");throw new Error(`HTTP ${t.status} ${t.statusText} – ${e}`)}return await t.json()}catch(t){return console.error("queryAsync error:",t?.message||t),null}finally{clearTimeout(a)}}const Gt=async(t,e)=>{const i=`${t}/tables`,s=`${f.corsProxyUrl}exturl?url=${encodeURIComponent(i)}`,r={obsList:[],catalogueList:[],notClassifiedList:[]};try{const t=await fetch(s,{method:"GET",mode:"cors"}),r=(await t.text()).replace(/\n\t|\t|\n/g,""),o=(new DOMParser).parseFromString(r,"application/xml").firstElementChild;if(!o)throw new Error("Error parsing TAP XML. Missing root element.");if(!/tableset$/i.test(o.nodeName))throw new Error(`Error parsing TAP XML. ${o.nodeName} not recognised`);const a=[],n=[],h=[];for(const t of Array.from(o.children))if("schema"===t.nodeName)for(const s of Array.from(t.children)){if("table"!==s.nodeName)continue;const t=Yt(s,i,e);t&&(t.catalogue&&(t.catalogue.id=zt++,a.push(t.catalogue)),t.footprint&&(t.footprint.id=Ut++,n.push(t.footprint)),t.notClassified&&h.push(t.notClassified))}return{catalogueList:a,obsList:n,notClassifiedList:h}}catch(t){return console.error(t?.message??t),r}},Xt=async t=>{const e=`${t}/capabilities`,i=`${f.corsProxyUrl}exturl?url=${encodeURIComponent(e)}`;let s=[];try{const t=await fetch(i,{method:"GET",mode:"cors"}),e=(await t.text()).replace(/\n\t|\t|\n/g,""),r=(new DOMParser).parseFromString(e,"application/xml").firstElementChild;if(!r)throw new Error("Error parsing TAP XML. Missing root element.");if(!/capabilities$/i.test(r.nodeName))throw new Error(`Error parsing TAP XML. ${r.nodeName} not recognised`);for(const t of Array.from(r.children))if("capability"===t.nodeName)for(const e of Array.from(t.children))"language"===e.nodeName&&(s=qt(e));return s}catch(t){return console.error(t?.message??t),s}},qt=t=>{const e=[],i=t.getElementsByTagName("languageFeatures");if(!i.length)return e;const s=i[0].getElementsByTagName("feature");for(const t of Array.from(s)){const i=t.getElementsByTagName("form")[0];i?.textContent&&e.push(i.textContent)}return e},Yt=(t,e,i)=>{const s=t.getElementsByTagName("name")[0];if(!s?.textContent)return{catalogue:null,footprint:null,notClassified:"Missing table name"};const r=s.textContent,o=t.getElementsByTagName("description")[0]?.textContent??null,a=t.getElementsByTagName("column"),n=new Mt;for(const t of Array.from(a)){const e=t.getElementsByTagName("name")[0]?.textContent??"",i=t.getElementsByTagName("description")[0]?.textContent??void 0,s=t.getElementsByTagName("unit")[0]?.textContent??void 0,r=t.getElementsByTagName("dataType")[0]?.textContent??void 0,o=t.getElementsByTagName("ucd")[0]?.textContent??void 0,a=t.getElementsByTagName("utype")[0]?.textContent??void 0,h=new Pt(e,i,s,r,o,a);n.addMetadata(h)}let h=null,l=null,c=null;return n.pgSphereMetaColumns.length>0||n.sRegionMetaColumns.length>0?l=new Vt(r,o,i,n):n.posEqRAMetaColumns.length>0&&n.posEqDecMetaColumns.length>0?h=new Ft(r,o,i,n):c=`TODO: create NC entity for ${e}#${r}`,{catalogue:h,footprint:l,notClassified:c}};function Wt(t){return t?(t.name??t.name??"").toString():""}function kt(t){return t?(t.name??t.name??"").toString():""}class $t extends q{static ELEM_SIZE=3;static BYTES_X_ELEM=(new Float32Array).BYTES_PER_ELEMENT;showGrid=!0;_shaderProgram;_vertexShader;_fragmentShader;defaultColor="#41d421";gridText=new ot;_attribLocations={position:0,selected:1,pointSize:2,color:3};_phiVertexPositionBuffer;_thetaVertexPositionBuffer;_fov;_phiStep=0;_phiStepRad=0;_thetaStep=0;_thetaStepRad=0;_phiArray=[];_thetaArray=[];_dec4Labels=new Map;_ra4Labels=new Map;constructor(){super(gt.RADIUS,gt.INITIAL_POSITION,gt.INITIAL_PhiRad,gt.INITIAL_ThetaRad,"equatorial-grid")}init(t){this._fov=t,this.initGL(f.gl),this._shaderProgram=f.gl.createProgram(),this.initShaders(),this._phiVertexPositionBuffer=f.gl.createBuffer(),this._thetaVertexPositionBuffer=f.gl.createBuffer(),this.initBuffers(this._fov)}initShaders(){const t=et.healpixGridFS();if(this._fragmentShader=f.gl.createShader(f.gl.FRAGMENT_SHADER),f.gl.shaderSource(this._fragmentShader,t),f.gl.compileShader(this._fragmentShader),!f.gl.getShaderParameter(this._fragmentShader,f.gl.COMPILE_STATUS)){const t=f.gl.getShaderInfoLog(this._fragmentShader)||"Unknown fragment shader error";return console.error(t),void alert(t)}const e=et.healpixGridVS();if(this._vertexShader=f.gl.createShader(f.gl.VERTEX_SHADER),f.gl.shaderSource(this._vertexShader,e),f.gl.compileShader(this._vertexShader),!f.gl.getShaderParameter(this._vertexShader,f.gl.COMPILE_STATUS)){const t=f.gl.getShaderInfoLog(this._vertexShader)||"Unknown vertex shader error";return console.error(t),void alert(t)}f.gl.attachShader(this._shaderProgram,this._vertexShader),f.gl.attachShader(this._shaderProgram,this._fragmentShader),f.gl.linkProgram(this._shaderProgram),f.gl.getProgramParameter(this._shaderProgram,f.gl.LINK_STATUS)||alert("Could not initialise shaders"),f.gl.useProgram(this._shaderProgram)}initBuffers(t){const e=k.getRADegSteps(t),i=e.raStep,s=e.decStep;this._phiStep=i,this._phiStepRad=B(i),this._thetaStep=s,this._thetaStepRad=B(s),this._ra4Labels=new Map,this._dec4Labels=new Map,this._phiArray=[],this._thetaArray=[];for(let t=s;t<180;t+=s){const e=new Float32Array(360/i*3),s=B(t);for(let t=0;t<360;t+=i){const r=B(t),o=1*Math.sin(s)*Math.cos(r),a=1*Math.sin(s)*Math.sin(r),n=1*Math.cos(s),h=Math.floor(t/i);e[3*h+0]=o,e[3*h+1]=a,e[3*h+2]=n,this._dec4Labels.has(t)||this._dec4Labels.set(t,[]),this._dec4Labels.get(t).push([o,a,n])}this._phiArray.push(e)}for(let t=0;t<360;t+=i){const e=new Float32Array(360/s*3),i=B(t);for(let t=0;t<360;t+=s){const r=B(t),o=1*Math.sin(r)*Math.cos(i),a=1*Math.sin(r)*Math.sin(i),n=1*Math.cos(r),h=Math.floor(t/s);e[3*h+0]=o,e[3*h+1]=a,e[3*h+2]=n;const l=90-t;this._ra4Labels.has(l)||this._ra4Labels.set(l,[]),this._ra4Labels.get(l).push([o,a,n])}this._thetaArray.push(e)}}refresh(){const t=gt.getMinFoV();this._fov!==t&&(this._fov=t,this.initBuffers(this._fov))}vectorDistance(t,e){const i=t.x-e.x,s=t.y-e.y,r=t.z-e.z;return Math.sqrt(i*i+s*s+r*r)}enableShader(t,e){const i=f.gl;i.useProgram(this._shaderProgram);const s=C();F(s,f.camera.getCameraMatrix(),t);const r=i.getUniformLocation(this._shaderProgram,"uMVMatrix"),o=i.getUniformLocation(this._shaderProgram,"uPMatrix"),a=i.getUniformLocation(this._shaderProgram,"u_fragcolor");if(this._attribLocations.position=i.getAttribLocation(this._shaderProgram,"aCatPosition"),r&&i.uniformMatrix4fv(r,!1,s),o&&i.uniformMatrix4fv(o,!1,e),a){const t=L(this.defaultColor);i.uniform4f(a,t[0],t[1],t[2],1)}}isVisible(){return this.showGrid}toggleShowGrid(){this.showGrid=!this.showGrid}draw(){const t=f.gl,e=this.getModelMatrix();if(0===this._thetaArray.length)return;if(this.refresh(),!this.showGrid)return void this.gridText.resetDivSets();const i=X.pMatrix;this.enableShader(e,i);for(let t=0;t<this._phiArray.length;t++)f.gl.bindBuffer(f.gl.ARRAY_BUFFER,this._phiVertexPositionBuffer),f.gl.bufferData(f.gl.ARRAY_BUFFER,this._phiArray[t],f.gl.STATIC_DRAW),f.gl.vertexAttribPointer(this._attribLocations.position,3,f.gl.FLOAT,!1,0,0),f.gl.enableVertexAttribArray(this._attribLocations.position),f.gl.drawArrays(f.gl.LINE_LOOP,0,360/this._phiStep);for(let t=0;t<this._thetaArray.length;t++)f.gl.bindBuffer(f.gl.ARRAY_BUFFER,this._thetaVertexPositionBuffer),f.gl.bufferData(f.gl.ARRAY_BUFFER,this._thetaArray[t],f.gl.STATIC_DRAW),f.gl.vertexAttribPointer(this._attribLocations.position,3,f.gl.FLOAT,!1,0,0),f.gl.enableVertexAttribArray(this._attribLocations.position),f.gl.drawArrays(f.gl.LINE_LOOP,0,360/this._thetaStep);const s=J.getCenterJ2000(t.canvas),r=C();F(r,f.camera.getCameraMatrix(),e);const o=C();F(o,i,r);for(const[t,e]of this._dec4Labels.entries())if(Math.abs(t-s.raDeg)<=this._phiStep)for(let t=0;t<e.length;t++){const[i,r,a]=e[t],n=[i,r,a,1],h=new Q({x:i,y:r,z:a},j.CARTESIAN).decDeg;if(Math.abs(h-s.decDeg)<60){const t=Y();W(t,n,o),t[0]/=t[3],t[1]/=t[3];const e=(.5*t[0]+.5)*f.gl.canvas.width,i=(-.5*t[1]+.5)*f.gl.canvas.height;this.gridText.addEqDivSet(h.toFixed(2),e,i,"dec")}}for(const[t,e]of this._ra4Labels.entries())if(Math.abs(t-s.decDeg)<=this._thetaStep)for(let t=0;t<e.length;t++){const[i,r,a]=e[t],n=[i,r,a,1],h=new Q({x:i,y:r,z:a},j.CARTESIAN),l=this.vectorDistance(h,s),c=h.raDeg;if(l<B(50)){const t=Y();W(t,n,o),t[0]/=t[3],t[1]/=t[3];const e=(.5*t[0]+.5)*f.gl.canvas.width,i=(-.5*t[1]+.5)*f.gl.canvas.height;this.gridText.addEqDivSet(c.toFixed(2),e,i,"ra")}}this.gridText.resetDivSets(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}}const jt=new $t,Zt=class{camera;centralPoinCoords;mousePointCoords;canvas;showHPXGrid=!1;mouseHelper;mouseDown=!1;lastMouseX=null;lastMouseY=null;inertiaX=0;inertiaY=0;zoomInertia=0;activeHiPS=null;startup=!0;fov;activeCatalogues=[];activeFootprintSets=[];constructor(t,e){f.gl=e,this.mouseHelper=new pt,this.canvas=t,f.insideSphere=g,this.init(t),this.fov=gt.refreshFoV()}updateCentralPoint(){const t=this.getPhiThetaDeg(this.canvas),e=V(t.phi,t.theta),i=O(e.ra),s=H(e.dec);return this.centralPoinCoords={astroDeg:e,sphericalDeg:t,raHMS:i,decDMS:s},this.centralPoinCoords}updateLastMousePoint(){const t={phi:this.mouseHelper.phi,theta:this.mouseHelper.theta},e={ra:this.mouseHelper.ra,dec:this.mouseHelper.dec},i=this.mouseHelper.raHMS,s=this.mouseHelper.decDMS;return this.mousePointCoords={astroDeg:e,sphericalDeg:t,raHMS:i,decDMS:s},this.mousePointCoords}getCentralPointCoordinates(){return this.centralPoinCoords}getLastMousePointCoordinates(){return this.mousePointCoords}init(t){this.initCamera(),gt.init(),X.computePerspectiveMatrix(t,this.camera,34,_,g),dt.init(g),jt.init(gt.getMinFoV()),this.updateCentralPoint(),this.startup=!0,this.addEventListeners(t)}initCamera(){this.camera=new G([0,0,4],!1),f.camera=this.camera}addEventListeners(t){f.debug&&console.log("[AstroSphere::addEventListeners]"),t.onpointerdown=e=>(t.setPointerCapture(e.pointerId),this.mouseDown=!0,this.lastMouseX=e.clientX,this.lastMouseY=e.clientY,e.preventDefault(),!1),t.onpointerup=e=>{t.releasePointerCapture(e.pointerId),this.mouseDown=!1,document.body.style.cursor="auto",this.lastMouseX=e.clientX,this.lastMouseY=e.clientY},t.onpointermove=e=>{const i=e.clientX,s=e.clientY;if(gt){if(this.mouseDown){document.body.style.cursor="grab";const e=(i-(this.lastMouseX??i))*Math.PI/t.width,r=(s-(this.lastMouseY??s))*Math.PI/t.height;this.inertiaX+=.1*e,this.inertiaY+=.1*r}else{const t=ft.getIntersectionPointWithSingleModel(i,s);t&&t.length>0&&(this.mouseHelper.update(t),this.updateLastMousePoint())}this.updateCentralPoint(),this.lastMouseX=i,this.lastMouseY=s,e.preventDefault()}},t.addEventListener("wheel",t=>{t.deltaY<0?this.zoomInertia-=.001:this.zoomInertia+=.001,t.preventDefault()},{passive:!1})}getPhiThetaDeg(t){const e=t.width,i=t.height;return D(ft.getIntersectionPointWithSingleModel(e/2,i/2))}activateHiPS(t){this.activeHiPS=new St(1,[0,0,0],0,0,t)}async showCatalogue(t){const e=J.getFoVPolygon(this.camera,this.canvas,gt),i=J.getAstroFoVPolygon(e),s=await async function(t,e){try{const i=Wt(t.catalogueProps.raColumn),s=Wt(t.catalogueProps.decColumn),r=t.name;if(!i||!s)return void console.warn("[queryCatalogueByFoV] RA/Dec columns were not resolved from metadata.");const o=`SELECT * FROM ${r} WHERE 1 = CONTAINS(POINT('ICRS', ${i}, ${s}), POLYGON('ICRS',${e}))`,a=await Ht(t.tapRepo,o,6e4);if(console.log(a),a&&a.data.length>0){const e=a.metadata,i=a.data;console.log(i.length);let s=new Mt;for(const t of e){const e=t.name,i=void 0!==t.description?t.description:void 0,r=void 0!==t.unit?t.unit:void 0,o=void 0!==t.datatype?t.datatype:void 0,a=void 0!==t.ucd?t.ucd:void 0,n=void 0!==t.utype?t.utype:void 0,h=new Pt(e,i,r,o,a,n);s.addMetadata(h)}return t.addSources(i,s.metadataList),t}return void console.log("[queryCatalogueByFoV] No results found.")}catch(t){return void console.error("[queryCatalogueByFoV] Error:",t?.message??t)}}(t,i);return console.log(s),s&&this.activeCatalogues.push(s),s}deleteCatalogue(t){this.activeCatalogues=this.activeCatalogues.filter(e=>e!==t)}async showFootprintSet(t){const e=J.getFoVPolygon(this.camera,this.canvas,gt),i=J.getAstroFoVPolygon(e),s=J.getCenterJ2000(this.canvas),r=await async function(t,e,i){try{const s=kt(t.footprintsetProps.raColumn),r=kt(t.footprintsetProps.decColumn),o=t.name;if(!s||!r)return void console.warn("[queryCatalogueByFoV] RA/Dec columns were not resolved from metadata.");const a=function(t,e,i,s,r,o){let a="";if(r.adqlFunctionList.includes("POLYGON"))a="select * from "+t+" where 1=CONTAINS(POINT('ICRS',"+e+","+i+"), POLYGON('ICRS', "+s+"))";else{const s=gt.getMinFoV()/2;a="select * from "+t+" where 1=CONTAINS(POINT('ICRS',"+e+","+i+"), CIRCLE('ICRS', "+o.raDeg+", "+o.decDeg+", "+s+"))"}return a}(o,s,r,e,t.tapRepo,i),n=await Ht(t.tapRepo,a,6e4);if(console.log(n),"object"!=typeof n||null===n||!Array.isArray(n.metadata)||!Array.isArray(n.data))return void console.log("[queryFootprintSetByFov] No results found.");{const{metadata:e,data:i}=n,s=new Mt;for(const t of e){const e=new Pt(t.name,t.description??void 0,t.unit??void 0,t.datatype??void 0,t.ucd??void 0,t.utype??void 0);s.addMetadata(e)}if(i.length>0)return t.addFootprints(i,s.metadataList),t;console.log("No results found")}}catch(t){return void console.error("[queryFootprintSetByFov] Error:",t?.message??t)}}(t,i,s);return console.log(r),r&&this.activeFootprintSets.push(r),r}deleteFootprintSet(t){this.activeFootprintSets=this.activeFootprintSets.filter(e=>e!==t)}getHoveredFootprints(){let t=[];return this.activeFootprintSets.forEach(e=>{t.push(e.hoveredFootprints)}),t}goTo(t,e){this.camera.goTo(t,e)}getFoV(){return this.fov}getFoVPolygon(){return J.getFoVPolygon(this.camera,this.canvas,gt)}changeFoV(t){const e=gt.getFoV().computeDistanceFromAngle(t);this.camera.translate(e),gt.refreshFoV()}changeFoV2(t){const e=gt.getFoV().computeCameraPositionForFoV(t);this.camera.setCameraPosition(e)}changeFoV3(t){const e=gt.getFoV().computeCameraPositionForAngularDiameter(t);this.camera.setCameraPosition(e),X.computePerspectiveMatrix(this.canvas,this.camera,34,_,!1)}getInsideSphere(){return f.insideSphere}toggleInsideSphere(){f.insideSphere=!f.insideSphere,console.log(f.insideSphere),this.camera.toggleInsideSphere()}draw(t){if(!f.gl)return;if(!this.activeHiPS)return;if(!gt||0===Object.keys(gt).length)return;if(void 0===gt.fovObj)return;X.computePerspectiveMatrix(t,this.camera,34,_,f.insideSphere);let e=!1,i=0,s=0;if(f.gl.viewport(0,0,f.gl.drawingBufferWidth,f.gl.drawingBufferHeight),f.gl.clear(f.gl.COLOR_BUFFER_BIT|f.gl.DEPTH_BUFFER_BIT),(gt.fovObj.minFoV>.1||this.zoomInertia>0)&&Math.abs(this.zoomInertia)>1e-4&&(this.camera.zoom(this.zoomInertia),this.zoomInertia*=.95,this.fov=gt.refreshFoV()),this.mouseDown||Math.abs(this.inertiaX)>.02||Math.abs(this.inertiaY)>.02?(!0,i=this.inertiaY,s=this.inertiaX,this.inertiaX*=.95,this.inertiaY*=.95,this.camera.rotate(s,i),X.computePerspectiveMatrix(t,this.camera,34,_,f.insideSphere)):(this.inertiaY=0,this.inertiaX=0),f.gl.disable(f.gl.DEPTH_TEST),f.gl.enable(f.gl.BLEND),f.gl.enable(f.gl.CULL_FACE),f.gl.cullFace(f.insideSphere?f.gl.BACK:f.gl.FRONT),f.gl.blendFunc(f.gl.SRC_ALPHA,f.gl.ONE_MINUS_SRC_ALPHA),this.activeHiPS.draw(),gt.draw(),jt.draw(),f.gl.enable(f.gl.DEPTH_TEST),f.gl.disable(f.gl.CULL_FACE),this.startup){this.startup=!1;const e=this.getPhiThetaDeg(t),i=V(e.phi,e.theta),s=O(i.ra),r=H(i.dec);console.log("(startup coords)",{raDeg:i.ra,decDeg:i.dec,raHMS:s,decDMS:r})}this.activeCatalogues.forEach(t=>{this.activeHiPS&&t.draw(this.activeHiPS.getModelMatrix(),this.mouseHelper)}),this.activeFootprintSets.forEach(t=>{this.activeHiPS&&t.draw(this.activeHiPS.getModelMatrix(),this.mouseHelper)})}};class Qt{astroSphere;canvas;webgl;rafId=null;run(){return this.tick()}showCatalogue(t){this.astroSphere.showCatalogue(t)}hideCatalogue(t,e){t.setIsVisible(e)}deleteCatalogue(t){this.astroSphere.deleteCatalogue(t)}changeCatalogueColor(t,e){t.catalogueProps.changeColor(e)}setCatalogueShapeHue(t,e){t.changeCatalogueMetaShapeHue(e)}setCatalogueShapeSize(t,e){t.changeCatalogueMetaShapeSize(e)}showFootprintSet(t){this.astroSphere.showFootprintSet(t)}hideFootprintSet(t,e){t.setIsVisible(e)}deleteFootprintSet(t){this.astroSphere.deleteFootprintSet(t)}changeFootprintSetColor(t,e){t.footprintsetProps.changeColor(e)}getHoveredFootprints(){return this.astroSphere.getHoveredFootprints()}getDefaultHiPSURL(){return"https://cdn.skies.esac.esa.int/DSSColor/"}activateHiPS(t){this.astroSphere.activateHiPS(t)}goTo(t,e){this.astroSphere.goTo(t,e)}getCenterCoordinates(){return this.astroSphere.getCentralPointCoordinates()}getCoordinatesFromMouse(){return this.astroSphere.getLastMousePointCoordinates()}toggleHealpixGrid(){gt.toggleShowGrid()}isHealpixGridVisible(){return gt.isVisible()}toggleEquatorialGrid(){jt.toggleShowGrid()}isEquatorialGridVisible(){return jt.isVisible()}getFoV(){return this.astroSphere.getFoV()}getFoVPolygon(){return this.astroSphere.getFoVPolygon()}changeFoV(t){this.astroSphere.changeFoV(t)}changeFoV2(t){this.astroSphere.changeFoV2(t)}changeFoV3(t){this.astroSphere.changeFoV3(t)}getInsideSphere(){return this.astroSphere.getInsideSphere()}toggleInsideSphere(){this.astroSphere.toggleInsideSphere()}constructor(){this.init()}init(){console.log("init webgl");const t=document.getElementById("astrocanvas");if(!(t instanceof HTMLCanvasElement))throw new Error("Element with id 'canvas-ab' is not a canvas.");this.canvas=t;const e=this.canvas.getContext("webgl2",{alpha:!1});if(!e)throw alert("Could not initialise WebGL, sorry :-("),new Error("WebGL2 not available");this.webgl=e,this.webgl.viewportWidth=this.canvas.width,this.webgl.viewportHeight=this.canvas.height;try{this.webgl.clearColor(0,.06274509792,50*.00392156862,.7)}catch(t){console.log("Error instantiating WebGL context")}this.initListeners(),f.gl=this.webgl,this.astroSphere=new Zt(this.canvas,this.webgl)}initListeners(){console.log("inside initListeners");const t=()=>{console.log("[resizeCanvas]");const t=window.innerWidth-3,e=window.innerHeight-3;this.canvas.width=t,this.canvas.height=e,this.webgl.viewportWidth=this.canvas.width,this.webgl.viewportHeight=this.canvas.height,this.webgl.viewport(0,0,this.canvas.width,this.canvas.height)};window.addEventListener("resize",t),this.canvas.addEventListener("webglcontextlost",t=>{console.log("[handleContextLost]"),t.preventDefault(),null!==this.rafId&&(cancelAnimationFrame(this.rafId),this.rafId=null)},!1),this.canvas.addEventListener("webglcontextrestored",t=>{console.log("[handleContextRestored]"),this.webgl.viewportWidth=this.canvas.width,this.webgl.viewportHeight=this.canvas.height,this.webgl.clearColor(0,.06274509792,50*.00392156862,.7),this.webgl.enable(this.webgl.DEPTH_TEST),this.rafId=requestAnimationFrame(()=>this.tick())},!1),t()}tick(){return this.drawScene(),this.rafId=requestAnimationFrame(()=>this.tick()),this.rafId}drawScene(){this.astroSphere.draw(this.canvas)}}class Kt{_minOrder=3;_imgformats=[];_datarange={min:void 0,max:void 0};_maxOrder;_tilewidth;_hipsFrame;_hipsName="NONAME";_hipsurl;_emMin;_emMax;_isGalctic=!1;constructor(t,e){this._hipsurl=e;const i=t.split(/\r\n|\n/);for(const t of i){const e=t.trim();if(e&&!e.startsWith("#"))if(e.startsWith("hips_tile_format")||e.startsWith("format")){const t=this.getValue(e)?.replace(/jpeg/gi,"jpg")??"";this._imgformats=t.split(/\s+/).filter(Boolean)}else if(e.startsWith("hips_data_range")){const t=this.getValue(e);if(t){const[e,i]=t.split(/\s+/);this._datarange.min=parseFloat(e),this._datarange.max=parseFloat(i)}}else if(e.startsWith("hips_tile_width")){const t=Number(this.getValue(e));this._tilewidth=Number.isFinite(t)?t:void 0}else if(e.startsWith("hips_order_min")){const t=Number(this.getValue(e));this._minOrder=Number.isFinite(t)?t:this._minOrder}else if(e.startsWith("hips_order")||e.startsWith("maxOrder")){const t=Number(this.getValue(e));this._maxOrder=Number.isFinite(t)?t:this._maxOrder}else if(e.startsWith("hips_frame")||e.startsWith("frame"))this._hipsFrame=this.getValue(e);else if(e.startsWith("obs_collection")||e.startsWith("label"))this._hipsName=this.getValue(e)??this._hipsName;else if(e.startsWith("em_min")){const t=Number(this.getValue(e));this._emMin=Number.isFinite(t)?t:void 0}else if(e.startsWith("em_max")){const t=Number(this.getValue(e));this._emMax=Number.isFinite(t)?t:void 0}}if(this._hipsName||console.warn(`[HiPSDescriptor] hipsName not defined in properties of ${this._hipsurl}. Defaulting to 'NONAME'.`),this._hipsFrame||(console.warn(`[HiPSDescriptor] hips_frame not defined in properties of ${this._hipsurl}. Defaulting to 'equatorial'.`),this._hipsFrame="equatorial"),this._isGalctic=this._hipsFrame.toLowerCase().includes("gal"),void 0===this._maxOrder||0===this._imgformats.length)throw new Error(`[HiPSDescriptor] Invalid properties for ${this._hipsurl}. maxOrder=${this._maxOrder}, imgFormats.length=${this._imgformats.length}`)}getValue(t){const e=t.indexOf("=");if(!(e<0))return t.slice(e+1).trim()}get surveyName(){return this._hipsName}get url(){return this._hipsurl}get maxOrder(){return this._maxOrder}get minOrder(){return this._minOrder}get imgFormats(){return this._imgformats}get hipsFrame(){return this._hipsFrame}get isGalactic(){return this._isGalctic}get emMin(){return this._emMin}get emMax(){return this._emMax}get tileWidth(){return this._tilewidth}get dataRange(){return this._datarange}}return console.log("astroviewer UMD loaded"),e})());
//# sourceMappingURL=astroviewer.min.js.map