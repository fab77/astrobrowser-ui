{"version":3,"file":"astroviewer.js","mappings":"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K,EAAK,QAClF,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,IACvF,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAClF,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EACtF,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,IAAO,EAAK,EACzF,EAAK,IAAO,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EACzF,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EACtF,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,IAAO,EACzF,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAClF,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAClF,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EACtF,EAAK,QAAS,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EACzF,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EACtF,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAClF,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,QACrF,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAAK,QAAS,EAAK,EAAK,EAClF,QAAS,EAAK,EAAK,EA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,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACtvF,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACtF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,IAEzEuc,EAAG,IAAIvc,aAAa,CAClvF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACvF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACxF,EAAK,EAAK,EAAK,IAEjBlM,EAAG,IAAIkM,aAAa,CAClB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EACvF,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IACpF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACvF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACvlCyc,IAAM,CAIJttB,EAAG,IAAI6Q,aAAa,CAClB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACxF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACrF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,IAErFuc,EAAG,IAAIvc,aAAa,CAClB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EACtF,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACtF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACrF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACxF,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,IAEFlM,EAAG,IAAIkM,aAAa,CAClB,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACtF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACzF,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAC1F,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACvpF0c,UAAY,CACVvtB,EAAG,IAAI6Q,aAAa,CAClB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACvF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACpF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,MAExDuc,EAAG,IAAIvc,aAAa,CAClB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACrF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,IAEPlM,EAAG,IAAIkM,aAAa,CAClB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACvF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAC1F,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,KAG/B2c,KAAO,CACLxtB,EAAG,IAAI6Q,aAAa,CAClrF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EACpF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,IAEnDuc,EAAG,IAAIvc,aAAa,CAClzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACtF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EACxF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EACxF,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EACxF,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IACxF,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EACtF,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,IAAO,EAAK,EAAK,EAAK,GAAM,EAAK,EACvF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EACzF,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,GACzF,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACtF,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC1F,EAAK,EAAK,EAAK,EAAK,EA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","sources":["webpack://astroviewer/webpack/universalModuleDefinition","webpack://astroviewer/webpack/bootstrap","webpack://astroviewer/webpack/runtime/define property getters","webpack://astroviewer/webpack/runtime/hasOwnProperty shorthand","webpack://astroviewer/webpack/runtime/make namespace object","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Constants.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Pointing.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Zphi.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Hploc.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Vec3.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/CircleFinder.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Fxyf.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/pstack.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/RangeSet.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Xyf.js","webpack://astroviewer/./node_modules/healpixjs/lib-esm/Healpix.js","webpack://astroviewer/./src/Config.ts","webpack://astroviewer/./src/Global.ts","webpack://astroviewer/./node_modules/gl-matrix/esm/common.js","webpack://astroviewer/./node_modules/gl-matrix/esm/vec3.js","webpack://astroviewer/./node_modules/gl-matrix/esm/mat4.js","webpack://astroviewer/./src/utils/Utils.ts","webpack://astroviewer/./src/Camera.ts","webpack://astroviewer/./src/utils/ComputePerspectiveMatrix.ts","webpack://astroviewer/./src/model/AbstractSkyEntity.ts","webpack://astroviewer/./node_modules/gl-matrix/esm/vec4.js","webpack://astroviewer/./src/model/hips/FoVHelper.ts","webpack://astroviewer/./src/utils/CoordsType.ts","webpack://astroviewer/./src/model/Point.ts","webpack://astroviewer/./src/utils/FoVUtils.ts","webpack://astroviewer/./src/model/FoV.ts","webpack://astroviewer/./src/shader/GridShaderManager.ts","webpack://astroviewer/./src/model/Point2D.ts","webpack://astroviewer/./src/utils/GeomUtils.ts","webpack://astroviewer/./src/model/grid/GridTextHelper.ts","webpack://astroviewer/./src/shader/ShaderManager.ts","webpack://astroviewer/./src/model/hips/ColorMap.ts","webpack://astroviewer/./src/shader/HiPSShaderProgram.ts","webpack://astroviewer/./src/model/hips/Tile.ts","webpack://astroviewer/./src/model/hips/TileBuffer.ts","webpack://astroviewer/./src/model/hips/VisibleTilesManager.ts","webpack://astroviewer/./src/model/grid/HealpixGridSingleton.ts","webpack://astroviewer/./src/utils/RayPickingUtils.ts","webpack://astroviewer/./src/utils/MouseHelper.ts","webpack://astroviewer/./src/model/ColorMaps.ts","webpack://astroviewer/./src/model/hips/AncestorTile.ts","webpack://astroviewer/./src/model/hips/AllSky.ts","webpack://astroviewer/./src/model/hips/HiPS.ts","webpack://astroviewer/./src/model/tap/TapMetadata.ts","webpack://astroviewer/./src/model/tap/TapMetadataList.ts","webpack://astroviewer/./src/model/tap/TapRepo.ts","webpack://astroviewer/./src/model/catalogues/CatalogueProps.ts","webpack://astroviewer/./src/model/Source.ts","webpack://astroviewer/./src/shader/CatalogueShaderProgram.ts","webpack://astroviewer/./src/model/catalogues/CatalogueGL.ts","webpack://astroviewer/./src/utils/STCSParser.ts","webpack://astroviewer/./src/model/footprints/Footprint.ts","webpack://astroviewer/./src/model/footprints/FootprintProps.ts","webpack://astroviewer/./src/shader/FootprintShaderProgram.ts","webpack://astroviewer/./src/model/footprints/FootprintSetGL.ts","webpack://astroviewer/./src/services/tapRepoService.ts","webpack://astroviewer/./src/services/queryCatalogueByFoV.ts","webpack://astroviewer/./src/services/queryFootprintSetByFov.ts","webpack://astroviewer/./src/model/grid/EquatorialGrid.ts","webpack://astroviewer/./src/AstroSphere.ts","webpack://astroviewer/./src/AstroViewer.ts","webpack://astroviewer/./src/model/hips/HiPSDescriptor.ts","webpack://astroviewer/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"astroviewer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"astroviewer\"] = factory();\n\telse\n\t\troot[\"astroviewer\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Constants {\n}\n//\tstatic halfpi = Math.PI/2.;\nConstants.halfpi = 1.5707963267948966;\nConstants.inv_halfpi = 2. / Math.PI;\n/** The Constant twopi. */\nConstants.twopi = 2 * Math.PI;\nConstants.inv_twopi = 1. / (2 * Math.PI);\n//# sourceMappingURL=Constants.js.map","import { Hploc } from './Hploc.js';\nexport class Pointing {\n    /**\n     *\n     * @param {*} vec3 Vec3.js\n     * @param {*} mirror\n     * @param {*} in_theta radians\n     * @param {*} in_phi radians\n     */\n    constructor(vec3, mirror, in_theta, in_phi) {\n        if (vec3 != null) {\n            this.theta = Hploc.atan2(Math.sqrt(vec3.x * vec3.x + vec3.y * vec3.y), vec3.z);\n            if (mirror) {\n                this.phi = -Hploc.atan2(vec3.y, vec3.x);\n            }\n            else {\n                this.phi = Hploc.atan2(vec3.y, vec3.x);\n            }\n            if (this.phi < 0.0) {\n                this.phi = this.phi + 2 * Math.PI;\n            }\n            if (this.phi >= 2 * Math.PI) {\n                this.phi = this.phi - 2 * Math.PI;\n            }\n        }\n        else {\n            this.theta = in_theta;\n            this.phi = in_phi;\n        }\n    }\n}\n//# sourceMappingURL=Pointing.js.map","export class Zphi {\n    /** Creation from individual components */\n    constructor(z_, phi_) {\n        this.z = z_;\n        this.phi = phi_;\n    }\n    ;\n}\n//# sourceMappingURL=Zphi.js.map","import { Pointing } from './Pointing.js';\nimport { Vec3 } from './Vec3.js';\nimport { Zphi } from './Zphi.js';\nexport class Hploc {\n    constructor(ptg) {\n        Hploc.PI4_A = 0.7853981554508209228515625;\n        Hploc.PI4_B = 0.794662735614792836713604629039764404296875e-8;\n        Hploc.PI4_C = 0.306161699786838294306516483068750264552437361480769e-16;\n        Hploc.M_1_PI = 0.3183098861837906715377675267450287;\n        if (ptg) {\n            this.sth = 0.0;\n            this.have_sth = false;\n            this.z = Hploc.cos(ptg.theta);\n            this._phi = ptg.phi;\n            if (Math.abs(this.z) > 0.99) {\n                this.sth = Hploc.sin(ptg.theta);\n                this.have_sth = true;\n            }\n        }\n    }\n    setZ(z) {\n        this.z = z;\n    }\n    ;\n    get phi() {\n        return this._phi;\n    }\n    ;\n    set phi(phi) {\n        this._phi = phi;\n    }\n    ;\n    setSth(sth) {\n        this.sth = sth;\n    }\n    ;\n    toPointing(mirror) {\n        const st = this.have_sth ? this.sth : Math.sqrt((1.0 - this.z) * (1.0 + this.z));\n        return new Pointing(null, false, Hploc.atan2(st, this.z), this._phi);\n    }\n    toVec3() {\n        var st = this.have_sth ? this.sth : Math.sqrt((1.0 - this.z) * (1.0 + this.z));\n        var vector = new Vec3(st * Hploc.cos(this.phi), st * Hploc.sin(this.phi), this.z);\n        // var vector = new Vec3(st*Math.cos(this.phi),st*Math.sin(this.phi),this.z);\n        return vector;\n    }\n    ;\n    toZphi() {\n        return new Zphi(this.z, this.phi);\n    }\n    static sin(d) {\n        let u = d * Hploc.M_1_PI;\n        let q = Math.floor(u < 0 ? u - 0.5 : u + 0.5);\n        let x = 4.0 * q;\n        d -= x * Hploc.PI4_A;\n        d -= x * Hploc.PI4_B;\n        d -= x * Hploc.PI4_C;\n        if ((q & 1) != 0) {\n            d = -d;\n        }\n        return this.sincoshelper(d);\n    }\n    ;\n    static cos(d) {\n        //\t\tlet u = d * Hploc.M_1_PI - 0.5;\n        let u = d * Hploc.M_1_PI - 0.5;\n        //\t\tu -= 0.5;\n        let q = 1 + 2 * Math.floor(u < 0 ? u - 0.5 : u + 0.5);\n        let x = 2.0 * q;\n        let t = x * Hploc.PI4_A;\n        d = d - t;\n        d -= x * Hploc.PI4_B;\n        d -= x * Hploc.PI4_C;\n        if ((q & 2) == 0) {\n            d = -d;\n        }\n        return Hploc.sincoshelper(d);\n    }\n    ;\n    static sincoshelper(d) {\n        let s = d * d;\n        let u = -7.97255955009037868891952e-18;\n        u = u * s + 2.81009972710863200091251e-15;\n        u = u * s - 7.64712219118158833288484e-13;\n        u = u * s + 1.60590430605664501629054e-10;\n        u = u * s - 2.50521083763502045810755e-08;\n        u = u * s + 2.75573192239198747630416e-06;\n        u = u * s - 0.000198412698412696162806809;\n        u = u * s + 0.00833333333333332974823815;\n        u = u * s - 0.166666666666666657414808;\n        return s * u * d + d;\n    }\n    ;\n    /** This method calculates the arc sine of x in radians. The return\n    value is in the range [-pi/2, pi/2]. The results may have\n    maximum error of 3 ulps. */\n    static asin(d) {\n        return Hploc.mulsign(Hploc.atan2k(Math.abs(d), Math.sqrt((1 + d) * (1 - d))), d);\n    }\n    ;\n    /** This method calculates the arc cosine of x in radians. The\n        return value is in the range [0, pi]. The results may have\n        maximum error of 3 ulps. */\n    static acos(d) {\n        return Hploc.mulsign(Hploc.atan2k(Math.sqrt((1 + d) * (1 - d)), Math.abs(d)), d) + (d < 0 ? Math.PI : 0);\n    }\n    ;\n    static mulsign(x, y) {\n        let sign = Hploc.copySign(1, y);\n        return sign * x;\n    }\n    ;\n    static copySign(magnitude, sign) {\n        return sign < 0 ? -Math.abs(magnitude) : Math.abs(magnitude);\n        // let finalsign = 1;\n        // if (Object.is(finalsign , -0)){\n        // \tsign = -1;\n        // }else if (Object.is(finalsign , 0)){\n        // \tsign = 1;\n        // }else {\n        // \tsign = Math.sign(finalsign);\n        // }\n        // return finalsign * magnitude;\n    }\n    static atanhelper(s) {\n        let t = s * s;\n        let u = -1.88796008463073496563746e-05;\n        u = u * t + (0.000209850076645816976906797);\n        u = u * t + (-0.00110611831486672482563471);\n        u = u * t + (0.00370026744188713119232403);\n        u = u * t + (-0.00889896195887655491740809);\n        u = u * t + (0.016599329773529201970117);\n        u = u * t + (-0.0254517624932312641616861);\n        u = u * t + (0.0337852580001353069993897);\n        u = u * t + (-0.0407629191276836500001934);\n        u = u * t + (0.0466667150077840625632675);\n        u = u * t + (-0.0523674852303482457616113);\n        u = u * t + (0.0587666392926673580854313);\n        u = u * t + (-0.0666573579361080525984562);\n        u = u * t + (0.0769219538311769618355029);\n        u = u * t + (-0.090908995008245008229153);\n        u = u * t + (0.111111105648261418443745);\n        u = u * t + (-0.14285714266771329383765);\n        u = u * t + (0.199999999996591265594148);\n        u = u * t + (-0.333333333333311110369124);\n        return u * t * s + s;\n    }\n    ;\n    static atan2k(y, x) {\n        let q = 0.;\n        if (x < 0) {\n            x = -x;\n            q = -2.;\n        }\n        if (y > x) {\n            let t = x;\n            x = y;\n            y = -t;\n            q += 1.;\n        }\n        return Hploc.atanhelper(y / x) + q * (Math.PI / 2);\n    }\n    ;\n    /** This method calculates the arc tangent of y/x in radians, using\n    the signs of the two arguments to determine the quadrant of the\n    result. The results may have maximum error of 2 ulps. */\n    static atan2(y, x) {\n        let r = Hploc.atan2k(Math.abs(y), x);\n        r = Hploc.mulsign(r, x);\n        if (Hploc.isinf(x) || x == 0) {\n            r = Math.PI / 2 - (Hploc.isinf(x) ? (Hploc.copySign(1, x) * (Math.PI / 2)) : 0);\n        }\n        if (Hploc.isinf(y)) {\n            r = Math.PI / 2 - (Hploc.isinf(x) ? (Hploc.copySign(1, x) * (Math.PI * 1 / 4)) : 0);\n        }\n        if (y == 0) {\n            r = (Hploc.copySign(1, x) == -1 ? Math.PI : 0);\n        }\n        return Hploc.isnan(x) || Hploc.isnan(y) ? NaN : Hploc.mulsign(r, y);\n    }\n    ;\n    /** Checks if the argument is a NaN or not. */\n    static isnan(d) {\n        return d != d;\n    }\n    ;\n    /** Checks if the argument is either positive or negative infinity. */\n    static isinf(d) {\n        return Math.abs(d) === +Infinity;\n    }\n    ;\n}\nHploc.PI4_A = 0.7853981554508209228515625;\nHploc.PI4_B = 0.794662735614792836713604629039764404296875e-8;\nHploc.PI4_C = 0.306161699786838294306516483068750264552437361480769e-16;\nHploc.M_1_PI = 0.3183098861837906715377675267450287;\n//# sourceMappingURL=Hploc.js.map","/**\n * Partial porting to Javascript of Vec3.java from Healpix3.30\n */\nimport { Hploc } from './Hploc.js';\nimport { Pointing } from './Pointing.js';\nexport class Vec3 {\n    constructor(in_x, in_y, in_z) {\n        if (in_x instanceof Pointing) {\n            let ptg = in_x;\n            let sth = Hploc.sin(ptg.theta);\n            this.x = sth * Hploc.cos(ptg.phi);\n            this.y = sth * Hploc.sin(ptg.phi);\n            this.z = Hploc.cos(ptg.theta);\n        }\n        else {\n            this.x = in_x;\n            this.y = in_y;\n            this.z = in_z;\n        }\n    }\n    getX() {\n        return this.x;\n    }\n    ;\n    getY() {\n        return this.y;\n    }\n    ;\n    getZ() {\n        return this.z;\n    }\n    ;\n    /** Scale the vector by a given factor\n    @param n the scale factor */\n    scale(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    ;\n    /** Vector cross product.\n    @param v another vector\n    @return the vector cross product between this vector and {@code v} */\n    cross(v) {\n        return new Vec3(this.y * v.z - v.y * this.z, this.z * v.x - v.z * this.x, this.x * v.y - v.x * this.y);\n    }\n    ;\n    /** Vector addition\n        * @param v the vector to be added\n        * @return addition result */\n    add(v) {\n        return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    ;\n    /** Normalize the vector */\n    normalize() {\n        let d = 1. / this.length();\n        this.x *= d;\n        this.y *= d;\n        this.z *= d;\n    }\n    ;\n    /** Return normalized vector */\n    norm() {\n        let d = 1. / this.length();\n        return new Vec3(this.x * d, this.y * d, this.z * d);\n    }\n    ;\n    /** Vector length\n    @return the length of the vector. */\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n    ;\n    /** Squared vector length\n        @return the squared length of the vector. */\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    ;\n    /** Computes the dot product of the this vector and {@code v1}.\n     * @param v1 another vector\n     * @return dot product */\n    dot(v1) {\n        return this.x * v1.x + this.y * v1.y + this.z * v1.z;\n    }\n    ;\n    /** Vector subtraction\n     * @param v the vector to be subtracted\n     * @return subtraction result */\n    sub(v) {\n        return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    ;\n    /** Angle between two vectors.\n    @param v1 another vector\n    @return the angle in radians between this vector and {@code v1};\n      constrained to the range [0,PI]. */\n    angle(v1) {\n        return Hploc.atan2(this.cross(v1).length(), this.dot(v1));\n    }\n    /** Invert the signs of all components */\n    flip() {\n        this.x *= -1.0;\n        this.y *= -1.0;\n        this.z *= -1.0;\n    }\n    static pointing2Vec3(pointing) {\n        let sth = Hploc.sin(pointing.theta);\n        let x = sth * Hploc.cos(pointing.phi);\n        let y = sth * Hploc.sin(pointing.phi);\n        let z = Hploc.cos(pointing.theta);\n        return new Vec3(x, y, z);\n    }\n    ;\n}\n//# sourceMappingURL=Vec3.js.map","import { Vec3 } from './Vec3.js';\nexport class CircleFinder {\n    /**\n     * @param point: Vec3\n     */\n    constructor(point) {\n        let np = point.length;\n        //HealpixUtils.check(np>=2,\"too few points\");\n        if (!(np >= 2)) {\n            console.log(\"too few points\");\n            return;\n        }\n        this.center = point[0].add(point[1]);\n        this.center.normalize();\n        this.cosrad = point[0].dot(this.center);\n        for (let i = 2; i < np; ++i) {\n            if (point[i].dot(this.center) < this.cosrad) { // point outside the current circle\n                this.getCircle(point, i);\n            }\n        }\n    }\n    ;\n    /**\n     * @parm point: Vec3\n     * @param q: int\n     */\n    getCircle(point, q) {\n        this.center = point[0].add(point[q]);\n        this.center.normalize();\n        this.cosrad = point[0].dot(this.center);\n        for (let i = 1; i < q; ++i) {\n            if (point[i].dot(this.center) < this.cosrad) { // point outside the current circle\n                this.getCircle2(point, i, q);\n            }\n        }\n    }\n    ;\n    /**\n     * @parm point: Vec3\n     * @param q1: int\n     * @param q2: int\n     */\n    getCircle2(point, q1, q2) {\n        this.center = point[q1].add(point[q2]);\n        this.center.normalize();\n        this.cosrad = point[q1].dot(this.center);\n        for (let i = 0; i < q1; ++i) {\n            if (point[i].dot(this.center) < this.cosrad) { // point outside the current circle\n                this.center = (point[q1].sub(point[i])).cross(point[q2].sub(point[i]));\n                this.center.normalize();\n                this.cosrad = point[i].dot(this.center);\n                if (this.cosrad < 0) {\n                    this.center.flip();\n                    this.cosrad = -this.cosrad;\n                }\n            }\n        }\n    }\n    ;\n    getCenter() {\n        return new Vec3(this.center.x, this.center.y, this.center.z);\n    }\n    getCosrad() {\n        return this.cosrad;\n    }\n    ;\n}\n//# sourceMappingURL=CircleFinder.js.map","/**\n * Partial porting to Javascript of Fxyf.java from Healpix3.30\n */\nimport { Hploc } from './Hploc.js';\nexport class Fxyf {\n    constructor(x, y, f) {\n        this.fx = x;\n        this.fy = y;\n        this.face = f;\n        // coordinate of the lowest corner of each face\n        this.jrll = new Uint8Array([2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4]);\n        this.jpll = new Uint8Array([1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7]);\n        this.halfpi = Math.PI / 2.;\n    }\n    toHploc() {\n        let loc = new Hploc();\n        let jr = this.jrll[this.face] - this.fx - this.fy;\n        let nr;\n        if (jr < 1) {\n            nr = jr;\n            let tmp = nr * nr / 3.;\n            loc.z = 1 - tmp;\n            if (loc.z > 0.99) {\n                loc.sth = Math.sqrt(tmp * (2.0 - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else if (jr > 3) {\n            nr = 4 - jr;\n            let tmp = nr * nr / 3.;\n            loc.z = tmp - 1;\n            if (loc.z < -0.99) {\n                loc.sth = Math.sqrt(tmp * (2.0 - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else {\n            nr = 1;\n            loc.z = (2 - jr) * 2.0 / 3.;\n        }\n        let tmp = this.jpll[this.face] * nr + this.fx - this.fy;\n        if (tmp < 0) {\n            tmp += 8;\n        }\n        if (tmp >= 8) {\n            tmp -= 8;\n        }\n        loc.phi = (nr < 1e-15) ? 0 : (0.5 * this.halfpi * tmp) / nr;\n        return loc;\n    }\n    ;\n    toVec3() {\n        return this.toHploc().toVec3();\n    }\n    ;\n}\n//# sourceMappingURL=Fxyf.js.map","export class pstack {\n    /** Creation from individual components */\n    constructor(sz) {\n        this.p = new Array(sz);\n        this.o = new Int32Array(sz);\n        this.s = 0;\n        this.m = 0;\n    }\n    ;\n    /**\n     * @param p long\n     * @param o int\n     */\n    push(p_, o_) {\n        this.p[this.s] = p_;\n        this.o[this.s] = o_;\n        ++this.s;\n    }\n    ;\n    pop() {\n        --this.s;\n    }\n    ;\n    popToMark() {\n        this.s = this.m;\n    }\n    ;\n    size() {\n        return this.s;\n    }\n    ;\n    mark() {\n        this.m = this.s;\n    }\n    ;\n    otop() {\n        return this.o[this.s - 1];\n    }\n    ;\n    ptop() {\n        return this.p[this.s - 1];\n    }\n    ;\n}\n//# sourceMappingURL=pstack.js.map","export class RangeSet {\n    /**\n     * @param int cap: initial capacity\n     */\n    constructor(cap) {\n        if (cap < 0)\n            console.error(\"capacity must be positive\");\n        this.r = new Int32Array(cap << 1);\n        this.sz = 0;\n    }\n    ;\n    /** Append a single-value range to the object.\n    @param val value to append */\n    append(val) {\n        this.append1(val, val + 1);\n    }\n    ;\n    /** Append a range to the object.\n   @param a first long in range\n   @param b one-after-last long in range */\n    append1(a, b) {\n        if (a >= b)\n            return;\n        if ((this.sz > 0) && (a <= this.r[this.sz - 1])) {\n            if (a < this.r[this.sz - 2])\n                console.error(\"bad append operation\");\n            if (b > this.r[this.sz - 1])\n                this.r[this.sz - 1] = b;\n            return;\n        }\n        // this.ensureCapacity(this.sz+2);\n        let cap = this.sz + 2;\n        if (this.r.length < cap) {\n            let newsize = Math.max(2 * this.r.length, cap);\n            let rnew = new Int32Array(newsize);\n            rnew.set(this.r);\n            this.r = rnew;\n        }\n        this.r[this.sz] = a;\n        this.r[this.sz + 1] = b;\n        this.sz += 2;\n    }\n    ;\n    /** Make sure the object can hold at least the given number of entries.\n     * @param cap int\n     * */\n    ensureCapacity(cap) {\n        if (this.r.length < cap)\n            this.resize(Math.max(2 * this.r.length, cap));\n    }\n    ;\n    /**\n     * @param newsize int\n     */\n    resize(newsize) {\n        if (newsize < this.sz)\n            console.error(\"requested array size too small\");\n        if (newsize == this.r.length)\n            return;\n        let rnew = new Int32Array(newsize);\n        let sliced = this.r.slice(0, this.sz + 1);\n        //\t\tthis.arrayCopy(this.r, 0, rnew, 0, this.sz);\n        this.r = sliced;\n    }\n    ;\n}\n//# sourceMappingURL=RangeSet.js.map","/**\n * Partial porting to Javascript of Xyf.java from Healpix3.30\n */\nexport class Xyf {\n    constructor(x, y, f) {\n        this.ix = x;\n        this.iy = y;\n        this.face = f;\n    }\n}\n//# sourceMappingURL=Xyf.js.map","\"use strict\";\nimport { CircleFinder } from \"./CircleFinder.js\";\nimport { Constants } from \"./Constants.js\";\nimport { Fxyf } from \"./Fxyf.js\";\nimport { Hploc } from \"./Hploc.js\";\nimport { Pointing } from \"./Pointing.js\";\nimport { pstack } from \"./pstack.js\";\nimport { RangeSet } from \"./RangeSet.js\";\nimport { Vec3 } from \"./Vec3.js\";\nimport { Xyf } from \"./Xyf.js\";\nimport { Zphi } from \"./Zphi.js\";\n/**\n * Partial porting to Javascript of HealpixBase.java from Healpix3.30\n */\n// import Fxyf from './Fxyf.js';\n// import Hploc from './Hploc.js';\n// import Xyf from './Xyf.js';\n// import Vec3 from './Vec3.js';\n// import Pointing from './Pointing.js';\n// import CircleFinder from './CircleFinder.js';\n// import Zphi from './Zphi.js';\n// import pstack from './pstack.js';\n// import Constants from './Constants.js';\n// import RangeSet from './RangeSet.js';\nexport class Healpix {\n    constructor(nside_in) {\n        this.order_max = 29;\n        this.inv_halfpi = 2.0 / Math.PI;\n        this.twothird = 2.0 / 3.;\n        // console.log(\"twothird \"+this.twothird);\n        // this.ns_max=1L<<order_max;\n        this.ns_max = Math.pow(2, this.order_max);\n        this.ctab = new Uint16Array([\n            0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262,\n            263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283,\n            1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286,\n            1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520,\n            521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526,\n            527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546,\n            1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805,\n            1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816,\n            2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565,\n            2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584,\n            3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335,\n            3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314,\n            2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063,\n            2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082,\n            3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341,\n            3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855\n        ]);\n        this.utab = new Uint16Array([0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277,\n            320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088,\n            1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301,\n            1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116,\n            4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369,\n            4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136,\n            5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381,\n            5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388,\n            16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469,\n            16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720,\n            16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473,\n            17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684,\n            17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485,\n            20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736,\n            20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817,\n            20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572,\n            21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781,\n            21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845]);\n        this.jrll = new Int16Array([2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4]);\n        this.jpll = new Int16Array([1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7]);\n        this.xoffset = new Int16Array([-1, -1, 0, 1, 1, 1, 0, -1]);\n        this.yoffset = new Int16Array([0, 1, 1, 1, 0, -1, -1, -1]);\n        this.facearray = [\n            new Int16Array([8, 9, 10, 11, -1, -1, -1, -1, 10, 11, 8, 9]),\n            new Int16Array([5, 6, 7, 4, 8, 9, 10, 11, 9, 10, 11, 8]),\n            new Int16Array([-1, -1, -1, -1, 5, 6, 7, 4, -1, -1, -1, -1]),\n            new Int16Array([4, 5, 6, 7, 11, 8, 9, 10, 11, 8, 9, 10]),\n            new Int16Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),\n            new Int16Array([1, 2, 3, 0, 0, 1, 2, 3, 5, 6, 7, 4]),\n            new Int16Array([-1, -1, -1, -1, 7, 4, 5, 6, -1, -1, -1, -1]),\n            new Int16Array([3, 0, 1, 2, 3, 0, 1, 2, 4, 5, 6, 7]),\n            new Int16Array([2, 3, 0, 1, -1, -1, -1, -1, 0, 1, 2, 3]) // N\n        ];\n        // questo forse deve essere un UInt8Array. Viene usato da neighbours\n        this.swaparray = [\n            new Int16Array([0, 0, 3]),\n            new Int16Array([0, 0, 6]),\n            new Int16Array([0, 0, 0]),\n            new Int16Array([0, 0, 5]),\n            new Int16Array([0, 0, 0]),\n            new Int16Array([5, 0, 0]),\n            new Int16Array([0, 0, 0]),\n            new Int16Array([6, 0, 0]),\n            new Int16Array([3, 0, 0]) // N\n        ];\n        if (nside_in <= this.ns_max && nside_in > 0) {\n            this.nside = nside_in;\n            this.npface = this.nside * this.nside;\n            this.npix = 12 * this.npface;\n            this.order = this.nside2order(this.nside);\n            this.nl2 = 2 * this.nside;\n            this.nl3 = 3 * this.nside;\n            this.nl4 = 4 * this.nside;\n            this.fact2 = 4.0 / this.npix;\n            this.fact1 = (this.nside << 1) * this.fact2;\n            this.ncap = 2 * this.nside * (this.nside - 1); // pixels in each polar cap\n            // console.log(\"order: \"+this.order);\n            // console.log(\"nside: \"+this.nside);\n        }\n        this.bn = [];\n        this.mpr = [];\n        this.cmpr = [];\n        this.smpr = [];\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // TODO INFINITE LOOP!!!!!! FIX ITTTTTTTTTT\n        // Uncaught RangeError: Maximum call stack size exceeded\n        // MOVED TO computeBn()\n        //        for (let i=0; i <= this.order_max; ++i) {\n        //        \tthis.bn[i]=new Healpix(1<<i);\n        //        \tthis.mpr[i]=bn[i].maxPixrad();\n        //        \tthis.cmpr[i]=Math.cos(mpr[i]);\n        //        \tthis.smpr[i]=Math.sin(mpr[i]);\n        //        }\n    }\n    computeBn() {\n        for (let i = 0; i <= this.order_max; ++i) {\n            this.bn[i] = new Healpix(1 << i);\n            this.mpr[i] = this.bn[i].maxPixrad();\n            this.cmpr[i] = Hploc.cos(this.mpr[i]);\n            this.smpr[i] = Hploc.sin(this.mpr[i]);\n        }\n    }\n    getNPix() {\n        return this.npix;\n    }\n    ;\n    getBoundaries(pix) {\n        let points = new Array();\n        let xyf = this.nest2xyf(pix);\n        let dc = 0.5 / this.nside;\n        let xc = (xyf.ix + 0.5) / this.nside;\n        let yc = (xyf.iy + 0.5) / this.nside;\n        points[0] = new Fxyf(xc + dc, yc + dc, xyf.face).toVec3();\n        points[1] = new Fxyf(xc - dc, yc + dc, xyf.face).toVec3();\n        points[2] = new Fxyf(xc - dc, yc - dc, xyf.face).toVec3();\n        points[3] = new Fxyf(xc + dc, yc - dc, xyf.face).toVec3();\n        return points;\n    }\n    ;\n    /** Returns a set of points along the boundary of the given pixel.\n     * Step 1 gives 4 points on the corners. The first point corresponds\n     * to the northernmost corner, the subsequent points follow the pixel\n     * boundary through west, south and east corners.\n     *\n     * @param pix pixel index number\n     * @param step the number of returned points is 4*step\n     * @return {@link Vec3} for each point\n     */\n    getBoundariesWithStep(pix, step) {\n        // var points = new Array(); \n        let points = new Array();\n        let xyf = this.nest2xyf(pix);\n        let dc = 0.5 / this.nside;\n        let xc = (xyf.ix + 0.5) / this.nside;\n        let yc = (xyf.iy + 0.5) / this.nside;\n        let d = 1.0 / (this.nside * step);\n        for (let i = 0; i < step; i++) {\n            points[i] = new Fxyf(xc + dc - i * d, yc + dc, xyf.face).toVec3();\n            points[i + step] = new Fxyf(xc - dc, yc + dc - i * d, xyf.face).toVec3();\n            points[i + 2 * step] = new Fxyf(xc - dc + i * d, yc - dc, xyf.face).toVec3();\n            points[i + 3 * step] = new Fxyf(xc + dc, yc - dc + i * d, xyf.face).toVec3();\n        }\n        return points;\n    }\n    ;\n    getPointsForXyfNoStep(x, y, face) {\n        // let nside = Math.pow(2, this.order);\n        let points = new Array();\n        let xyf = new Xyf(x, y, face);\n        let dc = 0.5 / this.nside;\n        let xc = (xyf.ix + 0.5) / this.nside;\n        let yc = (xyf.iy + 0.5) / this.nside;\n        points[0] = new Fxyf(xc + dc, yc + dc, xyf.face).toVec3();\n        points[1] = new Fxyf(xc - dc, yc + dc, xyf.face).toVec3();\n        points[2] = new Fxyf(xc - dc, yc - dc, xyf.face).toVec3();\n        points[3] = new Fxyf(xc + dc, yc - dc, xyf.face).toVec3();\n        return points;\n    }\n    getPointsForXyf(x, y, step, face) {\n        let nside = step * Math.pow(2, this.order);\n        let points = new Array();\n        let xyf = new Xyf(x, y, face);\n        let dc = 0.5 / nside;\n        let xc = (xyf.ix + 0.5) / nside;\n        let yc = (xyf.iy + 0.5) / nside;\n        points[0] = new Fxyf(xc + dc, yc + dc, xyf.face).toVec3();\n        points[1] = new Fxyf(xc - dc, yc + dc, xyf.face).toVec3();\n        points[2] = new Fxyf(xc - dc, yc - dc, xyf.face).toVec3();\n        points[3] = new Fxyf(xc + dc, yc - dc, xyf.face).toVec3();\n        return points;\n    }\n    /** Returns the neighboring pixels of ipix.\n    This method works in both RING and NEST schemes, but is\n    considerably faster in the NEST scheme.\n    @param ipix the requested pixel number.\n    @return array with indices of the neighboring pixels.\n      The returned array contains (in this order)\n      the pixel numbers of the SW, W, NW, N, NE, E, SE and S neighbor\n      of ipix. If a neighbor does not exist (this can only happen\n      for the W, N, E and S neighbors), its entry is set to -1. */\n    neighbours(ipix) {\n        let result = new Int32Array(8);\n        let xyf = this.nest2xyf(ipix);\n        let ix = xyf.ix;\n        let iy = xyf.iy;\n        let face_num = xyf.face;\n        var nsm1 = this.nside - 1;\n        if ((ix > 0) && (ix < nsm1) && (iy > 0) && (iy < nsm1)) {\n            let fpix = Math.floor(face_num << (2 * this.order));\n            let px0 = this.spread_bits(ix);\n            let py0 = this.spread_bits(iy) << 1;\n            let pxp = this.spread_bits(ix + 1);\n            let pyp = this.spread_bits(iy + 1) << 1;\n            let pxm = this.spread_bits(ix - 1);\n            let pym = this.spread_bits(iy - 1) << 1;\n            result[0] = fpix + pxm + py0;\n            result[1] = fpix + pxm + pyp;\n            result[2] = fpix + px0 + pyp;\n            result[3] = fpix + pxp + pyp;\n            result[4] = fpix + pxp + py0;\n            result[5] = fpix + pxp + pym;\n            result[6] = fpix + px0 + pym;\n            result[7] = fpix + pxm + pym;\n        }\n        else {\n            for (let i = 0; i < 8; ++i) {\n                let x = ix + this.xoffset[i];\n                let y = iy + this.yoffset[i];\n                let nbnum = 4;\n                if (x < 0) {\n                    x += this.nside;\n                    nbnum -= 1;\n                }\n                else if (x >= this.nside) {\n                    x -= this.nside;\n                    nbnum += 1;\n                }\n                if (y < 0) {\n                    y += this.nside;\n                    nbnum -= 3;\n                }\n                else if (y >= this.nside) {\n                    y -= this.nside;\n                    nbnum += 3;\n                }\n                let f = this.facearray[nbnum][face_num];\n                if (f >= 0) {\n                    let bits = this.swaparray[nbnum][face_num >>> 2];\n                    if ((bits & 1) > 0) {\n                        x = Math.floor(this.nside - x - 1);\n                    }\n                    if ((bits & 2) > 0) {\n                        y = Math.floor(this.nside - y - 1);\n                    }\n                    if ((bits & 4) > 0) {\n                        let tint = x;\n                        x = y;\n                        y = tint;\n                    }\n                    result[i] = this.xyf2nest(x, y, f);\n                }\n                else {\n                    result[i] = -1;\n                }\n            }\n        }\n        return result;\n    }\n    ;\n    nside2order(nside) {\n        return ((nside & (nside - 1)) != 0) ? -1 : Math.log2(nside);\n    }\n    ;\n    nest2xyf(ipix) {\n        let pix = Math.floor(ipix & (this.npface - 1));\n        let xyf = new Xyf(this.compress_bits(pix), this.compress_bits(pix >> 1), Math.floor((ipix >> (2 * this.order))));\n        return xyf;\n    }\n    ;\n    xyf2nest(ix, iy, face_num) {\n        return Math.floor(face_num << (2 * this.order))\n            + this.spread_bits(ix) + (this.spread_bits(iy) << 1);\n    }\n    ;\n    loc2pix(hploc) {\n        let z = hploc.z;\n        let phi = hploc.phi;\n        let za = Math.abs(z);\n        let tt = this.fmodulo((phi * this.inv_halfpi), 4.0); // in [0,4)\n        let pixNo;\n        if (za <= this.twothird) { // Equatorial region\n            let temp1 = this.nside * (0.5 + tt);\n            let temp2 = this.nside * (z * 0.75);\n            let jp = Math.floor(temp1 - temp2); // index of ascending edge line\n            let jm = Math.floor(temp1 + temp2); // index of descending edge line\n            let ifp = Math.floor(jp >>> this.order); // in {0,4}\n            let ifm = Math.floor(jm >>> this.order);\n            let face_num = Math.floor((ifp == ifm) ? (ifp | 4) : ((ifp < ifm) ? ifp : (ifm + 8)));\n            let ix = Math.floor(jm & (this.nside - 1));\n            let iy = Math.floor(this.nside - (jp & (this.nside - 1)) - 1);\n            pixNo = this.xyf2nest(ix, iy, face_num);\n        }\n        else { // polar region, za > 2/3\n            let ntt = Math.min(3, Math.floor(tt));\n            let tp = tt - ntt;\n            let tmp = ((za < 0.99) || (!hploc.have_sth)) ?\n                this.nside * Math.sqrt(3 * (1 - za)) :\n                this.nside * hploc.sth / Math.sqrt((1.0 + za) / 3.);\n            let jp = Math.floor(tp * tmp); // increasing edge line index\n            let jm = Math.floor((1.0 - tp) * tmp); // decreasing edge line index\n            if (jp >= this.nside) {\n                jp = this.nside - 1; // for points too close to the boundary\n            }\n            if (jm >= this.nside) {\n                jm = this.nside - 1;\n            }\n            if (z >= 0) {\n                pixNo = this.xyf2nest(Math.floor(this.nside - jm - 1), Math.floor(this.nside - jp - 1), ntt);\n            }\n            else {\n                pixNo = this.xyf2nest(Math.floor(jp), Math.floor(jm), ntt + 8);\n            }\n        }\n        return pixNo;\n    }\n    ;\n    /** Returns the normalized 3-vector corresponding to the center of the\n    supplied pixel.\n    @param pix long the requested pixel number.\n    @return the pixel's center coordinates. */\n    pix2vec(pix) {\n        return this.pix2loc(pix).toVec3();\n    }\n    ;\n    /** Returns the Zphi corresponding to the center of the supplied pixel.\n     @param pix the requested pixel number.\n     @return the pixel's center coordinates. */\n    pix2zphi(pix) {\n        return this.pix2loc(pix).toZphi();\n    }\n    pix2ang(pix, mirror) {\n        return this.pix2loc(pix).toPointing(mirror);\n    }\n    /**\n     * @param pix long\n     * @return Hploc\n     */\n    pix2loc(pix) {\n        let loc = new Hploc(undefined);\n        let xyf = this.nest2xyf(pix);\n        let jr = ((this.jrll[xyf.face]) << this.order) - xyf.ix - xyf.iy - 1;\n        let nr;\n        if (jr < this.nside) {\n            nr = jr;\n            let tmp = (nr * nr) * this.fact2;\n            loc.z = 1 - tmp;\n            if (loc.z > 0.99) {\n                loc.sth = Math.sqrt(tmp * (2. - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else if (jr > this.nl3) {\n            nr = this.nl4 - jr;\n            let tmp = (nr * nr) * this.fact2;\n            loc.z = tmp - 1;\n            if (loc.z < -0.99) {\n                loc.sth = Math.sqrt(tmp * (2. - tmp));\n                loc.have_sth = true;\n            }\n        }\n        else {\n            nr = this.nside;\n            loc.z = (this.nl2 - jr) * this.fact1;\n        }\n        let tmp = (this.jpll[xyf.face]) * nr + xyf.ix - xyf.iy;\n        //      \tassert(tmp<8*nr); // must not happen\n        if (tmp < 0) {\n            tmp += 8 * nr;\n        }\n        loc.phi = (nr == this.nside) ? 0.75 * Constants.halfpi * tmp * this.fact1 : (0.5 * Constants.halfpi * tmp) / nr;\n        // loc.setPhi((nr == this.nside) ? 0.75 * Constants.halfpi * tmp * this.fact1 : (0.5 * Constants.halfpi * tmp)/nr);\n        return loc;\n    }\n    ;\n    za2vec(z, a) {\n        const sin_theta = Math.sqrt(1 - z * z);\n        const X = sin_theta * Math.cos(a);\n        const Y = sin_theta * Math.sin(a);\n        return new Vec3(X, Y, z);\n    }\n    ang2vec(theta, phi) {\n        const z = Math.cos(theta);\n        return this.za2vec(z, phi);\n    }\n    vec2ang(v) {\n        const { z, a } = this.vec2za(v.getX(), v.getY(), v.getZ());\n        return { theta: Math.acos(z), phi: a };\n    }\n    vec2za(X, Y, z) {\n        const r2 = X * X + Y * Y;\n        if (r2 == 0)\n            return { z: z < 0 ? -1 : 1, a: 0 };\n        else {\n            const PI2 = Math.PI / 2;\n            const a = (Math.atan2(Y, X) + PI2) % PI2;\n            z /= Math.sqrt(z * z + r2);\n            return { z, a };\n        }\n    }\n    ang2pix(ptg, mirror) {\n        return this.loc2pix(new Hploc(ptg));\n    }\n    ;\n    fmodulo(v1, v2) {\n        if (v1 >= 0) {\n            return (v1 < v2) ? v1 : v1 % v2;\n        }\n        var tmp = v1 % v2 + v2;\n        return (tmp === v2) ? 0.0 : tmp;\n    }\n    ;\n    compress_bits(v) {\n        var raw = Math.floor((v & 0x5555)) | Math.floor(((v & 0x55550000) >>> 15));\n        var compressed = this.ctab[raw & 0xff] | (this.ctab[raw >>> 8] << 4);\n        return compressed;\n    }\n    ;\n    spread_bits(v) {\n        return Math.floor(this.utab[v & 0xff]) | Math.floor((this.utab[(v >>> 8) & 0xff] << 16))\n            | Math.floor((this.utab[(v >>> 16) & 0xff] << 32)) | Math.floor((this.utab[(v >>> 24) & 0xff] << 48));\n    }\n    ;\n    /**\n     * Returns a range set of pixels that overlap with the convex polygon\n     * defined by the {@code vertex} array.\n     * <p>\n     * This method is more efficient in the RING scheme.\n     * <p>\n     * This method may return some pixels which don't overlap with the polygon\n     * at all. The higher {@code fact} is chosen, the fewer false positives are\n     * returned, at the cost of increased run time.\n     *\n     * @param vertex\n     *            an array containing the vertices of the requested convex\n     *            polygon.\n     * @param fact\n     *            The overlapping test will be done at the resolution\n     *            {@code fact*nside}. For NESTED ordering, {@code fact} must be\n     *            a power of 2, else it can be any positive integer. A typical\n     *            choice would be 4.\n     * @return the requested set of pixel number ranges\n     */\n    queryPolygonInclusive(vertex, fact) {\n        let inclusive = (fact != 0);\n        let nv = vertex.length;\n        //        let ncirc = inclusive ? nv+1 : nv;\n        if (!(nv >= 3)) {\n            console.log(\"not enough vertices in polygon\");\n            return;\n        }\n        let vv = new Array();\n        for (let i = 0; i < nv; ++i) {\n            vv[i] = Vec3.pointing2Vec3(vertex[i]);\n        }\n        let normal = new Array();\n        let flip = 0;\n        let index = 0;\n        let back = false;\n        while (index < vv.length) {\n            let first = vv[index];\n            let medium = null;\n            let last = null;\n            if (index == vv.length - 1) {\n                last = vv[1];\n                medium = vv[0];\n            }\n            else if (index == vv.length - 2) {\n                last = vv[0];\n                medium = vv[index + 1];\n            }\n            else {\n                medium = vv[index + 1];\n                last = vv[index + 2];\n            }\n            normal[index] = first.cross(medium).norm();\n            let hnd = normal[index].dot(last);\n            if (index == 0) {\n                flip = (hnd < 0.) ? -1 : 1;\n                let tmp = new Pointing(first); // TODO not used\n                back = false;\n            }\n            else {\n                let flipThnd = flip * hnd;\n                if (flipThnd < 0) {\n                    let tmp = new Pointing(medium);\n                    vv.splice(index + 1, 1);\n                    normal.splice(index, 1);\n                    back = true;\n                    index -= 1;\n                    continue;\n                }\n                else {\n                    let tmp = new Pointing(first);\n                    back = false;\n                }\n            }\n            normal[index].scale(flip);\n            index += 1;\n        }\n        nv = vv.length;\n        let ncirc = inclusive ? nv + 1 : nv;\n        let rad = new Array(ncirc);\n        rad = rad.fill(Constants.halfpi);\n        //        rad = rad.fill(1.5707963267948966);\n        //        let p = \"1.5707963267948966\";\n        //        rad = rad.fill(parseFloat(p));\n        if (inclusive) {\n            let cf = new CircleFinder(vv);\n            normal[nv] = cf.getCenter();\n            rad[nv] = Hploc.acos(cf.getCosrad());\n        }\n        return this.queryMultiDisc(normal, rad, fact);\n    }\n    ;\n    /**\n     * For NEST schema only\n     *\n     * @param normal:\n     *            Vec3[]\n     * @param rad:\n     *            Float32Array\n     * @param fact:\n     *            The overlapping test will be done at the resolution\n     *            {@code fact*nside}. For NESTED ordering, {@code fact} must be\n     *            a power of 2, else it can be any positive integer. A typical\n     *            choice would be 4.\n     * @return RangeSet the requested set of pixel number ranges\n     */\n    queryMultiDisc(norm, rad, fact) {\n        this.computeBn();\n        let inclusive = (fact != 0);\n        let nv = norm.length;\n        // HealpixUtils.check(nv==rad.lengt0,\"inconsistent input arrays\");\n        if (!(nv == rad.length)) {\n            console.error(\"inconsistent input arrays\");\n            return;\n        }\n        let res = new RangeSet(4 << 1);\n        // Removed code for Scheme.RING\n        let oplus = 0;\n        if (inclusive) {\n            if (!(Math.pow(2, this.order_max - this.order) >= fact)) {\n                console.error(\"invalid oversampling factor\");\n            }\n            if (!((fact & (fact - 1)) == 0)) {\n                console.error(\"oversampling factor must be a power of 2\");\n            }\n            oplus = this.ilog2(fact);\n        }\n        let omax = this.order + oplus; // the order up to which we test\n        // TODO: ignore all disks with radius>=pi\n        //        let crlimit = new Float32Array[omax+1][nv][3];\n        let crlimit = new Array(omax + 1);\n        let o;\n        let i;\n        for (o = 0; o <= omax; ++o) { // prepare data at the required orders\n            crlimit[o] = new Array(nv);\n            let dr = this.bn[o].maxPixrad(); // safety distance\n            for (i = 0; i < nv; ++i) {\n                crlimit[o][i] = new Float64Array(3);\n                crlimit[o][i][0] = (rad[i] + dr > Math.PI) ? -1 : Hploc.cos(rad[i] + dr);\n                crlimit[o][i][1] = (o == 0) ? Hploc.cos(rad[i]) : crlimit[0][i][1];\n                crlimit[o][i][2] = (rad[i] - dr < 0.) ? 1. : Hploc.cos(rad[i] - dr);\n            }\n        }\n        let stk = new pstack(12 + 3 * omax);\n        for (let i = 0; i < 12; i++) { // insert the 12 base pixels in reverse\n            // order\n            stk.push(11 - i, 0);\n        }\n        while (stk.size() > 0) { // as long as there are pixels on the stack\n            // pop current pixel number and order from the stack\n            let pix = stk.ptop();\n            let o = stk.otop();\n            stk.pop();\n            let pv = this.bn[o].pix2vec(pix);\n            let zone = 3;\n            for (let i = 0; (i < nv) && (zone > 0); ++i) {\n                let crad = pv.dot(norm[i]);\n                for (let iz = 0; iz < zone; ++iz) {\n                    if (crad < crlimit[o][i][iz]) {\n                        zone = iz;\n                    }\n                }\n            }\n            if (zone > 0) {\n                this.check_pixel(o, omax, zone, res, pix, stk, inclusive);\n            }\n        }\n        return res;\n    }\n    ;\n    /** Integer base 2 logarithm.\n    @param arg\n    @return the largest integer {@code n} that fulfills {@code 2^n<=arg}.\n    For negative arguments and zero, 0 is returned. */\n    ilog2(arg) {\n        let max = Math.max(arg, 1);\n        return 31 - Math.clz32(max);\n    }\n    ;\n    /** Computes the cosine of the angular distance between two z, phi positions\n      on the unit sphere. */\n    cosdist_zphi(z1, phi1, z2, phi2) {\n        return z1 * z2 + Hploc.cos(phi1 - phi2) * Math.sqrt((1.0 - z1 * z1) * (1.0 - z2 * z2));\n    }\n    /**\n     * @param int o\n     * @param int omax\n     * @param int zone\n     * @param RangeSet pixset\n     * @param long pix\n     * @param pstack stk\n     * @param boolean inclusive\n     */\n    check_pixel(o, omax, zone, pixset, pix, stk, inclusive) {\n        if (zone == 0)\n            return;\n        if (o < this.order) {\n            if (zone >= 3) { // output all subpixels\n                let sdist = 2 * (this.order - o); // the \"bit-shift distance\" between map orders\n                pixset.append1(pix << sdist, ((pix + 1) << sdist));\n            }\n            else { // (zone>=1)\n                for (let i = 0; i < 4; ++i) {\n                    stk.push(4 * pix + 3 - i, o + 1); // add children\n                }\n            }\n        }\n        else if (o > this.order) { // this implies that inclusive==true\n            if (zone >= 2) { // pixel center in shape\n                pixset.append(pix >>> (2 * (o - this.order))); // output the parent pixel at order\n                stk.popToMark(); // unwind the stack\n            }\n            else { // (zone>=1): pixel center in safety range\n                if (o < omax) { // check sublevels\n                    for (let i = 0; i < 4; ++i) { // add children in reverse order\n                        stk.push(4 * pix + 3 - i, o + 1); // add children\n                    }\n                }\n                else { // at resolution limit\n                    pixset.append(pix >>> (2 * (o - this.order))); // output the parent pixel at order\n                    stk.popToMark(); // unwind the stack\n                }\n            }\n        }\n        else { // o==order\n            if (zone >= 2) {\n                pixset.append(pix);\n            }\n            else if (inclusive) { // and (zone>=1)\n                if (this.order < omax) { // check sublevels\n                    stk.mark(); // remember current stack position\n                    for (let i = 0; i < 4; ++i) { // add children in reverse order\n                        stk.push(4 * pix + 3 - i, o + 1); // add children\n                    }\n                }\n                else { // at resolution limit\n                    pixset.append(pix); // output the pixel\n                }\n            }\n        }\n    }\n    /** Returns the maximum angular distance between a pixel center and its\n    corners.\n    @return maximum angular distance between a pixel center and its\n      corners. */\n    maxPixrad() {\n        let zphia = new Zphi(2. / 3., Math.PI / this.nl4);\n        let xyz1 = this.convertZphi2xyz(zphia);\n        let va = new Vec3(xyz1[0], xyz1[1], xyz1[2]);\n        let t1 = 1. - 1. / this.nside;\n        t1 *= t1;\n        let zphib = new Zphi(1 - t1 / 3, 0);\n        let xyz2 = this.convertZphi2xyz(zphib);\n        let vb = new Vec3(xyz2[0], xyz2[1], xyz2[2]);\n        return va.angle(vb);\n    }\n    ;\n    /**\n     * this is a workaround replacing the Vec3(Zphi) constructor.\n     */\n    convertZphi2xyz(zphi) {\n        let sth = Math.sqrt((1.0 - zphi.z) * (1.0 + zphi.z));\n        let x = sth * Hploc.cos(zphi.phi);\n        let y = sth * Hploc.sin(zphi.phi);\n        let z = zphi.z;\n        return [x, y, z];\n    }\n    ;\n    /** Returns a range set of pixels which overlap with a given disk. <p>\n      This method is more efficient in the RING scheme. <p>\n      This method may return some pixels which don't overlap with\n      the polygon at all. The higher {@code fact} is chosen, the fewer false\n      positives are returned, at the cost of increased run time.\n      @param ptg the angular coordinates of the disk center\n      @param radius the radius (in radians) of the disk\n      @param fact The overlapping test will be done at the resolution\n        {@code fact*nside}. For NESTED ordering, {@code fact} must be a power\n        of 2, else it can be any positive integer. A typical choice would be 4.\n      @return the requested set of pixel number ranges  */\n    queryDiscInclusive(ptg, radius, fact) {\n        this.computeBn();\n        let inclusive = (fact != 0);\n        let pixset = new RangeSet();\n        if (radius >= Math.PI) { // disk covers the whole sphere\n            pixset.append1(0, this.npix);\n            return pixset;\n        }\n        let oplus = 0;\n        if (inclusive) {\n            // HealpixUtils.check ((1L<<order_max)>=fact,\"invalid oversampling factor\");\n            if (!((fact & (fact - 1)) == 0)) {\n                console.error(\"oversampling factor must be a power of 2\");\n            }\n            oplus = this.ilog2(fact);\n        }\n        let omax = Math.min(this.order_max, this.order + oplus); // the order up to which we test\n        let vptg = Vec3.pointing2Vec3(ptg);\n        let crpdr = new Array(omax + 1);\n        let crmdr = new Array(omax + 1);\n        let cosrad = Hploc.cos(radius);\n        let sinrad = Hploc.sin(radius);\n        for (let o = 0; o <= omax; o++) { // prepare data at the required orders\n            let dr = this.mpr[o]; // safety distance\n            let cdr = this.cmpr[o];\n            let sdr = this.smpr[o];\n            crpdr[o] = (radius + dr > Math.PI) ? -1. : cosrad * cdr - sinrad * sdr;\n            crmdr[o] = (radius - dr < 0.) ? 1. : cosrad * cdr + sinrad * sdr;\n        }\n        let stk = new pstack(12 + 3 * omax);\n        for (let i = 0; i < 12; i++) { // insert the 12 base pixels in reverse order\n            stk.push(11 - i, 0);\n        }\n        while (stk.size() > 0) { // as long as there are pixels on the stack\n            // pop current pixel number and order from the stack\n            let pix = stk.ptop();\n            let curro = stk.otop();\n            stk.pop();\n            let pos = this.bn[curro].pix2zphi(pix);\n            // cosine of angular distance between pixel center and disk center\n            let cangdist = this.cosdist_zphi(vptg.z, ptg.phi, pos.z, pos.phi);\n            if (cangdist > crpdr[curro]) {\n                let zone = (cangdist < cosrad) ? 1 : ((cangdist <= crmdr[curro]) ? 2 : 3);\n                this.check_pixel(curro, omax, zone, pixset, pix, stk, inclusive);\n            }\n        }\n        return pixset;\n    }\n}\n//# sourceMappingURL=Healpix.js.map","export const hipsNodes: string[] = [\n  \"https://skies.esac.esa.int/\",\n  \"https://alasky.cds.unistra.fr/\",\n];\n\n// If you want to re-enable multiple TAP repos, just uncomment and extend the array\n// export const tapRepos: string[] = [\n//   \"https://archive.eso.org/tap_cat/\",\n//   \"https://archive.eso.org/tap_obs/\",\n//   \"https://sky.esa.int/esasky-tap/tap/\",\n//   \"https://ws.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/argus\",\n// ];\n\nexport const tapRepos: string[] = [\n  \"https://sky.esa.int/esasky-tap/tap/\",\n];\n\nexport interface BootSetup {\n  insideSphere: boolean;\n  defaultHips: string;\n  camera_fov_deg: number;\n  camera_fov_rad: number;\n  camera_near_plane: number;\n  camera_far_plane: number;\n  corsProxyUrl: string;\n  useCORSProxy: boolean;\n  maxDecimals: number;\n  defaultHipsUrl: string;\n  version: string;\n  debug: boolean;\n  insideView: boolean;\n}\n\nexport const bootSetup: BootSetup = {\n  insideSphere: false,\n  defaultHips: \"\",\n  camera_fov_deg: 34,\n  camera_fov_rad: 34 * Math.PI / 180.0,\n  camera_near_plane: 0.00001,\n  camera_far_plane: 2.5,\n  corsProxyUrl: \"http://localhost:4000/\",\n  useCORSProxy: false,\n  maxDecimals: 15,\n  // defaultHipsUrl: \"//alasky.u-strasbg.fr/DSS/DSSColor/\",\n  defaultHipsUrl: \"https://cdn.skies.esac.esa.int/DSSColor/\",\n  version: \"Astrobrowser v1.0.0\",\n  debug: false,\n  insideView: false,\n};","'use strict';\n\nimport { Healpix } from 'healpixjs';\nimport { bootSetup } from './Config.js';\nimport Camera from './Camera.js';\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\nclass Global {\n  // --- cached / runtime state ---\n  private _camera: Camera | null;\n  private _gl: GL | null;\n  private _healpix: Record<number, Healpix>;\n\n  // --- config/state flags ---\n  private _selectionnside: number;\n  // private _healpix4footprints: boolean;\n\n  private _useCORSProxy: boolean;\n  private _corsProxyUrl: string;\n  private _maxDecimals: number;\n  private _debug: boolean;\n  private _insideSphere: boolean;\n  private _version: string;\n\n  constructor() {\n\n    this._useCORSProxy = bootSetup.useCORSProxy;\n    this._corsProxyUrl = bootSetup.corsProxyUrl;\n    this._maxDecimals = bootSetup.maxDecimals;\n    this._debug = bootSetup.debug;\n    this._insideSphere = bootSetup.insideView;\n    this._version = bootSetup.version;\n\n    this._camera = null;\n    this._gl = null;\n    this._healpix = {};\n\n    this._selectionnside = 32;\n    // this._healpix4footprints = false;\n  }\n\n  init(): void {\n    console.log('Global.init()');\n  }\n\n  // --- getters/setters ---\n\n  get version(): string { return this._version; }\n\n  set corsProxyUrl(url: string) { this._corsProxyUrl = url; }\n  get corsProxyUrl(): string { return this._corsProxyUrl; }\n\n  get useCORSProxy(): boolean { return this._useCORSProxy; }\n  set useCORSProxy(enabled: boolean) { this._useCORSProxy = enabled; }\n\n  get debug(): boolean { return this._debug; }\n\n  getHealpix(order: number): Healpix {\n    if (this._healpix[order] === undefined) {\n      // order is HEALPix \"order\" ⇒ nside = 2^order\n      this._healpix[order] = new Healpix(Math.pow(2, order));\n    }\n    return this._healpix[order];\n  }\n\n  get MAX_DECIMALS(): number { return this._maxDecimals; }\n\n  get camera(): Camera | null { return this._camera; }\n  set camera(in_camera: Camera | null) { this._camera = in_camera; }\n\n  get gl(): GL | null { return this._gl; }\n  set gl(in_gl: GL | null) { this._gl = in_gl; }\n\n  set insideSphere(v: boolean) { this._insideSphere = v; }\n  get insideSphere(): boolean { return this._insideSphere; }\n\n  get nsideForSelection(): number { return this._selectionnside; }\n  // get healpix4footprints(): boolean { return this._healpix4footprints; }\n\n}\n\nconst global = new Global();\nexport default global;","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n    var a12 = a[6],\n      a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n  out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n  out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n  out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n  out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n  out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n  out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n  out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n  out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n  out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n  out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n  out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n  out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n  out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n  out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n  out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n  out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b0 = a00 * a11 - a01 * a10;\n  var b1 = a00 * a12 - a02 * a10;\n  var b2 = a01 * a12 - a02 * a11;\n  var b3 = a20 * a31 - a21 * a30;\n  var b4 = a20 * a32 - a22 * a30;\n  var b5 = a21 * a32 - a22 * a31;\n  var b6 = a00 * b5 - a01 * b4 + a02 * b3;\n  var b7 = a10 * b5 - a11 * b4 + a12 * b3;\n  var b8 = a20 * b2 - a21 * b1 + a22 * b0;\n  var b9 = a30 * b2 - a31 * b1 + a32 * b0;\n\n  // Calculate the determinant\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  var x = v[0],\n    y = v[1],\n    z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1],\n    z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion parameter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n  return out;\n}\n\n/**\n * Decomposes a transformation matrix into its rotation, translation\n * and scale components. Returns only the rotation component\n * @param  {quat} out_r Quaternion to receive the rotation component\n * @param  {vec3} out_t Vector to receive the translation vector\n * @param  {vec3} out_s Vector to receive the scaling factor\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @returns {quat} out_r\n */\nexport function decompose(out_r, out_t, out_s, mat) {\n  out_t[0] = mat[12];\n  out_t[1] = mat[13];\n  out_t[2] = mat[14];\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  var is1 = 1 / out_s[0];\n  var is2 = 1 / out_s[1];\n  var is3 = 1 / out_s[2];\n  var sm11 = m11 * is1;\n  var sm12 = m12 * is2;\n  var sm13 = m13 * is3;\n  var sm21 = m21 * is1;\n  var sm22 = m22 * is2;\n  var sm23 = m23 * is3;\n  var sm31 = m31 * is1;\n  var sm32 = m32 * is2;\n  var sm33 = m33 * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out_r[3] = 0.25 * S;\n    out_r[0] = (sm23 - sm32) / S;\n    out_r[1] = (sm31 - sm13) / S;\n    out_r[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out_r[3] = (sm23 - sm32) / S;\n    out_r[0] = 0.25 * S;\n    out_r[1] = (sm12 + sm21) / S;\n    out_r[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out_r[3] = (sm31 - sm13) / S;\n    out_r[0] = (sm12 + sm21) / S;\n    out_r[1] = 0.25 * S;\n    out_r[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out_r[3] = (sm12 - sm21) / S;\n    out_r[0] = (sm31 + sm13) / S;\n    out_r[1] = (sm23 + sm32) / S;\n    out_r[2] = 0.25 * S;\n  }\n  return out_r;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *     mat4.scale(dest, dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *     mat4.translate(dest, dest, origin);\n *     let quatMat = mat4.create();\n *     mat4.fromQuat(quatMat, quat);\n *     mat4.multiply(dest, dest, quatMat);\n *     mat4.scale(dest, dest, scale)\n *     mat4.translate(dest, dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    var nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\nexport var perspective = perspectiveNO;\n\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    var nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\nexport var ortho = orthoNO;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} target Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n    eyey = eye[1],\n    eyez = eye[2],\n    upx = up[0],\n    upy = up[1],\n    upz = up[2];\n  var z0 = eyex - target[0],\n    z1 = eyey - target[1],\n    z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n  var x0 = upy * z2 - upz * z1,\n    x1 = upz * z0 - upx * z2,\n    x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]);\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  var a8 = a[8],\n    a9 = a[9],\n    a10 = a[10],\n    a11 = a[11];\n  var a12 = a[12],\n    a13 = a[13],\n    a14 = a[14],\n    a15 = a[15];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  var b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  var b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11];\n  var b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport var sub = subtract;","/**\n * @author Fabrizio Giordano (Fab)\n */\nimport { vec3 } from \"gl-matrix\";\n\nexport interface SphericalCoords {\n  phi: number;   // longitude-like angle in degrees\n  theta: number; // colatitude angle in degrees\n}\n\nexport interface AstroCoords {\n  ra: number;   // right ascension in degrees\n  dec: number;  // declination in degrees\n}\n\nexport interface HMS {\n  h: number;\n  m: number;\n  s: number;\n}\n\nexport interface DMS {\n  d: number;\n  m: number;\n  s: number;\n}\n\n// results in degrees\nexport function cartesianToSpherical(xyz: vec3): SphericalCoords {\n  const dotXYZ = vec3.dot(xyz, xyz);\n  const r = Math.sqrt(dotXYZ);\n  let theta = Math.acos(xyz[2] / r);\n  theta = radToDeg(theta);\n\n  // NB: in atan(y/x) is written with params switched atan2(x, y)\n  let phi = Math.atan2(xyz[1], xyz[0]);\n  phi = radToDeg(phi);\n\n  if (phi < 0) {\n    phi += 360;\n  }\n\n  return { phi, theta };\n}\n\nexport function colorHex2RGB(hexColor: string): [number, number, number] {\n  const hex1 = hexColor.substring(1, 3);\n  const hex2 = hexColor.substring(3, 5);\n  const hex3 = hexColor.substring(5, 7);\n\n  const dec1 = parseInt(hex1, 16);\n  const dec2 = parseInt(hex2, 16);\n  const dec3 = parseInt(hex3, 16);\n\n  const rgb1 = (dec1 / 255).toFixed(2);\n  const rgb2 = (dec2 / 255).toFixed(2);\n  const rgb3 = (dec3 / 255).toFixed(2);\n\n  return [parseFloat(rgb1), parseFloat(rgb2), parseFloat(rgb3)];\n}\n\nexport function degToRad(degrees: number): number {\n  return (degrees / 180) * Math.PI;\n}\n\nexport function radToDeg(radians: number): number {\n  return (radians * 180) / Math.PI;\n}\n\nexport function sphericalToAstroDeg(phiDeg: number, thetaDeg: number): AstroCoords {\n  let raDeg = phiDeg;\n  if (raDeg < 0) {\n    raDeg += 360;\n  }\n  const decDeg = 90 - thetaDeg;\n  return { ra: raDeg, dec: decDeg };\n}\n\nexport function sphericalToCartesian(\n  phiDeg: number,\n  thetaDeg: number,\n  r: number = 1\n): [number, number, number] {\n  const x = r * Math.sin(degToRad(thetaDeg)) * Math.cos(degToRad(phiDeg));\n  const y = r * Math.sin(degToRad(thetaDeg)) * Math.sin(degToRad(phiDeg));\n  const z = r * Math.cos(degToRad(thetaDeg));\n  return [x, y, z];\n}\n\nexport function astroDegToSpherical(raDeg: number, decDeg: number): SphericalCoords {\n  let phiDeg = raDeg;\n  if (phiDeg < 0) {\n    phiDeg += 360;\n  }\n  const thetaDeg = 90 - decDeg;\n  return { phi: phiDeg, theta: thetaDeg };\n}\n\nexport function raDegToHMS(raDeg: number): HMS {\n  const h = Math.floor(raDeg / 15);\n  const m = Math.floor((raDeg / 15 - h) * 60);\n  const s = (raDeg / 15 - h - m / 60) * 3600;\n  return { h, m, s };\n}\n\nexport function decDegToDMS(decDeg: number): DMS {\n  let sign = 1;\n  if (decDeg < 0) {\n    sign = -1;\n  }\n\n  const decDegAbs = Math.abs(decDeg);\n  let d = Math.trunc(decDegAbs);\n  const m = Math.trunc((decDegAbs - d) * 60);\n  const s = (decDegAbs - d - m / 60) * 3600;\n  d = d * sign;\n\n  return { d, m, s };\n}","/**\n * @author Fabrizio Giordano (Fab)\n */\nimport { vec3, mat4 } from \"gl-matrix\";\nimport {\n  astroDegToSpherical,\n  cartesianToSpherical,\n  sphericalToCartesian,\n  type SphericalCoords,\n} from \"./utils/Utils.js\";\n\nimport global from './Global.js'\n\ntype Vec3Tuple = [number, number, number];\n\ninterface CameraLike {\n  getCameraMatrix(): mat4;\n}\n\nclass Camera implements CameraLike {\n  private insideSphere = false;\n\n  private cam_pos: vec3 = vec3.create();  // camera position\n  private cam_speed = 1.0;\n\n  private vMatrix: mat4 = mat4.create();  // view matrix\n  private T: mat4 = mat4.create();        // translation matrix\n  private R: mat4 = mat4.create();        // rotation matrix\n\n  // Optional state used in rotate helpers\n  private FoV = 180.0;\n  private previousFoV = 180.0;\n  private move: vec3 = vec3.create();\n  private phi = 0;     // accumulated yaw (radians)\n  private theta = 0;   // accumulated pitch (radians)\n\n  constructor(in_position: vec3, in_sphere: boolean) {\n    this.init(in_position, in_sphere);\n  }\n\n  private init(in_position: vec3, in_sphere: boolean): void {\n    this.insideSphere = in_sphere;\n    this.cam_pos = vec3.clone(in_position);\n\n    this.vMatrix = mat4.create();\n    this.T = mat4.create();\n    this.R = mat4.create();\n\n    mat4.translate(this.T, this.T, [this.cam_pos[0], this.cam_pos[1], this.cam_pos[2]]);\n\n    // reset helpers\n    this.FoV = this.previousFoV = 180.0;\n    this.move = vec3.clone([0, 0, 0]);\n\n    const raDeg = 0;\n    const decDeg = 0;\n    this.goTo(raDeg, decDeg);\n  }\n\n  goTo(raDeg: number, decDeg: number): void {\n    // eslint-disable-next-line no-console\n    console.log(`global.insideSphere: ${global.insideSphere}`);\n    // mirror RA\n    const mirroredRA = 360 - raDeg;\n    this.goToPhiTheta(astroDegToSpherical(mirroredRA, decDeg));\n  }\n\n  private goToPhiTheta(ptDeg: SphericalCoords): void {\n    const xyz = sphericalToCartesian(ptDeg.phi, ptDeg.theta, this.cam_pos[2]);\n\n    let cameraMatrix = mat4.create();\n    cameraMatrix = mat4.translate(cameraMatrix, cameraMatrix, vec3.fromValues(xyz[0], xyz[1], xyz[2]));\n\n    const focusPoint: Vec3Tuple = [0.0, 0.0, 0.0];\n    const cameraUp: vec3 = vec3.clone([0.0, 1.0, 0.0]);\n    const cameraPos: Vec3Tuple = [cameraMatrix[12], cameraMatrix[13], cameraMatrix[14]];\n\n    cameraMatrix = mat4.targetTo(cameraMatrix, cameraPos, focusPoint, cameraUp);\n\n    this.R = mat4.clone(cameraMatrix);\n    this.R[12] = 0;\n    this.R[13] = 0;\n    this.R[14] = 0;\n\n    const viewMatrix = mat4.create();\n    if (this.cam_pos[2] !== 0) {\n      mat4.invert(viewMatrix, cameraMatrix);\n    }\n    this.vMatrix = viewMatrix;\n  }\n\n  toggleInsideSphere(): void {\n    // if (inside !== global.insideSphere) {\n    //   global.insideSphere = inside;\n\n      if (global.insideSphere) {\n        if (this.cam_pos[2] <= 2) {\n          this.cam_pos[2] = -2 + this.cam_pos[2];\n        } else {\n          this.cam_pos[2] = -0.005;\n        }\n      } else {\n        this.cam_pos[2] = 2.0 + this.cam_pos[2];\n      }\n\n      mat4.translate(this.T, mat4.create(), this.cam_pos);\n      this.refreshViewMatrix();\n    // }\n  }\n\n  zoom(inertia: number): void {\n    this.move = vec3.clone([0, 0, 0]);\n    this.move[2] += this.cam_speed * inertia;\n\n    if (global.insideSphere) {\n      if (this.cam_pos[2] + this.move[2] >= -0.005 && inertia > 0) {\n        this.cam_pos[2] = -0.005;\n        inertia = 0;\n      } else if (this.cam_pos[2] + this.move[2] <= -0.9885 && inertia < 0) {\n        this.cam_pos[2] = -0.9885;\n        inertia = 0;\n      } else {\n        this.cam_pos[2] += this.move[2];\n      }\n    } else {\n      if (this.cam_pos[2] < 1.005) {\n        this.move[2] *= this.cam_pos[2] / 100;\n      } else if (this.cam_pos[2] < 1.05) {\n        this.move[2] *= this.cam_pos[2] / 20;\n      } else if (this.cam_pos[2] < 1.3) {\n        this.move[2] *= this.cam_pos[2] / 3;\n      }\n      if (this.cam_pos[2] + this.move[2] <= 1.000001 && inertia < 0) {\n        this.cam_pos[2] = 1.000001;\n      } else {\n        this.cam_pos[2] += this.move[2];\n      }\n\n      // NOTE: your original code adds move[2] twice; if that's unintended, remove this next line.\n      // this.cam_pos[2] += this.move[2];\n    }\n\n    const identity = mat4.create();\n    mat4.translate(this.T, identity, this.cam_pos);\n\n    this.refreshViewMatrix();\n  }\n\n  /**\n   * Move the camera forward/backward along its current viewing direction.\n   * Positive distance moves *forward* (toward where the camera is looking),\n   * negative distance moves *backward*.\n   *\n   * This does not enforce inside/outside-sphere bounds; if you want clamping,\n   * handle it before calling or we can extend this to mimic `zoom()` bounds.\n   */\n  moveAlongView(distance: number): void {\n    // World-space forward vector: transform camera-space -Z by inverse rotation\n    const R_inverse = mat4.create();\n    mat4.invert(R_inverse, this.R);\n\n    const forwardCam = vec3.fromValues(0, 0, -1); // camera looks along -Z in its local space\n    const fwdWorld = vec3.create();\n    vec3.transformMat4(fwdWorld, forwardCam, R_inverse);\n\n    // Normalise to get direction only\n    const len = Math.hypot(fwdWorld[0], fwdWorld[1], fwdWorld[2]);\n    if (len > 0) {\n      fwdWorld[0] /= len;\n      fwdWorld[1] /= len;\n      fwdWorld[2] /= len;\n    }\n\n    // Update camera position\n    this.cam_pos[0] += fwdWorld[0] * distance;\n    this.cam_pos[1] += fwdWorld[1] * distance;\n    this.cam_pos[2] += fwdWorld[2] * distance;\n\n    // Rebuild translation matrix and view matrix\n    const identity = mat4.create();\n    mat4.translate(this.T, identity, this.cam_pos);\n    this.refreshViewMatrix();\n  }\n\n  translate(distance: number) {\n\n    // const pos = this.getCameraPosition();\n    this.cam_pos[2] = distance + 1\n\n    // vec3.scale(pos, pos, distance);\n\n    const identity = mat4.create();\n    mat4.translate(this.T, identity, this.cam_pos);\n\n    this.refreshViewMatrix();\n  }\n\n  rotateZ(sign: number): void {\n    const factorRad = sign * 0.01;\n    this.phi += factorRad;\n    mat4.rotate(this.R, this.R, factorRad, [0, 0, 1]);\n    this.refreshViewMatrix();\n  }\n\n  rotateY(sign: number): void {\n    const factorRad = sign * 0.01;\n    this.phi += factorRad;\n    mat4.rotate(this.R, this.R, factorRad, [0, 1, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotateXRadian(radian: number): void {\n    mat4.rotate(this.R, this.R, radian, [1, 0, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotateYRadian(radian: number): void {\n    this.phi += radian;\n    mat4.rotate(this.R, this.R, radian, [0, 1, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotateZRadian(radian: number): void {\n    mat4.rotate(this.R, this.R, radian, [0, 0, 1]);\n    this.refreshViewMatrix();\n  }\n\n  rotateX(sign: number): void {\n    const factorRad = sign * 0.01;\n    this.theta += factorRad;\n    mat4.rotate(this.R, this.R, factorRad, [1, 0, 0]);\n    this.refreshViewMatrix();\n  }\n\n  rotate(phi: number, theta: number): void {\n    const totRot = Math.sqrt(phi * phi + theta * theta);\n    if (totRot === 0) return;\n\n    const pos = this.getCameraPosition();\n    const dist2Center = Math.sqrt(pos[0] * pos[0] + pos[1] * pos[1] + pos[2] * pos[2]);\n    const usedRot = (totRot * (dist2Center - 1)) / 3.0;\n\n    mat4.rotate(this.R, this.R, -usedRot, [theta / totRot, phi / totRot, 0]);\n    this.refreshViewMatrix();\n  }\n\n  private refreshViewMatrix(): void {\n    const T_inverse = mat4.create();\n    const R_inverse = mat4.create();\n\n    mat4.invert(T_inverse, this.T);\n    mat4.invert(R_inverse, this.R);\n\n    mat4.multiply(this.vMatrix, T_inverse, R_inverse);\n  }\n\n  refreshFoV(currentFoV: number): void {\n    this.previousFoV = this.FoV;\n    this.FoV = currentFoV;\n  }\n\n  getCameraMatrix(): mat4 {\n    return this.vMatrix;\n  }\n\n  getCameraPosition(): Vec3Tuple {\n    const inv = mat4.create();\n    if (!mat4.invert(inv, this.vMatrix)) {\n      // fallback — we already maintain cam_pos\n      return [this.cam_pos[0], this.cam_pos[1], this.cam_pos[2]];\n    }\n    return [inv[12], inv[13], inv[14]];\n  }\n\n  // setCameraPosition(position: Vec3Tuple) {\n\n\n  //   const inv = mat4.create();\n  //   if (mat4.invert(inv, this.vMatrix)) {\n  //     [inv[12], inv[13], inv[14]] = [position[0], position[1], position[2]]\n  //     mat4.invert(this.vMatrix, inv)\n  //   }\n  // }\n\n  setCameraPosition(position: [number, number, number]): void {\n\n    \n    // Update authoritative position\n    this.cam_pos = vec3.fromValues(position[0], position[1], position[2]);\n\n    // Rebuild translation matrix from cam_pos\n    mat4.translate(this.T, mat4.create(), this.cam_pos);\n\n    // Do NOT touch this.R here (keep orientation)\n    // Recompute view: vMatrix = inv(T) * inv(R)\n    this.refreshViewMatrix();\n  }\n\n  getCameraAngle(): SphericalCoords {\n    const [x, y, z] = this.getCameraPosition();\n    const posVec = vec3.fromValues(x, y, z);\n    const ptDeg = cartesianToSpherical(posVec);\n    // eslint-disable-next-line no-console\n    console.log(\"[Camera::getCameraAngle]\", ptDeg);\n    return ptDeg;\n  }\n}\n\nexport default Camera;","import { mat4 } from \"gl-matrix\";\nimport Camera from \"../Camera.js\";\n\nclass ComputePerspectiveMatrixSingleton {\n  private _pMatrix: mat4 | null = null;\n  private _aspectRatio = 1;\n\n  get pMatrix(): mat4 | null {\n    return this._pMatrix;\n  }\n\n  computePerspectiveMatrix(\n    canvas: HTMLCanvasElement,\n    camera: Camera,\n    fovDeg: number,\n    nearPlane: number = 0.1,\n    insideSphere: boolean\n  ): mat4 {\n    this._aspectRatio = canvas.width / canvas.height;\n\n    const p = mat4.create();\n    let farPlane: number;\n\n    if (insideSphere) {\n      // Inside the sphere: cap slightly beyond radius\n      farPlane = 1.1;\n    } else {\n      const camMat = camera.getCameraMatrix() as any;\n      const distCamera = -Number(camMat[14]); // camera z translation\n      const r = 1; // HiPS sphere radius (inject real value if available)\n\n      // Guard against negative due to rounding/logic\n      const c2 = Math.sqrt(Math.max(distCamera ** 2 - r ** 2, 0));\n      const beta = Math.atan2(c2, r);\n      const cf = c2 * Math.sin(beta);\n      farPlane = cf > 0 ? cf : r;\n    }\n\n    mat4.perspective(p, (fovDeg * Math.PI) / 180, this._aspectRatio, nearPlane, farPlane);\n    this._pMatrix = p;\n    return p;\n  }\n}\n\nconst computePerspectiveMatrixSingleton = new ComputePerspectiveMatrixSingleton();\nexport default computePerspectiveMatrixSingleton;","/**\n * @author Fabrizio Giordano (Fab)\n */\n\nimport { vec3, mat4, ReadonlyVec3, ReadonlyMat4 } from \"gl-matrix\";\nimport global from \"../Global.js\";\nimport { bootSetup } from \"../Config.js\";\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\n\nabstract class AbstractSkyEntity {\n  // Public-ish properties used elsewhere in the app\n  public refreshMe = false;\n  public fovX_deg = 180;\n  public fovY_deg = 180;\n  public xRad: number;\n  public yRad: number;\n  public prevFoV = this.fovX_deg;\n  public name: string;\n  // public insideSphere: boolean = bootSetup.insideSphere\n\n  // Picking/sphere\n  public center: vec3;\n  public radius: number;\n  public isGalacticHips: boolean;\n\n  // GL resources\n  protected vertexTextureCoordBuffer: WebGLBuffer | null = null;\n  protected vertexPositionBuffer: WebGLBuffer | null = null;\n  protected vertexIndexBuffer: WebGLBuffer | null = null;\n  protected shaderProgram: WebGLProgram | null = null;\n\n  // Matrices\n  protected T: mat4 = mat4.create();\n  protected R: mat4 = mat4.create();\n  protected modelMatrix: mat4 = mat4.create();\n  protected inverseModelMatrix: mat4 = mat4.create();\n\n  // Precomputed transform from galactic to equatorial (already inverted)\n  protected galacticMatrixInverted: mat4 = mat4.create();\n\n  constructor(\n    in_radius: number,\n    in_position: ReadonlyVec3,\n    in_xRad: number,\n    in_yRad: number,\n    in_name: string,\n    isGalacticHips?: boolean,\n  ) {\n    this.xRad = in_xRad;\n    this.yRad = in_yRad;\n    this.name = in_name;\n    this.center = vec3.clone(in_position);\n    this.radius = in_radius;\n    // this.insideSphere = global.insideSphere\n    this.isGalacticHips = !!isGalacticHips;\n\n    // Fill the matrix via Float32Array.set (safer than mat4.set with 16 scalars)\n    mat4.set(\n      this.galacticMatrixInverted,\n      -0.054875582456588745, -0.8734370470046997,  -0.48383501172065735, 0,\n       0.49410945177078247,  -0.4448296129703522,   0.7469822764396667,  0,\n      -0.8676661849021912,  -0.19807636737823486,  0.4559837877750397,  0,\n       0,                    0,                     0,                   1,\n    )\n  }\n\n  /** GL setup and initial model transform */\n  initGL(gl: GL): void {\n    // GL resources\n    this.vertexTextureCoordBuffer = gl.createBuffer();\n    this.vertexPositionBuffer = gl.createBuffer();\n    this.vertexIndexBuffer = gl.createBuffer();\n    this.shaderProgram = gl.createProgram();\n\n    // Reset object transforms\n    this.T = mat4.create();\n    this.R = mat4.create();\n    this.modelMatrix = mat4.create();\n    this.inverseModelMatrix = mat4.create();\n\n    // Initial pose\n    this.translate(this.center);\n    this.rotate(this.xRad, this.yRad);\n  }\n\n  translate(translation: ReadonlyVec3): void {\n    mat4.translate(this.T, this.T, translation);\n    this.refreshModelMatrix();\n  }\n\n  rotate(rad1: number, rad2: number): void {\n    mat4.rotate(this.R, this.R, rad2, [0, 0, 1]);\n    mat4.rotate(this.R, this.R, rad1, [1, 0, 0]);\n    this.refreshModelMatrix();\n  }\n\n  rotateFromZero(rad1: number, rad2: number): void {\n    mat4.identity(this.R);\n    mat4.rotate(this.R, this.R, rad1, [1, 0, 0]);\n    mat4.rotate(this.R, this.R, rad2, [0, 0, 1]);\n    this.refreshModelMatrix();\n  }\n\n  protected refreshModelMatrix(): void {\n    const R_inverse = mat4.create();\n    mat4.invert(R_inverse, this.R);\n    mat4.multiply(this.modelMatrix, this.T, R_inverse);\n\n    // Flip Y if we're outside the sphere\n    if (!global.insideSphere) {\n      this.modelMatrix[1]  = -this.modelMatrix[1];\n      this.modelMatrix[5]  = -this.modelMatrix[5];\n      this.modelMatrix[9]  = -this.modelMatrix[9];\n      this.modelMatrix[13] = -this.modelMatrix[13];\n    }\n\n    // Apply galactic frame transform if needed\n    if (this.isGalacticHips) {\n      mat4.multiply(this.modelMatrix, this.modelMatrix, this.galacticMatrixInverted);\n    }\n  }\n\n  getModelMatrixInverse(): ReadonlyMat4 {\n    mat4.identity(this.inverseModelMatrix);\n    mat4.invert(this.inverseModelMatrix, this.modelMatrix);\n    return this.inverseModelMatrix;\n  }\n\n  getModelMatrix(): ReadonlyMat4 {\n    return this.modelMatrix;\n  }\n\n  /** Children with hierarchical geometry (e.g., HiPS) can override this. */\n  setGeometryNeedsToBeRefreshed(): void {\n    (this as any).refreshGeometryOnFoVChanged = false;\n  }\n\n  // Helpers operating on raw mat4 buffers (kept from your JS)\n  rotateX(m: mat4, angle: number): mat4 {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const mv1 = m[1], mv5 = m[5], mv9 = m[9];\n\n    m[1]  = m[1]  * c - m[2]  * s;\n    m[5]  = m[5]  * c - m[6]  * s;\n    m[9]  = m[9]  * c - m[10] * s;\n\n    m[2]  = m[2]  * c + mv1 * s;\n    m[6]  = m[6]  * c + mv5 * s;\n    m[10] = m[10] * c + mv9 * s;\n\n    return m;\n  }\n\n  rotateY(m: mat4, angle: number): mat4 {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const mv0 = m[0], mv4 = m[4], mv8 = m[8];\n\n    m[0]  = c * m[0]  + s * m[2];\n    m[4]  = c * m[4]  + s * m[6];\n    m[8]  = c * m[8]  + s * m[10];\n\n    m[2]  = c * m[2]  - s * mv0;\n    m[6]  = c * m[6]  - s * mv4;\n    m[10] = c * m[10] - s * mv8;\n\n    return m;\n  }\n\n  // ---------- Abstract hooks ----------\n  \n  abstract draw(): void;\n\n}\n\nexport default AbstractSkyEntity;","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();","// FoVHelper.ts\n'use strict'\n\nclass FoVHelper {\n  getHiPSNorder(fov: number): number {\n    if (fov >= 179) return 0\n    if (fov >= 90)  return 1\n    if (fov >= 30)  return 2\n    if (fov >= 20)  return 3\n    if (fov >= 6)   return 4\n    if (fov >= 3.2) return 5\n    if (fov >= 1.6) return 6\n    if (fov >= 0.85) return 7\n    if (fov >= 0.42) return 8\n    if (fov >= 0.21) return 9\n    if (fov >= 0.12) return 10\n    if (fov >= 0.06) return 11\n    if (fov < 0.015) return 12\n    return 13\n  }\n\n  getRADegSteps(fov: number): { raStep: number; decStep: number } {\n    let raStep: number\n    let decStep: number\n\n    if (fov >= 179)      { raStep = 10;  decStep = 10 }\n    else if (fov >= 25)  { raStep = 9;   decStep = 9 }\n    else if (fov >= 12.5){ raStep = 8;   decStep = 8 }\n    else if (fov >= 6)   { raStep = 6;   decStep = 6 }\n    else if (fov >= 3.2) { raStep = 5;   decStep = 5 }\n    else if (fov >= 1.6) { raStep = 4;   decStep = 4 }\n    else if (fov >= 0.85){ raStep = 3;   decStep = 3 }\n    else if (fov >= 0.42){ raStep = 2;   decStep = 2 }\n    else if (fov >= 0.21){ raStep = 1;   decStep = 1 }\n    else if (fov >= 0.12){ raStep = 0.5; decStep = 0.5 }\n    else if (fov >= 0.06){ raStep = 0.25; decStep = 0.25 }\n    else                 { raStep = 10;  decStep = 10 }\n\n    return { raStep, decStep }\n  }\n\n  getRefOrder(order: number): number {\n    switch (order) {\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n        return order + 6\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n        return order + 5\n      case 8:\n        return order + 4\n      default:\n        return order + 3\n    }\n  }\n}\n\nexport const fovHelper = new FoVHelper()\nexport default FoVHelper","/**\n * Enum for coordinate types.\n * @author Fabrizio Giordano (Fab77)\n */\nenum CoordsType {\n  CARTESIAN = \"cartesian\",\n  SPHERICAL = \"spherical\",\n  ASTRO = \"astro\",\n}\n\nexport default CoordsType;","/**\n * @author Fabrizio Giordano (Fab77)\n */\n'use strict';\n\nimport { vec3 } from 'gl-matrix';\nimport {\n  cartesianToSpherical,\n  sphericalToCartesian,\n  sphericalToAstroDeg,\n  astroDegToSpherical,\n  type SphericalCoords,\n} from '../utils/Utils.js';\nimport CoordsType from '../utils/CoordsType.js';\nimport global from '../Global.js';\n\ntype CartesianOpts = { x: number; y: number; z: number };\ntype AstroOpts = { raDeg: number; decDeg: number };\ntype SphericalOpts = { phiDeg: number; thetaDeg: number };\ntype PointInitOpts = CartesianOpts | AstroOpts | SphericalOpts;\n\nclass Point {\n  private _x!: number;\n  private _y!: number;\n  private _z!: number;\n  private _xyz!: [number, number, number];\n\n  private _raDeg!: number;\n  private _decDeg!: number;\n  private _raRad!: number;\n  private _decRad!: number;\n  private _raDecDeg!: [number, number];\n\n  constructor(in_options: PointInitOpts, in_type: CoordsType) {\n    this._xyz = [0, 0, 0];\n    this._raDecDeg = [0, 0];\n\n    // Prefer config value if present, fallback to 12\n    const MAX_DECIMALS: number =\n      (global as any).MAX_DECIMALS ?? (global as any).maxDecimals ?? 12;\n\n    if (in_type === CoordsType.CARTESIAN) {\n      const { x, y, z } = in_options as CartesianOpts;\n      this._x = Number(x.toFixed(MAX_DECIMALS));\n      this._y = Number(y.toFixed(MAX_DECIMALS));\n      this._z = Number(z.toFixed(MAX_DECIMALS));\n      this._xyz = [this._x, this._y, this._z];\n\n      const [ra, dec] = this.computeAstroCoords();\n      this._raDeg = Number(ra);\n      this._decDeg = Number(dec);\n      this._raRad = (this._raDeg * Math.PI) / 180;\n      this._decRad = (this._decDeg * Math.PI) / 180;\n      this._raDecDeg = [this._raDeg, this._decDeg];\n    } else if (in_type === CoordsType.ASTRO) {\n      const { raDeg, decDeg } = in_options as AstroOpts;\n      this._raDeg = Number(raDeg);\n      this._decDeg = Number(decDeg);\n      this._raDecDeg = [this._raDeg, this._decDeg];\n      this._raRad = (this._raDeg * Math.PI) / 180;\n      this._decRad = (this._decDeg * Math.PI) / 180;\n\n      const [x, y, z] = this.computeCartesianCoords();\n      this._x = Number(x.toFixed(MAX_DECIMALS));\n      this._y = Number(y.toFixed(MAX_DECIMALS));\n      this._z = Number(z.toFixed(MAX_DECIMALS));\n      this._xyz = [this._x, this._y, this._z];\n    } else if (in_type === CoordsType.SPHERICAL) {\n      // Not implemented in original; keep behavior\n      console.log(`${CoordsType.SPHERICAL} not implemented yet`);\n      this._x = 0; this._y = 0; this._z = 0;\n      this._raDeg = 0; this._decDeg = 0;\n      this._raRad = 0; this._decRad = 0;\n    } else {\n      console.error('CoordsType ' + String(in_type) + ' not recognised.');\n      // Initialize to zeroed state to keep object consistent\n      this._x = 0; this._y = 0; this._z = 0;\n      this._raDeg = 0; this._decDeg = 0;\n      this._raRad = 0; this._decRad = 0;\n    }\n  }\n\n  private computeAstroCoords(): [number, number] {\n    const phiThetaDeg = cartesianToSpherical(\n      vec3.fromValues(this._xyz[0], this._xyz[1], this._xyz[2])\n    );\n    const rad = sphericalToAstroDeg(phiThetaDeg.phi, phiThetaDeg.theta);\n    return [rad.ra, rad.dec];\n  }\n\n  private computeCartesianCoords(): [number, number, number] {\n    const phiThetaDeg = astroDegToSpherical(this._raDeg, this._decDeg);\n    const [x, y, z] = sphericalToCartesian(phiThetaDeg.phi, phiThetaDeg.theta, 1);\n    return [x, y, z];\n  }\n\n  /**\n   * @return {phi, theta} (degrees)\n   */\n  computeHealpixPhiTheta(): SphericalCoords {\n    return astroDegToSpherical(this._raDeg, this._decDeg);\n  }\n\n  /** Scale the vector by a given factor */\n  scale(n: number): Point {\n    return new Point({ x: this.x * n, y: this.y * n, z: this.z * n }, CoordsType.CARTESIAN);\n  }\n\n  dot(v: Point): number {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  cross(v: Point): Point {\n    return new Point(\n      {\n        x: this.y * v.z - v.y * this.z,\n        y: this.z * v.x - v.z * this.x,\n        z: this.x * v.y - v.x * this.y,\n      },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  norm(): Point {\n    const d = 1 / this.length();\n    return new Point({ x: this.x * d, y: this.y * d, z: this.z * d }, CoordsType.CARTESIAN);\n  }\n\n  length(): number {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  lengthSquared(): number {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  subtract(v: Point): Point {\n    return new Point(\n      { x: this.x - v.x, y: this.y - v.y, z: this.z - v.z },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  add(v: Point): Point {\n    return new Point(\n      { x: this.x + v.x, y: this.y + v.y, z: this.z + v.z },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  get x(): number { return this._x; }\n  get y(): number { return this._y; }\n  get z(): number { return this._z; }\n  get xyz(): [number, number, number] { return this._xyz; }\n\n  get raDeg(): number { return this._raDeg; }\n  get decDeg(): number { return this._decDeg; }\n  get raDecDeg(): [number, number] { return this._raDecDeg; }\n\n  toADQL(): string {\n    return `${this._raDecDeg[0]},${this._raDecDeg[1]}`;\n  }\n\n  toString(): string {\n    return `(raDeg, decDeg) => (${this._raDecDeg[0]},${this._raDecDeg[1]}) (x, y,z) => (${this._xyz[0]},${this._xyz[1]},${this._xyz[2]})`;\n  }\n}\n\nexport default Point;","'use strict';\n/**\n * @author Fabrizio Giordano (Fab)\n */\n\nimport Point from '../model/Point.js';\nimport RayPickingUtils from './RayPickingUtils.js';\nimport CoordsType from './CoordsType.js';\nimport { mat4, ReadonlyMat4 } from 'gl-matrix';\nimport computePerspectiveMatrixSingleton from './ComputePerspectiveMatrix.js';\nimport Camera from '../Camera.js';\nimport HiPS from '../model/hips/HiPS.js';\nimport AbstractSkyEntity from '../model/AbstractSkyEntity.js';\n\nclass FoVUtils {\n  /**\n   * Return the minimum FoV value between `_fovY_deg` and `_fovX_deg`.\n   * (Kept here for parity; this class doesn’t maintain those fields.)\n   */\n  getMinFoV(this: { _fovY_deg: number; _fovX_deg: number }): number {\n    return this._fovY_deg <= this._fovX_deg ? this._fovY_deg : this._fovX_deg;\n  }\n\n  /**\n   * Compute the FoV polygon as a list of Points (clockwise).\n   * Uses ray picking + frustum planes against a unit sphere.\n   */\n  static getFoVPolygon(\n    // _pMatrix: ReadonlyMat4 | null,\n    camera: Camera,\n    canvas: HTMLCanvasElement,\n    model: AbstractSkyEntity\n  ): Point[] {\n    // const pMatrix = (computePerspectiveMatrixSingleton.pMatrix ??\n    //   _pMatrix) as ReadonlyMat4;\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4 \n    const vMatrix = camera.getCameraMatrix();\n    const mMatrix = model.getModelMatrix();\n    const canvasWidth = canvas.clientWidth;\n    const canvasHeight = canvas.clientHeight;\n\n    let points: Point[] = [];\n\n    // First check: does the sphere cover the whole screen?\n    const intersectionWithModel = RayPickingUtils.getIntersectionPointWithSingleModel(0, 0);\n\n    if (intersectionWithModel.length > 0) {\n      // Fully covered → grab corners + midpoints (CASE C)\n      const cornersPoints = FoVUtils.getScreenCornersIntersection(\n        pMatrix,\n        camera,\n        canvas\n      );\n      points = cornersPoints;\n    } else {\n      // Partial coverage: build frustum planes\n      let M = mat4.create();\n      M = mat4.multiply(M, vMatrix, mMatrix);\n      M = mat4.multiply(M, pMatrix, M);\n\n      const topPlane = [M[3] - M[1], M[7] - M[5], M[11] - M[9], M[15] - M[13]];    // m41-m21, ...\n      const bottomPlane = [M[3] + M[1], M[7] + M[5], M[11] + M[9], M[15] + M[13]];\n      const rightPlane = [M[3] - M[0], M[7] - M[4], M[11] - M[8], M[15] - M[12]];\n      const leftPlane = [M[3] + M[0], M[7] + M[4], M[11] + M[8], M[15] + M[12]];\n\n      const intersectionTopMiddle = RayPickingUtils.getIntersectionPointWithSingleModel(canvasWidth / 2, 0);\n      const intersectionRightMiddle = RayPickingUtils.getIntersectionPointWithSingleModel(canvasWidth, canvasHeight / 2);\n\n      // CASE A: zoomed out, hemisphere fully visible\n      if (\n        intersectionTopMiddle.length === 0 &&\n        intersectionRightMiddle.length === 0\n      ) {\n        const topPoints = FoVUtils.getNearestSpherePoint(topPlane);\n        const bottomPoints = FoVUtils.getNearestSpherePoint(bottomPlane);\n        const leftPoints = FoVUtils.getNearestSpherePoint(leftPlane);\n        const rightPoints = FoVUtils.getNearestSpherePoint(rightPlane);\n\n        const middleLeftTop = FoVUtils.computeMiddlePoint(leftPoints[0], topPoints[0])[0];\n        const middleTopRight = FoVUtils.computeMiddlePoint(topPoints[0], rightPoints[0])[0];\n        const middleRightBottom = FoVUtils.computeMiddlePoint(rightPoints[0], bottomPoints[0])[0];\n        const middleBottomLeft = FoVUtils.computeMiddlePoint(bottomPoints[0], leftPoints[0])[0];\n\n        points.push(\n          topPoints[0],\n          middleTopRight,\n          rightPoints[0],\n          middleRightBottom,\n          bottomPoints[0],\n          middleBottomLeft,\n          leftPoints[0],\n          middleLeftTop\n        );\n      }\n      // CASE E: no intersection on top/bottom planes\n      else if (intersectionTopMiddle.length === 0) {\n        const topPoints = FoVUtils.getNearestSpherePoint(topPlane);\n        const bottomPoints = FoVUtils.getNearestSpherePoint(bottomPlane);\n        const leftPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          leftPlane,\n          bottomPlane,\n          topPlane\n        );\n        const rightPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          rightPlane,\n          topPlane,\n          bottomPlane\n        );\n\n        const middleLeftTop = FoVUtils.computeMiddlePoint(leftPoints[1], topPoints[0])[0];\n        const middleTopRight = FoVUtils.computeMiddlePoint(topPoints[0], rightPoints[0])[0];\n        const middleRightBottom = FoVUtils.computeMiddlePoint(rightPoints[1], bottomPoints[0])[0];\n        const middleBottomLeft = FoVUtils.computeMiddlePoint(bottomPoints[0], leftPoints[0])[0];\n\n        points.push(\n          topPoints[0],\n          middleTopRight,\n          rightPoints[0],\n          rightPoints[1],\n          middleRightBottom,\n          bottomPoints[0],\n          middleBottomLeft,\n          leftPoints[0],\n          leftPoints[1],\n          middleLeftTop\n        );\n      }\n      // CASE D: no intersection on right/left planes\n      else if (intersectionRightMiddle.length === 0) {\n        const topPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          topPlane,\n          leftPlane,\n          rightPlane\n        );\n        const bottomPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          bottomPlane,\n          rightPlane,\n          leftPlane\n        );\n        const leftPoints = FoVUtils.getNearestSpherePoint(leftPlane);\n        const rightPoints = FoVUtils.getNearestSpherePoint(rightPlane);\n\n        const middleLeftTop = FoVUtils.computeMiddlePoint(leftPoints[0], topPoints[0])[0];\n        const middleTopRight = FoVUtils.computeMiddlePoint(topPoints[1], rightPoints[0])[0];\n        const middleRightBottom = FoVUtils.computeMiddlePoint(rightPoints[0], bottomPoints[0])[0];\n        const middleBottomLeft = FoVUtils.computeMiddlePoint(bottomPoints[1], leftPoints[0])[0];\n\n        points.push(\n          topPoints[0],\n          topPoints[1],\n          middleTopRight,\n          rightPoints[0],\n          middleRightBottom,\n          bottomPoints[0],\n          bottomPoints[1],\n          middleBottomLeft,\n          leftPoints[0],\n          middleLeftTop\n        );\n      }\n      // CASE B: all frustum planes intersect\n      else {\n        const topPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          topPlane,\n          leftPlane,\n          rightPlane\n        );\n        const bottomPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          bottomPlane,\n          rightPlane,\n          leftPlane\n        );\n        const leftPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          leftPlane,\n          bottomPlane,\n          topPlane\n        );\n        const rightPoints = FoVUtils.getFrustumIntersectionWithSphere(\n          M,\n          rightPlane,\n          topPlane,\n          bottomPlane\n        );\n\n        points.push(\n          topPoints[0],\n          topPoints[1],\n          rightPoints[0],\n          rightPoints[1],\n          bottomPoints[0],\n          bottomPoints[1],\n          leftPoints[0],\n          leftPoints[1]\n        );\n      }\n    }\n\n    return points;\n  }\n\n  /**\n   * Ray pick against 8 key screen positions (corners + midpoints).\n   * Returns Points in clockwise order starting from top-left.\n   */\n  static getScreenCornersIntersection(\n    pMatrix: ReadonlyMat4,\n    camera: Camera,\n    canvas: HTMLCanvasElement\n  ): Point[] {\n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n\n    const topLeft = RayPickingUtils.getIntersectionPointWithSingleModel(0, 0);\n    const middleTop = RayPickingUtils.getIntersectionPointWithSingleModel(w / 2, 0);\n    const topRight = RayPickingUtils.getIntersectionPointWithSingleModel(w, 0);\n\n    const middleRight = RayPickingUtils.getIntersectionPointWithSingleModel(w, h / 2);\n\n    const bottomRight = RayPickingUtils.getIntersectionPointWithSingleModel(w, h);\n    const middleBottom = RayPickingUtils.getIntersectionPointWithSingleModel(w / 2, h);\n    const bottomLeft = RayPickingUtils.getIntersectionPointWithSingleModel(0, h);\n\n    const middleLeft = RayPickingUtils.getIntersectionPointWithSingleModel(0, h / 2);\n\n    const out: Point[] = [];\n    const pushIf = (ip: number[]) => {\n      if (ip.length > 0) {\n        out.push(new Point({ x: ip[0], y: ip[1], z: ip[2] }, CoordsType.CARTESIAN));\n      }\n    };\n\n    pushIf(topLeft);\n    pushIf(middleTop);\n    pushIf(topRight);\n    pushIf(middleRight);\n    pushIf(bottomRight);\n    pushIf(middleBottom);\n    pushIf(bottomLeft);\n    pushIf(middleLeft);\n\n    return out;\n  }\n\n  /** Returns the center point (in J2000) of the current view as a `Point`. */\n  static getCenterJ2000(canvas: HTMLCanvasElement): Point {\n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n\n    const center = RayPickingUtils.getIntersectionPointWithSingleModel(w / 2, h / 2);\n    return new Point(\n      { x: center[0], y: center[1], z: center[2] },\n      CoordsType.CARTESIAN\n    );\n  }\n\n  /** Middle point on the unit sphere along the arc between two 3D points. */\n  static computeMiddlePoint(p1: Point, p2: Point): Point[] {\n    // midpoint of segment\n    const xm = (p1.x + p2.x) / 2;\n    const ym = (p1.y + p2.y) / 2;\n    const zm = (p1.z + p2.z) / 2;\n\n    // project the midpoint back to unit sphere\n    const len = Math.hypot(xm, ym, zm) || 1;\n    const x = xm / len;\n    const y = ym / len;\n    const z = zm / len;\n\n    return [new Point({ x, y, z }, CoordsType.CARTESIAN)];\n  }\n\n  /**\n   * Nearest intersection point between a frustum plane and the unit sphere,\n   * using the plane normal.\n   */\n  static getNearestSpherePoint(plane: number[]): Point[] {\n    const [A, B, C, D] = plane;\n\n    const R = 1;\n    const invLen = 1 / Math.sqrt(A * A + B * B + C * C);\n    const t1 = R * invLen;\n    const t2 = -R * invLen;\n\n    const P1: [number, number, number] = [A * t1, B * t1, C * t1];\n    const P2: [number, number, number] = [A * t2, B * t2, C * t2];\n\n    const den = Math.sqrt(A * A + B * B + C * C) || 1;\n    const dist1 = Math.abs(A * P1[0] + B * P1[1] + C * P1[2] + D) / den;\n    const dist2 = Math.abs(A * P2[0] + B * P2[1] + C * P2[2] + D) / den;\n\n    const P = dist1 <= dist2 ? P1 : P2;\n    return [new Point({ x: P[0], y: P[1], z: P[2] }, CoordsType.CARTESIAN)];\n  }\n\n  /**\n   * Intersections between a frustum plane and the unit sphere,\n   * computed via two perpendicular planes.\n   * Returns two points (first from `plane4Circle_1`, second from `plane4Circle_2`).\n   */\n  static getFrustumIntersectionWithSphere(\n    _M: ReadonlyMat4,\n    plane4Sphere: number[],\n    plane4Circle_1: number[],\n    plane4Circle_2: number[]\n  ): Point[] {\n    const [A0, B0, C0, D0] = plane4Sphere;\n\n    // center of the circle (projection of sphere center onto plane)\n    const denom0 = (A0 * A0 + B0 * B0 + C0 * C0) || 1;\n    const x_c = -(A0 * D0) / denom0;\n    const y_c = -(B0 * D0) / denom0;\n    const z_c = -(C0 * D0) / denom0;\n\n    const d = Math.abs(D0) / Math.sqrt(denom0); // distance from sphere center (0,0,0)\n    const R = 1;\n\n    const out: Point[] = [];\n\n    if (R > d) {\n      const r = Math.sqrt(R * R - d * d);\n\n      const pick = (plane: number[]): [number, number, number] => {\n        const [A, B, C, D] = plane;\n        const invLen = 1 / Math.sqrt(A * A + B * B + C * C);\n        const t1 = r * invLen;\n        const t2 = -r * invLen;\n\n        const P1: [number, number, number] = [x_c + A * t1, y_c + B * t1, z_c + C * t1];\n        const P2: [number, number, number] = [x_c + A * t2, y_c + B * t2, z_c + C * t2];\n\n        const den = Math.sqrt(A * A + B * B + C * C) || 1;\n        const dist1 = Math.abs(A * P1[0] + B * P1[1] + C * P1[2] + D) / den;\n        const dist2 = Math.abs(A * P2[0] + B * P2[1] + C * P2[2] + D) / den;\n\n        return dist1 <= dist2 ? P1 : P2;\n      };\n\n      const P_intersection_1 = pick(plane4Circle_1);\n      const P_intersection_2 = pick(plane4Circle_2);\n\n      out.push(\n        new Point({ x: P_intersection_1[0], y: P_intersection_1[1], z: P_intersection_1[2] }, CoordsType.CARTESIAN),\n        new Point({ x: P_intersection_2[0], y: P_intersection_2[1], z: P_intersection_2[2] }, CoordsType.CARTESIAN)\n      );\n    } else if (R === d) {\n      // Tangent: both intersections collapse to the circle center on the plane\n      out.push(\n        new Point({ x: x_c, y: y_c, z: z_c }, CoordsType.CARTESIAN),\n        new Point({ x: x_c, y: y_c, z: z_c }, CoordsType.CARTESIAN)\n      );\n    } else {\n      // No intersection; return empty to avoid pushing undefined values\n      // console.log('Frustum plane not intersecting the sphere');\n    }\n\n    return out;\n  }\n\n  /** Build ADQL string from an array of Points (ra,dec pairs). */\n  static getAstroFoVPolygon(points: Point[]): string {\n    return points.map(p => p.toADQL()).join(',');\n  }\n}\n\nexport default FoVUtils;","'use strict'\n/**\n * FoV singleton (TypeScript)\n * - Uses computePerspectiveMatrixSingleton.pMatrix\n * - Guards acos domain (numeric safety)\n * - Uses vec3.transformMat4 instead of custom mat4*vec3\n * - Keeps original “insideSphere ? 360 - angle : angle” behavior\n */\n\nimport { vec3, mat4 } from 'gl-matrix'\nimport global from '../Global.js'\nimport RayPickingUtils from '../utils/RayPickingUtils.js'\nimport { radToDeg } from '../utils/Utils.js'\nimport computePerspectiveMatrixSingleton from '../utils/ComputePerspectiveMatrix.js'\nimport healpixGridSingleton from './grid/HealpixGridSingleton.js'\n\n\n\ntype FoVComputed = {\n angleDeg: number;\n distance: number\n}\n\n\nexport class FoV {\n\n  private fovXDeg = 180\n  private fovYDeg = 180\n  private ratio = +0\n  private _minFoV = 180\n\n  constructor() { }\n\n  /** Recomputes FoV for current camera + projection */\n  public getFoV(insideSphere: boolean) {\n    const gl = global.gl\n\n    if (!gl || !gl.canvas) {\n      // Handle the error or assign default values\n      this.fovXDeg = 180\n      this.fovYDeg = 180\n      this._minFoV = this.minFoV\n      return this\n    }\n\n    // horizontal FoV: ray through (centerY)\n    // const x = this.computeAngle(0, gl.canvas.height / 2, insideSphere)\n    const xFoVComputed = this.computeAngle(0, gl.canvas.height / 2, insideSphere)\n    this.fovXDeg = xFoVComputed.angleDeg    \n    // this.xDistance = xFoVComputed.distance\n    // this.xAngleRatio = this.fovXDeg / this.xDistance\n\n\n    // vertical FoV: ray through (centerX)\n    // this.fovYDeg = this.computeAngle(gl.canvas.width / 2, 0, insideSphere)\n    const yFoVComputed = this.computeAngle(gl.canvas.width / 2, 0, insideSphere)\n    this.fovYDeg = yFoVComputed.angleDeg\n    // this.yDistance = yFoVComputed.distance\n    // this.yAngleRatio = this.fovYDeg / this.yDistance\n\n    this._minFoV = this.minFoV\n    this.ratio = this.computeRatio()\n    return this\n  }\n\n  private computeRatio(): number{\n    const camera = global.camera\n    if (!camera) throw Error (\"Camera not defined\")\n    const pos = camera.getCameraPosition()\n    const distanceFromCenter = Math.sqrt(pos[0]*pos[0] + pos[1]*pos[1] + pos[2]*pos[2])\n    // const distanceFromSphere = distanceFromCenter - healpixGridSingleton.RADIUS\n    const ratio = distanceFromCenter / this.fovYDeg \n    return ratio\n  }\n\n\n\n  public changeMinFov(deg: number) {\n    console.log(\"inside changeMinFov\")\n    if (this.fovYDeg <= this.fovXDeg) {\n      this.fovYDeg = deg\n    } else {\n      this.fovXDeg = deg\n    }\n    console.log(\"changeMinFov: ping\")\n    this.minFoV\n    // this.fovYDeg <= this.fovXDeg ? this.fovYDeg = deg : this.fovXDeg = deg\n  }\n\n\n  get minFoV() {\n    this._minFoV = this.fovYDeg <= this.fovXDeg ? this.fovYDeg : this.fovXDeg\n    return this._minFoV\n  }\n\n  public computeDistanceFromAngle(angleDeg: number) : number {\n    const desiredFoV = angleDeg\n    const distance = desiredFoV * this.ratio\n    // return Math.abs(distance)\n    return distance\n  } \n\n  /** FoV half-screen chord angle doubled (deg) along a given canvas axis */\n  private computeAngle(canvasX: number, canvasY: number, insideSphere: boolean): FoVComputed {\n    const camera = global.camera\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix\n    if (!pMatrix) {\n      // Handle the error or assign a default value\n      console.warn('FoV: projection matrix is null')\n      return {angleDeg: 180, distance: 1}\n    }\n    if (!camera) {\n      // Handle the error or assign a default value\n      console.warn('FoV: camera is null')\n      return {angleDeg: 180, distance: 1}\n    }\n    const rayWorld = RayPickingUtils.getRayFromMouse(canvasX, canvasY, pMatrix)\n\n    const intersectionDistance = RayPickingUtils.raySphere(\n      camera.getCameraPosition(),\n      rayWorld\n    )\n\n    let angleDeg: number\n    if (intersectionDistance > 0) {\n      // world-space intersection point on the sphere\n      const hit = vec3.create()\n      vec3.scale(hit, rayWorld, intersectionDistance)\n      vec3.add(hit, camera.getCameraPosition(), hit)\n\n      const center = healpixGridSingleton.center\n\n      // vectors from sphere center\n      const vHit = vec3.create()\n      vec3.subtract(vHit, hit, center)\n\n      // reference vector: rotate world +Z into current camera orientation, then from center\n      const refWorldZ = vec3.fromValues(center[0], center[1], center[2] + healpixGridSingleton.radius)\n\n      const vInv = mat4.create()\n      mat4.invert(vInv, camera.getCameraMatrix())\n      const refCamZ = vec3.create()\n      vec3.transformMat4(refCamZ, refWorldZ, vInv)\n\n      const vRef = vec3.create()\n      vec3.subtract(vRef, refCamZ, center)\n\n      // angle between vHit and vRef, doubled\n      const dot = vec3.dot(vHit, vRef)\n      const n1 = vec3.length(vHit)\n      const n2 = vec3.length(vRef)\n      // numeric safety for acos\n      const c = Math.min(1, Math.max(-1, dot / (n1 * n2)))\n      const angleRad = Math.acos(c)\n      angleDeg = 2 * radToDeg(angleRad)\n    } else {\n      angleDeg = 180\n    }\n\n    const finalAngle = insideSphere ? 360 - angleDeg : angleDeg\n    // return insideSphere ? 360 - angleDeg : angleDeg\n\n    return {angleDeg: finalAngle, distance: intersectionDistance}\n  }\n\n  /**\n * Computes the camera position (x,y,z) along the current view direction that would\n * yield the requested minFoV (in degrees), assuming the camera is OUTSIDE the sphere.\n * This method does NOT mutate the camera; it only returns the suggested position.\n *\n * Geometry: for a sphere of radius R observed from distance d (from center),\n * the apparent angular diameter is 2*arcsin(R/d). Our minFoV is that angular diameter\n * along the tighter axis; we solve for d and place the camera on the current\n * center→camera direction with that distance.\n *\n * @param targetMinFoVDeg Desired min FoV in degrees, 0 < targetMinFoVDeg < 180\n * @returns Tuple [x, y, z] for the recommended camera position in world coordinates.\n */\n  public computeCameraPositionForMinFoV(targetMinFoVDeg: number): [number, number, number] {\n    const camera = global.camera\n    const center = healpixGridSingleton.center\n    const R = healpixGridSingleton.radius\n\n    if (!camera) {\n      console.warn('FoV.computeCameraPositionForMinFoV: camera not available; returning a sensible default.')\n      return [center[0], center[1], center[2] + 2 * R]\n    }\n\n    // Clamp and validate input\n    const eps = 1e-6\n    const clamped = Math.max(eps, Math.min(180 - eps, targetMinFoVDeg))\n    const halfRad = (clamped * Math.PI / 180) * 0.5\n\n    // Distance from center needed to achieve the angular diameter\n    // minFoV = 2 * arcsin(R / d)  =>  d = R / sin(minFoV/2)\n    const sinHalf = Math.sin(halfRad)\n    if (sinHalf <= 0) {\n      console.warn('FoV.computeCameraPositionForMinFoV: invalid targetMinFoVDeg, using fallback.')\n      return [center[0], center[1], center[2] + 2 * R]\n    }\n    let d = R / sinHalf\n\n    // Ensure we remain strictly outside the sphere\n    d = Math.max(d, R + 1e-4)\n\n    // Use the current center→camera direction to keep orientation\n    const camPos = camera.getCameraPosition()\n    let dirX = camPos[0] - center[0]\n    let dirY = camPos[1] - center[1]\n    let dirZ = camPos[2] - center[2]\n    const len = Math.hypot(dirX, dirY, dirZ)\n    if (len < eps) {\n      // If somehow at the center, use +Z as a default direction\n      dirX = 0; dirY = 0; dirZ = 1;\n    } else {\n      dirX /= len\n      dirY /= len\n      dirZ /= len\n    }\n\n    const newX = center[0] + dirX * d\n    const newY = center[1] + dirY * d\n    const newZ = center[2] + dirZ * d\n\n    return [newX, newY, newZ]\n\n  }\n\n\n\n/**\n   * Computes the camera world-space position required to achieve a target FoV (deg),\n   * keeping the same viewing direction. Acts as the inverse of computeAngle().\n   *\n   * @param targetFoVDeg desired full FoV angle in degrees (0 < FoV < 180)\n   * @param canvasWidth  canvas width in pixels\n   * @param canvasHeight canvas height in pixels\n   * @returns [x, y, z] coordinates for the new camera position\n   */\n  public computeCameraPositionForFoV(\n    targetFoVDeg: number\n  ): [number, number, number] {\n    const camera = global.camera;\n    const center = healpixGridSingleton.center;\n    const R = healpixGridSingleton.radius;\n\n    if (!camera) {\n      console.warn(\"FoV.computeCameraPositionForFoV: camera missing.\");\n      return [center[0], center[1], center[2] + 2 * R];\n    }\n\n    const eps = 1e-6;\n    const clamped = Math.max(eps, Math.min(180 - eps, targetFoVDeg));\n    const halfRad = (clamped * Math.PI) / 360.0; // half-angle in radians\n\n    // Distance from center that yields this FoV\n    const sinHalf = Math.sin(halfRad);\n    if (sinHalf <= 0) {\n      console.warn(\"FoV.computeCameraPositionForFoV: invalid FoV.\");\n      return [center[0], center[1], center[2] + 2 * R];\n    }\n    let d = R / sinHalf;\n\n    // Slightly outside sphere to avoid clipping\n    d = Math.max(d, R + 1e-4);\n\n    // Get current viewing direction\n    const camPos = camera.getCameraPosition();\n    let dirX = camPos[0] - center[0];\n    let dirY = camPos[1] - center[1];\n    let dirZ = camPos[2] - center[2];\n    const len = Math.hypot(dirX, dirY, dirZ);\n    if (len < eps) {\n      dirX = 0; dirY = 0; dirZ = 1;\n    } else {\n      dirX /= len;\n      dirY /= len;\n      dirZ /= len;\n    }\n\n    const newX = center[0] + dirX * d;\n    const newY = center[1] + dirY * d;\n    const newZ = center[2] + dirZ * d;\n\n    return [newX, newY, newZ];\n  }\n\n  /**\n * Return a camera position such that the sphere's apparent angular diameter\n * (the silhouette, not the surface coverage) equals targetAngularDiameterDeg.\n * Keeps current view direction; does not mutate the camera.\n *\n * @param targetAngularDiameterDeg desired apparent diameter in degrees (0<α<180)\n * @returns [x,y,z] world position\n */\npublic computeCameraPositionForAngularDiameter(\n  targetAngularDiameterDeg: number\n): [number, number, number] {\n  const camera = global.camera;\n  const center = healpixGridSingleton.center;\n  const R = healpixGridSingleton.radius;\n\n  if (!camera) {\n    console.warn('computeCameraPositionForAngularDiameter: camera missing.');\n    return [center[0], center[1], center[2] + 2 * R];\n  }\n\n  const eps = 1e-6;\n  const α = Math.max(eps, Math.min(180 - eps, targetAngularDiameterDeg));\n  const half = (α * Math.PI) / 360.0;\n  const sinHalf = Math.sin(half);\n\n  // d = R / sin(α/2)\n  let d = R / sinHalf;\n  d = Math.max(d, R + 1e-4); // stay outside\n\n  // project along current center→camera direction\n  const [cx, cy, cz] = center as [number, number, number];\n  const [px, py, pz] = camera.getCameraPosition();\n  let dx = px - cx, dy = py - cy, dz = pz - cz;\n  const L = Math.hypot(dx, dy, dz);\n  if (L < eps) { dx = 0; dy = 0; dz = 1; } else { dx/=L; dy/=L; dz/=L; }\n\n  return [cx + dx * d, cy + dy * d, cz + dz * d];\n}\n}","// GridShaderManager.ts\n'use strict'\n\nclass GridShaderManager {\n  static healpixGridVS(): string {\n    return `#version 300 es\n        in vec4 aCatPosition;\n        uniform mat4 uMVMatrix;\n        uniform mat4 uPMatrix;\n\n        void main() {\n            gl_Position = uPMatrix * uMVMatrix * aCatPosition;\n            gl_PointSize = 7.0;\n        }`\n  }\n\n  static healpixGridFS(): string {\n    return `#version 300 es\n        precision mediump float;\n\n        uniform vec4 u_fragcolor;\n        out vec4 fragColor;\n\n        void main() {\n            // fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n            fragColor = u_fragcolor;\n        }`\n  }\n}\n\nexport default GridShaderManager","class Point2D {\n  private _x: number;\n  private _y: number;\n\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n}\n\nexport default Point2D;","import Point from \"../model/Point.js\";\nimport Point2D from \"../model/Point2D.js\";\nimport CoordsType from \"./CoordsType.js\";\n\ntype ProjectionFlag = 0 | 1 | 2;\n\nexport interface SelectionObj {\n  poly4selection: Point2D[][];\n  flag: ProjectionFlag;\n  maxx: number;\n  maxy: number;\n  minx: number;\n  miny: number;\n}\n\nclass GeomUtils {\n  // Orthodromic (great-circle) distance in radians\n  static orthodromicDistance(p1: Point, p2: Point): number {\n    return Math.acos(\n      Math.sin(p1.decDeg * Math.PI / 180) * Math.sin(p2.decDeg * Math.PI / 180) +\n      Math.cos(p1.decDeg * Math.PI / 180) * Math.cos(p2.decDeg * Math.PI / 180) *\n      Math.cos((p2.raDeg - p1.raDeg) * Math.PI / 180)\n    );\n  }\n\n  /**\n   * Decide the 2D projection strategy and pre-project polygons for point-in-polygon tests.\n   * Returns the projected polygons + bbox + a flag describing the projection used:\n   * 0 → all points in same hemisphere with |Dec| > 10 → stereographic-like projection using x,y from 3D\n   * 1 → all points in equatorial belt (|Dec| < 10) → use RA/Dec directly\n   * 2 → equatorial belt and polygon crosses RA=0 → shift RA>180 by -360\n   */\n  static computeSelectionObject(polygons: Point[][]): SelectionObj {\n    let poly4selection: Point2D[][] = [];\n    let flag: ProjectionFlag = 0;\n\n    let maxx: number | undefined;\n    let maxy: number | undefined;\n    let minx: number | undefined;\n    let miny: number | undefined;\n\n    const DEC_THRESHOLD = 10;\n    //  1 → northern hemisphere (Dec > +10), -1 → southern (Dec < -10), 0 → equatorial belt\n    let hemisphere = 0;\n\n    if (polygons[0][0].decDeg >= DEC_THRESHOLD) {\n      hemisphere = 1;\n    } else if (polygons[0][0].decDeg <= -DEC_THRESHOLD) {\n      hemisphere = -1;\n    } else {\n      flag = 1;\n    }\n\n    // Case flag = 0 → stereographic-like projection using x,y,z from 3D point\n    if (flag === 0) {\n      const first = GeomUtils.projectIn2D(polygons[0][0]);\n      maxx = minx = first.x;\n      maxy = miny = first.y;\n\n      for (const currpoly of polygons) {\n        const selpoly: Point2D[] = [];\n        for (const point of currpoly) {\n          // If a point violates the hemisphere constraint, fall back to belt logic\n          if (\n            (point.decDeg > hemisphere * DEC_THRESHOLD && hemisphere === -1) ||\n            (point.decDeg < hemisphere * DEC_THRESHOLD && hemisphere === 1)\n          ) {\n            flag = 1;\n            poly4selection = [];\n            break;\n          }\n          const p = GeomUtils.projectIn2D(point);\n          selpoly.push(p);\n\n          if (p.x > (maxx as number)) maxx = p.x;\n          if (p.y > (maxy as number)) maxy = p.y;\n          if (p.x < (minx as number)) minx = p.x;\n          if (p.y < (miny as number)) miny = p.y;\n        }\n        poly4selection.push(selpoly);\n      }\n    }\n\n    if (flag === 0) {\n      return {\n        poly4selection,\n        flag,\n        maxx: maxx as number,\n        maxy: maxy as number,\n        minx: minx as number,\n        miny: miny as number,\n      };\n    }\n\n    // Case flag = 1 or 2 → work directly in (RA,Dec)\n    const RA_THRESHOLD = 180;\n    let belowThreshold = polygons[0][0].raDeg < RA_THRESHOLD;\n\n    maxx = minx = polygons[0][0].raDeg;\n    maxy = miny = polygons[0][0].decDeg;\n\n    for (const currpoly of polygons) {\n      const selpoly: Point2D[] = [];\n      for (const point of currpoly) {\n        const p = new Point2D(point.raDeg, point.decDeg);\n        selpoly.push(p);\n\n        if (point.raDeg > maxx) maxx = point.raDeg;\n        if (point.decDeg > maxy) maxy = point.decDeg;\n        if (point.raDeg < minx) minx = point.raDeg;\n        if (point.decDeg < miny) miny = point.decDeg;\n\n        // Detect crossing of RA=0 meridian\n        if (\n          (point.raDeg >= RA_THRESHOLD && belowThreshold) ||\n          (point.raDeg <= RA_THRESHOLD && !belowThreshold)\n        ) {\n          flag = 2;\n          poly4selection = [];\n          break;\n        }\n      }\n      poly4selection.push(selpoly);\n    }\n\n    if (flag === 1) {\n      return {\n        poly4selection,\n        flag,\n        maxx,\n        maxy,\n        minx,\n        miny,\n      };\n    }\n\n    // Case flag = 2 → shift RA>180 by -360 to unwrap around RA=0\n    let startRA = polygons[0][0].raDeg;\n    maxx = startRA >= RA_THRESHOLD ? startRA - 360 : startRA;\n    maxy = polygons[0][0].decDeg;\n    minx = maxx;\n    miny = maxy;\n\n    for (const currpoly of polygons) {\n      const selpoly: Point2D[] = [];\n      for (const point of currpoly) {\n        const curra = point.raDeg >= RA_THRESHOLD ? point.raDeg - 360 : point.raDeg;\n\n        if (curra > maxx) maxx = curra;\n        if (point.decDeg > maxy) maxy = point.decDeg;\n        if (curra < minx) minx = curra;\n        if (point.decDeg < miny) miny = point.decDeg;\n\n        selpoly.push(new Point2D(curra, point.decDeg));\n      }\n      poly4selection.push(selpoly);\n    }\n\n    return {\n      poly4selection,\n      flag,\n      maxx,\n      maxy,\n      minx,\n      miny,\n    };\n  }\n\n  /** Stereographic projection from 3D point on unit sphere onto plane */\n  static stereographic(point: Point): { x: number; y: number } {\n    const x = Number(point.xyz[0]);\n    const y = Number(point.xyz[1]);\n    const z = Number(point.xyz[2]);\n    return {\n      x: (2 * x) / (1 - z),\n      y: (2 * y) / (1 - z),\n    };\n  }\n\n  static projectIn2D(point: Point): Point2D {\n    const p = GeomUtils.stereographic(point);\n    return new Point2D(p.x, p.y);\n  }\n\n  /**\n   * Robust point-in-polygon (ray casting) using the precomputed selection object.\n   * Works with any of the three flags (0,1,2).\n   */\n  static checkPointInsidePolygon5(selectionObj: SelectionObj, point: Point): boolean {\n    let p0: Point2D;\n\n    if (selectionObj.flag === 0) {\n      p0 = GeomUtils.projectIn2D(point);\n    } else if (selectionObj.flag === 1) {\n      p0 = new Point2D(point.raDeg, point.decDeg);\n    } else {\n      const RA_THRESHOLD = 180;\n      const raShifted = point.raDeg >= RA_THRESHOLD ? point.raDeg - 360 : point.raDeg;\n      p0 = new Point2D(raShifted, point.decDeg);\n    }\n\n    const p1 = new Point2D(p0.x, p0.y + 2 * Math.abs(selectionObj.maxy - selectionObj.miny));\n\n    // quick reject by bbox\n    if (\n      p0.x > selectionObj.maxx ||\n      p0.x < selectionObj.minx ||\n      p0.y > selectionObj.maxy ||\n      p0.y < selectionObj.miny\n    ) {\n      return false;\n    }\n\n    // Ray casting against each sub-polygon\n    for (const currpoly of selectionObj.poly4selection) {\n      let intersections = 0;\n\n      for (let i = 0; i < currpoly.length - 1; i++) {\n        const p2 = currpoly[i];\n        const p3 = currpoly[i + 1];\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      // close the polygon: last with first\n      {\n        const p2 = currpoly[currpoly.length - 1];\n        const p3 = currpoly[0];\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      if (intersections % 2 === 1) {\n        return true; // inside this subpolygon\n      }\n    }\n\n    return false;\n  }\n\n  // Legacy version kept for reference; now typed and using getters\n  static checkPointInsidePolygon4(polygons: Point[][], point: Point): boolean {\n    const p0 = GeomUtils.projectIn2D(point);\n\n    let maxdist = point.raDeg + 15;\n    if (maxdist > 360) maxdist = point.raDeg - 15;\n\n    const p1point = new Point({ raDeg: maxdist, decDeg: point.decDeg }, CoordsType.ASTRO);\n    const p1 = GeomUtils.projectIn2D(p1point);\n\n    for (const currpoly of polygons) {\n      let intersections = 0;\n\n      for (let i = 0; i < currpoly.length - 1; i++) {\n        const p2 = GeomUtils.projectIn2D(currpoly[i]);\n        const p3 = GeomUtils.projectIn2D(currpoly[i + 1]);\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      {\n        const p2 = GeomUtils.projectIn2D(currpoly[currpoly.length - 1]);\n        const p3 = GeomUtils.projectIn2D(currpoly[0]);\n\n        const denominator = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n        const numerator01 = (p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x);\n        const numerator23 = (p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x);\n\n        if (denominator !== 0) {\n          const lamda01 = numerator01 / denominator;\n          const lambda23 = numerator23 / denominator;\n          if (lamda01 >= 0 && lamda01 <= 1 && lambda23 >= 0 && lambda23 <= 1) {\n            intersections++;\n          }\n        }\n      }\n\n      if (intersections % 2 === 1) return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GeomUtils;","/**\n * @author Fabrizio Giordano (Fab)\n * @param in_radius - number\n * @param in_gl - GL context\n * @param in_position - array of double e.g. [0.0, 0.0, 0.0]\n */\n\ntype DivSet = {\n  div: HTMLDivElement;\n  textNode: Text;\n  style: CSSStyleDeclaration;\n};\n\nclass GridTextHelper {\n  private _divEqContainerElement: HTMLElement | null;\n  private _divHPXContainerElement: HTMLElement | null;\n  private _divSets: DivSet[];\n  private _divSetNdx: number;\n\n  constructor() {\n    this._divEqContainerElement = document.querySelector<HTMLElement>('#gridcoords');\n    this._divHPXContainerElement = document.querySelector<HTMLElement>('#gridhpx');\n    this._divSetNdx = 0;\n    this._divSets = [];\n  }\n\n  initHtml(): void {\n    // Kept for API parity; nothing required here with current logic.\n  }\n\n  resetDivSets(): void {\n    // Hide remaining divs and reset index\n    for (; this._divSetNdx < this._divSets.length; ++this._divSetNdx) {\n      this._divSets[this._divSetNdx].style.display = 'none';\n    }\n    this._divSetNdx = 0;\n  }\n\n  /**\n   * Add / reuse a floating label for HPX coordinates\n   */\n  addHPXDivSet(msg: string, x: number, y: number): void {\n    let divSet = this._divSets[this._divSetNdx++];\n\n    // Create on demand\n    if (!divSet) {\n      const div = document.createElement('div');\n      const textNode = document.createTextNode('');\n      div.className = 'floating-div-ra'; // style like RA tags\n\n      div.appendChild(textNode);\n\n      if (!this._divHPXContainerElement) {\n        this._divHPXContainerElement = document.querySelector<HTMLElement>('#gridhpx');\n      }\n      if (!this._divHPXContainerElement) {\n        // If container is still missing, abort gracefully\n        return;\n      }\n      this._divHPXContainerElement.appendChild(div);\n\n      divSet = { div, textNode, style: div.style };\n      this._divSets.push(divSet);\n    }\n\n    // Show & position\n    divSet.style.display = 'block';\n    divSet.style.left = `${Math.floor(x + 25)}px`;\n    divSet.style.top = `${Math.floor(y)}px`;\n    divSet.textNode.nodeValue = msg;\n  }\n\n  /**\n   * Add / reuse a floating label for Equatorial coords\n   * @param type 'ra' or 'dec'\n   */\n  addEqDivSet(msg: string, x: number, y: number, type: 'ra' | 'dec'): void {\n    let divSet = this._divSets[this._divSetNdx++];\n\n    if (!divSet) {\n      const div = document.createElement('div');\n      const textNode = document.createTextNode('');\n      div.className = type === 'ra' ? 'floating-div-ra' : 'floating-div-dec';\n      div.appendChild(textNode);\n\n      if (!this._divEqContainerElement) {\n        this._divEqContainerElement = document.querySelector<HTMLElement>('#gridcoords');\n      }\n      if (!this._divEqContainerElement) {\n        // If container is still missing, abort gracefully\n        return;\n      }\n      this._divEqContainerElement.appendChild(div);\n\n      divSet = { div, textNode, style: div.style };\n      this._divSets.push(divSet);\n    }\n\n    divSet.style.display = 'block';\n\n    if (type === 'ra') {\n      divSet.style.left = `${Math.floor(x + 25)}px`;\n      divSet.style.top = `${Math.floor(y)}px`;\n    } else {\n      divSet.style.left = `${Math.floor(x)}px`;\n      divSet.style.top = `${Math.floor(y + 25)}px`;\n    }\n\n    divSet.textNode.nodeValue = msg;\n  }\n}\n\n// export const gridTextHelper = new GridTextHelper();\nexport default GridTextHelper;","// ShaderManager.ts\n\nexport type GLSLSource = string;\n\nexport default class ShaderManager {\n  static catalogueVS(): GLSLSource {\n    return `#version 300 es\n    in vec4 aCatPosition;\n    in float a_selected;\n    in float a_pointsize;\n    in float a_brightness;\n\n    out float v_selected;\n    out float v_brightness;\n    out lowp vec4 vColor;  // not used\n\n    uniform mat4 uPMatrix;\n    uniform mat4 uMVMatrix;\n\n    void main() {\n\n      gl_Position = (uPMatrix * uMVMatrix * aCatPosition);\n      gl_PointSize = a_pointsize;\n      v_selected = a_selected;\n      v_brightness = a_brightness;\n    }`;\n  }\n\n  static catalogueFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n    \n    #ifdef GL_OES_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n    #endif\n\n    // https://www.desultoryquest.com/blog/drawing-anti-aliased-circular-points-using-opengl-slash-webgl/\n\n    // precision mediump float;\n\n    in float v_selected;\n    in float v_brightness;\n\n    uniform vec4 u_fragcolor;\n\n    out vec4 fragColor;\n\n    // varying float v_selected;\n    // varying float v_brightness;\n\n    const float EPSILON = 1e-10;\n    \n    vec3 RGBtoHCV(in vec3 rgb) {\n      // RGB [0..1] to Hue-Chroma-Value [0..1]\n      // Based on work by Sam Hocevar and Emil Persson\n      vec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1., 2. / 3.) : vec4(rgb.gb, 0., -1. / 3.);\n      vec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);\n      float c = q.x - min(q.w, q.y);\n      float h = abs((q.w - q.y) / (6. * c + EPSILON) + q.z);\n      return vec3(h, c, q.x);\n    }\n\n    vec3 RGBtoHSL(in vec3 rgb) {\n      // RGB [0..1] to Hue-Saturation-Lightness [0..1]\n      vec3 hcv = RGBtoHCV(rgb);\n      //vec3 hcv = vec3(1., 1., 1.);\n      float z = hcv.z - hcv.y * 0.5;\n      float s = hcv.y / (1. - abs(z * 2. - 1.) + EPSILON);\n      return vec3(hcv.x, s, z);\n    }\n\n    vec3 HUEtoRGB(in float hue){\n      // Hue [0..1] to RGB [0..1]\n      // See http://www.chilliant.com/rgb2hsv.html\n      vec3 rgb = abs(hue * 6. - vec3(3, 2, 4)) * vec3(1, -1, -1) + vec3(-1, 2, 2);\n      return clamp(rgb, 0., 1.);\n    }\n\n    vec3 HSLtoRGB(in vec3 hsl) {\n      // Hue-Saturation-Lightness [0..1] to RGB [0..1]\n      vec3 rgb = HUEtoRGB(hsl.x);\n      float c = (1. - abs(2. * hsl.z - 1.)) * hsl.y;\n      return (rgb - 0.5) * c + hsl.z;\n    }\n  \n    void main() {\n\n      float r = 0.0, delta = 0.0, alpha = 1.0;\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      r = dot(cxy, cxy);\n      if (r > 1.0) {\n        discard;\n      }\n\n      #ifdef GL_OES_standard_derivatives\n        delta = fwidth(r);\n        alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      #endif\n\n      if (v_selected == 1.0){\n        // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0) * (alpha);\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0) * (alpha);\n      } else if (v_selected == 2.0){\n        // gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0) * (alpha);\n        fragColor = vec4(1.0, 1.0, 0.0, 1.0) * (alpha);\n      }else{\n        if (r < 0.4) {\n          discard;\n        }\n        if ( v_brightness >= -1.0 && v_brightness <= 1.0) {\n          // Round-trip RGB->HSL->RGB with time-dependent lightness\n          vec3 hsl = RGBtoHSL(vec3(u_fragcolor));\n          //hsl.z = pow(hsl.z, sin(iTime) + 1.5);\n          // hsl.z = pow(hsl.z, v_brightness + 1.5);\n          hsl.z = pow(hsl.z, v_brightness + 1.5);\n          vec3 hslcolor = HSLtoRGB(hsl);\n          // gl_FragColor = vec4(hslcolor, u_fragcolor[3]) * (alpha);\n          fragColor = vec4(hslcolor, u_fragcolor[3]) * (alpha);\n        } else {\n          // gl_FragColor = u_fragcolor * (alpha);\n          fragColor = u_fragcolor * (alpha);\n        }\n      }\n    }`;\n  }\n\n  static footprintVS(): GLSLSource {\n    return `#version 300 es\n    precision highp float;\n\n    layout(location = 0) in vec4 aCatPosition;\n\n    uniform float u_pointsize;\n    uniform mat4 uMVMatrix;\n    uniform mat4 uPMatrix;\n\n    void main() {\n      gl_Position = uPMatrix * uMVMatrix * aCatPosition;\n      gl_PointSize = u_pointsize;   // Works in WebGL2\n    }`;\n    \n  }\n\n  static footprintFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    uniform vec4 u_fragcolor;\n    out vec4 fragColor;\n\n    void main() {\n      fragColor = u_fragcolor;\n    }`;\n    \n  }\n\n  static hipsVS(): GLSLSource {\n    return `#version 300 es\n    in vec3 aVertexPosition;\n    in vec2 aTextureCoord;\n\n    uniform mat4 uMMatrix;\n    uniform mat4 uVMatrix;\n    uniform mat4 uPMatrix;\n\n    out vec2 vTextureCoord;\n\n    void main() {\n      gl_Position = uPMatrix * uVMatrix * uMMatrix * vec4(aVertexPosition, 1.0);\n      vTextureCoord = aTextureCoord;\n    }`;\n  }\n\n  static hipsNativeFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    uniform sampler2D uSampler0;\n    uniform sampler2D uSampler1;\n    uniform sampler2D uSampler2;\n    uniform sampler2D uSampler3;\n    uniform sampler2D uSampler4;\n    uniform sampler2D uSampler5;\n    uniform sampler2D uSampler6;\n    uniform sampler2D uSampler7;\n\n    uniform float uFactor0;\n    uniform float uFactor1;\n    uniform float uFactor2;\n    uniform float uFactor3;\n    uniform float uFactor4;\n    uniform float uFactor5;\n    uniform float uFactor6;\n    uniform float uFactor7;\n\n    out vec4 fragColor;\n\n    void main() {\n      vec3 finalColor = vec3(0.0);\n\n      if (uFactor0 >= 0.0){\n        vec4 mycolor;\n        #if __VERSION__ > 120\n          vec4 color0 = texture(uSampler0, vTextureCoord);\n        #else\n          vec4 color0 = texture2D(uSampler0, vTextureCoord);\n        #endif\n        mycolor = color0;\n        finalColor += mycolor.rgb * uFactor0;\n      } else if (uFactor7 >= 0.0){\n        finalColor = vec3(1.0, 0.0, 0.0);\n      }\n      fragColor = vec4(finalColor, 1.0);\n    }`;\n  }\n\n  static hipsGrayscaleFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    uniform sampler2D uSampler0;\n    uniform sampler2D uSampler1;\n    uniform sampler2D uSampler2;\n    uniform sampler2D uSampler3;\n    uniform sampler2D uSampler4;\n    uniform sampler2D uSampler5;\n    uniform sampler2D uSampler6;\n    uniform sampler2D uSampler7;\n\n    uniform float uFactor0;\n    uniform float uFactor1;\n    uniform float uFactor2;\n    uniform float uFactor3;\n    uniform float uFactor4;\n    uniform float uFactor5;\n    uniform float uFactor6;\n    uniform float uFactor7;\n\n    out vec4 fragColor;\n\n    void main() {\n      vec3 finalColor = vec3(0.0);\n\n      if (uFactor0 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color0 = texture(uSampler0, vTextureCoord);\n        #else\n          vec4 color0 = texture2D(uSampler0, vTextureCoord);\n        #endif\n        float gray = 0.21 * color0.r + 0.71 * color0.g + 0.07 * color0.b;\n        finalColor = color0.rgb * (1.0 - uFactor0) + vec3(gray) * uFactor0;\n      }\n      if (uFactor1 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color1 = texture(uSampler1, vTextureCoord);\n        #else\n          vec4 color1 = texture2D(uSampler1, vTextureCoord);\n        #endif\n        finalColor += color1.rgb * uFactor1;\n      }\n      if (uFactor2 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color2 = texture(uSampler2, vTextureCoord);\n        #else\n          vec4 color2 = texture2D(uSampler2, vTextureCoord);\n        #endif\n        finalColor += color2.rgb * uFactor2;\n      }\n      if (uFactor3 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color3 = texture(uSampler3, vTextureCoord);\n        #else\n          vec4 color3 = texture2D(uSampler3, vTextureCoord);\n        #endif\n        finalColor += color3.rgb * uFactor3;\n      }\n      if (uFactor4 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color4 = texture(uSampler4, vTextureCoord);\n        #else\n          vec4 color4 = texture2D(uSampler4, vTextureCoord);\n        #endif\n        finalColor += color4.rgb * uFactor4;\n      }\n      if (uFactor5 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color5 = texture(uSampler5, vTextureCoord);\n        #else\n          vec4 color5 = texture2D(uSampler5, vTextureCoord);\n        #endif\n        finalColor += color5.rgb * uFactor5;\n      }\n      if (uFactor6 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color6 = texture(uSampler6, vTextureCoord);\n        #else\n          vec4 color6 = texture2D(uSampler6, vTextureCoord);\n        #endif\n        finalColor += color6.rgb * uFactor6;\n      }\n      if (uFactor7 >= 0.0){\n        #if __VERSION__ > 120\n          vec4 color7 = texture(uSampler7, vTextureCoord);\n        #else\n          vec4 color7 = texture2D(uSampler7, vTextureCoord);\n        #endif\n        finalColor += color7.rgb * uFactor7;\n      }\n      fragColor = vec4(finalColor, 1.0);\n    }`;\n  }\n\n  static hipsColorMapFS(): GLSLSource {\n    return `#version 300 es\n    precision mediump float;\n\n    in vec2 vTextureCoord;\n\n    // UBO\n    layout (std140) uniform colormap {\n      float r_palette[256];\n      float g_palette[256];\n      float b_palette[256];\n    };\n\n    uniform sampler2D uSampler0;\n    uniform float uFactor0;\n\n    out vec4 fragColor;\n\n    void main() {\n      #if __VERSION__ > 120\n        vec4 color0 = texture(uSampler0, vTextureCoord);\n      #else\n        vec4 color0 = texture2D(uSampler0, vTextureCoord);\n      #endif\n\n      int x = int(color0.r * 255.0);\n      float px = r_palette[x] / 256.0;\n\n      int y = int(color0.g * 255.0);\n      float py = g_palette[y] / 256.0;\n\n      int z = int(color0.b * 255.0);\n      float pz = b_palette[z] / 256.0;\n\n      // uFactor0 reserved for future blending if needed\n      fragColor = vec4(px, py, pz, 1.0);\n    }`;\n  }\n}","/**\n * @author Fabrizio Giordano (Fab77)\n * Enum for coordinate types.\n * @readonly\n * @enum {{name: string, hex: string}}\n */\nclass ColorMap {\n  PLANCK = {\n    // \"r\": new Float32Array([0.00000,0.769231,1.53846,2.30769,3.07692,3.84615,4.61538,5.38462,6.15385,6.92308,7.69231,8.46154,9.23077,10.0000,11.5385,13.0769,14.6154,16.1538,17.6923,19.2308,20.7692,22.3077,23.8462,25.3846,26.9231,28.4615,30.0000,33.8462,37.6923,41.5385,45.3846,49.2308,53.0769,56.9231,60.7692,64.6154,68.4615,72.3077,76.1538,80.0000,88.5385,97.0769,105.615,114.154,122.692,131.231,139.769,148.308,156.846,165.385,173.923,182.462,191.000,193.846,196.692,199.538,202.385,205.231,208.077,210.923,213.769,216.615,219.462,222.308,225.154,228.000,229.182,230.364,231.545,232.727,233.909,235.091,236.273,237.455,238.636,239.818,241.000,241.000,241.364,241.727,242.091,242.455,242.818,243.182,243.545,243.909,244.273,244.636,245.000,245.231,245.462,245.692,245.923,246.154,246.385,246.615,246.846,247.077,247.308,247.538,247.769,248.000,248.146,248.292,248.438,248.585,248.731,248.877,249.023,249.169,249.315,249.462,249.608,249.754,249.900,249.312,248.723,248.135,247.546,246.958,246.369,245.781,245.192,244.604,244.015,243.427,242.838,242.250,239.308,236.365,233.423,230.481,227.538,224.596,221.654,218.712,215.769,212.827,209.885,206.942,204.000,201.000,198.000,195.000,192.000,189.000,186.000,183.000,180.000,177.000,174.000,171.000,168.000,165.000,161.077,157.154,153.231,149.308,145.385,141.462,137.538,133.615,129.692,125.769,121.846,117.923,114.000,115.038,116.077,117.115,118.154,119.192,120.231,121.269,122.308,123.346,124.385,125.423,126.462,127.500,131.423,135.346,139.269,143.192,147.115,151.038,154.962,158.885,162.808,166.731,170.654,174.577,178.500,180.462,182.423,184.385,186.346,188.308,190.269,192.231,194.192,196.154,198.115,200.077,202.038,204.000,205.962,207.923,209.885,211.846,213.808,215.769,217.731,219.692,221.654,223.615,225.577,227.538,229.500,230.481,231.462,232.442,233.423,234.404,235.385,236.365,237.346,238.327,239.308,240.288,241.269,242.250,242.642,243.035,243.427,243.819,244.212,244.604,244.996,245.388,245.781,246.173,246.565,246.958,247.350,247.814,248.277,248.741,249.205,249.668,250.132,250.595,251.059,251.523,251.986,252.450]),\n    // \"g\": new Float32Array([0.00000,1.53846,3.07692,4.61538,6.15385,7.69231,9.23077,10.7692,12.3077,13.8462,15.3846,16.9231,18.4615,20.0000,32.6154,45.2308,57.8462,70.4615,83.0769,95.6923,108.308,120.923,133.538,146.154,158.769,171.385,184.000,187.923,191.846,195.769,199.692,203.615,207.538,211.462,215.385,219.308,223.231,227.154,231.077,235.000,235.308,235.615,235.923,236.231,236.538,236.846,237.154,237.462,237.769,238.077,238.385,238.692,239.000,239.077,239.154,239.231,239.308,239.385,239.462,239.538,239.615,239.692,239.769,239.846,239.923,240.000,240.091,240.182,240.273,240.364,240.455,240.545,240.636,240.727,240.818,240.909,241.000,241.000,240.909,240.818,240.727,240.636,240.545,240.455,240.364,240.273,240.182,240.091,240.000,239.615,239.231,238.846,238.462,238.077,237.692,237.308,236.923,236.538,236.154,235.769,235.385,235.000,232.615,230.231,227.846,225.462,223.077,220.692,218.308,215.923,213.538,211.154,208.769,206.385,204.000,200.077,196.154,192.231,188.308,184.385,180.462,176.538,172.615,168.692,164.769,160.846,156.923,153.000,147.115,141.231,135.346,129.462,123.577,117.692,111.808,105.923,100.038,94.1538,88.2692,82.3846,76.5000,73.0769,69.6538,66.2308,62.8077,59.3846,55.9615,52.5385,49.1154,45.6923,42.2692,38.8462,35.4231,32.0000,29.5385,27.0769,24.6154,22.1538,19.6923,17.2308,14.7692,12.3077,9.84615,7.38462,4.92308,2.46154,0.00000,9.80769,19.6154,29.4231,39.2308,49.0385,58.8462,68.6538,78.4615,88.2692,98.0769,107.885,117.692,127.500,131.423,135.346,139.269,143.192,147.115,151.038,154.962,158.885,162.808,166.731,170.654,174.577,178.500,180.462,182.423,184.385,186.346,188.308,190.269,192.231,194.192,196.154,198.115,200.077,202.038,204.000,205.962,207.923,209.885,211.846,213.808,215.769,217.731,219.692,221.654,223.615,225.577,227.538,229.500,230.481,231.462,232.442,233.423,234.404,235.385,236.365,237.346,238.327,239.308,240.288,241.269,242.250,242.642,243.035,243.427,243.819,244.212,244.604,244.996,245.388,245.781,246.173,246.565,246.958,247.350,247.814,248.277,248.741,249.205,249.668,250.132,250.595,251.059,251.523,251.986,252.450]),\n    // \"b\": new Float32Array([255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,255.000,254.615,254.231,253.846,253.462,253.077,252.692,252.308,251.923,251.538,251.154,250.769,250.385,250.000,249.615,249.231,248.846,248.462,248.077,247.692,247.308,246.923,246.538,246.154,245.769,245.385,245.000,242.000,239.000,236.000,233.000,230.000,227.000,224.000,221.000,218.000,215.000,212.000,212.000,208.636,205.273,201.909,198.545,195.182,191.818,188.455,185.091,181.727,178.364,175.000,171.538,168.077,164.615,161.154,157.692,154.231,150.769,147.308,143.846,140.385,136.923,133.462,130.000,122.942,115.885,108.827,101.769,94.7115,87.6539,80.5962,73.5385,66.4808,59.4231,52.3654,45.3077,38.2500,36.2885,34.3269,32.3654,30.4038,28.4423,26.4808,24.5192,22.5577,20.5962,18.6346,16.6731,14.7115,12.7500,11.7692,10.7885,9.80769,8.82692,7.84615,6.86539,5.88461,4.90385,3.92308,2.94231,1.96154,0.980769,0.00000,2.46154,4.92308,7.38462,9.84616,12.3077,14.7692,17.2308,19.6923,22.1538,24.6154,27.0769,29.5385,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,32.0000,41.3077,50.6154,59.9231,69.2308,78.5385,87.8462,97.1539,106.462,115.769,125.077,134.385,143.692,153.000,156.923,160.846,164.769,168.692,172.615,176.538,180.462,184.385,188.308,192.231,196.154,200.077,204.000,205.962,207.923,209.885,211.846,213.808,215.769,217.731,219.692,221.654,223.615,225.577,227.538,229.500,230.481,231.462,232.442,233.423,234.404,235.385,236.365,237.346,238.327,239.308,240.288,241.269,242.250,242.838,243.427,244.015,244.604,245.192,245.781,246.369,246.958,247.546,248.135,248.723,249.312,249.900,250.096,250.292,250.488,250.685,250.881,251.077,251.273,251.469,251.665,251.862,252.058,252.254,252.450,252.682,252.914,253.145,253.377,253.609,253.841,254.073,254.305,254.536,254.768,255.000])\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.769231, 0.0, 0.0, 0.0, 1.53846, 0.0, 0.0, 0.0, 2.30769, 0.0, 0.0, 0.0,\n      3.07692, 0.0, 0.0, 0.0, 3.84615, 0.0, 0.0, 0.0, 4.61538, 0.0, 0.0, 0.0, 5.38462, 0.0, 0.0,\n      0.0, 6.15385, 0.0, 0.0, 0.0, 6.92308, 0.0, 0.0, 0.0, 7.69231, 0.0, 0.0, 0.0, 8.46154, 0.0,\n      0.0, 0.0, 9.23077, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 11.5385, 0.0, 0.0, 0.0, 13.0769, 0.0,\n      0.0, 0.0, 14.6154, 0.0, 0.0, 0.0, 16.1538, 0.0, 0.0, 0.0, 17.6923, 0.0, 0.0, 0.0, 19.2308,\n      0.0, 0.0, 0.0, 20.7692, 0.0, 0.0, 0.0, 22.3077, 0.0, 0.0, 0.0, 23.8462, 0.0, 0.0, 0.0,\n      25.3846, 0.0, 0.0, 0.0, 26.9231, 0.0, 0.0, 0.0, 28.4615, 0.0, 0.0, 0.0, 30.0, 0.0, 0.0, 0.0,\n      33.8462, 0.0, 0.0, 0.0, 37.6923, 0.0, 0.0, 0.0, 41.5385, 0.0, 0.0, 0.0, 45.3846, 0.0, 0.0,\n      0.0, 49.2308, 0.0, 0.0, 0.0, 53.0769, 0.0, 0.0, 0.0, 56.9231, 0.0, 0.0, 0.0, 60.7692, 0.0,\n      0.0, 0.0, 64.6154, 0.0, 0.0, 0.0, 68.4615, 0.0, 0.0, 0.0, 72.3077, 0.0, 0.0, 0.0, 76.1538,\n      0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 88.5385, 0.0, 0.0, 0.0, 97.0769, 0.0, 0.0, 0.0, 105.615,\n      0.0, 0.0, 0.0, 114.154, 0.0, 0.0, 0.0, 122.692, 0.0, 0.0, 0.0, 131.231, 0.0, 0.0, 0.0,\n      139.769, 0.0, 0.0, 0.0, 148.308, 0.0, 0.0, 0.0, 156.846, 0.0, 0.0, 0.0, 165.385, 0.0, 0.0,\n      0.0, 173.923, 0.0, 0.0, 0.0, 182.462, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 193.846, 0.0, 0.0,\n      0.0, 196.692, 0.0, 0.0, 0.0, 199.538, 0.0, 0.0, 0.0, 202.385, 0.0, 0.0, 0.0, 205.231, 0.0,\n      0.0, 0.0, 208.077, 0.0, 0.0, 0.0, 210.923, 0.0, 0.0, 0.0, 213.769, 0.0, 0.0, 0.0, 216.615,\n      0.0, 0.0, 0.0, 219.462, 0.0, 0.0, 0.0, 222.308, 0.0, 0.0, 0.0, 225.154, 0.0, 0.0, 0.0, 228.0,\n      0.0, 0.0, 0.0, 229.182, 0.0, 0.0, 0.0, 230.364, 0.0, 0.0, 0.0, 231.545, 0.0, 0.0, 0.0,\n      232.727, 0.0, 0.0, 0.0, 233.909, 0.0, 0.0, 0.0, 235.091, 0.0, 0.0, 0.0, 236.273, 0.0, 0.0,\n      0.0, 237.455, 0.0, 0.0, 0.0, 238.636, 0.0, 0.0, 0.0, 239.818, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0,\n      0.0, 241.0, 0.0, 0.0, 0.0, 241.364, 0.0, 0.0, 0.0, 241.727, 0.0, 0.0, 0.0, 242.091, 0.0, 0.0,\n      0.0, 242.455, 0.0, 0.0, 0.0, 242.818, 0.0, 0.0, 0.0, 243.182, 0.0, 0.0, 0.0, 243.545, 0.0,\n      0.0, 0.0, 243.909, 0.0, 0.0, 0.0, 244.273, 0.0, 0.0, 0.0, 244.636, 0.0, 0.0, 0.0, 245.0, 0.0,\n      0.0, 0.0, 245.231, 0.0, 0.0, 0.0, 245.462, 0.0, 0.0, 0.0, 245.692, 0.0, 0.0, 0.0, 245.923,\n      0.0, 0.0, 0.0, 246.154, 0.0, 0.0, 0.0, 246.385, 0.0, 0.0, 0.0, 246.615, 0.0, 0.0, 0.0,\n      246.846, 0.0, 0.0, 0.0, 247.077, 0.0, 0.0, 0.0, 247.308, 0.0, 0.0, 0.0, 247.538, 0.0, 0.0,\n      0.0, 247.769, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 248.146, 0.0, 0.0, 0.0, 248.292, 0.0, 0.0,\n      0.0, 248.438, 0.0, 0.0, 0.0, 248.585, 0.0, 0.0, 0.0, 248.731, 0.0, 0.0, 0.0, 248.877, 0.0,\n      0.0, 0.0, 249.023, 0.0, 0.0, 0.0, 249.169, 0.0, 0.0, 0.0, 249.315, 0.0, 0.0, 0.0, 249.462,\n      0.0, 0.0, 0.0, 249.608, 0.0, 0.0, 0.0, 249.754, 0.0, 0.0, 0.0, 249.9, 0.0, 0.0, 0.0, 249.312,\n      0.0, 0.0, 0.0, 248.723, 0.0, 0.0, 0.0, 248.135, 0.0, 0.0, 0.0, 247.546, 0.0, 0.0, 0.0,\n      246.958, 0.0, 0.0, 0.0, 246.369, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 245.192, 0.0, 0.0,\n      0.0, 244.604, 0.0, 0.0, 0.0, 244.015, 0.0, 0.0, 0.0, 243.427, 0.0, 0.0, 0.0, 242.838, 0.0,\n      0.0, 0.0, 242.25, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0, 233.423, 0.0,\n      0.0, 0.0, 230.481, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 224.596, 0.0, 0.0, 0.0, 221.654,\n      0.0, 0.0, 0.0, 218.712, 0.0, 0.0, 0.0, 215.769, 0.0, 0.0, 0.0, 212.827, 0.0, 0.0, 0.0,\n      209.885, 0.0, 0.0, 0.0, 206.942, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0,\n      198.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 192.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 186.0,\n      0.0, 0.0, 0.0, 183.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0, 177.0, 0.0, 0.0, 0.0, 174.0, 0.0,\n      0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 168.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 161.077, 0.0, 0.0,\n      0.0, 157.154, 0.0, 0.0, 0.0, 153.231, 0.0, 0.0, 0.0, 149.308, 0.0, 0.0, 0.0, 145.385, 0.0,\n      0.0, 0.0, 141.462, 0.0, 0.0, 0.0, 137.538, 0.0, 0.0, 0.0, 133.615, 0.0, 0.0, 0.0, 129.692,\n      0.0, 0.0, 0.0, 125.769, 0.0, 0.0, 0.0, 121.846, 0.0, 0.0, 0.0, 117.923, 0.0, 0.0, 0.0, 114.0,\n      0.0, 0.0, 0.0, 115.038, 0.0, 0.0, 0.0, 116.077, 0.0, 0.0, 0.0, 117.115, 0.0, 0.0, 0.0,\n      118.154, 0.0, 0.0, 0.0, 119.192, 0.0, 0.0, 0.0, 120.231, 0.0, 0.0, 0.0, 121.269, 0.0, 0.0,\n      0.0, 122.308, 0.0, 0.0, 0.0, 123.346, 0.0, 0.0, 0.0, 124.385, 0.0, 0.0, 0.0, 125.423, 0.0,\n      0.0, 0.0, 126.462, 0.0, 0.0, 0.0, 127.5, 0.0, 0.0, 0.0, 131.423, 0.0, 0.0, 0.0, 135.346, 0.0,\n      0.0, 0.0, 139.269, 0.0, 0.0, 0.0, 143.192, 0.0, 0.0, 0.0, 147.115, 0.0, 0.0, 0.0, 151.038,\n      0.0, 0.0, 0.0, 154.962, 0.0, 0.0, 0.0, 158.885, 0.0, 0.0, 0.0, 162.808, 0.0, 0.0, 0.0,\n      166.731, 0.0, 0.0, 0.0, 170.654, 0.0, 0.0, 0.0, 174.577, 0.0, 0.0, 0.0, 178.5, 0.0, 0.0, 0.0,\n      180.462, 0.0, 0.0, 0.0, 182.423, 0.0, 0.0, 0.0, 184.385, 0.0, 0.0, 0.0, 186.346, 0.0, 0.0,\n      0.0, 188.308, 0.0, 0.0, 0.0, 190.269, 0.0, 0.0, 0.0, 192.231, 0.0, 0.0, 0.0, 194.192, 0.0,\n      0.0, 0.0, 196.154, 0.0, 0.0, 0.0, 198.115, 0.0, 0.0, 0.0, 200.077, 0.0, 0.0, 0.0, 202.038,\n      0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.962, 0.0, 0.0, 0.0, 207.923, 0.0, 0.0, 0.0, 209.885,\n      0.0, 0.0, 0.0, 211.846, 0.0, 0.0, 0.0, 213.808, 0.0, 0.0, 0.0, 215.769, 0.0, 0.0, 0.0,\n      217.731, 0.0, 0.0, 0.0, 219.692, 0.0, 0.0, 0.0, 221.654, 0.0, 0.0, 0.0, 223.615, 0.0, 0.0,\n      0.0, 225.577, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 229.5, 0.0, 0.0, 0.0, 230.481, 0.0, 0.0,\n      0.0, 231.462, 0.0, 0.0, 0.0, 232.442, 0.0, 0.0, 0.0, 233.423, 0.0, 0.0, 0.0, 234.404, 0.0,\n      0.0, 0.0, 235.385, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0, 237.346, 0.0, 0.0, 0.0, 238.327,\n      0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 240.288, 0.0, 0.0, 0.0, 241.269, 0.0, 0.0, 0.0, 242.25,\n      0.0, 0.0, 0.0, 242.642, 0.0, 0.0, 0.0, 243.035, 0.0, 0.0, 0.0, 243.427, 0.0, 0.0, 0.0,\n      243.819, 0.0, 0.0, 0.0, 244.212, 0.0, 0.0, 0.0, 244.604, 0.0, 0.0, 0.0, 244.996, 0.0, 0.0,\n      0.0, 245.388, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 246.173, 0.0, 0.0, 0.0, 246.565, 0.0,\n      0.0, 0.0, 246.958, 0.0, 0.0, 0.0, 247.35, 0.0, 0.0, 0.0, 247.814, 0.0, 0.0, 0.0, 248.277, 0.0,\n      0.0, 0.0, 248.741, 0.0, 0.0, 0.0, 249.205, 0.0, 0.0, 0.0, 249.668, 0.0, 0.0, 0.0, 250.132,\n      0.0, 0.0, 0.0, 250.595, 0.0, 0.0, 0.0, 251.059, 0.0, 0.0, 0.0, 251.523, 0.0, 0.0, 0.0,\n      251.986, 0.0, 0.0, 0.0, 252.45, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 1.53846, 0.0, 0.0, 0.0, 3.07692, 0.0, 0.0, 0.0, 4.61538, 0.0, 0.0, 0.0,\n      6.15385, 0.0, 0.0, 0.0, 7.69231, 0.0, 0.0, 0.0, 9.23077, 0.0, 0.0, 0.0, 10.7692, 0.0, 0.0,\n      0.0, 12.3077, 0.0, 0.0, 0.0, 13.8462, 0.0, 0.0, 0.0, 15.3846, 0.0, 0.0, 0.0, 16.9231, 0.0,\n      0.0, 0.0, 18.4615, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 32.6154, 0.0, 0.0, 0.0, 45.2308, 0.0,\n      0.0, 0.0, 57.8462, 0.0, 0.0, 0.0, 70.4615, 0.0, 0.0, 0.0, 83.0769, 0.0, 0.0, 0.0, 95.6923,\n      0.0, 0.0, 0.0, 108.308, 0.0, 0.0, 0.0, 120.923, 0.0, 0.0, 0.0, 133.538, 0.0, 0.0, 0.0,\n      146.154, 0.0, 0.0, 0.0, 158.769, 0.0, 0.0, 0.0, 171.385, 0.0, 0.0, 0.0, 184.0, 0.0, 0.0, 0.0,\n      187.923, 0.0, 0.0, 0.0, 191.846, 0.0, 0.0, 0.0, 195.769, 0.0, 0.0, 0.0, 199.692, 0.0, 0.0,\n      0.0, 203.615, 0.0, 0.0, 0.0, 207.538, 0.0, 0.0, 0.0, 211.462, 0.0, 0.0, 0.0, 215.385, 0.0,\n      0.0, 0.0, 219.308, 0.0, 0.0, 0.0, 223.231, 0.0, 0.0, 0.0, 227.154, 0.0, 0.0, 0.0, 231.077,\n      0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 235.308, 0.0, 0.0, 0.0, 235.615, 0.0, 0.0, 0.0, 235.923,\n      0.0, 0.0, 0.0, 236.231, 0.0, 0.0, 0.0, 236.538, 0.0, 0.0, 0.0, 236.846, 0.0, 0.0, 0.0,\n      237.154, 0.0, 0.0, 0.0, 237.462, 0.0, 0.0, 0.0, 237.769, 0.0, 0.0, 0.0, 238.077, 0.0, 0.0,\n      0.0, 238.385, 0.0, 0.0, 0.0, 238.692, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.077, 0.0, 0.0,\n      0.0, 239.154, 0.0, 0.0, 0.0, 239.231, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 239.385, 0.0,\n      0.0, 0.0, 239.462, 0.0, 0.0, 0.0, 239.538, 0.0, 0.0, 0.0, 239.615, 0.0, 0.0, 0.0, 239.692,\n      0.0, 0.0, 0.0, 239.769, 0.0, 0.0, 0.0, 239.846, 0.0, 0.0, 0.0, 239.923, 0.0, 0.0, 0.0, 240.0,\n      0.0, 0.0, 0.0, 240.091, 0.0, 0.0, 0.0, 240.182, 0.0, 0.0, 0.0, 240.273, 0.0, 0.0, 0.0,\n      240.364, 0.0, 0.0, 0.0, 240.455, 0.0, 0.0, 0.0, 240.545, 0.0, 0.0, 0.0, 240.636, 0.0, 0.0,\n      0.0, 240.727, 0.0, 0.0, 0.0, 240.818, 0.0, 0.0, 0.0, 240.909, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0,\n      0.0, 241.0, 0.0, 0.0, 0.0, 240.909, 0.0, 0.0, 0.0, 240.818, 0.0, 0.0, 0.0, 240.727, 0.0, 0.0,\n      0.0, 240.636, 0.0, 0.0, 0.0, 240.545, 0.0, 0.0, 0.0, 240.455, 0.0, 0.0, 0.0, 240.364, 0.0,\n      0.0, 0.0, 240.273, 0.0, 0.0, 0.0, 240.182, 0.0, 0.0, 0.0, 240.091, 0.0, 0.0, 0.0, 240.0, 0.0,\n      0.0, 0.0, 239.615, 0.0, 0.0, 0.0, 239.231, 0.0, 0.0, 0.0, 238.846, 0.0, 0.0, 0.0, 238.462,\n      0.0, 0.0, 0.0, 238.077, 0.0, 0.0, 0.0, 237.692, 0.0, 0.0, 0.0, 237.308, 0.0, 0.0, 0.0,\n      236.923, 0.0, 0.0, 0.0, 236.538, 0.0, 0.0, 0.0, 236.154, 0.0, 0.0, 0.0, 235.769, 0.0, 0.0,\n      0.0, 235.385, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 232.615, 0.0, 0.0, 0.0, 230.231, 0.0, 0.0,\n      0.0, 227.846, 0.0, 0.0, 0.0, 225.462, 0.0, 0.0, 0.0, 223.077, 0.0, 0.0, 0.0, 220.692, 0.0,\n      0.0, 0.0, 218.308, 0.0, 0.0, 0.0, 215.923, 0.0, 0.0, 0.0, 213.538, 0.0, 0.0, 0.0, 211.154,\n      0.0, 0.0, 0.0, 208.769, 0.0, 0.0, 0.0, 206.385, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 200.077,\n      0.0, 0.0, 0.0, 196.154, 0.0, 0.0, 0.0, 192.231, 0.0, 0.0, 0.0, 188.308, 0.0, 0.0, 0.0,\n      184.385, 0.0, 0.0, 0.0, 180.462, 0.0, 0.0, 0.0, 176.538, 0.0, 0.0, 0.0, 172.615, 0.0, 0.0,\n      0.0, 168.692, 0.0, 0.0, 0.0, 164.769, 0.0, 0.0, 0.0, 160.846, 0.0, 0.0, 0.0, 156.923, 0.0,\n      0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 147.115, 0.0, 0.0, 0.0, 141.231, 0.0, 0.0, 0.0, 135.346, 0.0,\n      0.0, 0.0, 129.462, 0.0, 0.0, 0.0, 123.577, 0.0, 0.0, 0.0, 117.692, 0.0, 0.0, 0.0, 111.808,\n      0.0, 0.0, 0.0, 105.923, 0.0, 0.0, 0.0, 100.038, 0.0, 0.0, 0.0, 94.1538, 0.0, 0.0, 0.0,\n      88.2692, 0.0, 0.0, 0.0, 82.3846, 0.0, 0.0, 0.0, 76.5, 0.0, 0.0, 0.0, 73.0769, 0.0, 0.0, 0.0,\n      69.6538, 0.0, 0.0, 0.0, 66.2308, 0.0, 0.0, 0.0, 62.8077, 0.0, 0.0, 0.0, 59.3846, 0.0, 0.0,\n      0.0, 55.9615, 0.0, 0.0, 0.0, 52.5385, 0.0, 0.0, 0.0, 49.1154, 0.0, 0.0, 0.0, 45.6923, 0.0,\n      0.0, 0.0, 42.2692, 0.0, 0.0, 0.0, 38.8462, 0.0, 0.0, 0.0, 35.4231, 0.0, 0.0, 0.0, 32.0, 0.0,\n      0.0, 0.0, 29.5385, 0.0, 0.0, 0.0, 27.0769, 0.0, 0.0, 0.0, 24.6154, 0.0, 0.0, 0.0, 22.1538,\n      0.0, 0.0, 0.0, 19.6923, 0.0, 0.0, 0.0, 17.2308, 0.0, 0.0, 0.0, 14.7692, 0.0, 0.0, 0.0,\n      12.3077, 0.0, 0.0, 0.0, 9.84615, 0.0, 0.0, 0.0, 7.38462, 0.0, 0.0, 0.0, 4.92308, 0.0, 0.0,\n      0.0, 2.46154, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.80769, 0.0, 0.0, 0.0, 19.6154, 0.0, 0.0,\n      0.0, 29.4231, 0.0, 0.0, 0.0, 39.2308, 0.0, 0.0, 0.0, 49.0385, 0.0, 0.0, 0.0, 58.8462, 0.0,\n      0.0, 0.0, 68.6538, 0.0, 0.0, 0.0, 78.4615, 0.0, 0.0, 0.0, 88.2692, 0.0, 0.0, 0.0, 98.0769,\n      0.0, 0.0, 0.0, 107.885, 0.0, 0.0, 0.0, 117.692, 0.0, 0.0, 0.0, 127.5, 0.0, 0.0, 0.0, 131.423,\n      0.0, 0.0, 0.0, 135.346, 0.0, 0.0, 0.0, 139.269, 0.0, 0.0, 0.0, 143.192, 0.0, 0.0, 0.0,\n      147.115, 0.0, 0.0, 0.0, 151.038, 0.0, 0.0, 0.0, 154.962, 0.0, 0.0, 0.0, 158.885, 0.0, 0.0,\n      0.0, 162.808, 0.0, 0.0, 0.0, 166.731, 0.0, 0.0, 0.0, 170.654, 0.0, 0.0, 0.0, 174.577, 0.0,\n      0.0, 0.0, 178.5, 0.0, 0.0, 0.0, 180.462, 0.0, 0.0, 0.0, 182.423, 0.0, 0.0, 0.0, 184.385, 0.0,\n      0.0, 0.0, 186.346, 0.0, 0.0, 0.0, 188.308, 0.0, 0.0, 0.0, 190.269, 0.0, 0.0, 0.0, 192.231,\n      0.0, 0.0, 0.0, 194.192, 0.0, 0.0, 0.0, 196.154, 0.0, 0.0, 0.0, 198.115, 0.0, 0.0, 0.0,\n      200.077, 0.0, 0.0, 0.0, 202.038, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.962, 0.0, 0.0, 0.0,\n      207.923, 0.0, 0.0, 0.0, 209.885, 0.0, 0.0, 0.0, 211.846, 0.0, 0.0, 0.0, 213.808, 0.0, 0.0,\n      0.0, 215.769, 0.0, 0.0, 0.0, 217.731, 0.0, 0.0, 0.0, 219.692, 0.0, 0.0, 0.0, 221.654, 0.0,\n      0.0, 0.0, 223.615, 0.0, 0.0, 0.0, 225.577, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 229.5, 0.0,\n      0.0, 0.0, 230.481, 0.0, 0.0, 0.0, 231.462, 0.0, 0.0, 0.0, 232.442, 0.0, 0.0, 0.0, 233.423,\n      0.0, 0.0, 0.0, 234.404, 0.0, 0.0, 0.0, 235.385, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0,\n      237.346, 0.0, 0.0, 0.0, 238.327, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 240.288, 0.0, 0.0,\n      0.0, 241.269, 0.0, 0.0, 0.0, 242.25, 0.0, 0.0, 0.0, 242.642, 0.0, 0.0, 0.0, 243.035, 0.0, 0.0,\n      0.0, 243.427, 0.0, 0.0, 0.0, 243.819, 0.0, 0.0, 0.0, 244.212, 0.0, 0.0, 0.0, 244.604, 0.0,\n      0.0, 0.0, 244.996, 0.0, 0.0, 0.0, 245.388, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 246.173,\n      0.0, 0.0, 0.0, 246.565, 0.0, 0.0, 0.0, 246.958, 0.0, 0.0, 0.0, 247.35, 0.0, 0.0, 0.0, 247.814,\n      0.0, 0.0, 0.0, 248.277, 0.0, 0.0, 0.0, 248.741, 0.0, 0.0, 0.0, 249.205, 0.0, 0.0, 0.0,\n      249.668, 0.0, 0.0, 0.0, 250.132, 0.0, 0.0, 0.0, 250.595, 0.0, 0.0, 0.0, 251.059, 0.0, 0.0,\n      0.0, 251.523, 0.0, 0.0, 0.0, 251.986, 0.0, 0.0, 0.0, 252.45, 0.0, 0.0, 0.0\n    ]),\n    b: new Float32Array([\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 254.615, 0.0, 0.0, 0.0, 254.231, 0.0, 0.0, 0.0, 253.846,\n      0.0, 0.0, 0.0, 253.462, 0.0, 0.0, 0.0, 253.077, 0.0, 0.0, 0.0, 252.692, 0.0, 0.0, 0.0,\n      252.308, 0.0, 0.0, 0.0, 251.923, 0.0, 0.0, 0.0, 251.538, 0.0, 0.0, 0.0, 251.154, 0.0, 0.0,\n      0.0, 250.769, 0.0, 0.0, 0.0, 250.385, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 249.615, 0.0, 0.0,\n      0.0, 249.231, 0.0, 0.0, 0.0, 248.846, 0.0, 0.0, 0.0, 248.462, 0.0, 0.0, 0.0, 248.077, 0.0,\n      0.0, 0.0, 247.692, 0.0, 0.0, 0.0, 247.308, 0.0, 0.0, 0.0, 246.923, 0.0, 0.0, 0.0, 246.538,\n      0.0, 0.0, 0.0, 246.154, 0.0, 0.0, 0.0, 245.769, 0.0, 0.0, 0.0, 245.385, 0.0, 0.0, 0.0, 245.0,\n      0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 233.0, 0.0,\n      0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0,\n      0.0, 218.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0,\n      208.636, 0.0, 0.0, 0.0, 205.273, 0.0, 0.0, 0.0, 201.909, 0.0, 0.0, 0.0, 198.545, 0.0, 0.0,\n      0.0, 195.182, 0.0, 0.0, 0.0, 191.818, 0.0, 0.0, 0.0, 188.455, 0.0, 0.0, 0.0, 185.091, 0.0,\n      0.0, 0.0, 181.727, 0.0, 0.0, 0.0, 178.364, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0, 171.538, 0.0,\n      0.0, 0.0, 168.077, 0.0, 0.0, 0.0, 164.615, 0.0, 0.0, 0.0, 161.154, 0.0, 0.0, 0.0, 157.692,\n      0.0, 0.0, 0.0, 154.231, 0.0, 0.0, 0.0, 150.769, 0.0, 0.0, 0.0, 147.308, 0.0, 0.0, 0.0,\n      143.846, 0.0, 0.0, 0.0, 140.385, 0.0, 0.0, 0.0, 136.923, 0.0, 0.0, 0.0, 133.462, 0.0, 0.0,\n      0.0, 130.0, 0.0, 0.0, 0.0, 122.942, 0.0, 0.0, 0.0, 115.885, 0.0, 0.0, 0.0, 108.827, 0.0, 0.0,\n      0.0, 101.769, 0.0, 0.0, 0.0, 94.7115, 0.0, 0.0, 0.0, 87.6539, 0.0, 0.0, 0.0, 80.5962, 0.0,\n      0.0, 0.0, 73.5385, 0.0, 0.0, 0.0, 66.4808, 0.0, 0.0, 0.0, 59.4231, 0.0, 0.0, 0.0, 52.3654,\n      0.0, 0.0, 0.0, 45.3077, 0.0, 0.0, 0.0, 38.25, 0.0, 0.0, 0.0, 36.2885, 0.0, 0.0, 0.0, 34.3269,\n      0.0, 0.0, 0.0, 32.3654, 0.0, 0.0, 0.0, 30.4038, 0.0, 0.0, 0.0, 28.4423, 0.0, 0.0, 0.0,\n      26.4808, 0.0, 0.0, 0.0, 24.5192, 0.0, 0.0, 0.0, 22.5577, 0.0, 0.0, 0.0, 20.5962, 0.0, 0.0,\n      0.0, 18.6346, 0.0, 0.0, 0.0, 16.6731, 0.0, 0.0, 0.0, 14.7115, 0.0, 0.0, 0.0, 12.75, 0.0, 0.0,\n      0.0, 11.7692, 0.0, 0.0, 0.0, 10.7885, 0.0, 0.0, 0.0, 9.80769, 0.0, 0.0, 0.0, 8.82692, 0.0,\n      0.0, 0.0, 7.84615, 0.0, 0.0, 0.0, 6.86539, 0.0, 0.0, 0.0, 5.88461, 0.0, 0.0, 0.0, 4.90385,\n      0.0, 0.0, 0.0, 3.92308, 0.0, 0.0, 0.0, 2.94231, 0.0, 0.0, 0.0, 1.96154, 0.0, 0.0, 0.0,\n      0.980769, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.46154, 0.0, 0.0, 0.0, 4.92308, 0.0, 0.0, 0.0,\n      7.38462, 0.0, 0.0, 0.0, 9.84616, 0.0, 0.0, 0.0, 12.3077, 0.0, 0.0, 0.0, 14.7692, 0.0, 0.0,\n      0.0, 17.2308, 0.0, 0.0, 0.0, 19.6923, 0.0, 0.0, 0.0, 22.1538, 0.0, 0.0, 0.0, 24.6154, 0.0,\n      0.0, 0.0, 27.0769, 0.0, 0.0, 0.0, 29.5385, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0,\n      0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0,\n      0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0,\n      0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 41.3077, 0.0, 0.0, 0.0,\n      50.6154, 0.0, 0.0, 0.0, 59.9231, 0.0, 0.0, 0.0, 69.2308, 0.0, 0.0, 0.0, 78.5385, 0.0, 0.0,\n      0.0, 87.8462, 0.0, 0.0, 0.0, 97.1539, 0.0, 0.0, 0.0, 106.462, 0.0, 0.0, 0.0, 115.769, 0.0,\n      0.0, 0.0, 125.077, 0.0, 0.0, 0.0, 134.385, 0.0, 0.0, 0.0, 143.692, 0.0, 0.0, 0.0, 153.0, 0.0,\n      0.0, 0.0, 156.923, 0.0, 0.0, 0.0, 160.846, 0.0, 0.0, 0.0, 164.769, 0.0, 0.0, 0.0, 168.692,\n      0.0, 0.0, 0.0, 172.615, 0.0, 0.0, 0.0, 176.538, 0.0, 0.0, 0.0, 180.462, 0.0, 0.0, 0.0,\n      184.385, 0.0, 0.0, 0.0, 188.308, 0.0, 0.0, 0.0, 192.231, 0.0, 0.0, 0.0, 196.154, 0.0, 0.0,\n      0.0, 200.077, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.962, 0.0, 0.0, 0.0, 207.923, 0.0, 0.0,\n      0.0, 209.885, 0.0, 0.0, 0.0, 211.846, 0.0, 0.0, 0.0, 213.808, 0.0, 0.0, 0.0, 215.769, 0.0,\n      0.0, 0.0, 217.731, 0.0, 0.0, 0.0, 219.692, 0.0, 0.0, 0.0, 221.654, 0.0, 0.0, 0.0, 223.615,\n      0.0, 0.0, 0.0, 225.577, 0.0, 0.0, 0.0, 227.538, 0.0, 0.0, 0.0, 229.5, 0.0, 0.0, 0.0, 230.481,\n      0.0, 0.0, 0.0, 231.462, 0.0, 0.0, 0.0, 232.442, 0.0, 0.0, 0.0, 233.423, 0.0, 0.0, 0.0,\n      234.404, 0.0, 0.0, 0.0, 235.385, 0.0, 0.0, 0.0, 236.365, 0.0, 0.0, 0.0, 237.346, 0.0, 0.0,\n      0.0, 238.327, 0.0, 0.0, 0.0, 239.308, 0.0, 0.0, 0.0, 240.288, 0.0, 0.0, 0.0, 241.269, 0.0,\n      0.0, 0.0, 242.25, 0.0, 0.0, 0.0, 242.838, 0.0, 0.0, 0.0, 243.427, 0.0, 0.0, 0.0, 244.015, 0.0,\n      0.0, 0.0, 244.604, 0.0, 0.0, 0.0, 245.192, 0.0, 0.0, 0.0, 245.781, 0.0, 0.0, 0.0, 246.369,\n      0.0, 0.0, 0.0, 246.958, 0.0, 0.0, 0.0, 247.546, 0.0, 0.0, 0.0, 248.135, 0.0, 0.0, 0.0,\n      248.723, 0.0, 0.0, 0.0, 249.312, 0.0, 0.0, 0.0, 249.9, 0.0, 0.0, 0.0, 250.096, 0.0, 0.0, 0.0,\n      250.292, 0.0, 0.0, 0.0, 250.488, 0.0, 0.0, 0.0, 250.685, 0.0, 0.0, 0.0, 250.881, 0.0, 0.0,\n      0.0, 251.077, 0.0, 0.0, 0.0, 251.273, 0.0, 0.0, 0.0, 251.469, 0.0, 0.0, 0.0, 251.665, 0.0,\n      0.0, 0.0, 251.862, 0.0, 0.0, 0.0, 252.058, 0.0, 0.0, 0.0, 252.254, 0.0, 0.0, 0.0, 252.45, 0.0,\n      0.0, 0.0, 252.682, 0.0, 0.0, 0.0, 252.914, 0.0, 0.0, 0.0, 253.145, 0.0, 0.0, 0.0, 253.377,\n      0.0, 0.0, 0.0, 253.609, 0.0, 0.0, 0.0, 253.841, 0.0, 0.0, 0.0, 254.073, 0.0, 0.0, 0.0,\n      254.305, 0.0, 0.0, 0.0, 254.536, 0.0, 0.0, 0.0, 254.768, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0\n    ])\n  }\n  RAINBOW = {\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 18.0, 0.0,\n      0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0,\n      40.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 54.0, 0.0, 0.0, 0.0, 58.0, 0.0,\n      0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0,\n      72.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 80.0, 0.0,\n      0.0, 0.0, 82.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0,\n      86.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 87.0, 0.0,\n      0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0,\n      84.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 78.0, 0.0,\n      0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0,\n      68.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 58.0, 0.0, 0.0, 0.0, 55.0, 0.0,\n      0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0,\n      36.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 16.0, 0.0,\n      0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 21.0, 0.0,\n      0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0,\n      46.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 67.0, 0.0,\n      0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 0.0,\n      93.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 101.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 114.0,\n      0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 135.0, 0.0,\n      0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0,\n      0.0, 161.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0,\n      182.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 203.0,\n      0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 225.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0,\n      0.0, 250.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 4.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 25.0,\n      0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0,\n      0.0, 51.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 72.0,\n      0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 0.0, 93.0, 0.0, 0.0,\n      0.0, 97.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      119.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 140.0,\n      0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 161.0, 0.0,\n      0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0,\n      0.0, 187.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0,\n      208.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 220.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 250.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 233.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0,\n      0.0, 208.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0,\n      187.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 165.0,\n      0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 144.0, 0.0,\n      0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0,\n      0.0, 119.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0, 0.0,\n      97.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 76.0, 0.0,\n      0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0,\n      51.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 29.0, 0.0,\n      0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0\n    ]),\n    b: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 14.0, 0.0,\n      0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0,\n      38.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 59.0, 0.0,\n      0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0,\n      81.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 100.0,\n      0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 113.0, 0.0, 0.0, 0.0, 118.0, 0.0,\n      0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0,\n      0.0, 141.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0,\n      159.0, 0.0, 0.0, 0.0, 163.0, 0.0, 0.0, 0.0, 168.0, 0.0, 0.0, 0.0, 173.0, 0.0, 0.0, 0.0, 177.0,\n      0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 195.0, 0.0,\n      0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0,\n      0.0, 218.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0,\n      236.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 246.0, 0.0,\n      0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0,\n      0.0, 220.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0,\n      199.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 178.0,\n      0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 157.0, 0.0,\n      0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0,\n      0.0, 131.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      110.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 89.0,\n      0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0,\n      0.0, 63.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 42.0,\n      0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0,\n      0.0, 16.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0\n    ])\n  }\n  CMB = {\n    // \"r\": new Float32Array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 12.0, 18.0, 24.0, 30.0, 36.0, 42.0, 48.0, 54.0, 60.0, 66.0, 72.0, 78.0, 85.0, 91.0, 97.0, 103.0, 109.0, 115.0, 121.0, 127.0, 133.0, 139.0, 145.0, 151.0, 157.0, 163.0, 170.0, 176.0, 182.0, 188.0, 194.0, 200.0, 206.0, 212.0, 218.0, 224.0, 230.0, 236.0, 242.0, 248.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 251.0, 247.0, 244.0, 240.0, 236.0, 233.0, 229.0, 226.0, 222.0, 218.0, 215.0, 211.0, 208.0, 204.0, 200.0, 197.0, 193.0, 190.0, 186.0, 182.0, 179.0, 175.0, 172.0, 168.0, 164.0, 161.0, 157.0, 154.0, 150.0, 146.0, 143.0, 139.0, 136.0, 132.0, 128.0, 125.0, 121.0, 118.0, 114.0, 110.0, 107.0, 103.0, 100.0]),\n    // \"g\": new Float32Array([0.0, 2.0, 5.0, 8.0, 10.0, 13.0, 16.0, 18.0, 21.0, 24.0, 26.0, 29.0, 32.0, 34.0, 37.0, 40.0, 42.0, 45.0, 48.0, 50.0, 53.0, 56.0, 58.0, 61.0, 64.0, 66.0, 69.0, 72.0, 74.0, 77.0, 80.0, 82.0, 85.0, 88.0, 90.0, 93.0, 96.0, 98.0, 101.0, 104.0, 106.0, 109.0, 112.0, 114.0, 117.0, 119.0, 122.0, 124.0, 127.0, 129.0, 132.0, 134.0, 137.0, 139.0, 142.0, 144.0, 147.0, 150.0, 152.0, 155.0, 157.0, 160.0, 162.0, 165.0, 167.0, 170.0, 172.0, 175.0, 177.0, 180.0, 182.0, 185.0, 188.0, 190.0, 193.0, 195.0, 198.0, 200.0, 203.0, 205.0, 208.0, 210.0, 213.0, 215.0, 218.0, 221.0, 221.0, 221.0, 222.0, 222.0, 222.0, 223.0, 223.0, 224.0, 224.0, 224.0, 225.0, 225.0, 225.0, 226.0, 226.0, 227.0, 227.0, 227.0, 228.0, 228.0, 229.0, 229.0, 229.0, 230.0, 230.0, 230.0, 231.0, 231.0, 232.0, 232.0, 232.0, 233.0, 233.0, 233.0, 234.0, 234.0, 235.0, 235.0, 235.0, 236.0, 236.0, 237.0, 235.0, 234.0, 233.0, 231.0, 230.0, 229.0, 227.0, 226.0, 225.0, 223.0, 222.0, 221.0, 219.0, 218.0, 217.0, 215.0, 214.0, 213.0, 211.0, 210.0, 209.0, 207.0, 206.0, 205.0, 203.0, 202.0, 201.0, 199.0, 198.0, 197.0, 195.0, 194.0, 193.0, 191.0, 190.0, 189.0, 187.0, 186.0, 185.0, 183.0, 182.0, 181.0, 180.0, 177.0, 175.0, 172.0, 170.0, 167.0, 165.0, 162.0, 160.0, 157.0, 155.0, 152.0, 150.0, 147.0, 145.0, 142.0, 140.0, 137.0, 135.0, 132.0, 130.0, 127.0, 125.0, 122.0, 120.0, 117.0, 115.0, 112.0, 110.0, 107.0, 105.0, 102.0, 100.0, 97.0, 95.0, 92.0, 90.0, 87.0, 85.0, 82.0, 80.0, 77.0, 75.0, 73.0, 71.0, 69.0, 68.0, 66.0, 64.0, 62.0, 61.0, 59.0, 57.0, 55.0, 54.0, 52.0, 50.0, 48.0, 47.0, 45.0, 43.0, 41.0, 40.0, 38.0, 36.0, 34.0, 33.0, 31.0, 29.0, 27.0, 26.0, 24.0, 22.0, 20.0, 19.0, 17.0, 15.0, 13.0, 12.0, 10.0, 8.0, 6.0, 5.0, 3.0, 1.0, 0.0]),\n    // \"b\": new Float32Array([255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 254.0, 253.0, 252.0, 251.0, 250.0, 249.0, 248.0, 247.0, 246.0, 245.0, 245.0, 244.0, 243.0, 242.0, 241.0, 240.0, 239.0, 238.0, 237.0, 236.0, 236.0, 235.0, 234.0, 233.0, 232.0, 231.0, 230.0, 229.0, 228.0, 227.0, 226.0, 226.0, 225.0, 224.0, 223.0, 222.0, 221.0, 220.0, 219.0, 218.0, 217.0, 217.0, 211.0, 206.0, 201.0, 196.0, 191.0, 186.0, 181.0, 176.0, 171.0, 166.0, 161.0, 156.0, 151.0, 146.0, 141.0, 136.0, 131.0, 126.0, 121.0, 116.0, 111.0, 105.0, 100.0, 95.0, 90.0, 85.0, 80.0, 75.0, 70.0, 65.0, 60.0, 55.0, 50.0, 45.0, 40.0, 35.0, 30.0, 25.0, 20.0, 15.0, 10.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 18.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0,\n      30.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 54.0, 0.0,\n      0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0,\n      85.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 109.0,\n      0.0, 0.0, 0.0, 115.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 133.0, 0.0,\n      0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 151.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0,\n      0.0, 163.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0,\n      188.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0, 0.0, 212.0,\n      0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 236.0, 0.0,\n      0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0,\n      0.0, 247.0, 0.0, 0.0, 0.0, 244.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0,\n      233.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 218.0,\n      0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 204.0, 0.0,\n      0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 190.0, 0.0, 0.0,\n      0.0, 186.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 179.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0,\n      172.0, 0.0, 0.0, 0.0, 168.0, 0.0, 0.0, 0.0, 164.0, 0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 157.0,\n      0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 143.0, 0.0,\n      0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 128.0, 0.0, 0.0,\n      0.0, 125.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      110.0, 0.0, 0.0, 0.0, 107.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 10.0, 0.0,\n      0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 18.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0,\n      24.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 34.0, 0.0,\n      0.0, 0.0, 37.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0,\n      48.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 56.0, 0.0, 0.0, 0.0, 58.0, 0.0,\n      0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0,\n      72.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 82.0, 0.0,\n      0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 90.0, 0.0, 0.0, 0.0, 93.0, 0.0, 0.0, 0.0,\n      96.0, 0.0, 0.0, 0.0, 98.0, 0.0, 0.0, 0.0, 101.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 106.0,\n      0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 112.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0, 117.0, 0.0,\n      0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 124.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0,\n      0.0, 129.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 134.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0,\n      139.0, 0.0, 0.0, 0.0, 142.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 150.0,\n      0.0, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 155.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 160.0, 0.0,\n      0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0,\n      0.0, 172.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0, 177.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0,\n      182.0, 0.0, 0.0, 0.0, 185.0, 0.0, 0.0, 0.0, 188.0, 0.0, 0.0, 0.0, 190.0, 0.0, 0.0, 0.0, 193.0,\n      0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 203.0, 0.0,\n      0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0,\n      0.0, 215.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0,\n      221.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 223.0,\n      0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 224.0, 0.0,\n      0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0,\n      0.0, 226.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0,\n      228.0, 0.0, 0.0, 0.0, 228.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 231.0, 0.0,\n      0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0,\n      0.0, 233.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0,\n      234.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 236.0,\n      0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 234.0, 0.0,\n      0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0,\n      0.0, 227.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0,\n      222.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 219.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 217.0,\n      0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 211.0, 0.0,\n      0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0,\n      0.0, 205.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 202.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0,\n      199.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 194.0,\n      0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 190.0, 0.0, 0.0, 0.0, 189.0, 0.0,\n      0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 185.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0,\n      0.0, 182.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.0, 0.0, 177.0, 0.0, 0.0, 0.0,\n      175.0, 0.0, 0.0, 0.0, 172.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 165.0,\n      0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 160.0, 0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 155.0, 0.0,\n      0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0,\n      0.0, 142.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0,\n      132.0, 0.0, 0.0, 0.0, 130.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 125.0, 0.0, 0.0, 0.0, 122.0,\n      0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 117.0, 0.0, 0.0, 0.0, 115.0, 0.0, 0.0, 0.0, 112.0, 0.0,\n      0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 107.0, 0.0, 0.0, 0.0, 105.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0,\n      0.0, 100.0, 0.0, 0.0, 0.0, 97.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0,\n      90.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 85.0, 0.0, 0.0, 0.0, 82.0, 0.0, 0.0, 0.0, 80.0, 0.0,\n      0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0,\n      69.0, 0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 62.0, 0.0,\n      0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0,\n      54.0, 0.0, 0.0, 0.0, 52.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 47.0, 0.0,\n      0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0,\n      38.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 31.0, 0.0,\n      0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0,\n      22.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 15.0, 0.0,\n      0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0,\n      6.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0\n    ]),\n    b: new Float32Array([\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 254.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 252.0, 0.0, 0.0, 0.0, 251.0,\n      0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 249.0, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 247.0, 0.0,\n      0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 244.0, 0.0, 0.0,\n      0.0, 243.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0,\n      239.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 236.0,\n      0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 232.0, 0.0,\n      0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 228.0, 0.0, 0.0,\n      0.0, 227.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0,\n      224.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 220.0,\n      0.0, 0.0, 0.0, 219.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 217.0, 0.0, 0.0, 0.0, 217.0, 0.0,\n      0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0,\n      0.0, 191.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0, 0.0,\n      171.0, 0.0, 0.0, 0.0, 166.0, 0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 156.0, 0.0, 0.0, 0.0, 151.0,\n      0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 141.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 131.0, 0.0,\n      0.0, 0.0, 126.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 111.0, 0.0, 0.0,\n      0.0, 105.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 90.0, 0.0, 0.0, 0.0,\n      85.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0, 65.0, 0.0,\n      0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0,\n      40.0, 0.0, 0.0, 0.0, 35.0, 0.0, 0.0, 0.0, 30.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 20.0, 0.0,\n      0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n    ])\n  }\n  CUBEHELIX = {\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0,\n      0.0, 8.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 13.0,\n      0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 18.0, 0.0, 0.0,\n      0.0, 19.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 22.0,\n      0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0,\n      0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0,\n      0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0,\n      0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 26.0,\n      0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0,\n      0.0, 24.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 23.0,\n      0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0,\n      0.0, 22.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0,\n      0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0,\n      0.0, 20.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 21.0,\n      0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0,\n      0.0, 23.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 26.0,\n      0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 30.0, 0.0, 0.0,\n      0.0, 31.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 35.0, 0.0, 0.0, 0.0, 36.0,\n      0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 43.0, 0.0, 0.0,\n      0.0, 45.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 53.0,\n      0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 62.0, 0.0, 0.0,\n      0.0, 65.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 75.0,\n      0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0,\n      0.0, 89.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 98.0, 0.0, 0.0, 0.0,\n      101.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 107.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 113.0,\n      0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 126.0, 0.0,\n      0.0, 0.0, 129.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 138.0, 0.0, 0.0,\n      0.0, 141.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 150.0, 0.0, 0.0, 0.0,\n      153.0, 0.0, 0.0, 0.0, 155.0, 0.0, 0.0, 0.0, 158.0, 0.0, 0.0, 0.0, 161.0, 0.0, 0.0, 0.0, 164.0,\n      0.0, 0.0, 0.0, 166.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 174.0, 0.0,\n      0.0, 0.0, 176.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0,\n      0.0, 185.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0,\n      193.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 199.0,\n      0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0, 202.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 204.0, 0.0,\n      0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 206.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0,\n      0.0, 209.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0,\n      211.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0,\n      0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 212.0, 0.0,\n      0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0,\n      0.0, 210.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0,\n      208.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 206.0,\n      0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 203.0, 0.0,\n      0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 202.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0, 0.0, 201.0, 0.0, 0.0,\n      0.0, 200.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0,\n      197.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 195.0,\n      0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 194.0, 0.0,\n      0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0,\n      0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0,\n      193.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 195.0,\n      0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 197.0, 0.0,\n      0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0,\n      0.0, 202.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0,\n      206.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 212.0,\n      0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 217.0, 0.0, 0.0, 0.0, 218.0, 0.0,\n      0.0, 0.0, 220.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0,\n      0.0, 227.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0, 0.0,\n      234.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 242.0,\n      0.0, 0.0, 0.0, 244.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 249.0, 0.0,\n      0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 255.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0,\n      0.0, 2.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 5.0, 0.0,\n      0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 9.0,\n      0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 11.0, 0.0, 0.0, 0.0, 11.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0,\n      0.0, 13.0, 0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 18.0,\n      0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0,\n      0.0, 24.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 29.0,\n      0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 34.0, 0.0, 0.0, 0.0, 35.0, 0.0, 0.0,\n      0.0, 37.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 43.0,\n      0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0,\n      0.0, 52.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 58.0,\n      0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 62.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0,\n      0.0, 67.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 74.0,\n      0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0,\n      0.0, 83.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 89.0,\n      0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 94.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0,\n      0.0, 97.0, 0.0, 0.0, 0.0, 98.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0, 0.0, 101.0, 0.0, 0.0, 0.0,\n      102.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 107.0,\n      0.0, 0.0, 0.0, 108.0, 0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 110.0, 0.0, 0.0, 0.0, 111.0, 0.0,\n      0.0, 0.0, 112.0, 0.0, 0.0, 0.0, 113.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0,\n      0.0, 115.0, 0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 116.0, 0.0, 0.0, 0.0, 117.0, 0.0, 0.0, 0.0,\n      118.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 120.0,\n      0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0,\n      0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0,\n      0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0,\n      122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0,\n      0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 122.0, 0.0,\n      0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0,\n      0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0,\n      121.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0,\n      0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0,\n      0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0,\n      0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0,\n      122.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 124.0,\n      0.0, 0.0, 0.0, 124.0, 0.0, 0.0, 0.0, 125.0, 0.0, 0.0, 0.0, 125.0, 0.0, 0.0, 0.0, 126.0, 0.0,\n      0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 128.0, 0.0, 0.0, 0.0, 129.0, 0.0, 0.0,\n      0.0, 130.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 132.0, 0.0, 0.0, 0.0,\n      133.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0, 138.0,\n      0.0, 0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 142.0, 0.0, 0.0, 0.0, 143.0, 0.0,\n      0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 149.0, 0.0, 0.0,\n      0.0, 150.0, 0.0, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0, 155.0, 0.0, 0.0, 0.0,\n      157.0, 0.0, 0.0, 0.0, 158.0, 0.0, 0.0, 0.0, 160.0, 0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 164.0,\n      0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 171.0, 0.0,\n      0.0, 0.0, 172.0, 0.0, 0.0, 0.0, 174.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0,\n      0.0, 180.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0, 0.0, 185.0, 0.0, 0.0, 0.0,\n      187.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 193.0, 0.0, 0.0, 0.0, 194.0,\n      0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 202.0, 0.0,\n      0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0,\n      0.0, 210.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0,\n      216.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 219.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 222.0,\n      0.0, 0.0, 0.0, 224.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 228.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 232.0, 0.0, 0.0,\n      0.0, 233.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 236.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0,\n      238.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 241.0,\n      0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 244.0, 0.0, 0.0, 0.0, 244.0, 0.0,\n      0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0,\n      0.0, 248.0, 0.0, 0.0, 0.0, 248.0, 0.0, 0.0, 0.0, 249.0, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0,\n      250.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 252.0, 0.0, 0.0, 0.0, 252.0,\n      0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 254.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0\n    ]),\n    b: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0,\n      0.0, 8.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 11.0, 0.0, 0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 15.0,\n      0.0, 0.0, 0.0, 17.0, 0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0,\n      0.0, 25.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 33.0,\n      0.0, 0.0, 0.0, 35.0, 0.0, 0.0, 0.0, 37.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0, 0.0, 41.0, 0.0, 0.0,\n      0.0, 43.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 50.0,\n      0.0, 0.0, 0.0, 52.0, 0.0, 0.0, 0.0, 54.0, 0.0, 0.0, 0.0, 56.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0,\n      0.0, 59.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0, 0.0, 62.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 65.0,\n      0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 69.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0,\n      0.0, 71.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 74.0,\n      0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0,\n      0.0, 77.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0,\n      0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0,\n      0.0, 77.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 77.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 76.0,\n      0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 75.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0,\n      0.0, 73.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 70.0, 0.0, 0.0, 0.0, 69.0,\n      0.0, 0.0, 0.0, 68.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0, 0.0, 66.0, 0.0, 0.0,\n      0.0, 65.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 60.0,\n      0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 58.0, 0.0, 0.0, 0.0, 58.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0,\n      0.0, 56.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 54.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 52.0,\n      0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0,\n      0.0, 49.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 47.0,\n      0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0,\n      0.0, 46.0, 0.0, 0.0, 0.0, 46.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 47.0,\n      0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0, 0.0, 50.0, 0.0, 0.0,\n      0.0, 50.0, 0.0, 0.0, 0.0, 51.0, 0.0, 0.0, 0.0, 52.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 55.0,\n      0.0, 0.0, 0.0, 56.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 60.0, 0.0, 0.0,\n      0.0, 62.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 65.0, 0.0, 0.0, 0.0, 67.0, 0.0, 0.0, 0.0, 69.0,\n      0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 78.0, 0.0, 0.0,\n      0.0, 81.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 88.0, 0.0, 0.0, 0.0, 91.0,\n      0.0, 0.0, 0.0, 94.0, 0.0, 0.0, 0.0, 96.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0,\n      0.0, 105.0, 0.0, 0.0, 0.0, 108.0, 0.0, 0.0, 0.0, 111.0, 0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0,\n      117.0, 0.0, 0.0, 0.0, 120.0, 0.0, 0.0, 0.0, 124.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 130.0,\n      0.0, 0.0, 0.0, 133.0, 0.0, 0.0, 0.0, 136.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 143.0, 0.0,\n      0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 149.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 156.0, 0.0, 0.0,\n      0.0, 159.0, 0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0,\n      172.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0, 184.0,\n      0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 192.0, 0.0, 0.0, 0.0, 195.0, 0.0,\n      0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0,\n      0.0, 207.0, 0.0, 0.0, 0.0, 210.0, 0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0, 0.0,\n      216.0, 0.0, 0.0, 0.0, 218.0, 0.0, 0.0, 0.0, 220.0, 0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 224.0,\n      0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 230.0, 0.0,\n      0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0,\n      0.0, 236.0, 0.0, 0.0, 0.0, 237.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0,\n      239.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 242.0,\n      0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0,\n      0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0,\n      0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0,\n      242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 241.0,\n      0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0, 0.0, 240.0, 0.0,\n      0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0,\n      0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0,\n      238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0,\n      0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 239.0, 0.0,\n      0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0, 0.0, 240.0, 0.0, 0.0,\n      0.0, 241.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0,\n      244.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 248.0,\n      0.0, 0.0, 0.0, 249.0, 0.0, 0.0, 0.0, 250.0, 0.0, 0.0, 0.0, 252.0, 0.0, 0.0, 0.0, 253.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0\n    ])\n  }\n  EOSB = {\n    r: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 0.0, 0.0, 0.0, 18.0,\n      0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 45.0, 0.0, 0.0, 0.0, 49.0, 0.0, 0.0,\n      0.0, 57.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 81.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0,\n      100.0, 0.0, 0.0, 0.0, 109.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 136.0,\n      0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 139.0, 0.0, 0.0, 0.0, 163.0, 0.0, 0.0, 0.0, 173.0, 0.0,\n      0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0,\n      0.0, 218.0, 0.0, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 253.0, 0.0, 0.0, 0.0, 251.0, 0.0, 0.0, 0.0, 249.0, 0.0,\n      0.0, 0.0, 247.0, 0.0, 0.0, 0.0, 245.0, 0.0, 0.0, 0.0, 243.0, 0.0, 0.0, 0.0, 241.0, 0.0, 0.0,\n      0.0, 215.0, 0.0, 0.0, 0.0, 214.0, 0.0, 0.0, 0.0, 235.0, 0.0, 0.0, 0.0, 234.0, 0.0, 0.0, 0.0,\n      232.0, 0.0, 0.0, 0.0, 230.0, 0.0, 0.0, 0.0, 228.0, 0.0, 0.0, 0.0, 226.0, 0.0, 0.0, 0.0, 224.0,\n      0.0, 0.0, 0.0, 222.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 216.0, 0.0,\n      0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 213.0, 0.0, 0.0, 0.0, 211.0, 0.0, 0.0, 0.0, 209.0, 0.0, 0.0,\n      0.0, 207.0, 0.0, 0.0, 0.0, 205.0, 0.0, 0.0, 0.0, 203.0, 0.0, 0.0, 0.0, 181.0, 0.0, 0.0, 0.0,\n      179.0, 0.0, 0.0, 0.0, 197.0, 0.0, 0.0, 0.0, 196.0, 0.0, 0.0, 0.0, 194.0, 0.0, 0.0, 0.0, 192.0,\n      0.0, 0.0, 0.0, 190.0, 0.0, 0.0, 0.0, 188.0, 0.0, 0.0, 0.0, 186.0, 0.0, 0.0, 0.0, 184.0, 0.0,\n      0.0, 0.0, 164.0, 0.0, 0.0, 0.0, 162.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 176.0, 0.0, 0.0,\n      0.0, 175.0, 0.0, 0.0, 0.0, 173.0, 0.0, 0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0,\n      167.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 147.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 159.0,\n      0.0, 0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 156.0, 0.0, 0.0, 0.0, 154.0, 0.0, 0.0, 0.0, 152.0, 0.0,\n      0.0, 0.0, 150.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 146.0, 0.0, 0.0, 0.0, 130.0, 0.0, 0.0,\n      0.0, 128.0, 0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 138.0, 0.0, 0.0, 0.0, 137.0, 0.0, 0.0, 0.0,\n      135.0, 0.0, 0.0, 0.0, 133.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 129.0, 0.0, 0.0, 0.0, 127.0,\n      0.0, 0.0, 0.0, 113.0, 0.0, 0.0, 0.0, 111.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 119.0, 0.0,\n      0.0, 0.0, 117.0, 0.0, 0.0, 0.0, 117.0, 0.0, 0.0, 0.0\n    ]),\n    g: new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0,\n      0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 23.0, 0.0, 0.0, 0.0, 31.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0,\n      0.0, 47.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 79.0,\n      0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 103.0, 0.0, 0.0, 0.0, 111.0, 0.0,\n      0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 135.0, 0.0, 0.0, 0.0, 129.0, 0.0, 0.0,\n      0.0, 136.0, 0.0, 0.0, 0.0, 159.0, 0.0, 0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 175.0, 0.0, 0.0, 0.0,\n      183.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 215.0,\n      0.0, 0.0, 0.0, 200.0, 0.0, 0.0, 0.0, 207.0, 0.0, 0.0, 0.0, 239.0, 0.0, 0.0, 0.0, 247.0, 0.0,\n      0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0,\n      0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 229.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0,\n      0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0,\n      255.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 250.0,\n      0.0, 0.0, 0.0, 246.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 233.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 198.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0,\n      0.0, 212.0, 0.0, 0.0, 0.0, 208.0, 0.0, 0.0, 0.0, 204.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0,\n      195.0, 0.0, 0.0, 0.0, 191.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 160.0,\n      0.0, 0.0, 0.0, 156.0, 0.0, 0.0, 0.0, 169.0, 0.0, 0.0, 0.0, 165.0, 0.0, 0.0, 0.0, 161.0, 0.0,\n      0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 153.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0,\n      0.0, 140.0, 0.0, 0.0, 0.0, 122.0, 0.0, 0.0, 0.0, 118.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0,\n      125.0, 0.0, 0.0, 0.0, 123.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 116.0,\n      0.0, 0.0, 0.0, 114.0, 0.0, 0.0, 0.0, 112.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0, 0.0, 97.0, 0.0,\n      0.0, 0.0, 106.0, 0.0, 0.0, 0.0, 104.0, 0.0, 0.0, 0.0, 102.0, 0.0, 0.0, 0.0, 99.0, 0.0, 0.0,\n      0.0, 97.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 93.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 80.0,\n      0.0, 0.0, 0.0, 78.0, 0.0, 0.0, 0.0, 84.0, 0.0, 0.0, 0.0, 82.0, 0.0, 0.0, 0.0, 80.0, 0.0, 0.0,\n      0.0, 78.0, 0.0, 0.0, 0.0, 76.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 0.0, 72.0, 0.0, 0.0, 0.0, 70.0,\n      0.0, 0.0, 0.0, 61.0, 0.0, 0.0, 0.0, 59.0, 0.0, 0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 61.0, 0.0, 0.0,\n      0.0, 59.0, 0.0, 0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 53.0, 0.0, 0.0, 0.0, 50.0,\n      0.0, 0.0, 0.0, 48.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 42.0, 0.0, 0.0,\n      0.0, 40.0, 0.0, 0.0, 0.0, 38.0, 0.0, 0.0, 0.0, 36.0, 0.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 31.0,\n      0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 22.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0,\n      0.0, 21.0, 0.0, 0.0, 0.0, 19.0, 0.0, 0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 12.0,\n      0.0, 0.0, 0.0, 13.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n    ]),\n    b: new Float32Array([\n      116.0, 0.0, 0.0, 0.0, 121.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 131.0, 0.0, 0.0, 0.0, 136.0,\n      0.0, 0.0, 0.0, 140.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0, 148.0, 0.0, 0.0, 0.0, 153.0, 0.0,\n      0.0, 0.0, 157.0, 0.0, 0.0, 0.0, 145.0, 0.0, 0.0, 0.0, 149.0, 0.0, 0.0, 0.0, 170.0, 0.0, 0.0,\n      0.0, 174.0, 0.0, 0.0, 0.0, 178.0, 0.0, 0.0, 0.0, 182.0, 0.0, 0.0, 0.0, 187.0, 0.0, 0.0, 0.0,\n      191.0, 0.0, 0.0, 0.0, 195.0, 0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 183.0, 0.0, 0.0, 0.0, 187.0,\n      0.0, 0.0, 0.0, 212.0, 0.0, 0.0, 0.0, 216.0, 0.0, 0.0, 0.0, 221.0, 0.0, 0.0, 0.0, 225.0, 0.0,\n      0.0, 0.0, 229.0, 0.0, 0.0, 0.0, 233.0, 0.0, 0.0, 0.0, 238.0, 0.0, 0.0, 0.0, 242.0, 0.0, 0.0,\n      0.0, 221.0, 0.0, 0.0, 0.0, 225.0, 0.0, 0.0, 0.0, 255.0, 0.0, 0.0, 0.0, 247.0, 0.0, 0.0, 0.0,\n      239.0, 0.0, 0.0, 0.0, 231.0, 0.0, 0.0, 0.0, 223.0, 0.0, 0.0, 0.0, 215.0, 0.0, 0.0, 0.0, 207.0,\n      0.0, 0.0, 0.0, 199.0, 0.0, 0.0, 0.0, 172.0, 0.0, 0.0, 0.0, 164.0, 0.0, 0.0, 0.0, 175.0, 0.0,\n      0.0, 0.0, 167.0, 0.0, 0.0, 0.0, 159.0, 0.0, 0.0, 0.0, 151.0, 0.0, 0.0, 0.0, 143.0, 0.0, 0.0,\n      0.0, 135.0, 0.0, 0.0, 0.0, 127.0, 0.0, 0.0, 0.0, 119.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0,\n      93.0, 0.0, 0.0, 0.0, 95.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 0.0, 79.0, 0.0, 0.0, 0.0, 71.0, 0.0,\n      0.0, 0.0, 63.0, 0.0, 0.0, 0.0, 55.0, 0.0, 0.0, 0.0, 47.0, 0.0, 0.0, 0.0, 39.0, 0.0, 0.0, 0.0,\n      28.0, 0.0, 0.0, 0.0, 21.0, 0.0, 0.0, 0.0, 15.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0\n    ])\n  }\n}\n\nexport const colorMap = new ColorMap()\n","// HiPSShaderProgram.ts\nimport global from '../Global.js'\nimport ShaderManager from './ShaderManager.js'\nimport { colorMap } from '../model/hips/ColorMap.js'\n\ntype GL = WebGL2RenderingContext;\n\ntype UniformNames = {\n  sampler: string\n  factor: string\n  m_perspective: string\n  m_model: string\n  m_view: string\n  colormapIdx: string\n  colormap_red: string\n  colormap_green: string\n  colormap_blue: string\n}\n\ntype AttributeNames = {\n  vertex_pos: string\n  text_coords: string\n}\n\ntype Locations = {\n  pMatrix: WebGLUniformLocation | null\n  mMatrix: WebGLUniformLocation | null\n  vMatrix: WebGLUniformLocation | null\n  sampler: WebGLUniformLocation | null\n  textureAlpha: WebGLUniformLocation | null\n  clorMapIdx: WebGLUniformLocation | null\n  vertexPositionAttribute: number\n  textureCoordAttribute: number\n}\n\nexport default class HiPSShaderProgram {\n  private _shaderProgram: WebGLProgram | undefined\n  private _vertexShader!: WebGLShader\n  private _fragmentShader!: WebGLShader\n\n  private _UBO_colorMapBuffer: WebGLBuffer | null = null\n  private _UBO_colorMapVariableInfo: Record<\n    'r_palette' | 'g_palette' | 'b_palette',\n    { index: number; offset: number }\n  > = {\n      r_palette: { index: 0, offset: 0 },\n      g_palette: { index: 0, offset: 0 },\n      b_palette: { index: 0, offset: 0 }\n    }\n\n  readonly gl_uniforms: UniformNames\n  readonly gl_attributes: AttributeNames\n  readonly locations: Locations\n\n  constructor() {\n    this.gl_uniforms = {\n      sampler: 'uSampler0',\n      factor: 'uFactor0',\n      m_perspective: 'uPMatrix',\n      m_model: 'uMMatrix',\n      m_view: 'uVMatrix',\n      colormapIdx: 'cmapIdx',\n      colormap_red: 'r',\n      colormap_green: 'g',\n      colormap_blue: 'b'\n    }\n\n    this.gl_attributes = {\n      vertex_pos: 'aVertexPosition',\n      text_coords: 'aTextureCoord'\n    }\n\n    this.locations = {\n      pMatrix: null,\n      mMatrix: null,\n      vMatrix: null,\n      sampler: null,\n      textureAlpha: null,\n      clorMapIdx: null,\n      vertexPositionAttribute: -1,\n      textureCoordAttribute: -1\n    }\n  }\n\n  get shaderProgram(): WebGLProgram {\n    if (!this._shaderProgram) {\n      const gl = global.gl as GL\n      this._shaderProgram = gl.createProgram() as WebGLProgram\n      this.initShaders()\n    }\n    ; (global.gl as GL).useProgram(this._shaderProgram)\n    return this._shaderProgram\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL\n\n    const fragmentShaderStr = ShaderManager.hipsNativeFS()\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n\n    const vertexShaderStr = ShaderManager.hipsVS()\n    this._vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader\n    gl.shaderSource(this._vertexShader, vertexShaderStr)\n    gl.compileShader(this._vertexShader)\n    if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._vertexShader) || 'Vertex shader compile error')\n      return\n    }\n\n    gl.attachShader(this._shaderProgram as WebGLProgram, this._vertexShader)\n    gl.attachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this._shaderProgram as WebGLProgram)\n\n    if (!gl.getProgramParameter(this._shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n  }\n\n  enableProgram(): void {\n    ; (global.gl as GL).useProgram(this._shaderProgram as WebGLProgram)\n  }\n\n  setGrayscaleShader(): void {\n    const gl = global.gl as GL\n    gl.detachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    const fragmentShaderStr = ShaderManager.hipsGrayscaleFS()\n    this.changeFSShader(fragmentShaderStr)\n  }\n\n  setNativeShader(): void {\n    const gl = global.gl as GL\n    gl.detachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    const fragmentShaderStr = ShaderManager.hipsNativeFS()\n    this.changeFSShader(fragmentShaderStr)\n  }\n\n  setColorMapShader(): void {\n    const gl = global.gl as GL\n    gl.detachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    const fragmentShaderStr = ShaderManager.hipsColorMapFS()\n    this.changeFSShader(fragmentShaderStr)\n\n    // UBO discovery\n    const blockIndex = gl.getUniformBlockIndex(this._shaderProgram as WebGLProgram, 'colormap')\n    const blockSize = gl.getActiveUniformBlockParameter(\n      this._shaderProgram as WebGLProgram,\n      blockIndex,\n      gl.UNIFORM_BLOCK_DATA_SIZE\n    ) as number\n\n    const uboVariableNames = ['r_palette', 'g_palette', 'b_palette'] as const\n    const uboVariableIndices = gl.getUniformIndices(\n      this._shaderProgram as WebGLProgram,\n      uboVariableNames as unknown as string[]\n    ) as number[]\n    const uboVariableOffsets = gl.getActiveUniforms(\n      this._shaderProgram as WebGLProgram,\n      uboVariableIndices,\n      gl.UNIFORM_OFFSET\n    ) as number[]\n\n    this._UBO_colorMapBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.UNIFORM_BUFFER, this._UBO_colorMapBuffer)\n\n    // std140 layout: 256 floats each padded to 16 bytes => 4096 bytes per palette, total 12288\n    const BYTES = 12288\n    gl.bufferData(gl.UNIFORM_BUFFER, BYTES, gl.STATIC_DRAW)\n    gl.bindBuffer(gl.UNIFORM_BUFFER, null)\n\n    gl.bindBufferBase(gl.UNIFORM_BUFFER, 0, this._UBO_colorMapBuffer)\n\n    uboVariableNames.forEach((name, index) => {\n      this._UBO_colorMapVariableInfo[name] = {\n        index: uboVariableIndices[index],\n        offset: uboVariableOffsets[index]\n      }\n    })\n  }\n\n  private changeFSShader(fragmentShaderStr: string): void {\n    const gl = global.gl as GL\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n    gl.attachShader(this._shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this._shaderProgram as WebGLProgram)\n    if (!gl.getProgramParameter(this._shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n    gl.useProgram(this._shaderProgram as WebGLProgram)\n  }\n\n  enableShaders(\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): void {\n    const gl = global.gl as GL\n    gl.useProgram(this._shaderProgram as WebGLProgram)\n\n    this.locations.pMatrix = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_perspective\n    )\n    this.locations.mMatrix = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_model\n    )\n    this.locations.vMatrix = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_view\n    )\n    this.locations.sampler = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.sampler\n    )\n    this.locations.textureAlpha = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.factor\n    )\n    this.locations.clorMapIdx = gl.getUniformLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_uniforms.colormapIdx\n    )\n\n    this.locations.vertexPositionAttribute = gl.getAttribLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_pos\n    )\n    this.locations.textureCoordAttribute = gl.getAttribLocation(\n      this._shaderProgram as WebGLProgram,\n      this.gl_attributes.text_coords\n    )\n\n    if (colorMapIdx >= 2) {\n      const index = gl.getUniformBlockIndex(this._shaderProgram as WebGLProgram, 'colormap')\n      gl.uniformBlockBinding(this._shaderProgram as WebGLProgram, index, 0)\n      gl.bindBuffer(gl.UNIFORM_BUFFER, this._UBO_colorMapBuffer)\n\n      let currentColorMap: { r: Float32Array; g: Float32Array; b: Float32Array } | undefined\n      if (colorMapIdx === 2) currentColorMap = colorMap.PLANCK\n      else if (colorMapIdx === 3) currentColorMap = colorMap.CMB\n      else if (colorMapIdx === 4) currentColorMap = colorMap.RAINBOW\n      else if (colorMapIdx === 5) currentColorMap = colorMap.EOSB\n      else if (colorMapIdx === 6) currentColorMap = colorMap.CUBEHELIX\n\n      if (currentColorMap) {\n        // Offsets match std140 padded arrays (0, 4096, 8192)\n        gl.bufferSubData(gl.UNIFORM_BUFFER, 0, currentColorMap.r, 0)\n        gl.bufferSubData(gl.UNIFORM_BUFFER, 4096, currentColorMap.g, 0)\n        gl.bufferSubData(gl.UNIFORM_BUFFER, 8192, currentColorMap.b, 0)\n      }\n      gl.bindBuffer(gl.UNIFORM_BUFFER, null)\n    }\n\n    gl.uniformMatrix4fv(this.locations.mMatrix, false, mMatrix)\n    gl.uniformMatrix4fv(this.locations.pMatrix, false, pMatrix)\n    gl.uniformMatrix4fv(this.locations.vMatrix, false, vMatrix)\n  }\n}\n\nexport const hipsShaderProgram = new HiPSShaderProgram()","// Tile.ts\nimport global from '../../Global.js'\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport { visibleTilesManager } from './VisibleTilesManager.js'\nimport { fovHelper } from './FoVHelper.js'\nimport HiPS from './HiPS.js'\n\n// ---- Local helper types (adapt or import real ones if you have them) ----\n\ninterface ShaderLocations {\n  pMatrix: WebGLUniformLocation | null;\n  mMatrix: WebGLUniformLocation | null;\n  vMatrix: WebGLUniformLocation | null;\n  sampler: WebGLUniformLocation | null;\n  textureAlpha: WebGLUniformLocation | null;\n  clorMapIdx: WebGLUniformLocation | null;\n  vertexPositionAttribute: number;\n  textureCoordAttribute: number;\n}\n\ntype Mat4 = Float32Array;\n\n// ------------------------------------------------------------------------\n\nexport default class Tile {\n  private _hips: HiPS \n  private _tileno: number\n  private _baseurl: string\n  private _order: number\n\n  private _format: string\n  private _maxorder: number\n  private _isGalacticHips: boolean\n\n  private _ready = false\n  private _abort = false\n  private _image!: HTMLImageElement\n  private _textureLoaded = false\n  private _texture?: WebGLTexture\n  private _texurl = ''\n\n  private _hipsShaderIndex = 0\n\n  private _cacheTime0?: number\n  private _inView = true\n  private _amIStillInFoV_requsetID: number\n\n  // geometry buffers\n  private vertexPosition: Float32Array[] = []\n  private vertexPositionBuffer: WebGLBuffer[] = []\n  private vertexIndices: Uint16Array | Uint32Array = new Uint16Array()\n  private vertexIndexBuffer?: WebGLBuffer\n\n  public opacity = 1.0\n\n  constructor(tileno: number, order: number, hips: HiPS) {\n    this._hips = hips\n    this._tileno = tileno\n\n    this._format = hips.format\n    this._baseurl = hips.baseURL\n    this._maxorder = hips.maxOrder\n    this._isGalacticHips = hips.isGalacticHips\n\n    this._order = order\n\n    this._amIStillInFoV_requsetID = window.setInterval(() => {\n      this.amIStillInFoV()\n    }, 5000)\n\n    this.initImage()\n  }\n\n  destroyIntervals(): void {\n    window.clearInterval(this._amIStillInFoV_requsetID)\n  }\n\n  getReadyState(): boolean {\n    return this._ready\n  }\n\n  get cacheTime0(): number | undefined {\n    return this._cacheTime0\n  }\n\n  resetCacheTime0(): void {\n    this._cacheTime0 = undefined\n  }\n\n  setCacheTime0(): void {\n    this._cacheTime0 = new Date().getTime()\n  }\n\n  private initImage(): void {\n    this._image = new Image()\n    \n    const dirnumber = Math.floor(this._tileno / 10000) * 10000\n    this._texurl = `${this._baseurl}/Norder${this._order}/Dir${dirnumber}/Npix${this._tileno}.${this._format}`\n\n    this._image.onload = () => this.imageLoaded()\n    this._image.onerror = () => {\n      console.error('File not found?', this._texurl)\n      this._ready = false\n      this._abort = true\n      this.destroyIntervals()\n    }\n\n    this._image.crossOrigin = 'anonymous'\n    this._image.src = this._texurl\n  }\n\n  private imageLoaded(): void {\n    \n    this.textureLoaded()\n    this.initModelBuffer()\n\n    const gl = global.gl as WebGL2RenderingContext\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture!)\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image)\n\n    this._textureLoaded = true\n    if (this._textureLoaded) this._ready = true\n  }\n\n  private textureLoaded(): void {\n    const gl = global.gl as WebGL2RenderingContext\n    hipsShaderProgram.enableProgram()\n\n    this._texture = gl.createTexture()!\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n\n    // FIX: use the sampler location we fetched in enableShaders()\n    gl.uniform1i((hipsShaderProgram.locations as ShaderLocations).sampler, this._hipsShaderIndex)\n\n    if (!gl.isTexture(this._texture)) {\n      console.warn('Texture creation failed')\n    }\n  }\n\n  private initModelBuffer(): void {\n    const gl = global.gl as WebGL2RenderingContext\n\n    this.vertexPosition = []\n    this.vertexPositionBuffer = []\n    this.vertexIndices = new Uint16Array()\n\n    const reforder = fovHelper.getRefOrder(this._order)\n\n    const orighealpix = global.getHealpix(this._order)\n    const origxyf = orighealpix.nest2xyf(this._tileno)\n    const orderjump = reforder - this._order\n\n    const dxmin = origxyf.ix << orderjump\n    const dxmax = (origxyf.ix << orderjump) + (1 << orderjump)\n    const dymin = origxyf.iy << orderjump\n    const dymax = (origxyf.iy << orderjump) + (1 << orderjump)\n\n    const healpix = global.getHealpix(reforder)\n\n    this.setupPositionAndTexture4Quadrant2(dxmin, dxmin + (dxmax - dxmin) / 2, dymin, dymin + (dymax - dymin) / 2, 0, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant2(dxmin + (dxmax - dxmin) / 2, dxmax, dymin, dymin + (dymax - dymin) / 2, 1, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant2(dxmin, dxmin + (dxmax - dxmin) / 2, dymin + (dymax - dymin) / 2, dymax, 2, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant2(dxmin + (dxmax - dxmin) / 2, dxmax, dymin + (dymax - dymin) / 2, dymax, 3, healpix, orderjump, origxyf)\n\n    const pixelsXQuadrant = this.vertexPosition[0].length / 20\n    const idx = this.computeVertexIndices(pixelsXQuadrant)\n\n    // If large, upgrade to Uint32 indices\n    if (idx.length > 65535) {\n      // Optional: require OES_element_index_uint if you’re still on WebGL1\n      this.vertexIndices = new Uint32Array(idx)\n    } else {\n      this.vertexIndices = new Uint16Array(idx)\n    }\n\n    this.vertexIndexBuffer = gl.createBuffer()!\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndices, gl.STATIC_DRAW)\n  }\n\n  private computeVertexIndices(pixelsXQuadrant: number): Uint32Array {\n    const vertexIndices = new Uint32Array(6 * pixelsXQuadrant)\n    let baseFaceIndex = 0\n    for (let j = 0; j < pixelsXQuadrant; j++) {\n      const b = baseFaceIndex\n      vertexIndices[6 * j] = b\n      vertexIndices[6 * j + 1] = b + 1\n      vertexIndices[6 * j + 2] = b + 2\n      vertexIndices[6 * j + 3] = b + 2\n      vertexIndices[6 * j + 4] = b + 3\n      vertexIndices[6 * j + 5] = b\n      baseFaceIndex += 4\n    }\n    return vertexIndices\n  }\n\n  private setupPositionAndTexture4Quadrant2(\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    qidx: number,\n    healpix: any,\n    orderjump: number,\n    origxyf: any\n  ): void {\n    const gl = global.gl as WebGL2RenderingContext\n    this.vertexPosition[qidx] = new Float32Array(20 * (dxmax - dxmin) * (dymax - dymin))\n\n    const step = 1 / (1 << orderjump)\n    let p = 0\n\n    const s_pixel_size = 0\n    const t_pixel_size = 0\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        const facesVec3Array = healpix.getPointsForXyfNoStep(dx, dy, origxyf.face)\n        const uindex = dy - (origxyf.iy << orderjump)\n        const vindex = dx - (origxyf.ix << orderjump)\n\n        // v0\n        this.vertexPosition[qidx][20 * p] = facesVec3Array[0].x\n        this.vertexPosition[qidx][20 * p + 1] = facesVec3Array[0].y\n        this.vertexPosition[qidx][20 * p + 2] = facesVec3Array[0].z\n        this.vertexPosition[qidx][20 * p + 3] = step + step * uindex + s_pixel_size\n        this.vertexPosition[qidx][20 * p + 4] = 1 - (step + step * vindex) - t_pixel_size\n        // v1\n        this.vertexPosition[qidx][20 * p + 5] = facesVec3Array[1].x\n        this.vertexPosition[qidx][20 * p + 6] = facesVec3Array[1].y\n        this.vertexPosition[qidx][20 * p + 7] = facesVec3Array[1].z\n        this.vertexPosition[qidx][20 * p + 8] = step + step * uindex + s_pixel_size\n        this.vertexPosition[qidx][20 * p + 9] = 1 - step * vindex + t_pixel_size\n        // v2\n        this.vertexPosition[qidx][20 * p + 10] = facesVec3Array[2].x\n        this.vertexPosition[qidx][20 * p + 11] = facesVec3Array[2].y\n        this.vertexPosition[qidx][20 * p + 12] = facesVec3Array[2].z\n        this.vertexPosition[qidx][20 * p + 13] = step * uindex - s_pixel_size\n        this.vertexPosition[qidx][20 * p + 14] = 1 - step * vindex + t_pixel_size\n        // v3\n        this.vertexPosition[qidx][20 * p + 15] = facesVec3Array[3].x\n        this.vertexPosition[qidx][20 * p + 16] = facesVec3Array[3].y\n        this.vertexPosition[qidx][20 * p + 17] = facesVec3Array[3].z\n        this.vertexPosition[qidx][20 * p + 18] = step * uindex - s_pixel_size\n        this.vertexPosition[qidx][20 * p + 19] = 1 - (step + step * vindex) - t_pixel_size\n        p++\n      }\n    }\n\n    this.vertexPositionBuffer[qidx] = gl.createBuffer()!\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexPosition[qidx], gl.STATIC_DRAW)\n  }\n\n  get inView(): boolean {\n    return this._inView\n  }\n\n  private moveToCache(): void {\n    newTileBuffer.moveTileToCache(this._tileno, this._order, this._hips)\n    this._inView = false\n    this.destroyIntervals()\n  }\n\n  amIStillInFoV(): void {\n    if (this._textureLoaded) this._ready = true\n\n    if (this._isGalacticHips) {\n      if (visibleTilesManager.galAncestorsMap.has(this._order)) {\n        if (!visibleTilesManager.galAncestorsMap.get(this._order)!.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n\n      if (this._order == visibleTilesManager.visibleOrder) {\n        if (!visibleTilesManager.galVisibleTilesByOrder.pixels.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n    } else {\n      if (visibleTilesManager.ancestorsMap.has(this._order)) {\n        if (!visibleTilesManager.ancestorsMap.get(this._order)!.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n\n      if (this._order == visibleTilesManager.visibleOrder) {\n        if (!visibleTilesManager.visibleTilesByOrder.pixels.includes(this._tileno)) {\n          this.moveToCache()\n        } else {\n          this._inView = true\n        }\n      }\n    }\n  }\n\n  draw(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Mat4,\n    vMatrix: Mat4,\n    mMatrix: Mat4,\n    colorMapIdx: number\n  ): void {\n    if (!this._ready || this._abort) return\n\n    let quadrantsToDraw = new Set<number>([0, 1, 2, 3])\n    if (visibleOrder > this._order && this._order < this._maxorder) {\n      const kids = this.drawChildren(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n      if (kids) quadrantsToDraw = kids\n    }\n\n    const gl = global.gl as WebGL2RenderingContext\n    hipsShaderProgram.enableShaders(pMatrix, vMatrix, mMatrix, colorMapIdx)\n\n    // Enable attributes (these locations are retrieved in enableShaders)\n    gl.enableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).vertexPositionAttribute)\n    gl.enableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).textureCoordAttribute)\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture!)\n    gl.uniform1f((hipsShaderProgram.locations as ShaderLocations).textureAlpha, this.opacity)\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer!)\n    const elemno = this.vertexIndices.length\n    const indexType = this.vertexIndices instanceof Uint32Array ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT\n\n    quadrantsToDraw.forEach((qidx) => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n\n      gl.vertexAttribPointer(\n        (hipsShaderProgram.locations as ShaderLocations).vertexPositionAttribute,\n        3, gl.FLOAT, false, 5 * 4, 0\n      )\n      gl.vertexAttribPointer(\n        (hipsShaderProgram.locations as ShaderLocations).textureCoordAttribute,\n        2, gl.FLOAT, false, 5 * 4, 3 * 4\n      )\n\n      gl.drawElements(gl.TRIANGLES, elemno, indexType, 0)\n    })\n\n    gl.disableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).vertexPositionAttribute)\n    gl.disableVertexAttribArray((hipsShaderProgram.locations as ShaderLocations).textureCoordAttribute)\n  }\n\n  private drawChildren(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Mat4,\n    vMatrix: Mat4,\n    mMatrix: Mat4,\n    colorMapIdx: number\n  ): Set<number> | undefined {\n    const quadrantsToDraw = new Set<number>([0, 1, 2, 3])\n    const childrenOrder = this._order + 1\n    if (!visibleTilesMap.has(childrenOrder)) return\n\n    for (let c = 0; c < 4; c++) {\n      const childTileNo = (this._tileno << 2) + c\n      const list = visibleTilesMap.get(childrenOrder)!\n      if (list.includes(childTileNo)) {\n        const childTile = this._isGalacticHips\n          ? newTileBuffer.getGalTile(childTileNo, childrenOrder, this._hips)\n          : newTileBuffer.getTile(childTileNo, childrenOrder, this._hips)\n\n        childTile.draw(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n        if ((childTile as any)._ready) {\n          quadrantsToDraw.delete(childTileNo - (this._tileno << 2))\n        }\n      }\n    }\n    return quadrantsToDraw\n  }\n}","// TileBuffer.ts\nimport Tile from './Tile.js' // adjust if your file is named differently\nimport HiPS from './HiPS.js'\n\nexport default class TileBuffer {\n  // Equatorial\n  private _tiles: Map<string, Tile>\n  private _cachedTiles: Map<string, Tile>\n  private _activeHiPS: Map<HiPS, Map<string, Tile>>\n\n  // Galactic\n  private _galTiles: Map<string, Tile>\n  private _galCachedTiles: Map<string, Tile>\n  private _galActiveHiPS: Map<HiPS, Map<string, Tile>>\n\n  private _cacheAliveMilliSeconds: number\n  private _cleanerId: number\n\n  constructor(minutesToLiveInCache = 1) {\n    this._tiles = new Map()\n    this._cachedTiles = new Map()\n    this._activeHiPS = new Map()\n\n    this._galTiles = new Map()\n    this._galCachedTiles = new Map()\n    this._galActiveHiPS = new Map()\n\n    this._cacheAliveMilliSeconds = minutesToLiveInCache * 60 * 1000\n\n    this._cleanerId = window.setInterval(() => {\n      this.cacheCleaner()\n    }, 10_000)\n  }\n\n  /** Register an equatorial HiPS into the buffer. */\n  addHiPS(hips: HiPS): void {\n    if (this._activeHiPS.has(hips)) {\n      console.error('HiPS already present in TileBuffer')\n      return\n    }\n    this._activeHiPS.set(hips, new Map())\n  }\n\n  /** Register a galactic HiPS into the buffer. */\n  addGalHiPS(hips: HiPS): void {\n    if (this._galActiveHiPS.has(hips)) {\n      console.error('HiPS already present in TileBuffer')\n      return\n    }\n    this._galActiveHiPS.set(hips, new Map())\n  }\n\n  /** Preload/add tile for every registered equatorial HiPS. */\n  addTile(order: number, tileno: number): void {\n    for (const hips of this._activeHiPS.keys()) {\n      this.getTile(tileno, order, hips)\n    }\n  }\n\n  /** Preload/add tile for every registered galactic HiPS. */\n  addGalTile(order: number, tileno: number): void {\n    for (const hips of this._galActiveHiPS.keys()) {\n      this.getGalTile(tileno, order, hips)\n    }\n  }\n\n  /** Fetch (or create) an equatorial tile, reviving from cache if present. */\n  getTile(tileno: number, order: number, hips: HiPS): Tile {\n    const tileKey = this.key(order, tileno, hips.baseURL)\n\n    if (!this._tiles.has(tileKey)) {\n      if (this._cachedTiles.has(tileKey)) {\n        const tile = this._cachedTiles.get(tileKey)!\n        this._tiles.set(tileKey, tile)\n        this._cachedTiles.delete(tileKey)\n        tile.resetCacheTime0()\n      } else {\n        const tile = new Tile(tileno, order, hips as any)\n        this._tiles.set(tileKey, tile)\n      }\n    }\n    return this._tiles.get(tileKey)!\n  }\n\n  /** Fetch (or create) a galactic tile, reviving from cache if present. */\n  getGalTile(tileno: number, order: number, hips: HiPS): Tile {\n    const tileKey = this.key(order, tileno, hips.baseURL)\n\n    if (!this._galTiles.has(tileKey)) {\n      if (this._galCachedTiles.has(tileKey)) {\n        const tile = this._galCachedTiles.get(tileKey)!\n        this._galTiles.set(tileKey, tile)\n        this._galCachedTiles.delete(tileKey)\n        tile.resetCacheTime0()\n      } else {\n        const tile = new Tile(tileno, order, hips as any)\n        this._galTiles.set(tileKey, tile)\n      }\n    }\n    return this._galTiles.get(tileKey)!\n  }\n\n  /** Move a tile (equatorial or galactic) into cache. */\n  moveTileToCache(tileno: number, order: number, hips: HiPS): void {\n    const tileKey = this.key(order, tileno, hips.baseURL)\n\n    if (this._tiles.has(tileKey)) {\n      const tile = this._tiles.get(tileKey)!\n      tile.setCacheTime0()\n      this._cachedTiles.set(tileKey, tile)\n      this._tiles.delete(tileKey)\n    }\n    if (this._galTiles.has(tileKey)) {\n      const tile = this._galTiles.get(tileKey)!\n      tile.setCacheTime0()\n      this._galCachedTiles.set(tileKey, tile)\n      this._galTiles.delete(tileKey)\n    }\n  }\n\n  /** Periodically purge stale cached tiles. */\n  private cacheCleaner(): void {\n    const now = Date.now()\n\n    for (const [tileKey, tile] of this._cachedTiles) {\n      const t0 = tile.cacheTime0\n      if (!tile.inView && t0 !== undefined && now - t0 > this._cacheAliveMilliSeconds) {\n        tile.destroyIntervals()\n        this._cachedTiles.delete(tileKey)\n      }\n    }\n\n    for (const [tileKey, tile] of this._galCachedTiles) {\n      const t0 = tile.cacheTime0\n      if (!tile.inView && t0 !== undefined && now - t0 > this._cacheAliveMilliSeconds) {\n        tile.destroyIntervals()\n        this._galCachedTiles.delete(tileKey)\n      }\n    }\n  }\n\n  /** Compose a stable key for maps. */\n  private key(order: number, tileno: number, baseURL: string): string {\n    return `${order}#${tileno}#${baseURL}`\n  }\n\n  /** Optional: call to stop internal timers if you dispose this buffer. */\n  dispose(): void {\n    window.clearInterval(this._cleanerId)\n  }\n}\n\n// Singleton (kept for compatibility with your original export)\nexport const newTileBuffer = new TileBuffer()","import global from '../../Global.js';\nimport { Pointing, Vec3, Healpix } from 'healpixjs';\nimport RayPickingUtils from '../../utils/RayPickingUtils.js';\nimport { newTileBuffer } from './TileBuffer.js';\nimport { vec4, mat4 } from 'gl-matrix';\nimport healpixGridSingleton from '../grid/HealpixGridSingleton.js';\nimport { bootSetup } from '../../Config.js';\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\ninterface VisibleTiles {\n  pixels: number[];\n  order: number;\n}\n\n\nclass VisibleTilesManager {\n  private _visibleTilesByOrder: VisibleTiles;\n  private _ancestorsMap: Map<number, number[]>;\n\n  private initialised: boolean;\n\n  private _galVisibleTilesByOrder: VisibleTiles;\n  private _galAncestorsMap: Map<number, number[]>;\n  private _galacticMatrixInverted: mat4;\n  private _galacticMatrix: mat4;\n  private insideSphere: boolean = bootSetup.insideSphere\n\n  constructor() {\n    this._visibleTilesByOrder = { pixels: [], order: 0 };\n    this._ancestorsMap = new Map();\n    this.initialised = false;\n\n    this._galVisibleTilesByOrder = { pixels: [], order: 0 };\n    this._galAncestorsMap = new Map();\n\n    // Matrices for galactic <-> equatorial\n    this._galacticMatrixInverted = mat4.create();\n    this._galacticMatrix = mat4.create();\n\n    // From https://observablehq.com/@fil/galactic-rotations (single-precision friendly)\n    // This matrix is (galactic -> equatorial); we store its inverse too.\n    mat4.set(\n      this._galacticMatrixInverted,\n      -0.054876, -0.873437, -0.483835, 0, \n      0.494109, -0.44483, 0.746982, -0, \n      -0.867666, -0.198076, 0.455984, 0, \n      0, 0, 0, 1\n    )\n    mat4.invert(this._galacticMatrix, this._galacticMatrixInverted);\n  }\n\n  init(insideSphere: boolean): void {\n    this.initialised = true;\n    this.insideSphere = insideSphere\n    this.computeVisiblePixels();\n    // Consider debouncing/throttling in real-time UIs\n    setInterval(() => this.computeVisiblePixels(), 500);\n  }\n\n  getVisibleOrder(): number {\n    return healpixGridSingleton.visibleorder;\n  }\n\n  // toggleInsideSphere(){\n  //   this.insideSphere = !this.insideSphere\n  //   this.computeVisiblePixels();\n  // }\n\n  computeVisiblePixels(): void {\n    if (!this.initialised) return;\n\n    let order = healpixGridSingleton.visibleorder;\n    if (global.insideSphere && order < 3) {\n      order = 3;\n    }\n\n    this._ancestorsMap.set(order, []);\n    this._galAncestorsMap.set(order, []);\n\n    let pixels: number[] = [];\n    let galTiles: number[] = [];\n\n    if (order === 0) {\n      const geomhealpix: Healpix = global.getHealpix(0);\n      const npix = geomhealpix.getNPix();\n      for (let i = 0; i < npix; i++) {\n        pixels.push(i);\n        this._ancestorsMap.get(order)!.push(i);\n        galTiles.push(i);\n        this._galAncestorsMap.get(order)!.push(i);\n      }\n    } else {\n      const geomhealpix: Healpix = global.getHealpix(order);\n      const maxX = (global.gl as GL).canvas.width;\n      const maxY = (global.gl as GL).canvas.height;\n\n      // Sample a grid of screen points, project to the sphere, then to galactic\n      for (let i = 0; i <= maxX; i += maxX / 30) {\n        for (let j = 0; j <= maxY; j += maxY / 30) {\n          const hit = RayPickingUtils.getIntersectionPointWithSingleModel(\n            i,\n            j\n          );\n\n          if (hit.length > 0) {\n            // Equatorial -> Galactic (use _galacticMatrix)\n            const galVec = vec4.create();\n            vec4.transformMat4(galVec, [hit[0], hit[1], hit[2], 1], this._galacticMatrix);\n\n            // Index in galactic HEALPix\n            const galPoint = new Pointing(new Vec3(galVec[0], galVec[1], galVec[2]));\n            const galTileNo = geomhealpix.ang2pix(galPoint);\n\n            // Index in equatorial HEALPix\n            const curPoint = new Pointing(new Vec3(hit[0], hit[1], hit[2]));\n            const currPixNo = geomhealpix.ang2pix(curPoint);\n\n            if (!pixels.includes(currPixNo)) {\n              pixels.push(currPixNo);\n              this._ancestorsMap.get(order)!.push(currPixNo);\n              newTileBuffer.addTile(order, currPixNo);\n            }\n\n            if (!galTiles.includes(galTileNo)) {\n              galTiles.push(galTileNo);\n              this._galAncestorsMap.get(order)!.push(galTileNo);\n              newTileBuffer.addGalTile(order, galTileNo);\n            }\n          }\n        }\n      }\n    }\n\n    this._visibleTilesByOrder = { pixels: pixels, order: order };\n    this._galVisibleTilesByOrder = { pixels: galTiles, order: order };\n\n    // Build ancestor pyramids down to order 0\n    for (let o = 1; o < order; o++) {\n      const tgtOrder = order - o;\n      const list = this._ancestorsMap.get(tgtOrder) ?? [];\n      this._ancestorsMap.set(tgtOrder, list);\n\n      for (let p = 0; p < pixels.length; p++) {\n        const parent = pixels[p] >> (2 * o);\n        if (!list.includes(parent)) {\n          list.push(parent);\n          newTileBuffer.addTile(tgtOrder, parent);\n        }\n      }\n    }\n\n    for (let o = 1; o < order; o++) {\n      const tgtOrder = order - o;\n      const list = this._galAncestorsMap.get(tgtOrder) ?? [];\n      this._galAncestorsMap.set(tgtOrder, list);\n\n      for (let p = 0; p < galTiles.length; p++) {\n        const parent = galTiles[p] >> (2 * o);\n        if (!list.includes(parent)) {\n          list.push(parent);\n          newTileBuffer.addGalTile(tgtOrder, parent);\n        }\n      }\n    }\n  }\n\n  get visibleTilesByOrder(): VisibleTiles {\n    return this._visibleTilesByOrder;\n  }\n\n  get ancestorsMap(): Map<number, number[]> {\n    return this._ancestorsMap;\n  }\n\n  get galVisibleTilesByOrder(): VisibleTiles {\n    return this._galVisibleTilesByOrder;\n  }\n\n  get galAncestorsMap(): Map<number, number[]> {\n    return this._galAncestorsMap;\n  }\n\n  get visibleOrder(): number {\n    return this._visibleTilesByOrder.order;\n  }\n}\n\nexport const visibleTilesManager = new VisibleTilesManager();","'use strict';\n\nimport AbstractSkyEntity from '../AbstractSkyEntity.js';\nimport global from '../../Global.js';\n\nimport { mat4, vec4, ReadonlyMat4 } from 'gl-matrix';\nimport { Healpix } from 'healpixjs';\n\nimport { fovHelper } from '../hips/FoVHelper.js';\nimport FoVUtils from '../../utils/FoVUtils.js';\nimport { FoV } from '../FoV.js';\n\nimport CoordsType from '../../utils/CoordsType.js';\nimport Point from '../Point.js';\n\nimport GridShaderManager from '../../shader/GridShaderManager.js';\nimport GeomUtils from '../../utils/GeomUtils.js';\nimport GridTextHelper from './GridTextHelper.js';\nimport { visibleTilesManager } from '../hips/VisibleTilesManager.js';\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js';\nimport { colorHex2RGB } from '../../utils/Utils.js';\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\ninterface BoundVec {\n  x: number;\n  y: number;\n  z: number;\n}\n\n\nclass HealpixGridSingleton extends AbstractSkyEntity {\n\n  static ELEM_SIZE = 3;\n  static BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT;\n\n  private _visibleorder = 0;\n  private showGrid: boolean = false\n  private _shaderProgram!: WebGLProgram;\n  private fragmentShader!: WebGLShader;\n  private vertexShader!: WebGLShader;\n\n  private defaultColor = '#ec0acaff'\n  private gridText: GridTextHelper = new GridTextHelper()\n\n  private _attribLocations: { position: number; selected: number; pointSize: number; color: number } = {\n    position: 0,\n    selected: 1,\n    pointSize: 2,\n    color: 3,\n  };\n\n  private _nPrimitiveFlags = 0;\n\n  private _vertexCataloguePositionBuffer!: WebGLBuffer;\n  private _indexBuffer!: WebGLBuffer;\n\n  private _vertexCataloguePosition: Float32Array = new Float32Array(0);\n  private _indexes: Uint32Array = new Uint32Array(0);\n\n  private fovObj!: FoV;\n\n  static INITIAL_FOV = 180;\n  static RADIUS = 1;\n  static INITIAL_POSITION: [number, number, number] = [0.0, 0.0, 0.0];\n  static INITIAL_PhiRad = 0;\n  static INITIAL_ThetaRad = 0;\n\n\n\n  constructor() {\n    super(HealpixGridSingleton.RADIUS, HealpixGridSingleton.INITIAL_POSITION, HealpixGridSingleton.INITIAL_PhiRad, HealpixGridSingleton.INITIAL_ThetaRad, 'healpix-grid');\n  }\n\n  init(): void {\n    console.log('HealpixGridSingleton.init()');\n    this.initGL(global.gl as GL);\n\n    this._shaderProgram = (global.gl as GL).createProgram() as WebGLProgram;\n    this.initShaders();\n\n    const order = fovHelper.getHiPSNorder(HealpixGridSingleton.INITIAL_FOV);\n    this._visibleorder = order;\n\n    this._nPrimitiveFlags = 0;\n\n    this._vertexCataloguePositionBuffer = (global.gl as GL).createBuffer()!;\n    this._indexBuffer = (global.gl as GL).createBuffer()!;\n\n    this._vertexCataloguePosition = new Float32Array(0);\n\n    this.fovObj = new FoV();\n  }\n\n  get RADIUS(): number {\n    return HealpixGridSingleton.RADIUS\n  }\n\n  get INITIAL_POSITION(): [number, number, number] {\n    return HealpixGridSingleton.INITIAL_POSITION\n  }\n\n  get INITIAL_PhiRad(): number {\n    return HealpixGridSingleton.INITIAL_PhiRad\n  }\n\n  get INITIAL_ThetaRad(): number {\n    return HealpixGridSingleton.INITIAL_ThetaRad\n  }\n\n  refreshFoV() {\n    return this.fovObj.getFoV(global.insideSphere);\n  }\n\n  getFoV(): FoV {\n    return this.fovObj\n  }\n\n  getMinFoV() {\n    return this.fovObj.minFoV;\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL;\n\n    const fragmentShaderStr = GridShaderManager.healpixGridFS();\n    this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!;\n    gl.shaderSource(this.fragmentShader, fragmentShaderStr);\n    gl.compileShader(this.fragmentShader);\n    if (!gl.getShaderParameter(this.fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.fragmentShader) || 'Fragment shader compile error');\n      return;\n    }\n\n    const vertexShaderStr = GridShaderManager.healpixGridVS();\n    this.vertexShader = gl.createShader(gl.VERTEX_SHADER)!;\n    gl.shaderSource(this.vertexShader, vertexShaderStr);\n    gl.compileShader(this.vertexShader);\n    if (!gl.getShaderParameter(this.vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this.vertexShader) || 'Vertex shader compile error');\n      return;\n    }\n\n    gl.attachShader(this._shaderProgram, this.vertexShader);\n    gl.attachShader(this._shaderProgram, this.fragmentShader);\n    gl.linkProgram(this._shaderProgram);\n\n    if (!gl.getProgramParameter(this._shaderProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders');\n    }\n    gl.useProgram(this._shaderProgram);\n  }\n\n  initBuffers(pixels: number[], order: number): void {\n\n    this._nPrimitiveFlags = 0;\n\n    const healpix: Healpix = global.getHealpix(order);\n    const subhpx: Healpix = global.getHealpix(order + 1);\n    const subsubhpx: Healpix = global.getHealpix(order + 2);\n\n    let positionIndex = 0;\n    let vIdx = 0;\n    const R = 1.0;\n\n    const MAX_UINT = 0xffffffff;\n\n    this._indexes = new Uint32Array(17 * pixels.length);\n    this._vertexCataloguePosition = new Float32Array(3 * 16 * pixels.length);\n\n    for (let p = 0; p < pixels.length; p++) {\n      const vecs = healpix.getBoundaries(pixels[p]) as BoundVec[];\n\n      const cpix0 = pixels[p] << 2;\n      const cpix1 = cpix0 + 1;\n      const cpix2 = cpix0 + 2;\n      const cpix3 = cpix0 + 3;\n\n      const cp0vecs = subhpx.getBoundaries(cpix0) as BoundVec[];\n      const cp3vecs = subhpx.getBoundaries(cpix3) as BoundVec[];\n\n      // helper to push a vertex\n      const pushV = (v: BoundVec) => {\n        this._vertexCataloguePosition[positionIndex] = R * v.x;\n        this._vertexCataloguePosition[positionIndex + 1] = R * v.y;\n        this._vertexCataloguePosition[positionIndex + 2] = R * v.z;\n        this._indexes[vIdx] = Math.floor(positionIndex / 3);\n        vIdx += 1;\n        positionIndex += 3;\n      };\n\n      // v0(3/0)\n      pushV(vecs[0]);\n\n      // v1(15/2)\n      let subcpix3 = cpix3 << 2;\n      let subcpix3_3 = subcpix3 + 3;\n      let tmp = subsubhpx.getBoundaries(subcpix3_3) as BoundVec[];\n      pushV(tmp[1]);\n\n      // v1(3/1)\n      pushV(cp3vecs[1]);\n\n      // v0(2/2)\n      let subcpix2 = cpix2 << 2;\n      let subcpix2_2 = subcpix2 + 2;\n      tmp = subsubhpx.getBoundaries(subcpix2_2) as BoundVec[];\n      pushV(tmp[0]);\n\n      // v1(0/0)\n      pushV(vecs[1]);\n\n      // v2(2/2)\n      pushV(tmp[2]);\n\n      // v1(0/1)\n      pushV(cp0vecs[1]);\n\n      // v1(0/2)\n      let subcpix0 = cpix0 << 2;\n      let subcpix0_2 = subcpix0;\n      tmp = subsubhpx.getBoundaries(subcpix0_2) as BoundVec[];\n      pushV(tmp[1]);\n\n      // v2(0/0)\n      pushV(vecs[2]);\n\n      // v3(0/2)\n      pushV(tmp[3]);\n\n      // v3(0/1)\n      pushV(cp0vecs[3]);\n\n      // v2(5/2)\n      let subcpix1 = cpix1 << 2;\n      let subcpix1_1 = subcpix1 + 1;\n      tmp = subsubhpx.getBoundaries(subcpix1_1) as BoundVec[];\n      pushV(tmp[2]);\n\n      // v3(0/0)\n      pushV(vecs[3]);\n\n      // v0(5/2)\n      pushV(tmp[0]);\n\n      // v3(3/1)\n      pushV(cp3vecs[3]);\n\n      tmp = subsubhpx.getBoundaries(subcpix3_3) as BoundVec[];\n      pushV(tmp[3]);\n\n      // primitive restart\n      this._indexes[vIdx] = MAX_UINT;\n      this._nPrimitiveFlags += 1;\n      vIdx += 1;\n    }\n\n  }\n\n  // updateTiles(pixels: number[], order: number) {\n  //   return (this as any)._tileBuffer.updateTiles(pixels, order);\n  // }\n\n\n  private refresh(): void {\n\n    this.refreshFoV();\n    const fov = this.getMinFoV();\n    // expose to global (legacy)\n    // (global as any).hipsFoV = fov;\n    // global.order = fovHelper.getHiPSNorder(fov);\n    // this._visibleorder = global.order;\n    this._visibleorder = fovHelper.getHiPSNorder(fov);\n  }\n\n  private enableShader(in_mMatrix: ReadonlyMat4, pMatrix: ReadonlyMat4): void {\n    const gl = global.gl as GL;\n\n    gl.useProgram(this._shaderProgram);\n    // TODO move locations retrieval elsewhere\n\n    // Uniform locations\n    const uMV = gl.getUniformLocation(this._shaderProgram, 'uMVMatrix');\n    const uP = gl.getUniformLocation(this._shaderProgram, 'uPMatrix');\n    const uColor = (global.gl as GL).getUniformLocation(this._shaderProgram, 'u_fragcolor');\n\n    // Attribute locations\n    this._attribLocations.position = gl.getAttribLocation(this._shaderProgram, 'aCatPosition');\n\n    let mvMatrix = mat4.create();\n    mvMatrix = mat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix(), in_mMatrix);\n\n    if (uMV) gl.uniformMatrix4fv(uMV, false, mvMatrix as Float32Array);\n    if (uP) gl.uniformMatrix4fv(uP, false, pMatrix as Float32Array);\n    if (uColor) {\n      const rgb = colorHex2RGB(this.defaultColor);\n      gl.uniform4f(uColor, rgb[0], rgb[1], rgb[2], 1.0);\n    }\n  }\n\n  isVisible(): boolean {\n    return this.showGrid\n  }\n\n  toggleShowGrid() {\n    this.showGrid = !this.showGrid\n  }\n\n  draw(): void {\n    const gl = global.gl as GL;\n\n    const mMatrix = this.getModelMatrix();\n    this.refresh();\n\n    if (!this.showGrid) {\n\n      // gridTextHelper.resetDivSets();\n      this.gridText.resetDivSets();\n      return;\n    }\n\n    const visibleTiles = visibleTilesManager.visibleTilesByOrder\n    const pixels = visibleTiles.pixels;\n    const order = visibleTiles.order;\n\n    this.initBuffers(pixels, order);\n\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n    this.enableShader(mMatrix, pMatrix);\n\n    // Upload positions\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCataloguePositionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertexCataloguePosition, gl.STATIC_DRAW);\n\n    gl.vertexAttribPointer(\n      this._attribLocations.position,\n      HealpixGridSingleton.ELEM_SIZE,\n      gl.FLOAT,\n      false,\n      HealpixGridSingleton.BYTES_X_ELEM * HealpixGridSingleton.ELEM_SIZE,\n      0\n    );\n    gl.enableVertexAttribArray(this._attribLocations.position);\n\n    // Index buffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexes, gl.STATIC_DRAW);\n\n    gl.drawElements(\n      gl.LINE_LOOP,\n      this._vertexCataloguePosition.length / 3 + this._nPrimitiveFlags,\n      gl.UNSIGNED_INT,\n      0\n    );\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    // Project and label pixel centers that are inside current FoV\n    let mvMatrix = mat4.create();\n    mvMatrix = mat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix(), mMatrix);\n\n    let mvpMatrix = mat4.create();\n    mvpMatrix = mat4.multiply(mvpMatrix, pMatrix, mvMatrix);\n\n    // FIX: pass model & pMatrix to match FoVUtils TS signature\n    const center = FoVUtils.getCenterJ2000(gl.canvas as HTMLCanvasElement);\n\n    const fovMin = (this.getMinFoV() * Math.PI) / 180 / 2;\n\n    for (let p = 0; p < pixels.length; p++) {\n      const pixCenter = (global.getHealpix(this._visibleorder).pix2vec(pixels[p]) as BoundVec);\n      // const pixCenter = (global.getHealpix(global.order).pix2vec(pixels[p]) as BoundVec);\n\n      const point = new Point(\n        { x: pixCenter.x, y: pixCenter.y, z: pixCenter.z },\n        CoordsType.CARTESIAN\n      );\n\n      const distance = GeomUtils.orthodromicDistance(center, point);\n      if (distance < fovMin) {\n        const vertex: [number, number, number, number] = [pixCenter.x, pixCenter.y, pixCenter.z, 1];\n        const clipspace = vec4.create();\n        vec4.transformMat4(clipspace, vertex, mvpMatrix);\n\n        // NDC divide\n        clipspace[0] /= clipspace[3];\n        clipspace[1] /= clipspace[3];\n\n        // clip → pixels\n        const pixelX = (clipspace[0] * 0.5 + 0.5) * gl.canvas.width;\n        const pixelY = (clipspace[1] * -0.5 + 0.5) * gl.canvas.height;\n\n        this.gridText.addHPXDivSet(this._visibleorder + '/' + pixels[p], pixelX, pixelY);\n        // gridTextHelper.addHPXDivSet(this._visibleorder + '/' + pixels[p], pixelX, pixelY);\n      }\n    }\n\n    // gridTextHelper.resetDivSets();\n    this.gridText.resetDivSets();\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  get visibleorder(): number {\n    return this._visibleorder;\n  }\n}\n\nconst healpixGridSingleton = new HealpixGridSingleton();\nexport default healpixGridSingleton;","/**\n * @author Fabrizio Giordano (Fab)\n */\n\"use strict\";\n\nimport { vec3, mat4, ReadonlyVec3, ReadonlyMat4 } from \"gl-matrix\";\nimport global from \"../Global.js\";\nimport computePerspectiveMatrixSingleton from \"./ComputePerspectiveMatrix.js\";\nimport healpixGridSingleton from \"../model/grid/HealpixGridSingleton.js\";\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\n\nclass RayPickingUtils {\n  private static lastNearestVisibleObjectIdx = -1;\n\n  /** Get index of the last object found under the mouse (if any). */\n  static getNearestVisibleObjectIdx(): number {\n    return this.lastNearestVisibleObjectIdx;\n  }\n\n  /**\n   * Builds a world-space ray from mouse coords.\n   * @param mouseX ClientX (page pixels)\n   * @param mouseY ClientY (page pixels)\n   * @param pMatrix Projection matrix\n   * @returns World-space direction (normalized) as a vec3\n   */\n  static getRayFromMouse(\n    mouseX: number,\n    mouseY: number,\n    pMatrix: ReadonlyMat4\n  ): vec3 {\n    if (!global.camera) {\n      throw new Error(\"Camera is not initialized.\");\n    }\n    const vMatrix = global.camera.getCameraMatrix() as ReadonlyMat4;\n    const gl = global.gl as GL;\n    const rect = (gl.canvas as HTMLCanvasElement).getBoundingClientRect();\n\n    const canvasMX = mouseX - rect.left;\n    const canvasMY = mouseY - rect.top;\n\n    // viewport → NDC\n    const x = (2.0 * canvasMX) / (gl.canvas as HTMLCanvasElement).clientWidth - 1.0;\n    const y = 1.0 - (2.0 * canvasMY) / (gl.canvas as HTMLCanvasElement).clientHeight;\n    const z = -1.0;\n\n    // NDC → clip\n    const rayClip: [number, number, number, number] = [x, y, z, 1.0];\n\n    // clip → eye\n    const pInv = mat4.create();\n    mat4.invert(pInv, pMatrix);\n    const rayEye4: [number, number, number, number] = [0, 0, 0, 0];\n    RayPickingUtils.mat4MultiplyVec4(pInv, rayClip, rayEye4);\n\n    // direction in eye space (z = -1, w = 0)\n    const rayEye: [number, number, number, number] = [rayEye4[0], rayEye4[1], -1.0, 0.0];\n\n    // eye → world\n    const vInv = mat4.create();\n    mat4.invert(vInv, vMatrix);\n    const rayWorld4: [number, number, number, number] = [0, 0, 0, 0];\n    RayPickingUtils.mat4MultiplyVec4(vInv, rayEye, rayWorld4);\n\n    const rayWorld = vec3.fromValues(rayWorld4[0], rayWorld4[1], rayWorld4[2]);\n    vec3.normalize(rayWorld, rayWorld);\n    return rayWorld;\n  }\n\n  /** a*b (4x4 * vec4) → vec4 (in `out`) */\n  private static mat4MultiplyVec4(\n    a: ReadonlyMat4,\n    b: Readonly<[number, number, number, number]>,\n    out: [number, number, number, number]\n  ): [number, number, number, number] {\n    const d = b[0], e = b[1], g = b[2], w = b[3];\n    out[0] = a[0] * d + a[4] * e + a[8] * g + a[12] * w;\n    out[1] = a[1] * d + a[5] * e + a[9] * g + a[13] * w;\n    out[2] = a[2] * d + a[6] * e + a[10] * g + a[14] * w;\n    out[3] = a[3] * d + a[7] * e + a[11] * g + a[15] * w;\n    return out;\n  }\n\n  /**\n   * Ray–sphere intersection (world space).\n   * @returns distance `t` along the ray to the first hit, or `-1` if no hit.\n   */\n  static raySphere(\n    rayOrigWorld: ReadonlyVec3,\n    rayDirectionWorld: ReadonlyVec3\n  ): number {\n    let intersectionDistance = -1;\n\n    const L = vec3.create();\n    vec3.subtract(L, rayOrigWorld, healpixGridSingleton.center);\n\n    const b = vec3.dot(rayDirectionWorld, L);\n    const c = vec3.dot(L, L) - healpixGridSingleton.radius * healpixGridSingleton.radius;\n\n    const disc = b * b - c;\n\n    if (disc > 0.0) {\n      const s = Math.sqrt(disc);\n      const ta = -b + s;\n      const tb = -b - s;\n\n      if (ta < 0.0 && tb < 0.0) {\n        // behind camera\n      } else if (tb < 0.0) {\n        intersectionDistance = ta;\n      } else {\n        intersectionDistance = Math.min(ta, tb);\n      }\n    } else if (disc === 0.0) {\n      const t = -b; // tangent\n      if (t >= 0.0) {\n        intersectionDistance = t;\n      }\n    }\n\n    return intersectionDistance;\n  }\n\n  /**\n   * Compute intersection with a single model (defaults to the Healpix grid).\n   * @returns model-space intersection point (vec3) if hit, otherwise empty array; and the picked model.\n   */\n  static getIntersectionPointWithSingleModel(\n    mouseX: number,\n    mouseY: number\n  ): number[] {\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n    const camera = global.camera;\n\n    if (!camera) {\n      throw new Error(\"Camera is not initialized.\");\n    }\n\n    const rayWorld = RayPickingUtils.getRayFromMouse(mouseX, mouseY, pMatrix);\n\n    const t = RayPickingUtils.raySphere(\n      camera.getCameraPosition() as ReadonlyVec3,\n      rayWorld\n    );\n\n    let intersectionModelPoint: number[] = [];\n    if (t >= 0) {\n      // world intersection\n      const worldHit = vec3.create();\n      vec3.scale(worldHit, rayWorld, t);\n      vec3.add(worldHit, camera.getCameraPosition() as ReadonlyVec3, worldHit);\n\n      // world → model\n      const worldHit4: [number, number, number, number] = [worldHit[0], worldHit[1], worldHit[2], 1.0];\n      const modelHit4: [number, number, number, number] = [0, 0, 0, 0];\n      RayPickingUtils.mat4MultiplyVec4(healpixGridSingleton.getModelMatrixInverse(), worldHit4, modelHit4);\n\n      intersectionModelPoint = [modelHit4[0], modelHit4[1], modelHit4[2]];\n    }\n\n    return intersectionModelPoint\n  }\n\n  // /**\n  //  * Cast a ray and find the nearest intersected model among `models`.\n  //  * Returns both the picked object and the intersection point (model space).\n  //  */\n  // static getIntersectionPointWithModel(\n  //   mouseX: number,\n  //   mouseY: number,\n  //   models: HealpixGridSingleton[]\n  // ): { intersectionPoint: number[]; pickedObject: HealpixGridSingleton | undefined } {\n  //   const pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n\n  //   const distance = RayPickingUtils.getDistanceFromHealpixGrid(mouseX, mouseY, pMatrix);\n  //   let intersectionPoint = []\n  //   if (distance && distance >= 0) {\n  //     // If the ray hits the Healpix grid, we can skip checking other objects.\n  //     intersectionPoint = RayPickingUtils.getIntersectionPointWithSingleModel( mouseX, mouseY );\n  //   }\n    \n  //   return { intersectionPoint: [], pickedObject: undefined };\n  // }\n\n\n  // static getDistanceFromHealpixGrid(\n  //   mouseX: number,\n  //   mouseY: number,\n  //   pMatrix: ReadonlyMat4\n  // ): number {\n  //   const camera = global.camera;\n\n  //   if (!camera) {\n  //     throw new Error(\"Camera is not initialized.\");\n  //   }\n  //   const rayWorld = RayPickingUtils.getRayFromMouse(mouseX, mouseY, pMatrix);\n\n\n  //   const distance = RayPickingUtils.raySphere(\n  //     camera.getCameraPosition() as ReadonlyVec3,\n  //     rayWorld\n  //   );\n\n  //   return distance;\n  // }\n}\n\nexport default RayPickingUtils;","/**\n * @author Fabrizio Giordano (Fab)\n */\nimport { vec3, ReadonlyVec3 } from \"gl-matrix\";\nimport { Vec3, Pointing, Healpix } from \"healpixjs\";\nimport global from \"../Global.js\";\nimport {\n  cartesianToSpherical,\n  sphericalToAstroDeg,\n  raDegToHMS,\n  decDegToDMS,\n  type SphericalCoords,\n  type AstroCoords,\n  type HMS,\n  type DMS,\n} from \"./Utils.js\";\n\ntype XYZ = [number, number, number];\n\nfunction toVec3(p: ReadonlyVec3 | XYZ): ReadonlyVec3 {\n  return Array.isArray(p) ? (vec3.fromValues(p[0], p[1], p[2]) as ReadonlyVec3) : p;\n}\n\nclass MouseHelper {\n  private _xyz: XYZ | null = null;\n  private _raDecDeg: AstroCoords | null = null;\n  private _phiThetaDeg: SphericalCoords | null = null;\n\n  raHMS?: HMS;\n  decDMS?: DMS;\n\n  /**\n   * @param in_xyz [x, y, z]\n   * @param in_raDecDeg { ra, dec } in degrees (ICRS/J2000)\n   * @param in_phiThetaDeg { phi, theta } in degrees (spherical)\n   */\n  constructor(\n    in_xyz?: XYZ | null,\n    in_raDecDeg?: AstroCoords | null,\n    in_phiThetaDeg?: SphericalCoords | null\n  ) {\n    if (in_xyz != null) this._xyz = in_xyz;\n    if (in_raDecDeg != null) this._raDecDeg = in_raDecDeg;\n    if (in_phiThetaDeg != null) this._phiThetaDeg = in_phiThetaDeg;\n\n    if (this._raDecDeg) {\n      this.raHMS = raDegToHMS(this._raDecDeg.ra);\n      this.decDMS = decDegToDMS(this._raDecDeg.dec);\n    }\n  }\n\n  /** (Formerly `computeNpix256`) Uses global.nsideForSelection. */\n  computeNpix(): number | null {\n    if (!this._xyz) return null;\n    const hp: Healpix = global.getHealpix(global.nsideForSelection);\n    const v = new Vec3(this._xyz[0], this._xyz[1], this._xyz[2]);\n    const ptg = new Pointing(v, false);\n    return hp.ang2pix(ptg, false);\n  }\n\n  /** Update helper state from a world-space 3D point on the unit sphere. */\n  update(mousePoint: ReadonlyVec3 | XYZ): void {\n    const mp = toVec3(mousePoint);\n    const sph = cartesianToSpherical(mp);\n    const radec = sphericalToAstroDeg(sph.phi, sph.theta);\n\n    this._xyz = [mp[0], mp[1], mp[2]];\n    this._phiThetaDeg = sph;\n    this._raDecDeg = radec;\n    this.raHMS = raDegToHMS(radec.ra);\n    this.decDMS = decDegToDMS(radec.dec);\n  }\n\n  clear(): void {\n    this._xyz = null;\n    this._raDecDeg = null;\n    this._phiThetaDeg = null;\n    this.raHMS = undefined;\n    this.decDMS = undefined;\n  }\n\n  // --- getters ---\n  get xyz(): XYZ | null {\n    return this._xyz;\n  }\n  get x(): number | null {\n    return this._xyz ? this._xyz[0] : null;\n  }\n  get y(): number | null {\n    return this._xyz ? this._xyz[1] : null;\n  }\n  get z(): number | null {\n    return this._xyz ? this._xyz[2] : null;\n  }\n\n  get ra(): number | null {\n    return this._raDecDeg ? this._raDecDeg.ra : null;\n  }\n  get dec(): number | null {\n    return this._raDecDeg ? this._raDecDeg.dec : null;\n  }\n\n  get phi(): number | null {\n    return this._phiThetaDeg ? this._phiThetaDeg.phi : null;\n  }\n  get theta(): number | null {\n    return this._phiThetaDeg ? this._phiThetaDeg.theta : null;\n  }\n\n  get raDecDeg(): AstroCoords | null {\n    return this._raDecDeg;\n  }\n  get phiThetaDeg(): SphericalCoords | null {\n    return this._phiThetaDeg;\n  }\n}\n\nexport default MouseHelper;","type ColorMapName =\n  | 'grayscale'\n  | 'native'\n  | 'planck'\n  | 'cmb'\n  | 'rainbow'\n  | 'eosb'\n  | 'cubehelix'\n  | 'hot'\n  | 'gray';\n\nexport interface ColorMap {\n  name: ColorMapName;\n  r: number[];\n  g: number[];\n  b: number[];\n}\n\nexport const ColorMaps: Record<ColorMapName, ColorMap> = {\n  grayscale: {\n    name: 'grayscale',\n    r: [],\n    g: [],\n    b: [],\n  },\n\n  native: {\n    name: 'native',\n    r: [],\n    g: [],\n    b: [],\n  },\n  planck: {\n    name: 'planck',\n    r: [\n      0.0, 0.769231, 1.53846, 2.30769, 3.07692, 3.84615, 4.61538, 5.38462, 6.15385, 6.92308, 7.69231,\n      8.46154, 9.23077, 10.0, 11.5385, 13.0769, 14.6154, 16.1538, 17.6923, 19.2308, 20.7692, 22.3077,\n      23.8462, 25.3846, 26.9231, 28.4615, 30.0, 33.8462, 37.6923, 41.5385, 45.3846, 49.2308, 53.0769,\n      56.9231, 60.7692, 64.6154, 68.4615, 72.3077, 76.1538, 80.0, 88.5385, 97.0769, 105.615, 114.154,\n      122.692, 131.231, 139.769, 148.308, 156.846, 165.385, 173.923, 182.462, 191.0, 193.846, 196.692,\n      199.538, 202.385, 205.231, 208.077, 210.923, 213.769, 216.615, 219.462, 222.308, 225.154, 228.0,\n      229.182, 230.364, 231.545, 232.727, 233.909, 235.091, 236.273, 237.455, 238.636, 239.818, 241.0,\n      241.0, 241.364, 241.727, 242.091, 242.455, 242.818, 243.182, 243.545, 243.909, 244.273, 244.636,\n      245.0, 245.231, 245.462, 245.692, 245.923, 246.154, 246.385, 246.615, 246.846, 247.077, 247.308,\n      247.538, 247.769, 248.0, 248.146, 248.292, 248.438, 248.585, 248.731, 248.877, 249.023, 249.169,\n      249.315, 249.462, 249.608, 249.754, 249.9, 249.312, 248.723, 248.135, 247.546, 246.958, 246.369,\n      245.781, 245.192, 244.604, 244.015, 243.427, 242.838, 242.25, 239.308, 236.365, 233.423,\n      230.481, 227.538, 224.596, 221.654, 218.712, 215.769, 212.827, 209.885, 206.942, 204.0, 201.0,\n      198.0, 195.0, 192.0, 189.0, 186.0, 183.0, 180.0, 177.0, 174.0, 171.0, 168.0, 165.0, 161.077,\n      157.154, 153.231, 149.308, 145.385, 141.462, 137.538, 133.615, 129.692, 125.769, 121.846,\n      117.923, 114.0, 115.038, 116.077, 117.115, 118.154, 119.192, 120.231, 121.269, 122.308, 123.346,\n      124.385, 125.423, 126.462, 127.5, 131.423, 135.346, 139.269, 143.192, 147.115, 151.038, 154.962,\n      158.885, 162.808, 166.731, 170.654, 174.577, 178.5, 180.462, 182.423, 184.385, 186.346, 188.308,\n      190.269, 192.231, 194.192, 196.154, 198.115, 200.077, 202.038, 204.0, 205.962, 207.923, 209.885,\n      211.846, 213.808, 215.769, 217.731, 219.692, 221.654, 223.615, 225.577, 227.538, 229.5, 230.481,\n      231.462, 232.442, 233.423, 234.404, 235.385, 236.365, 237.346, 238.327, 239.308, 240.288,\n      241.269, 242.25, 242.642, 243.035, 243.427, 243.819, 244.212, 244.604, 244.996, 245.388,\n      245.781, 246.173, 246.565, 246.958, 247.35, 247.814, 248.277, 248.741, 249.205, 249.668,\n      250.132, 250.595, 251.059, 251.523, 251.986, 252.45\n    ],\n    g: [\n      0.0, 1.53846, 3.07692, 4.61538, 6.15385, 7.69231, 9.23077, 10.7692, 12.3077, 13.8462, 15.3846,\n      16.9231, 18.4615, 20.0, 32.6154, 45.2308, 57.8462, 70.4615, 83.0769, 95.6923, 108.308, 120.923,\n      133.538, 146.154, 158.769, 171.385, 184.0, 187.923, 191.846, 195.769, 199.692, 203.615, 207.538,\n      211.462, 215.385, 219.308, 223.231, 227.154, 231.077, 235.0, 235.308, 235.615, 235.923, 236.231,\n      236.538, 236.846, 237.154, 237.462, 237.769, 238.077, 238.385, 238.692, 239.0, 239.077, 239.154,\n      239.231, 239.308, 239.385, 239.462, 239.538, 239.615, 239.692, 239.769, 239.846, 239.923, 240.0,\n      240.091, 240.182, 240.273, 240.364, 240.455, 240.545, 240.636, 240.727, 240.818, 240.909, 241.0,\n      241.0, 240.909, 240.818, 240.727, 240.636, 240.545, 240.455, 240.364, 240.273, 240.182, 240.091,\n      240.0, 239.615, 239.231, 238.846, 238.462, 238.077, 237.692, 237.308, 236.923, 236.538, 236.154,\n      235.769, 235.385, 235.0, 232.615, 230.231, 227.846, 225.462, 223.077, 220.692, 218.308, 215.923,\n      213.538, 211.154, 208.769, 206.385, 204.0, 200.077, 196.154, 192.231, 188.308, 184.385, 180.462,\n      176.538, 172.615, 168.692, 164.769, 160.846, 156.923, 153.0, 147.115, 141.231, 135.346, 129.462,\n      123.577, 117.692, 111.808, 105.923, 100.038, 94.1538, 88.2692, 82.3846, 76.5, 73.0769, 69.6538,\n      66.2308, 62.8077, 59.3846, 55.9615, 52.5385, 49.1154, 45.6923, 42.2692, 38.8462, 35.4231, 32.0,\n      29.5385, 27.0769, 24.6154, 22.1538, 19.6923, 17.2308, 14.7692, 12.3077, 9.84615, 7.38462,\n      4.92308, 2.46154, 0.0, 9.80769, 19.6154, 29.4231, 39.2308, 49.0385, 58.8462, 68.6538, 78.4615,\n      88.2692, 98.0769, 107.885, 117.692, 127.5, 131.423, 135.346, 139.269, 143.192, 147.115, 151.038,\n      154.962, 158.885, 162.808, 166.731, 170.654, 174.577, 178.5, 180.462, 182.423, 184.385, 186.346,\n      188.308, 190.269, 192.231, 194.192, 196.154, 198.115, 200.077, 202.038, 204.0, 205.962, 207.923,\n      209.885, 211.846, 213.808, 215.769, 217.731, 219.692, 221.654, 223.615, 225.577, 227.538, 229.5,\n      230.481, 231.462, 232.442, 233.423, 234.404, 235.385, 236.365, 237.346, 238.327, 239.308,\n      240.288, 241.269, 242.25, 242.642, 243.035, 243.427, 243.819, 244.212, 244.604, 244.996,\n      245.388, 245.781, 246.173, 246.565, 246.958, 247.35, 247.814, 248.277, 248.741, 249.205,\n      249.668, 250.132, 250.595, 251.059, 251.523, 251.986, 252.45\n    ],\n    b: [\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 254.615, 254.231, 253.846, 253.462, 253.077, 252.692, 252.308, 251.923, 251.538, 251.154,\n      250.769, 250.385, 250.0, 249.615, 249.231, 248.846, 248.462, 248.077, 247.692, 247.308, 246.923,\n      246.538, 246.154, 245.769, 245.385, 245.0, 242.0, 239.0, 236.0, 233.0, 230.0, 227.0, 224.0,\n      221.0, 218.0, 215.0, 212.0, 212.0, 208.636, 205.273, 201.909, 198.545, 195.182, 191.818,\n      188.455, 185.091, 181.727, 178.364, 175.0, 171.538, 168.077, 164.615, 161.154, 157.692, 154.231,\n      150.769, 147.308, 143.846, 140.385, 136.923, 133.462, 130.0, 122.942, 115.885, 108.827, 101.769,\n      94.7115, 87.6539, 80.5962, 73.5385, 66.4808, 59.4231, 52.3654, 45.3077, 38.25, 36.2885, 34.3269,\n      32.3654, 30.4038, 28.4423, 26.4808, 24.5192, 22.5577, 20.5962, 18.6346, 16.6731, 14.7115, 12.75,\n      11.7692, 10.7885, 9.80769, 8.82692, 7.84615, 6.86539, 5.88461, 4.90385, 3.92308, 2.94231,\n      1.96154, 0.980769, 0.0, 2.46154, 4.92308, 7.38462, 9.84616, 12.3077, 14.7692, 17.2308, 19.6923,\n      22.1538, 24.6154, 27.0769, 29.5385, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0,\n      32.0, 32.0, 32.0, 32.0, 41.3077, 50.6154, 59.9231, 69.2308, 78.5385, 87.8462, 97.1539, 106.462,\n      115.769, 125.077, 134.385, 143.692, 153.0, 156.923, 160.846, 164.769, 168.692, 172.615, 176.538,\n      180.462, 184.385, 188.308, 192.231, 196.154, 200.077, 204.0, 205.962, 207.923, 209.885, 211.846,\n      213.808, 215.769, 217.731, 219.692, 221.654, 223.615, 225.577, 227.538, 229.5, 230.481, 231.462,\n      232.442, 233.423, 234.404, 235.385, 236.365, 237.346, 238.327, 239.308, 240.288, 241.269,\n      242.25, 242.838, 243.427, 244.015, 244.604, 245.192, 245.781, 246.369, 246.958, 247.546,\n      248.135, 248.723, 249.312, 249.9, 250.096, 250.292, 250.488, 250.685, 250.881, 251.077, 251.273,\n      251.469, 251.665, 251.862, 252.058, 252.254, 252.45, 252.682, 252.914, 253.145, 253.377,\n      253.609, 253.841, 254.073, 254.305, 254.536, 254.768, 255.0\n    ],\n  },\n\n  cmb: {\n    name: 'cmb',\n    r: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 12, 18, 24, 30, 36, 42, 48,\n      54, 60, 66, 72, 78, 85, 91, 97, 103, 109, 115, 121, 127, 133, 139, 145, 151, 157, 163, 170, 176,\n      182, 188, 194, 200, 206, 212, 218, 224, 230, 236, 242, 248, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 251, 247, 244, 240, 236, 233, 229, 226, 222, 218, 215, 211, 208, 204, 200, 197,\n      193, 190, 186, 182, 179, 175, 172, 168, 164, 161, 157, 154, 150, 146, 143, 139, 136, 132, 128,\n      125, 121, 118, 114, 110, 107, 103, 100\n    ],\n    g: [\n      0, 2, 5, 8, 10, 13, 16, 18, 21, 24, 26, 29, 32, 34, 37, 40, 42, 45, 48, 50, 53, 56, 58, 61, 64,\n      66, 69, 72, 74, 77, 80, 82, 85, 88, 90, 93, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 122,\n      124, 127, 129, 132, 134, 137, 139, 142, 144, 147, 150, 152, 155, 157, 160, 162, 165, 167, 170,\n      172, 175, 177, 180, 182, 185, 188, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218,\n      221, 221, 221, 222, 222, 222, 223, 223, 224, 224, 224, 225, 225, 225, 226, 226, 227, 227, 227,\n      228, 228, 229, 229, 229, 230, 230, 230, 231, 231, 232, 232, 232, 233, 233, 233, 234, 234, 235,\n      235, 235, 236, 236, 237, 235, 234, 233, 231, 230, 229, 227, 226, 225, 223, 222, 221, 219, 218,\n      217, 215, 214, 213, 211, 210, 209, 207, 206, 205, 203, 202, 201, 199, 198, 197, 195, 194, 193,\n      191, 190, 189, 187, 186, 185, 183, 182, 181, 180, 177, 175, 172, 170, 167, 165, 162, 160, 157,\n      155, 152, 150, 147, 145, 142, 140, 137, 135, 132, 130, 127, 125, 122, 120, 117, 115, 112, 110,\n      107, 105, 102, 100, 97, 95, 92, 90, 87, 85, 82, 80, 77, 75, 73, 71, 69, 68, 66, 64, 62, 61, 59,\n      57, 55, 54, 52, 50, 48, 47, 45, 43, 41, 40, 38, 36, 34, 33, 31, 29, 27, 26, 24, 22, 20, 19, 17,\n      15, 13, 12, 10, 8, 6, 5, 3, 1, 0\n    ],\n    b: [\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246,\n      245, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 236, 235, 234, 233, 232, 231, 230, 229,\n      228, 227, 226, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 217, 211, 206, 201, 196, 191,\n      186, 181, 176, 171, 166, 161, 156, 151, 146, 141, 136, 131, 126, 121, 116, 111, 105, 100, 95,\n      90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ],\n  },\n\n  rainbow: {\n    name: 'rainbow',\n    r: [\n      0, 4, 9, 13, 18, 22, 27, 31, 36, 40, 45, 50, 54, 58, 61, 64, 68, 69, 72, 74, 77, 79, 80, 82, 83,\n      85, 84, 86, 87, 88, 86, 87, 87, 87, 85, 84, 84, 84, 83, 79, 78, 77, 76, 71, 70, 68, 66, 60, 58,\n      55, 53, 46, 43, 40, 36, 33, 25, 21, 16, 12, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 21, 25, 29, 33, 42, 46, 51, 55,\n      63, 67, 72, 76, 80, 89, 93, 97, 101, 110, 114, 119, 123, 131, 135, 140, 144, 153, 157, 161, 165,\n      169, 178, 182, 187, 191, 199, 203, 208, 212, 221, 225, 229, 233, 242, 246, 250, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255\n    ],\n    g: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8,\n      16, 21, 25, 29, 38, 42, 46, 51, 55, 63, 67, 72, 76, 84, 89, 93, 97, 106, 110, 114, 119, 127,\n      131, 135, 140, 144, 152, 157, 161, 165, 174, 178, 182, 187, 195, 199, 203, 208, 216, 220, 225,\n      229, 233, 242, 246, 250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 250, 242, 238, 233, 229, 221, 216, 212, 208, 199, 195,\n      191, 187, 178, 174, 170, 165, 161, 153, 148, 144, 140, 131, 127, 123, 119, 110, 106, 102, 97,\n      89, 85, 80, 76, 72, 63, 59, 55, 51, 42, 38, 34, 29, 21, 17, 12, 8, 0\n    ],\n    b: [\n      0, 3, 7, 10, 14, 19, 23, 28, 32, 38, 43, 48, 53, 59, 63, 68, 72, 77, 81, 86, 91, 95, 100, 104,\n      109, 113, 118, 122, 127, 132, 136, 141, 145, 150, 154, 159, 163, 168, 173, 177, 182, 186, 191,\n      195, 200, 204, 209, 214, 218, 223, 227, 232, 236, 241, 245, 250, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n      255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 246, 242, 238, 233, 225, 220, 216, 212,\n      203, 199, 195, 191, 187, 178, 174, 170, 165, 157, 152, 148, 144, 135, 131, 127, 123, 114, 110,\n      106, 102, 97, 89, 84, 80, 76, 67, 63, 59, 55, 46, 42, 38, 34, 25, 21, 16, 12, 8, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ],\n  },\n  eosb: {\n    name: 'eosb',\n    r: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 9, 18, 27, 36, 45, 49, 57, 72, 81, 91, 100, 109, 118, 127, 136, 131, 139, 163, 173, 182, 191,\n      200, 209, 218, 227, 213, 221, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255,\n      255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255,\n      255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255,\n      255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229,\n      255, 255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229,\n      229, 255, 253, 251, 249, 247, 245, 243, 241, 215, 214, 235, 234, 232, 230, 228, 226, 224, 222,\n      198, 196, 216, 215, 213, 211, 209, 207, 205, 203, 181, 179, 197, 196, 194, 192, 190, 188, 186,\n      184, 164, 162, 178, 176, 175, 173, 171, 169, 167, 165, 147, 145, 159, 157, 156, 154, 152, 150,\n      148, 146, 130, 128, 140, 138, 137, 135, 133, 131, 129, 127, 113, 111, 121, 119, 117, 117\n    ],\n    g: [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 7, 15, 23, 31, 39, 47, 55, 57, 64, 79, 87, 95, 103, 111, 119, 127, 135, 129, 136, 159, 167,\n      175, 183, 191, 199, 207, 215, 200, 207, 239, 247, 255, 255, 255, 255, 255, 255, 229, 229, 255,\n      255, 255, 255, 255, 255, 255, 255, 229, 229, 255, 255, 255, 255, 255, 255, 255, 255, 229, 229,\n      255, 250, 246, 242, 238, 233, 229, 225, 198, 195, 212, 208, 204, 199, 195, 191, 187, 182, 160,\n      156, 169, 165, 161, 157, 153, 148, 144, 140, 122, 118, 127, 125, 123, 121, 119, 116, 114, 112,\n      99, 97, 106, 104, 102, 99, 97, 95, 93, 91, 80, 78, 84, 82, 80, 78, 76, 74, 72, 70, 61, 59, 63,\n      61, 59, 57, 55, 53, 50, 48, 42, 40, 42, 40, 38, 36, 33, 31, 29, 27, 22, 21, 21, 19, 16, 14, 12,\n      13, 8, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ],\n    b: [\n      116, 121, 127, 131, 136, 140, 144, 148, 153, 157, 145, 149, 170, 174, 178, 182, 187, 191, 195,\n      199, 183, 187, 212, 216, 221, 225, 229, 233, 238, 242, 221, 225, 255, 247, 239, 231, 223, 215,\n      207, 199, 172, 164, 175, 167, 159, 151, 143, 135, 127, 119, 100, 93, 95, 87, 79, 71, 63, 55, 47,\n      39, 28, 21, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0\n    ],\n  },\n  cubehelix: {\n    name: 'cubehelix',\n    r: [\n      0, 1, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 20, 21, 22, 23, 23, 24, 24, 25, 25, 25,\n      26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 25, 25, 25, 25, 24, 24, 24, 23, 23, 23, 23, 22, 22,\n      22, 21, 21, 21, 21, 21, 21, 20, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 23, 23, 24, 25, 26, 27,\n      27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 60, 62, 65, 67, 70,\n      72, 75, 78, 81, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 120, 123, 126, 129, 132,\n      135, 138, 141, 144, 147, 150, 153, 155, 158, 161, 164, 166, 169, 171, 174, 176, 178, 181, 183,\n      185, 187, 189, 191, 193, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 209,\n      210, 211, 211, 211, 212, 212, 212, 212, 212, 212, 212, 212, 211, 211, 211, 210, 210, 210, 209,\n      208, 208, 207, 207, 206, 205, 205, 204, 203, 203, 202, 201, 201, 200, 199, 199, 198, 197, 197,\n      196, 196, 195, 195, 194, 194, 194, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 194, 194,\n      195, 195, 196, 196, 197, 198, 199, 200, 200, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213,\n      215, 217, 218, 220, 222, 223, 225, 227, 229, 231, 232, 234, 236, 238, 240, 242, 244, 245, 247,\n      249, 251, 253, 255\n    ],\n    g: [\n      0, 0, 1, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22,\n      24, 25, 26, 28, 29, 31, 32, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53, 55, 57, 58, 60,\n      62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 81, 83, 84, 86, 88, 89, 91, 92, 94, 95, 97, 98, 99,\n      101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 114, 115, 116, 116, 117, 118,\n      118, 119, 119, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122, 122, 122, 122,\n      122, 122, 122, 122, 122, 122, 121, 121, 121, 121, 121, 121, 121, 121, 121, 120, 120, 120, 120,\n      120, 120, 120, 120, 120, 120, 121, 121, 121, 121, 121, 122, 122, 122, 123, 123, 124, 124, 125,\n      125, 126, 127, 127, 128, 129, 130, 131, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143,\n      144, 146, 147, 149, 150, 152, 154, 155, 157, 158, 160, 162, 164, 165, 167, 169, 171, 172, 174,\n      176, 178, 180, 182, 183, 185, 187, 189, 191, 193, 194, 196, 198, 200, 202, 203, 205, 207, 208,\n      210, 212, 213, 215, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235,\n      236, 237, 238, 239, 240, 240, 241, 242, 243, 244, 244, 245, 246, 247, 247, 248, 248, 249, 250,\n      250, 251, 251, 252, 252, 253, 253, 254, 255\n    ],\n    b: [\n      0, 1, 3, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47,\n      48, 50, 52, 54, 56, 57, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 74, 75, 76, 76, 77,\n      77, 77, 78, 78, 78, 78, 78, 78, 78, 77, 77, 77, 76, 76, 75, 75, 74, 73, 73, 72, 71, 70, 69, 68,\n      67, 66, 66, 65, 64, 63, 61, 60, 59, 58, 58, 57, 56, 55, 54, 53, 52, 51, 51, 50, 49, 49, 48, 48,\n      47, 47, 47, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 49, 50, 50, 51, 52, 53, 55, 56, 57, 59, 60,\n      62, 64, 65, 67, 69, 71, 74, 76, 78, 81, 83, 86, 88, 91, 94, 96, 99, 102, 105, 108, 111, 114,\n      117, 120, 124, 127, 130, 133, 136, 140, 143, 146, 149, 153, 156, 159, 162, 165, 169, 172, 175,\n      178, 181, 184, 186, 189, 192, 195, 197, 200, 203, 205, 207, 210, 212, 214, 216, 218, 220, 222,\n      224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 239, 240, 241, 241, 242, 242,\n      242, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 242, 242, 242, 242, 241, 241, 241, 241,\n      240, 240, 240, 239, 239, 239, 239, 239, 238, 238, 238, 238, 238, 238, 238, 238, 239, 239, 239,\n      240, 240, 240, 241, 242, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255\n    ]\n  },\n  hot: {\n    name: 'hot',\n    r: [\n      0.0, 4.0, 8.0, 12.0, 16.0, 20.0, 24.0, 28.0, 32.0, 36.0, 40.0, 44.0, 48.0, 52.0, 56.0, 60.0,\n      64.0, 68.0, 72.0, 76.0, 80.0, 84.0, 88.0, 92.0, 96.0, 100.0, 104.0, 108.0, 112.0, 116.0,\n      120.0, 124.0, 128.0, 132.0, 136.0, 140.0, 144.0, 148.0, 152.0, 156.0, 160.0, 164.0, 168.0,\n      172.0, 176.0, 180.0, 184.0, 188.0, 192.0, 196.0, 200.0, 204.0, 208.0, 212.0, 216.0, 220.0,\n      224.0, 228.0, 232.0, 236.0, 240.0, 244.0, 248.0, 252.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0\n    ],\n    g: [\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.30769,\n      4.61538, 6.92308, 9.23077, 11.5385, 13.8462, 16.1538, 18.4615, 20.7692, 23.0769, 25.3846, 27.6923,\n      30.0, 32.3077, 34.6154, 36.9231, 39.2308, 41.5385, 43.8462, 46.1538, 48.4615, 50.7692, 53.0769,\n      55.3846, 57.6923, 60.0, 62.3077, 64.6154, 66.9231, 69.2308, 71.5385, 73.8462, 76.1538, 78.4615,\n      80.7692, 83.0769, 85.3846, 87.6923, 90.0, 92.3077, 94.6154, 96.9231, 99.2308, 101.538, 103.846, 106.154,\n      108.462, 110.769, 113.077, 115.385, 117.692, 120.0, 122.308, 124.615, 126.923, 129.231, 131.538,\n      133.846, 136.154, 138.462, 140.769, 143.077, 145.385, 147.692, 150.0, 152.308, 154.615, 156.923,\n      159.231, 161.538, 163.846, 166.154, 168.462, 170.769, 173.077, 175.385, 177.692, 180.0, 182.308,\n      184.615, 186.923, 189.231, 191.538, 193.846, 196.154, 198.462, 200.769, 203.077, 205.385,\n      207.692, 210.0, 212.308, 214.615, 216.923, 219.231, 221.538, 223.846, 226.154, 228.462, 230.769,\n      233.077, 235.385, 237.692, 240.0, 242.308, 244.615, 246.923, 249.231, 251.538, 253.846, 255.0,\n      255.0, 255.0, 255.0, 255.0, 255.0, 255.0\n    ],\n    b: [\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.980769,\n      1.96154, 2.94231, 3.92308, 4.90385, 5.88461, 6.86539, 7.84615, 8.82692, 9.80769, 10.7885, 11.7692, 12.75,\n      13.7308, 14.7115, 15.6923, 16.6731, 17.6538, 18.6346, 19.6154, 20.5962, 21.5769, 22.5577, 23.5385,\n      24.5192, 25.5, 26.4808, 27.4615, 28.4423, 29.4231, 30.4038, 31.3846, 32.3654, 33.3462, 34.3269,\n      35.3077, 36.2885, 37.2692, 38.25, 39.2308, 40.2115, 41.1923, 42.1731, 43.1538, 44.1346, 45.1154, 46.0962,\n      47.0769, 48.0577, 49.0385, 50.0192, 51.0, 51.9808, 52.9615, 53.9423, 54.9231, 55.9038, 56.8846,\n      57.8654, 58.8462, 59.8269, 60.8077, 61.7885, 62.7692, 63.75, 64.7308, 65.7115, 66.6923, 67.6731,\n      68.6538, 69.6346, 70.6154, 71.5962, 72.5769, 73.5577, 74.5385, 75.5192, 76.5, 77.4808, 78.4615, 79.4423,\n      80.4231, 81.4038, 82.3846, 83.3654, 84.3462, 85.3269, 86.3077, 87.2885, 88.2692, 89.25, 90.2308,\n      91.2115, 92.1923, 93.1731, 94.1538, 95.1346, 96.1154, 97.0962, 98.0769, 99.0577, 100.038,\n      101.019, 102.0, 102.981, 103.962, 104.942, 105.923, 106.904, 107.885, 108.865, 109.846, 110.827,\n      111.808, 112.788, 113.769, 114.75, 115.731, 116.711, 117.692, 118.673, 119.654, 120.634,\n      121.615, 122.596, 123.577, 124.557, 125.538, 126.519, 127.5\n    ]\n  },\n  gray: {\n    name: 'gray',\n    r: [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n      25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\n      47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\n      67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,\n      89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,\n      108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,\n      124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138,\n      139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,\n      153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,\n      165, 166, 167, 168, 169, 170, 171, 172,\n      173, 174, 175, 176, 177,\n      178, 179,\n      180,\n      181,\n      182,\n      183,\n      184,\n      185,\n      186,\n      187,\n      188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,\n      201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,\n      213, 214, 215, 216, 217, 218, 219, 220,\n      221, 222,\n      223,\n      224,\n      225,\n      226,\n      227,\n      228,\n      229,\n      230,\n      231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242,\n      243, 244, 245, 246, 247, 248, 249, 250,\n      251,\n      252,\n      253,\n      254,\n      255\n    ],\n    g: [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n      25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\n      46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\n      57,\n      58,\n      59,\n      60,\n      61,\n      62,\n      63,\n      64,\n      65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\n      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\n      95,\n      96,\n      97,\n      98,\n      99,\n      100,\n      101,\n      102,\n      103,\n      104,\n      105, 106, 107, 108, 109, 110, 111, 112, 113, 114,\n      115,\n      116,\n      117,\n      118,\n      119,\n      120,\n      121,\n      122,\n      123,\n      124,\n      125, 126, 127, 128, 129, 130, 131, 132, 133, 134,\n      135,\n      136,\n      137,\n      138,\n      139,\n      140,\n      141,\n      142,\n      143,\n      144,\n      145, 146, 147, 148, 149, 150, 151, 152, 153, 154,\n      155,\n      156,\n      157,\n      158,\n      159,\n      160,\n      161,\n      162,\n      163,\n      164,\n      165, 166, 167, 168, 169, 170, 171, 172, 173, 174,\n      175,\n      176,\n      177,\n      178,\n      179,\n      180,\n      181,\n      182,\n      183,\n      184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,\n      197, 198, 199, 200, 201, 202, 203, 204, 205, 206,\n      207,\n      208,\n      209,\n      210,\n      211,\n      212,\n      213,\n      214,\n      215,\n      216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227,\n      228, 229, 230, 231, 232, 233, 234, 235, 236, 237,\n      238,\n      239,\n      240,\n      241,\n      242,\n      243,\n      244,\n      245,\n      246,\n      247, 248, 249, 250,\n      251,\n      252,\n      253,\n      254,\n      255\n    ],\n    b: [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n      59,\n      60,\n      61,\n      62,\n      63,\n      64,\n      65,\n      66,\n      67,\n      68,\n      69,\n      70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,\n      89,\n      90,\n      91,\n      92,\n      93,\n      94,\n      95,\n      96,\n      97,\n      98,\n      99,\n      100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,\n      117,\n      118,\n      119,\n      120,\n      121,\n      122,\n      123,\n      124,\n      125,\n      126,\n      127,\n      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144,\n      145,\n      146,\n      147,\n      148,\n      149,\n      150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,\n      165,\n      166,\n      167,\n      168,\n      169,\n      170,\n      171,\n      172,\n      173,\n      174,\n      175,\n      176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192,\n      193,\n      194,\n      195,\n      196,\n      197,\n      198,\n      199,\n      200,\n      201,\n      202,\n      203,\n      204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,\n      221,\n      222,\n      223,\n      224,\n      225,\n      226,\n      227,\n      228,\n      229,\n      230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,\n      241,\n      242,\n      243,\n      244,\n      245,\n      246,\n      247,\n      248,\n      249,\n      250,\n      251,\n      252,\n      253,\n      254,\n      255\n    ]\n  },\n}\n\nexport default ColorMaps;","'use strict'\n\nimport global from '../../Global.js'\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport { fovHelper } from './FoVHelper.js'\nimport HiPS from './HiPS.js'\n\ninterface Vec3 { x: number; y: number; z: number }\ninterface Xyf { ix: number; iy: number; face: number }\ninterface HealpixLike {\n  order: number\n  nest2xyf(nest: number): Xyf\n  xyf2nest(x: number, y: number, face: number): number\n  getBoundaries(nest: number): Vec3[]\n  getPointsForXyfNoStep(x: number, y: number, face: number): Vec3[]\n}\n\nclass AncestorTile {\n  private _hips: HiPS\n  private _tileno: number\n  private _baseurl: string\n  private _order: number\n\n  private _ready = false\n  private _format: string\n  \n  private _isGalacticHips: boolean\n\n  public opacity = 1.0\n  private _hipsShaderIndex = 0\n  private _pixels: number[] = []\n\n  private _texture: WebGLTexture | null = null\n  private _image!: HTMLImageElement\n  private _texurl = ''\n\n\n  private vertexPosition!: Float32Array[]\n  private vertexPositionBuffer!: WebGLBuffer[]\n  private vertexIndices!: Uint16Array\n  private vertexIndexBuffer!: WebGLBuffer\n\n  constructor(tileno: number, order: number, hips: HiPS) {\n    this._hips = hips\n    this._tileno = tileno\n\n    this._format = hips.format\n    this._baseurl = hips.baseURL\n\n    this._isGalacticHips = hips.isGalacticHips\n\n    this._order = order\n    this.initImage()\n  }\n\n  // Kept for API parity; there is no interval created in this class.\n  destroyIntervals(): void {\n    // no-op\n  }\n\n  private initImage(): void {\n    const dirnumber = Math.floor(this._tileno / 10000) * 10000\n    this._texurl = `${this._baseurl}/Norder${this._order}/Dir${dirnumber}/Npix${this._tileno}.${this._format}`\n\n    this._image = new Image()\n    this._image.onload = () => this.imageLoaded()\n    this._image.onerror = () => {\n      console.error('File not found? %s', this._texurl)\n    }\n    this._image.crossOrigin = 'anonymous'\n    // If you ever need FITS handling, call this.loadImage() instead.\n    this._image.src = this._texurl\n  }\n\n  private imageLoaded(): void {\n    this.textureLoaded()\n    this.initModelBuffer()\n\n    const gl = (global as any).gl as WebGL2RenderingContext\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image)\n\n    this._ready = true\n  }\n\n  private textureLoaded(): void {\n    hipsShaderProgram.enableProgram()\n\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this._texture = gl.createTexture()\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n\n    gl.uniform1i((hipsShaderProgram as any).shaderProgram.samplerUniform, this._hipsShaderIndex)\n\n    if (!gl.isTexture(this._texture)) {\n      console.log('error in texture')\n    }\n  }\n\n  private initModelBuffer(): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this.vertexPosition = []\n    this.vertexPositionBuffer = []\n    this.vertexIndices = new Uint16Array()\n    // this.vertexIndexBuffer created later\n\n    const reforder = fovHelper.getRefOrder(this._order)\n    const orighealpix = (global as any).getHealpix(this._order) as HealpixLike\n    const origxyf = orighealpix.nest2xyf(this._tileno)\n\n    const orderjump = reforder - this._order\n\n    const dxmin = origxyf.ix << orderjump\n    const dxmax = (origxyf.ix << orderjump) + (1 << orderjump)\n    const dymin = origxyf.iy << orderjump\n    const dymax = (origxyf.iy << orderjump) + (1 << orderjump)\n\n    const healpix = (global as any).getHealpix(reforder) as HealpixLike\n\n    this._pixels = []\n\n    // Using getBoundaries (like the JS source)\n    this.setupPositionAndTexture4Quadrant(dxmin, dxmax / 2, dymin, dymax / 2, 0, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant(dxmax / 2, dxmax, dymin, dymax / 2, 1, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant(dxmin, dxmax / 2, dymax / 2, dymax, 2, healpix, orderjump, origxyf)\n    this.setupPositionAndTexture4Quadrant(dxmax / 2, dxmax, dymax / 2, dymax, 3, healpix, orderjump, origxyf)\n\n    const pixelsXQuadrant = this.vertexPosition[0].length / 20\n    this.vertexIndices = this.computeVertexIndices(pixelsXQuadrant)\n\n    this.vertexIndexBuffer = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndices, gl.STATIC_DRAW)\n  }\n\n  private computeVertexIndices(pixelsXQuadrant: number): Uint16Array {\n    const vertexIndices = new Uint16Array(6 * pixelsXQuadrant)\n    let baseFaceIndex = 0\n    for (let j = 0; j < pixelsXQuadrant; j++) {\n      vertexIndices[6 * j] = baseFaceIndex\n      vertexIndices[6 * j + 1] = baseFaceIndex + 1\n      vertexIndices[6 * j + 2] = baseFaceIndex + 2\n\n      vertexIndices[6 * j + 3] = baseFaceIndex + 2\n      vertexIndices[6 * j + 4] = baseFaceIndex + 3\n      vertexIndices[6 * j + 5] = baseFaceIndex\n\n      baseFaceIndex += 4\n    }\n    return vertexIndices\n  }\n\n  // Version that uses getPointsForXyfNoStep (kept for reference; not used in this class)\n  private setupPositionAndTexture4Quadrant2(\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    qidx: number,\n    healpix: HealpixLike,\n    orderjump: number,\n    origxyf: Xyf\n  ): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this.vertexPosition[qidx] = new Float32Array(20 * (dxmax - dxmin) * (dymax - dymin))\n\n    const step = 1 / (1 << orderjump)\n    let p = 0\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        const facesVec3Array = healpix.getPointsForXyfNoStep(dx, dy, origxyf.face)\n        const uindex = dy - (origxyf.iy << orderjump)\n        const vindex = dx - (origxyf.ix << orderjump)\n\n        this.vertexPosition[qidx][20 * p] = facesVec3Array[0].x\n        this.vertexPosition[qidx][20 * p + 1] = facesVec3Array[0].y\n        this.vertexPosition[qidx][20 * p + 2] = facesVec3Array[0].z\n        this.vertexPosition[qidx][20 * p + 3] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 4] = 1 - (step + step * vindex)\n\n        this.vertexPosition[qidx][20 * p + 5] = facesVec3Array[1].x\n        this.vertexPosition[qidx][20 * p + 6] = facesVec3Array[1].y\n        this.vertexPosition[qidx][20 * p + 7] = facesVec3Array[1].z\n        this.vertexPosition[qidx][20 * p + 8] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 9] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 10] = facesVec3Array[2].x\n        this.vertexPosition[qidx][20 * p + 11] = facesVec3Array[2].y\n        this.vertexPosition[qidx][20 * p + 12] = facesVec3Array[2].z\n        this.vertexPosition[qidx][20 * p + 13] = step * uindex\n        this.vertexPosition[qidx][20 * p + 14] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 15] = facesVec3Array[3].x\n        this.vertexPosition[qidx][20 * p + 16] = facesVec3Array[3].y\n        this.vertexPosition[qidx][20 * p + 17] = facesVec3Array[3].z\n        this.vertexPosition[qidx][20 * p + 18] = step * uindex\n        this.vertexPosition[qidx][20 * p + 19] = 1 - (step + step * vindex)\n        p++\n      }\n    }\n\n    this.vertexPositionBuffer[qidx] = (global as any).gl.createBuffer()\n    ;(global as any).gl.bindBuffer((global as any).gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n    ;(global as any).gl.bufferData(\n      (global as any).gl.ARRAY_BUFFER,\n      this.vertexPosition[qidx],\n      (global as any).gl.STATIC_DRAW\n    )\n  }\n\n  // Version used by the original JS, collecting _pixels via xyf2nest + getBoundaries\n  private setupPositionAndTexture4Quadrant(\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    qidx: number,\n    healpix: HealpixLike,\n    orderjump: number,\n    origxyf: Xyf\n  ): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n    this.vertexPosition[qidx] = new Float32Array(20 * (dxmax - dxmin) * (dymax - dymin))\n\n    const step = 1 / (1 << orderjump)\n    let p = 0\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        const ipix3 = healpix.xyf2nest(dx, dy, origxyf.face)\n        this._pixels.push(ipix3)\n\n        const facesVec3Array = healpix.getBoundaries(ipix3)\n        const uindex = dy - (origxyf.iy << orderjump)\n        const vindex = dx - (origxyf.ix << orderjump)\n\n        this.vertexPosition[qidx][20 * p] = facesVec3Array[0].x\n        this.vertexPosition[qidx][20 * p + 1] = facesVec3Array[0].y\n        this.vertexPosition[qidx][20 * p + 2] = facesVec3Array[0].z\n        this.vertexPosition[qidx][20 * p + 3] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 4] = 1 - (step + step * vindex)\n\n        this.vertexPosition[qidx][20 * p + 5] = facesVec3Array[1].x\n        this.vertexPosition[qidx][20 * p + 6] = facesVec3Array[1].y\n        this.vertexPosition[qidx][20 * p + 7] = facesVec3Array[1].z\n        this.vertexPosition[qidx][20 * p + 8] = step + step * uindex\n        this.vertexPosition[qidx][20 * p + 9] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 10] = facesVec3Array[2].x\n        this.vertexPosition[qidx][20 * p + 11] = facesVec3Array[2].y\n        this.vertexPosition[qidx][20 * p + 12] = facesVec3Array[2].z\n        this.vertexPosition[qidx][20 * p + 13] = step * uindex\n        this.vertexPosition[qidx][20 * p + 14] = 1 - step * vindex\n\n        this.vertexPosition[qidx][20 * p + 15] = facesVec3Array[3].x\n        this.vertexPosition[qidx][20 * p + 16] = facesVec3Array[3].y\n        this.vertexPosition[qidx][20 * p + 17] = facesVec3Array[3].z\n        this.vertexPosition[qidx][20 * p + 18] = step * uindex\n        this.vertexPosition[qidx][20 * p + 19] = 1 - (step + step * vindex)\n        p++\n      }\n    }\n\n    this.vertexPositionBuffer[qidx] = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexPosition[qidx], gl.STATIC_DRAW)\n  }\n\n  public draw(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): boolean {\n    if (!this._ready) return false\n\n    let quadrantsToDraw: Set<number> = new Set([0, 1, 2, 3])\n    if (visibleOrder > this._order) {\n      const q = this.drawChildren(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n      if (q) quadrantsToDraw = q\n    }\n\n    hipsShaderProgram.enableShaders(pMatrix, vMatrix, mMatrix, colorMapIdx)\n\n    const gl = (global as any).gl as WebGL2RenderingContext\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.vertexPositionAttribute)\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.textureCoordAttribute)\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n    gl.uniform1f((hipsShaderProgram as any).locations.textureAlpha, this.opacity)\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    const elemno = this.vertexIndices.length\n\n    quadrantsToDraw.forEach((qidx) => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer[qidx])\n\n      gl.vertexAttribPointer(\n        (hipsShaderProgram as any).locations.vertexPositionAttribute,\n        3,\n        gl.FLOAT,\n        false,\n        5 * 4,\n        0\n      )\n      gl.vertexAttribPointer(\n        (hipsShaderProgram as any).locations.textureCoordAttribute,\n        2,\n        gl.FLOAT,\n        false,\n        5 * 4,\n        3 * 4\n      )\n\n      gl.drawElements(gl.TRIANGLES, elemno, gl.UNSIGNED_SHORT, 0)\n    })\n\n    gl.disableVertexAttribArray((hipsShaderProgram as any).locations.vertexPositionAttribute)\n    gl.disableVertexAttribArray((hipsShaderProgram as any).locations.textureCoordAttribute)\n\n    return true\n  }\n\n  private drawChildren(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): Set<number> | undefined {\n    const quadrantsToDraw = new Set<number>([0, 1, 2, 3])\n    const childrenOrder = this._order + 1\n    if (!visibleTilesMap.has(childrenOrder)) return\n\n    for (let c = 0; c < 4; c++) {\n      const childTileNo = (this._tileno << 2) + c\n      const visibleChildren = visibleTilesMap.get(childrenOrder)!\n      if (visibleChildren.includes(childTileNo)) {\n        const childTile = this._isGalacticHips\n          ? newTileBuffer.getGalTile(childTileNo, childrenOrder, this._hips)\n          : newTileBuffer.getTile(childTileNo, childrenOrder, this._hips)\n\n        childTile.draw(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n        if ((childTile as any)._ready) {\n          quadrantsToDraw.delete((childTile as any)._tileno - (this._tileno << 2))\n        }\n      }\n    }\n    return quadrantsToDraw\n  }\n}\n\nexport default AncestorTile","'use strict'\n\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport global from '../../Global.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport HiPS from './HiPS.js'\n\n\nexport default class AllSky {\n  private _ready = false\n  private _hips: HiPS\n\n  private _format: string\n  private _baseurl: string\n  private _isGalacticHips: boolean\n\n  private _order = 3\n  public opacity = 1.0\n\n  private _hipsShaderIndex = 0\n  private _texture: WebGLTexture | null = null\n  private _image!: HTMLImageElement\n  private _texurl!: string\n\n  private _textureLoaded = false\n\n  private _maxTiles = 0\n  private _numFacesXTile = 0\n  private _numFaces = 0\n\n  private vertexPosition!: Float32Array\n  private vertexPositionBuffer!: WebGLBuffer\n  private vertexIndexBuffer!: WebGLBuffer\n  private vidx = 0\n\n  constructor(hips: HiPS) {\n    this._hips = hips\n\n    this._format = hips.format\n    this._baseurl = hips.baseURL\n    this._isGalacticHips = hips.isGalacticHips\n\n    this.initImage()\n  }\n\n  private initImage(): void {\n    this._image = new Image()\n    this._texurl = `${this._baseurl}/Norder3/Allsky.${this._format}`\n\n    this._image.onload = () => this.imageLoaded()\n    this._image.onerror = () => {\n      console.error('File not found? %s', this._texurl)\n    }\n\n    this._image.setAttribute('crossorigin', 'anonymous')\n    this._image.src = this._texurl\n  }\n\n  private imageLoaded(): void {\n    this.textureLoaded()\n    this.initModelBuffer()\n\n    this._textureLoaded = true\n    this._ready = true\n  }\n\n  private textureLoaded(): void {\n    hipsShaderProgram.enableProgram()\n\n    const gl = global.gl as WebGL2RenderingContext\n    this._texture = gl.createTexture()\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    // gl.uniform1i(hipsShaderProgram.shaderProgram.samplerUniform, this._hipsShaderIndex)\n\n    if (!gl.isTexture(this._texture)) {\n      console.log('error in texture')\n    }\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n\n    const useMipmaps = true\n    gl.texParameteri(\n      gl.TEXTURE_2D,\n      gl.TEXTURE_MIN_FILTER,\n      useMipmaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR\n    );\n    // MAG filter: ONLY NEAREST or LINEAR are valid\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n    // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n    // gl.generateMipmap(gl.TEXTURE_2D)\n\n    if (useMipmaps) gl.generateMipmap(gl.TEXTURE_2D);\n\n  }\n\n  private initModelBuffer(): void {\n    const gl = (global as any).gl as WebGL2RenderingContext\n\n    const hpx = (global as any).getHealpix(this._order)\n    this._maxTiles = hpx.getNPix()\n\n    const orderjump = 1\n    const tgtHpxOrder = this._order + orderjump\n    const healpix = (global as any).getHealpix(this._order)\n    const tgtHealpix = (global as any).getHealpix(tgtHpxOrder)\n\n    this._numFacesXTile = 4 ** orderjump // used in gl.draw\n    this._numFaces = this._numFacesXTile * this._maxTiles\n    this.vertexPosition = new Float32Array(20 * this._numFaces)\n\n    let sindex = 0\n    let tindex = 0\n    this.vidx = 0\n\n    for (let t = 0; t < this._maxTiles; t++) {\n      const xyf = healpix.nest2xyf(t)\n      const dxmin = xyf.ix << orderjump\n      const dxmax = (xyf.ix << orderjump) + (1 << orderjump)\n      const dymin = xyf.iy << orderjump\n      const dymax = (xyf.iy << orderjump) + (1 << orderjump)\n\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin,\n        dxmin + (dxmax - dxmin) / 2,\n        dymin,\n        dymin + (dymax - dymin) / 2,\n        tgtHealpix,\n        xyf,\n        0,\n        0\n      )\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin + (dxmax - dxmin) / 2,\n        dxmax,\n        dymin,\n        dymin + (dymax - dymin) / 2,\n        tgtHealpix,\n        xyf,\n        0,\n        1\n      )\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin,\n        dxmin + (dxmax - dxmin) / 2,\n        dymin + (dymax - dymin) / 2,\n        dymax,\n        tgtHealpix,\n        xyf,\n        1,\n        0\n      )\n      this.setupPositionAndTexture4Quadrant(\n        sindex,\n        tindex,\n        dxmin + (dxmax - dxmin) / 2,\n        dxmax,\n        dymin + (dymax - dymin) / 2,\n        dymax,\n        tgtHealpix,\n        xyf,\n        1,\n        1\n      )\n\n      sindex++\n      if (sindex === 27) {\n        tindex++\n        sindex = 0\n      }\n    }\n\n    const vertexIndices = new Uint16Array(6 * this._numFaces)\n    let baseFaceIndex = 0\n    for (let i = 0; i < this._numFaces; i++) {\n      vertexIndices[6 * i] = baseFaceIndex\n      vertexIndices[6 * i + 1] = baseFaceIndex + 1\n      vertexIndices[6 * i + 2] = baseFaceIndex + 3\n\n      vertexIndices[6 * i + 3] = baseFaceIndex + 1\n      vertexIndices[6 * i + 4] = baseFaceIndex + 2\n      vertexIndices[6 * i + 5] = baseFaceIndex + 3\n\n      baseFaceIndex += 4\n    }\n\n    this.vertexPositionBuffer = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexPosition, gl.STATIC_DRAW)\n\n    this.vertexIndexBuffer = gl.createBuffer() as WebGLBuffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, vertexIndices, gl.STATIC_DRAW)\n  }\n\n  private setupPositionAndTexture4Quadrant(\n    sindex: number,\n    tindex: number,\n    dxmin: number,\n    dxmax: number,\n    dymin: number,\n    dymax: number,\n    tgthealpix: any,\n    xyf: any,\n    qx: number,\n    qy: number\n  ): void {\n    let facesVec3Array: Array<{ x: number; y: number; z: number }> = []\n\n    const factor = 2 ** (tgthealpix.order - 3)\n    const s_step = 1 / (27 * factor) // 0.037037037...\n    const t_step = 1 / (29 * factor) // 0.034482759...\n\n    const s_pixel_size = s_step / 64\n    const t_pixel_size = t_step / 64\n\n    const base_s = factor * s_step * sindex + s_step * qx\n    const base_t = factor * t_step * tindex + t_step * qy\n\n    for (let dx = dxmin; dx < dxmax; dx++) {\n      for (let dy = dymin; dy < dymax; dy++) {\n        facesVec3Array = tgthealpix.getPointsForXyfNoStep(dx, dy, xyf.face)\n\n        // bottom right\n        this.vertexPosition[20 * this.vidx] = facesVec3Array[0].x\n        this.vertexPosition[20 * this.vidx + 1] = facesVec3Array[0].y\n        this.vertexPosition[20 * this.vidx + 2] = facesVec3Array[0].z\n        this.vertexPosition[20 * this.vidx + 3] = s_step + base_s - s_pixel_size\n        this.vertexPosition[20 * this.vidx + 4] = 1 - (t_step + base_t) + t_pixel_size\n\n        // top right\n        this.vertexPosition[20 * this.vidx + 5] = facesVec3Array[1].x\n        this.vertexPosition[20 * this.vidx + 6] = facesVec3Array[1].y\n        this.vertexPosition[20 * this.vidx + 7] = facesVec3Array[1].z\n        this.vertexPosition[20 * this.vidx + 8] = s_step + base_s - s_pixel_size\n        this.vertexPosition[20 * this.vidx + 9] = 1 - base_t - t_pixel_size\n\n        // top left\n        this.vertexPosition[20 * this.vidx + 10] = facesVec3Array[2].x\n        this.vertexPosition[20 * this.vidx + 11] = facesVec3Array[2].y\n        this.vertexPosition[20 * this.vidx + 12] = facesVec3Array[2].z\n        this.vertexPosition[20 * this.vidx + 13] = base_s + s_pixel_size\n        this.vertexPosition[20 * this.vidx + 14] = 1 - base_t - t_pixel_size\n\n        // bottom left\n        this.vertexPosition[20 * this.vidx + 15] = facesVec3Array[3].x\n        this.vertexPosition[20 * this.vidx + 16] = facesVec3Array[3].y\n        this.vertexPosition[20 * this.vidx + 17] = facesVec3Array[3].z\n        this.vertexPosition[20 * this.vidx + 18] = base_s + s_pixel_size\n        this.vertexPosition[20 * this.vidx + 19] = 1 - (t_step + base_t) + t_pixel_size\n\n        this.vidx++\n      }\n    }\n  }\n\n  /**\n   * Renders the all-sky layer and, when available, delegates to higher-resolution child tiles.\n   * Returns `true` if it attempted to draw (ready), `false` if still not ready.\n   */\n  public draw(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): boolean {\n    if (!this._ready) return false\n\n    let allSkyTiles2Skip: number[] = []\n    if (visibleOrder >= this._order) {\n      const skipped = this.drawChildren(\n        visibleOrder,\n        visibleTilesMap,\n        pMatrix,\n        vMatrix,\n        mMatrix,\n        colorMapIdx\n      )\n      if (skipped) allSkyTiles2Skip = skipped\n    }\n\n    const gl = global.gl as WebGL2RenderingContext\n\n    hipsShaderProgram.enableShaders(pMatrix, vMatrix, mMatrix, colorMapIdx)\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.vertexPositionAttribute)\n    gl.enableVertexAttribArray((hipsShaderProgram as any).locations.textureCoordAttribute)\n\n    gl.activeTexture(gl.TEXTURE0 + this._hipsShaderIndex)\n    gl.bindTexture(gl.TEXTURE_2D, this._texture)\n    gl.uniform1f(hipsShaderProgram.locations.textureAlpha, this.opacity)\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n\n    gl.vertexAttribPointer(\n      hipsShaderProgram.locations.vertexPositionAttribute,\n      3,\n      gl.FLOAT,\n      false,\n      5 * 4,\n      0\n    )\n    gl.vertexAttribPointer(\n      hipsShaderProgram.locations.textureCoordAttribute,\n      2,\n      gl.FLOAT,\n      false,\n      5 * 4,\n      3 * 4\n    )\n\n    for (let t = 0; t < this._maxTiles; t++) {\n      if (!allSkyTiles2Skip.includes(t)) {\n        gl.drawElements(\n          gl.TRIANGLES,\n          6 * this._numFacesXTile,\n          gl.UNSIGNED_SHORT,\n          12 * t * this._numFacesXTile\n        )\n      }\n    }\n\n    gl.disableVertexAttribArray(hipsShaderProgram.locations.vertexPositionAttribute)\n    gl.disableVertexAttribArray(hipsShaderProgram.locations.textureCoordAttribute)\n\n    return true\n  }\n\n  private drawChildren(\n    visibleOrder: number,\n    visibleTilesMap: Map<number, number[]>,\n    pMatrix: Float32Array,\n    vMatrix: Float32Array,\n    mMatrix: Float32Array,\n    colorMapIdx: number\n  ): number[] | undefined {\n    const childrenOrder = this._order\n    if (!visibleTilesMap.has(childrenOrder)) return\n\n    const visibleTiles = visibleTilesMap.get(childrenOrder) as number[]\n    const allSkyTiles2Skip: number[] = []\n\n    for (let i = 0; i < visibleTiles.length; i++) {\n      const tileno = visibleTiles[i]\n      const childTile = this._isGalacticHips\n        ? newTileBuffer.getGalTile(tileno, childrenOrder, this._hips)\n        : newTileBuffer.getTile(tileno, childrenOrder, this._hips)\n\n      childTile.draw(visibleOrder, visibleTilesMap, pMatrix, vMatrix, mMatrix, colorMapIdx)\n      if (childTile.getReadyState()) {\n        allSkyTiles2Skip.push(tileno)\n      }\n    }\n    return allSkyTiles2Skip\n  }\n}","'use strict'\n/**\n * @author Fabrizio Giordano (Fab77)\n */\n\nimport AbstractSkyEntity from '../AbstractSkyEntity.js'\nimport { fovHelper } from './FoVHelper.js'\nimport { newTileBuffer } from './TileBuffer.js'\nimport ColorMaps, { ColorMap } from '../ColorMaps.js'\nimport { hipsShaderProgram } from '../../shader/HiPSShaderProgram.js'\nimport AncestorTile from './AncestorTile.js'\nimport { visibleTilesManager } from './VisibleTilesManager.js'\nimport AllSky from './AllSky.js'\nimport healpixGridSingleton from '../grid/HealpixGridSingleton.js'\nimport global from '../../Global.js'\nimport {HiPSDescriptor} from './HiPSDescriptor.js'\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js'\n\n\nclass HiPS extends AbstractSkyEntity {\n  \n  private _ancestorTiles: AncestorTile[]\n  private _allSkyTile: AllSky | null\n\n  private _format: string\n  private _baseurl: string\n  private _maxorder: number\n  private _minorder: number\n\n  private _visibleorder = 3\n  private _allSky = true\n\n  public samplerIdx = 0\n  public colorMapIdx = 0\n  public colorMap = ColorMaps['native']\n\n  // exposed read-only helpers\n  get maxOrder(): number { return this._maxorder }\n  get minOrder(): number { return this._minorder }\n  get baseURL(): string { return this._baseurl }\n  get format(): string { return this._format }\n\n  constructor(\n    radius: number,\n    position: [number, number, number],\n    xrad: number,\n    yrad: number,\n    descriptor: HiPSDescriptor\n  ) {\n    super(radius, position, xrad, yrad, descriptor.surveyName, descriptor.isGalactic)\n    this.initGL((global as any).gl as WebGL2RenderingContext)\n\n    newTileBuffer.addHiPS(this)\n\n    // DEBUG logs kept from JS (optional)\n    // eslint-disable-next-line no-console\n    console.log('HiPS frame ' + descriptor.hipsFrame)\n    // eslint-disable-next-line no-console\n    console.log('HiPS minOrder ' + descriptor.minOrder)\n\n    this._format = descriptor.imgFormats[0]\n    this._baseurl = descriptor.url\n    this._maxorder = descriptor.maxOrder\n    this._minorder = descriptor.minOrder\n\n    this.initShaders()\n\n    // pick initial order from a starting FoV\n    const fov = 180\n    let order = fovHelper.getHiPSNorder(fov)\n    this._visibleorder = Math.min(order, this._maxorder)\n\n    this._ancestorTiles = []\n    this._allSkyTile = null\n\n    // auto-detect all-sky: original code forces true\n    this._allSky = true\n    if (this._allSky) {\n      this._allSkyTile = new AllSky(this)\n    } else {\n      for (let t = 0; t < 12; t++) {\n        this._ancestorTiles.push(new AncestorTile(t, 0, this))\n      }\n    }\n  }\n\n  changeFormat(format: string): void {\n    this._format = format\n    // original code referenced _tileBuffer; if you have one, wire it back.\n    // Keeping calls no-op to avoid breaking at runtime if _tileBuffer is undefined.\n    // (newVisibleTilesManager + TileBuffer drive the actual tile lifecycle)\n    // @ts-ignore\n    if (this._tileBuffer?.clearAll) this._tileBuffer.clearAll()\n    // @ts-ignore\n    if (this._tileBuffer) this._tileBuffer._format = this._format\n    const pixelByOrder =\n      this.isGalacticHips\n        ? visibleTilesManager.galVisibleTilesByOrder\n        : visibleTilesManager.visibleTilesByOrder\n    // @ts-ignore\n    if (this._tileBuffer?.updateTiles) this._tileBuffer.updateTiles(pixelByOrder.pixels, pixelByOrder.order)\n  }\n\n  /**\n   * Shader colormap switcher\n   * 0 -> native\n   * 1 -> grayscale\n   * 2 -> planck\n   * 3 -> cmb\n   * 4 -> rainbow\n   * 5 -> eosb\n   * 6 -> cubehelix\n   */\n  changeColorMap(colorMap: ColorMap): void {\n    this.colorMap = colorMap\n    switch (colorMap.name) {\n      case 'grayscale':\n        this.colorMapIdx = 1\n        hipsShaderProgram.setGrayscaleShader()\n        break\n      case 'planck':\n        this.colorMapIdx = 2\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'cmb':\n        this.colorMapIdx = 3\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'rainbow':\n        this.colorMapIdx = 4\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'eosb':\n        this.colorMapIdx = 5\n        hipsShaderProgram.setColorMapShader()\n        break\n      case 'cubehelix':\n        this.colorMapIdx = 6\n        hipsShaderProgram.setColorMapShader()\n        break\n      default:\n        this.colorMapIdx = 0\n        hipsShaderProgram.setNativeShader()\n    }\n  }\n\n  private initShaders(): void {\n    hipsShaderProgram.enableProgram()\n    this.shaderProgram = hipsShaderProgram.shaderProgram\n  }\n\n  getCurrentHealpixOrder(): number {\n    return this._visibleorder\n  }\n\n  private refresh(): void {\n    const fov = healpixGridSingleton.getMinFoV()\n    this._visibleorder = Math.min(fovHelper.getHiPSNorder(fov), this._maxorder)\n  }\n\n  draw(): void {\n    \n    if (!global.camera || global.camera.getCameraMatrix() === undefined) return\n    this.refresh()\n    \n    const vMatrix = global.camera.getCameraMatrix() as Float32Array\n    const pMatrix = computePerspectiveMatrixSingleton.pMatrix as Float32Array\n    const mMatrix = this.getModelMatrix() as Float32Array\n\n    if (this._allSky && this._allSkyTile) {\n      if (this.isGalacticHips) {\n        this._allSkyTile.draw(\n          visibleTilesManager.galVisibleTilesByOrder.order,\n          visibleTilesManager.galAncestorsMap,\n          pMatrix,\n          vMatrix,\n          mMatrix,\n          this.colorMapIdx\n        )\n      } else {\n        this._allSkyTile.draw(\n          visibleTilesManager.visibleTilesByOrder.order,\n          visibleTilesManager.ancestorsMap,\n          pMatrix,\n          vMatrix,\n          mMatrix,\n          this.colorMapIdx\n        )\n      }\n      return\n    }\n\n    // Non all-sky path\n    const order = this.isGalacticHips\n      ? visibleTilesManager.galVisibleTilesByOrder.order\n      : visibleTilesManager.visibleTilesByOrder.order\n    const map = this.isGalacticHips\n      ? visibleTilesManager.galAncestorsMap\n      : visibleTilesManager.ancestorsMap\n\n    this._ancestorTiles.forEach((ancestor) => {\n      ancestor.draw(order, map, pMatrix, vMatrix, mMatrix, this.colorMapIdx)\n    })\n  }\n}\n\nexport default HiPS","'use strict'\n/**\n * @author Fabrizio Giordano (Fab77)\n */\n\nclass TapMetadata {\n  private _name: string\n  private _description: string\n  private _unit: string\n  private _dataType: string\n  private _ucd: string\n  private _uType: string\n  private _index?: number\n\n  /**\n   *\n   * @param name - column name\n   * @param description - column description\n   * @param unit - physical unit\n   * @param datatype - ADQL datatype\n   * @param ucd - Unified Content Descriptor\n   * @param utype - ObsCore / STC-S type\n   */\n  constructor(\n    name: string,\n    description: string,\n    unit: string,\n    datatype: string,\n    ucd: string,\n    utype: string\n  ) {\n    this._name = name\n    this._description = description\n    this._unit = unit\n    this._dataType = datatype\n    this._ucd = ucd\n    this._uType = utype\n  }\n\n  get name(): string {\n    return this._name\n  }\n\n  get description(): string {\n    return this._description\n  }\n\n  get unit(): string {\n    return this._unit\n  }\n\n  get datatype(): string {\n    return this._dataType\n  }\n\n  get ucd(): string {\n    return this._ucd\n  }\n\n  get uType(): string {\n    return this._uType\n  }\n\n  get index(): number | undefined {\n    return this._index\n  }\n\n  set index(idx: number | undefined) {\n    this._index = idx\n  }\n}\n\nexport default TapMetadata","'use strict'\n\n/**\n * @author Fabrizio Giordano (Fab77)\n */\nimport TapMetadata from './TapMetadata.js'\n\nclass TapMetadataList {\n  private _posEqRAMetaColumns: TapMetadata[] // ucd.includes('pos.eq.ra')\n  private _posEqDecMetaColumns: TapMetadata[] // ucd.includes('pos.eq.dec')\n  private _sRegionMetaColumns: TapMetadata[]  // STC-S / s_region candidates\n  private _pgSphereMetaColumns: TapMetadata[] // ucd.includes('pos.outline.meta.pgsphere')\n  private _metadataList: TapMetadata[]\n\n  constructor() {\n    this._metadataList = []\n    this._posEqRAMetaColumns = []\n    this._posEqDecMetaColumns = []\n    this._sRegionMetaColumns = []\n    this._pgSphereMetaColumns = []\n  }\n\n  /**\n   * Add a TapMetadata entry and classify it into relevant groups\n   */\n  addMetadata(tapMetadata: TapMetadata): void {\n    const length = this._metadataList.push(tapMetadata)\n    const idx = length - 1\n    tapMetadata.index = idx\n\n    if (tapMetadata.ucd?.includes('pos.eq.ra')) {\n      this._posEqRAMetaColumns.push(tapMetadata)\n    } else if (tapMetadata.ucd?.includes('pos.eq.dec')) {\n      this._posEqDecMetaColumns.push(tapMetadata)\n    }\n\n    if (tapMetadata.ucd?.includes('pos.outline;meta.pgsphere')) {\n      this._pgSphereMetaColumns.push(tapMetadata)\n    }\n\n    if (\n      tapMetadata.uType?.includes('Char.SpatialAxis.Coverage.Support.Area') ||\n      tapMetadata.datatype?.includes('adql:REGION') ||\n      tapMetadata.ucd?.includes('pos.outline;obs.field') ||\n      tapMetadata.name === 'stc_s' // for ESASky\n    ) {\n      this._sRegionMetaColumns.push(tapMetadata)\n    }\n  }\n\n  get metadataList(): TapMetadata[] {\n    return this._metadataList\n  }\n\n  set metadataList(metadataList: TapMetadata[]) {\n    this._metadataList = metadataList\n  }\n\n  get pgSphereMetaColumns(): TapMetadata[] {\n    return this._pgSphereMetaColumns\n  }\n\n  get sRegionMetaColumns(): TapMetadata[] {\n    return this._sRegionMetaColumns\n  }\n\n  get posEqRAMetaColumns(): TapMetadata[] {\n    return this._posEqRAMetaColumns\n  }\n\n  get posEqDecMetaColumns(): TapMetadata[] {\n    return this._posEqDecMetaColumns\n  }\n}\n\nexport default TapMetadataList","/**\n * @author Fabrizio Giordano (Fab77)\n */\nimport FootprintSetGL from '../footprints/FootprintSetGL.js'\nimport CatalogueGL from '../catalogues/CatalogueGL.js'\n\nexport type ADQLFunction = string | { name: string; signature?: string; doc?: string }\n\nexport class TapRepo {\n  private _adqlFunctionList: ADQLFunction[]\n\n  private _cataloguesList: CatalogueGL[]\n  private _observationsList: FootprintSetGL[]\n  private _notClassified: unknown[]\n\n  private _activeObservations: FootprintSetGL[]\n  private _activeCatalogues: CatalogueGL[]\n\n  private _tapBaseURL: string\n\n  constructor(tapUrl: string) {\n    this._tapBaseURL = tapUrl\n\n    this._cataloguesList = []\n    this._observationsList = []\n    this._notClassified = []\n\n    this._activeObservations = []\n    this._activeCatalogues = []\n\n    this._adqlFunctionList = []\n  }\n\n  get tapBaseUrl(): string {\n    return this._tapBaseURL\n  }\n\n  setCataloguesList(cataloguesList: CatalogueGL[]): void {\n    this._cataloguesList = cataloguesList\n  }\n\n  setObservationsList(observationList: FootprintSetGL[]): void {\n    this._observationsList = observationList\n  }\n\n  setNotClassifiedList(notClassifiedList: unknown[]): void {\n    this._notClassified = notClassifiedList\n  }\n\n  setCatalogueActive(catalogue: CatalogueGL): void {\n    this._activeCatalogues.push(catalogue)\n  }\n\n  setObservationActive(observation: FootprintSetGL): void {\n    this._activeObservations.push(observation)\n  }\n\n  get cataloguesList(): CatalogueGL[] {\n    return this._cataloguesList\n  }\n\n  get observationsList(): FootprintSetGL[] {\n    return this._observationsList\n  }\n\n  set adqlFunctionList(adqlFunctionList: ADQLFunction[] | undefined) {\n    if (adqlFunctionList !== undefined) {\n      this._adqlFunctionList = adqlFunctionList\n    }\n  }\n\n  get adqlFunctionList(): ADQLFunction[] {\n    return this._adqlFunctionList\n  }\n}","// CatalogueProps.ts\ntype UCD = string | undefined;\n\nimport TapMetadata from \"../tap/TapMetadata.js\";\nimport TapMetadataList from \"../tap/TapMetadataList.js\";\n\nfunction colName(col?: TapMetadata): string | undefined {\n  return col?.name ?? col?.name;\n}\n\nfunction sameName(a?: TapMetadata, name?: string): boolean {\n  if (!a || !name) return false;\n  return colName(a) === name;\n}\n\n\n\nexport default class CatalogueProps {\n\n  static STANDARD_SIZE: string = \"STANDARD_SIZE\"\n\n  raColumn!: TapMetadata;\n  decColumn!: TapMetadata;\n  nameColumn?: TapMetadata;\n  /** Optional: numeric/size-mapped column */\n  shapeSizeColumn?: TapMetadata;\n  /** Optional: hue/category-mapped column */\n  shapeHueColumn?: TapMetadata;\n\n  /** Base color (hex string like #RRGGBB) */\n  shapeColor: string;\n\n  /** Full metadata list reference (kept in sync by updateColumnsIndex) */\n  tapMetadataList: TapMetadataList;\n\n  constructor(tapMetadataList: TapMetadataList, color: string) {\n    this.raColumn = this.setRAColumns(tapMetadataList);\n    this.decColumn = this.setDecColumns(tapMetadataList);\n    this.nameColumn = this.setNameColumn(tapMetadataList);\n\n    this.shapeSizeColumn = undefined;\n    this.shapeHueColumn = undefined;\n    this.shapeColor = color;\n    this.tapMetadataList = tapMetadataList;\n  }\n\n  /** Rebinds saved column references to the new metadata objects (preserves indices, etc.). */\n  updateColumnsIndex(metadataList: TapMetadataList['_metadataList']): void {\n    for (const col of metadataList) {\n      if (sameName(this.raColumn, colName(col))) this.raColumn = col;\n      else if (sameName(this.decColumn, colName(col))) this.decColumn = col;\n      else if (this.shapeHueColumn && sameName(this.shapeHueColumn, colName(col))) this.shapeHueColumn = col;\n      else if (this.shapeSizeColumn && sameName(this.shapeSizeColumn, colName(col))) this.shapeSizeColumn = col;\n      else if (this.nameColumn && sameName(this.nameColumn, colName(col))) this.nameColumn = col;\n    }\n    // Keep the container reference up to date if needed elsewhere.\n    this.tapMetadataList.metadataList = metadataList;\n  }\n\n  private setRAColumns(tapMetadataList: TapMetadataList): TapMetadata {\n    let column: TapMetadata | undefined;\n\n    for (const tapMetadata of tapMetadataList.posEqRAMetaColumns) {\n      const u = tapMetadata.ucd;\n      if (u && u.includes('pos.eq.ra')) {\n        if (u.includes('meta.main')) {\n          column = tapMetadata; // prefer the main one\n          break;\n        }\n        if (!column) column = tapMetadata; // fallback to first valid one\n      }\n    }\n\n    if (!column) {\n      throw new Error('No RA column found (UCD pos.eq.ra) in _posEqRAMetaColumns');\n    }\n    return column;\n  }\n\n  private setDecColumns(tapMetadataList: TapMetadataList): TapMetadata {\n    let column: TapMetadata | undefined;\n\n    for (const tapMetadata of tapMetadataList.posEqDecMetaColumns) {\n      const u = tapMetadata.ucd;\n      if (u && u.includes('pos.eq.dec')) {\n        if (u.includes('meta.main')) {\n          column = tapMetadata; // prefer the main one\n          break;\n        }\n        if (!column) column = tapMetadata; // fallback to first valid one\n      }\n    }\n\n    if (!column) {\n      throw new Error('No Dec column found (UCD pos.eq.dec) in _posEqDecMetaColumns');\n    }\n    return column;\n  }\n\n  private setNameColumn(tapMetadataList: TapMetadataList): TapMetadata | undefined {\n    let column: TapMetadata | undefined;\n\n    for (const tapMetadata of tapMetadataList.metadataList) {\n      const u = tapMetadata.ucd;\n      if (u && u.includes('meta.id') && u.includes('meta.main')) {\n        column = tapMetadata; // prefer id+main\n      }\n    }\n    // It’s okay if there’s no strong \"name\" column; methods below handle undefined.\n    return column;\n  }\n\n  changeColor(color: string): void {\n    this.shapeColor = color;\n  }\n\n  changeMetaName(metacolumnName: string): void {\n    if (this.nameColumn && colName(this.nameColumn) === metacolumnName) return;\n\n    for (const column of this.tapMetadataList.metadataList) {\n      if (colName(column) === metacolumnName) {\n        this.nameColumn = column;\n        break;\n      }\n    }\n  }\n\n  /** Returns true to indicate a refresh-by-FoV is needed (preserves original behavior). */\n  changeCatalogueMetaRA(metacolumnName: string): boolean {\n    if (colName(this.raColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.raColumn = column;\n          break;\n        }\n      }\n    }\n    return true;\n  }\n\n  /** Returns true to indicate a refresh-by-FoV is needed (preserves original behavior). */\n  changeCatalogueMetaDec(metacolumnName: string): boolean {\n    if (colName(this.decColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.decColumn = column;\n          break;\n        }\n      }\n    }\n    return true;\n  }\n\n  resetCatalogueMetaShapeSize(): void {\n    this.shapeSizeColumn = undefined;\n  }\n\n  changeCatalogueMetaShapeSize(metacolumnName: string): void {\n    if (!this.shapeSizeColumn || colName(this.shapeSizeColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.shapeSizeColumn = column;\n          break;\n        }\n      }\n    }\n  }\n\n  resetCatalogueMetaShapeHue() {\n    this.shapeHueColumn = undefined;\n  }\n\n  changeCatalogueMetaShapeHue(metacolumnName: string): void {\n    if (!this.shapeHueColumn || colName(this.shapeHueColumn) !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (colName(column) === metacolumnName) {\n          this.shapeHueColumn = column;\n          break;\n        }\n      }\n    }\n  }\n}","'use strict';\n\nimport { Healpix, Vec3, Pointing } from 'healpixjs';\nimport global from '../Global.js';\nimport Point from './Point.js';\n\nexport interface SourceDetail {\n  key: string;\n  value: string | number;\n  valueType?: string;\n  unit?: string;\n}\n\nclass Source {\n  private _point: Point;\n  private _name?: string;\n  private _details: any[];\n  private _h_pix!: number;\n  private _shapesize: number;\n  private _brightnessFactor: number;\n\n  /**\n   * @param in_point Point.js (Cartesian/RA-Dec wrapper)\n   * @param in_details Optional array of key/value metadata\n   */\n  constructor(in_point: Point, in_details: any[] = []) {\n    this._point = in_point;\n    this._details = in_details;\n    this._shapesize = 8.0;\n    this._brightnessFactor = -99;\n\n    this.computeHealpixPixel();\n  }\n  \n  getDetailByindex(index: number): string | number | undefined {\n    if (index < 0 || index >= this._details.length) {\n      return undefined;\n    }\n    return this._details[index];\n  }\n\n  get details(): any[] {\n    return this._details;\n  }\n  private computeHealpixPixel(): void {\n    // Get Healpix instance from global\n    const healpix: Healpix = global.getHealpix(global.nsideForSelection);\n    const vec3 = new Vec3(this._point.x, this._point.y, this._point.z);\n    const ptg = new Pointing(vec3, false);\n    this._h_pix = healpix.ang2pix(ptg, false);\n  }\n\n  get point(): Point {\n    return this._point;\n  }\n\n  get name(): string | undefined {\n    return this._name;\n  }\n\n  get healpixPixel(): number {\n    return this._h_pix;\n  }\n\n  get shapeSize(): number {\n    return this._shapesize;\n  }\n  set shapeSize(size: number) {\n    this._shapesize = size;\n  }\n\n  get brightnessFactor(): number {\n    return this._brightnessFactor;\n  }\n  /**\n   * @param factor Must be in [-1..1]\n   */\n  set brightnessFactor(factor: number) {\n    this._brightnessFactor = factor;\n  }\n}\n\nexport default Source;","// HiPSShaderProgram.ts\nimport { mat4 } from 'gl-matrix';\nimport global from '../Global.js'\nimport ShaderManager from './ShaderManager.js'\n\ntype GL = WebGL2RenderingContext;\n\ntype UniformNames = {\n  vertex_color: string,\n  m_perspective: string,\n  m_model_view: string,\n}\n\ntype AttributeNames = {\n  vertex_pos: string\n  vertex_selected: string\n  point_size: string\n  point_hue: string\n}\n\ntype Locations = {\n  pMatrix: WebGLUniformLocation | null\n  mvMatrix: WebGLUniformLocation | null\n  color: WebGLUniformLocation | null\n  position: number\n  hovered: number\n  pointSize: number\n  brightness: number\n}\n\nexport default class CatalogueShaderProgram {\n  private _shaderProgram: WebGLProgram | undefined\n  private _vertexShader!: WebGLShader\n  private _fragmentShader!: WebGLShader\n\n  readonly gl_uniforms: UniformNames\n  readonly gl_attributes: AttributeNames\n  readonly locations: Locations\n\n  \n  constructor() {\n    this.gl_uniforms = {\n      vertex_color: 'u_fragcolor',\n      m_perspective: 'uPMatrix',\n      m_model_view: 'uMVMatrix'\n    }\n\n    this.gl_attributes = {\n      vertex_pos: 'aCatPosition',\n      vertex_selected: 'a_selected',\n      point_size: 'a_pointsize',\n      point_hue: 'a_brightness'\n    }\n\n    this.locations = {\n      pMatrix: null,\n      mvMatrix: null,\n      color: null,\n      position: -1,\n      hovered: -1,\n      pointSize: -1,\n      brightness: -1\n    }\n  }\n\n  get shaderProgram(): WebGLProgram {\n    if (!this._shaderProgram) {\n      const gl = global.gl as GL\n      this._shaderProgram = gl.createProgram() as WebGLProgram\n      this.initShaders()\n    }\n    return this._shaderProgram\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL\n\n    const fragmentShaderStr = ShaderManager.catalogueFS()\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    console.log('FS log:', gl.getShaderInfoLog(this._fragmentShader) || 'ok');\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n\n    const vertexShaderStr = ShaderManager.catalogueVS()\n    this._vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader\n    gl.shaderSource(this._vertexShader, vertexShaderStr)\n    gl.compileShader(this._vertexShader)\n    console.log('VS log:', gl.getShaderInfoLog(this._vertexShader) || 'ok');\n    if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._vertexShader) || 'Vertex shader compile error')\n      return\n    }\n\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._vertexShader)\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this.shaderProgram as WebGLProgram)\n\n    if (!gl.getProgramParameter(this.shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n\n    // shaderUtility.useProgram(this.shaderProgram)\n    gl.useProgram(this.shaderProgram);\n\n    this.locations.position = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_pos\n    )\n    this.locations.hovered = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_selected\n    )\n    this.locations.pointSize = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.point_size\n    )\n    this.locations.brightness = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.point_hue\n    )\n    this.locations.color = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.vertex_color\n    )\n\n\n  }\n\n  enableShaders(\n    pMatrix: Float32Array,\n    modelMatrix: Float32Array,\n    viewMatrix: Float32Array\n  ): void {\n    const gl = global.gl as GL\n    \n    // shaderUtility.useProgram(this.shaderProgram)\n    gl.useProgram(this.shaderProgram);\n\n\n    this.locations.pMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_perspective\n    )\n\n    this.locations.mvMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_model_view\n    )\n\n    let mvMatrix = mat4.create()\n    mvMatrix = mat4.multiply(mvMatrix, viewMatrix, modelMatrix)\n    gl.uniformMatrix4fv(this.locations.pMatrix, false, pMatrix)\n    gl.uniformMatrix4fv(this.locations.mvMatrix, false, mvMatrix as Float32Array)\n  }\n}\n\nexport const catalogueShaderProgram = new CatalogueShaderProgram()","import global from '../../Global.js';\nimport CatalogueProps from './CatalogueProps.js';\nimport Source from '../Source.js';\nimport Point from '../Point.js';\nimport { visibleTilesManager } from '../hips/VisibleTilesManager.js';\nimport CoordsType from '../..//utils/CoordsType.js';\nimport { mat4 } from 'gl-matrix';\nimport { colorHex2RGB } from '../../utils/Utils.js';\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js';\nimport MouseHelper from '../../utils/MouseHelper.js';\nimport { TapRepo } from '../tap/TapRepo.js';\nimport TapMetadataList from '../tap/TapMetadataList.js';\nimport { catalogueShaderProgram } from '../../shader/CatalogueShaderProgram.js';\nimport TapMetadata from '../tap/TapMetadata.js';\n\n// ---- Minimal typings for external classes you already have ----\ntype GL = WebGL2RenderingContext;\n\n// `Source` is assumed to expose at least these:\n\nclass CatalogueGL {\n    static ELEM_SIZE: number;\n    static BYTES_X_ELEM: number;\n    static STANDARD_SHAPE_SIZE: number = 8.0\n    static STANDARD_SHAPE_HUE: number = 3.0\n\n    // Core state\n    ready: boolean;\n    catalogueProps: CatalogueProps;\n    name: string;\n    description: string;\n    tapRepo: TapRepo;\n\n    // Data\n    sources: Source[];\n\n    gl: GL;\n    // shaderProgram: WebGLProgram;\n\n    // Buffers & arrays\n    vertexCataloguePositionBuffer: WebGLBuffer | null;\n    vertexhoveredCataloguePositionBuffer: WebGLBuffer | null;\n    vertexCataloguePosition: Float32Array;\n\n    // Index/selection bookkeeping\n    hoveredIndexes: number[];\n    selectedIndexes: number[];\n    extHoveredIndexes: number[];\n\n    oldMouseCoords: [number, number, number] | null;\n\n    _isVisible: boolean = true\n\n    // Healpix pixel => indices map\n    healpixDensityMap: Map<number, number[]>;\n\n    /**\n     * @param tablename - String\n     * @param tabledesc - String\n     * @param tapRepo   - Object with `_tapBaseURL`\n     * @param tapMetadataList - TapMetadataList (as used by CatalogueProps)\n     */\n    constructor(\n        tablename: string,\n        tabledesc: string,\n        provider: TapRepo,\n        tapMetadataList: TapMetadataList\n    ) {\n        this.ready = false;\n        (this as any).TYPE = 'SOURCE_CATALOGUE';\n\n        CatalogueGL.ELEM_SIZE = 6; // x,y,z, hoveredFlag, size, brightness\n        CatalogueGL.BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT;\n\n        this.name = tablename;\n        this.description = tabledesc;\n        this.tapRepo = provider;\n\n\n        this.sources = [];\n\n        // GL init\n        this.gl = global.gl as GL;\n        this.vertexCataloguePositionBuffer = this.gl.createBuffer();\n        this.vertexhoveredCataloguePositionBuffer = this.gl.createBuffer();\n\n        this.vertexCataloguePosition = new Float32Array(0);\n        this.hoveredIndexes = [];\n        this.selectedIndexes = [];\n        this.extHoveredIndexes = [];\n\n        this.oldMouseCoords = null;\n\n\n        this.healpixDensityMap = new Map<number, number[]>();\n        const defaultColor = '#8F00FF';\n\n        this.catalogueProps = new CatalogueProps(tapMetadataList, defaultColor);\n\n        // call catalogueShaderProgram to init shaders if they are not yet initialised \n        catalogueShaderProgram.shaderProgram\n\n        this._isVisible = true\n\n    }\n\n    public setIsVisible(visibility: boolean) {\n        this._isVisible = visibility\n    }\n\n    get isVisible() {\n        return this._isVisible\n    }\n\n    private minMax(columnindex: number): { min: number, max: number } {\n        if (!this.sources.length) return { min: 0, max: 0 };\n        let min = this.sources[0].details[columnindex]\n\n        if (isNaN(Number(min))) {\n            // console.warn(`${this.catalogueProps.tapMetadataList.metadataList[columnindex].name} doesn't contain number only values`)\n            console.warn(`${this.catalogueProps.tapMetadataList.metadataList[columnindex].name} doesn't contain only number values`)\n            return { min: 0, max: 0 };\n        }\n        let max = min;\n\n        for (const source of this.sources) {\n            const v = source.details[columnindex]\n            if (isNaN(Number(v))) {\n                console.warn(`${this.catalogueProps.tapMetadataList.metadataList[columnindex].name} doesn't contain number only values`)\n                return { min: 0, max: 0 };\n            }\n            if (v < min) min = v;\n            if (v > max) max = v;\n        }\n        return {\n            min: Number(min),\n            max: Number(max)\n        };\n    }\n\n\n    changeCatalogueMetaShapeSize(metacolumnName: string) {\n        if (metacolumnName == CatalogueProps.STANDARD_SIZE) {\n            this.catalogueProps.resetCatalogueMetaShapeSize()\n            for (const source of this.sources) {\n                const size = CatalogueGL.STANDARD_SHAPE_SIZE;\n                source.shapeSize = size;\n            }\n            this.initBuffer();\n            return\n        }\n        const oldShapeSizeName = this.catalogueProps.shapeSizeColumn?.name\n        this.catalogueProps.changeCatalogueMetaShapeSize(metacolumnName);\n        const idx = this.catalogueProps.shapeSizeColumn?.index ?? this.catalogueProps.shapeSizeColumn?.index;\n        if (idx == null) {\n            if (oldShapeSizeName) this.catalogueProps.changeCatalogueMetaShapeSize(oldShapeSizeName);\n            return;\n        }\n        const minmax = this.minMax(idx);\n        if (minmax.min == minmax.max) {\n            console.warn(`${minmax} min and max are equals. No resizing will be applied.`)\n            return\n        }\n\n        for (const source of this.sources) {\n            const raw = Number(source.getDetailByindex(idx));\n            const min = Number(minmax.min);\n            const max = Number(minmax.max);\n            const norm = (raw - min) / Math.max(1e-12, (max - min));\n            const size = norm * (20 - 8) + 8;\n            source.shapeSize = size;\n        }\n        this.initBuffer();\n    }\n\n    changeCatalogueMetaShapeHue(metacolumnName: string) {\n        if (metacolumnName == CatalogueProps.STANDARD_SIZE) {\n            this.catalogueProps.resetCatalogueMetaShapeHue()\n            for (const source of this.sources) {\n                const hue = CatalogueGL.STANDARD_SHAPE_HUE;\n                source.brightnessFactor = hue;\n            }\n            this.initBuffer();\n            return\n        }\n\n        const oldHueSizeName = this.catalogueProps.shapeHueColumn?.name\n        this.catalogueProps.changeCatalogueMetaShapeHue(metacolumnName);\n        const idx = this.catalogueProps.shapeHueColumn?.index ?? this.catalogueProps.shapeHueColumn?.index;\n        if (idx == null) {\n            if (oldHueSizeName) this.catalogueProps.changeCatalogueMetaShapeHue(oldHueSizeName);\n            return;\n        }\n        const minmax = this.minMax(idx);\n        if (minmax.min == minmax.max) {\n            console.warn(`${minmax} min and max are equals. No resizing will be applied.`)\n            return\n        }\n\n        for (const source of this.sources) {\n            const raw = Number(source.getDetailByindex(idx));\n            const min = Number(minmax.min);\n            const max = Number(minmax.max);\n            const norm = (raw - min) / Math.max(1e-12, (max - min));\n            // map [0,1] -> [1,-1]\n            source.brightnessFactor = -(norm * 2 - 1);\n        }\n        this.initBuffer();\n    }\n\n    addSource(source: Source) {\n        this.sources.push(source);\n    }\n\n    /**\n     * @param in_data Rows of TAP results\n     * @param columnsmeta TapMetadataList (unused here because `CatalogueProps` already holds indices)\n     */\n    addSources(in_data: any[][], columnsmeta: TapMetadata[]) {\n        this.ready = false;\n        this.sources = []\n\n        const raDataIndex = (this.catalogueProps.raColumn as any).index ?? (this.catalogueProps.raColumn as any)._index;\n        const decDataIndex = (this.catalogueProps.decColumn as any).index ?? (this.catalogueProps.decColumn as any)._index;\n\n        for (let j = 0; j < in_data.length; j++) {\n            const point = new Point(\n                {\n                    raDeg: in_data[j][raDataIndex],\n                    decDeg: in_data[j][decDataIndex]\n                },\n                CoordsType.ASTRO\n            );\n\n            const source = new Source(point, in_data[j]);\n            // Ensure optional fields exist\n            source.shapeSize = source.shapeSize ?? CatalogueGL.STANDARD_SHAPE_SIZE;\n            source.brightnessFactor = 3;\n            this.addSource(source);\n        }\n\n        this.initBuffer();\n        this.ready = true;\n    }\n\n    clearSources() {\n        this.sources = [];\n        this.hoveredIndexes = [];\n        this.healpixDensityMap.clear();\n        this.vertexCataloguePosition = new Float32Array(0);\n    }\n\n    extHighlightSource(source: Source, highlighted: boolean) {\n        const sIdx = this.sources.indexOf(source);\n        if (sIdx < 0) return;\n\n        if (highlighted) {\n            if (!this.extHoveredIndexes.includes(sIdx)) {\n                this.extHoveredIndexes.push(sIdx);\n            }\n        } else {\n            const i = this.extHoveredIndexes.indexOf(sIdx);\n            if (i >= 0) this.extHoveredIndexes.splice(i, 1);\n        }\n    }\n\n    extAddSources2Selected(sources: Source[]) {\n        for (const s of sources) {\n            const sIdx = this.sources.indexOf(s);\n            if (sIdx >= 0 && !this.selectedIndexes.includes(sIdx)) {\n                this.selectedIndexes.push(sIdx);\n            }\n        }\n    }\n\n    extRemoveSourceFromSelection(source: Source) {\n        const indexOfObject = this.sources.indexOf(source);\n        if (indexOfObject < 0) return;\n\n        const sidx = this.selectedIndexes.indexOf(indexOfObject);\n        if (sidx >= 0) this.selectedIndexes.splice(sidx, 1);\n\n        const eidx = this.extHoveredIndexes.indexOf(indexOfObject);\n        if (eidx >= 0) this.extHoveredIndexes.splice(eidx, 1);\n\n        // Clear hovered flag in buffer view (if present)\n        if (this.vertexCataloguePosition.length >= (indexOfObject + 1) * CatalogueGL.ELEM_SIZE) {\n            this.vertexCataloguePosition[indexOfObject * CatalogueGL.ELEM_SIZE + 3] = 0.0;\n        }\n    }\n\n    private initBuffer() {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer);\n\n        const nSources = this.sources.length;\n        this.vertexCataloguePosition = new Float32Array(nSources * CatalogueGL.ELEM_SIZE);\n        let positionIndex = 0;\n\n        for (let j = 0; j < nSources; j++) {\n            const currSource = this.sources[j];\n            const currPix = currSource.healpixPixel;\n\n            // density map\n            const bucket = this.healpixDensityMap.get(currPix);\n            if (bucket) {\n                if (!bucket.includes(j)) bucket.push(j);\n            } else {\n                this.healpixDensityMap.set(currPix, [j]);\n            }\n\n            // position\n            this.vertexCataloguePosition[positionIndex + 0] = currSource.point.x;\n            this.vertexCataloguePosition[positionIndex + 1] = currSource.point.y;\n            this.vertexCataloguePosition[positionIndex + 2] = currSource.point.z;\n\n            // hovered flag\n            this.vertexCataloguePosition[positionIndex + 3] = 0.0;\n\n            // size\n            this.vertexCataloguePosition[positionIndex + 4] = currSource.shapeSize ?? CatalogueGL.STANDARD_SHAPE_SIZE;\n\n            // brightness\n            this.vertexCataloguePosition[positionIndex + 5] = currSource.brightnessFactor ?? 0.0;\n\n            positionIndex += CatalogueGL.ELEM_SIZE;\n        }\n\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexCataloguePosition, this.gl.STATIC_DRAW);\n    }\n\n    private getSelectionRadius(): number {\n        const order = visibleTilesManager.getVisibleOrder();\n        switch (order) {\n            case 0:\n            case 1:\n            case 2:\n                return 0.005;\n            case 3:\n                return 0.001;\n            case 4:\n                return 0.0009;\n            case 5:\n                return 0.0005;\n            case 6:\n                return 0.0001;\n            case 7:\n                return 0.00009;\n            case 8:\n                return 0.00005;\n            case 9:\n                return 0.00001;\n            default:\n                return 0.000005;\n        }\n    }\n\n    private checkSelection(in_mouseHelper: MouseHelper): number[] {\n\n        if (in_mouseHelper.x == null || in_mouseHelper.y == null || in_mouseHelper.z == null) {\n            console.log('CatalogueGL.checkSelection: missing mouse coords');\n            return [];\n        }\n\n        const hoveredIndexes: number[] = [];\n        const sourcesHovered: Source[] = [];\n        const mousePix = in_mouseHelper.computeNpix();\n\n        if (mousePix != null && this.healpixDensityMap.has(mousePix)) {\n            const candidates = this.healpixDensityMap.get(mousePix)!;\n            const selR = this.getSelectionRadius();\n\n            for (let i = 0; i < candidates.length; i++) {\n                const sourceIdx = candidates[i];\n                const source = this.sources[sourceIdx];\n                if (!source) continue;\n\n                const dx = source.point.x - in_mouseHelper.x;\n                const dy = source.point.y - in_mouseHelper.y;\n                const dz = source.point.z - in_mouseHelper.z;\n                const dist = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n                if (dist <= selR) {\n                    hoveredIndexes.push(sourceIdx);\n                    sourcesHovered.push(source);\n                }\n            }\n        }\n\n        // session.updateHoveredSources(this, sourcesHovered);\n        return hoveredIndexes;\n    }\n\n   \n    /**\n     * @param in_mMatrix Model matrix the current catalogue is associated to (e.g. HiPS matrix)\n     */\n    draw(in_mMatrix: mat4, in_mouseHelper: MouseHelper) {\n        if (!this.isVisible) return\n        if (!this.ready) return\n        if (!global.camera) return\n\n        catalogueShaderProgram.enableShaders(computePerspectiveMatrixSingleton.pMatrix as Float32Array,\n            in_mMatrix as Float32Array,\n            global.camera.getCameraMatrix() as Float32Array\n        )\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer);\n\n        // positions\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.position,\n            3,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            0\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.position);\n\n        // hovered flag\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.hovered,\n            1,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            CatalogueGL.BYTES_X_ELEM * 3\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.hovered);\n\n        // point size\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.pointSize,\n            1,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            CatalogueGL.BYTES_X_ELEM * 4\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.pointSize);\n\n        // brightness\n        this.gl.vertexAttribPointer(\n            catalogueShaderProgram.locations.brightness,\n            1,\n            this.gl.FLOAT,\n            false,\n            CatalogueGL.BYTES_X_ELEM * CatalogueGL.ELEM_SIZE,\n            CatalogueGL.BYTES_X_ELEM * 5\n        );\n        this.gl.enableVertexAttribArray(catalogueShaderProgram.locations.brightness);\n\n        // color\n        const rgb = colorHex2RGB(this.catalogueProps.shapeColor);\n        if (catalogueShaderProgram.locations.color) {\n            this.gl.uniform4f(catalogueShaderProgram.locations.color, rgb[0], rgb[1], rgb[2], 1.0);\n        }\n\n        // Hover logic on mouse move\n        if (in_mouseHelper != null && in_mouseHelper.xyz !== this.oldMouseCoords) {\n            // clear old hovered\n            for (let k = 0; k < this.hoveredIndexes.length; k++) {\n                const base = this.hoveredIndexes[k] * CatalogueGL.ELEM_SIZE;\n                this.vertexCataloguePosition[base + 3] = 0.0; // not hovered\n                this.vertexCataloguePosition[base + 4] = this.sources[this.hoveredIndexes[k]].shapeSize; // size\n            }\n\n            this.hoveredIndexes = this.checkSelection(in_mouseHelper);\n\n            // new hovered\n            for (let i = 0; i < this.hoveredIndexes.length; i++) {\n                const idx = this.hoveredIndexes[i];\n                const base = idx * CatalogueGL.ELEM_SIZE;\n                this.vertexCataloguePosition[base + 3] = 1.0; // hovered\n                this.vertexCataloguePosition[base + 4] = this.sources[idx].shapeSize; // size\n            }\n        }\n\n        // selected flags\n        for (let s = 0; s < this.selectedIndexes.length; s++) {\n            const idx = this.selectedIndexes[s];\n            const base = idx * CatalogueGL.ELEM_SIZE;\n            this.vertexCataloguePosition[base + 3] = 2.0; // selected\n            this.vertexCataloguePosition[base + 4] = this.sources[idx].shapeSize; // size\n        }\n\n        // external hovered\n        for (let e = 0; e < this.extHoveredIndexes.length; e++) {\n            const idx = this.extHoveredIndexes[e];\n            const base = idx * CatalogueGL.ELEM_SIZE;\n            this.vertexCataloguePosition[base + 3] = 1.0; // hovered\n            this.vertexCataloguePosition[base + 4] = this.sources[idx].shapeSize; // size\n        }\n\n        // upload buffer\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexCataloguePosition, this.gl.STATIC_DRAW);\n\n        // draw\n        const numItems = this.vertexCataloguePosition.length / CatalogueGL.ELEM_SIZE;\n        this.gl.drawArrays(this.gl.POINTS, 0, numItems);\n\n        this.oldMouseCoords = in_mouseHelper.xyz;\n    }\n\n}\n\nexport default CatalogueGL;","/**\n * @author Fabrizio Giordano (Fab77)\n */\nimport Point from \"../model/Point.js\";\nimport CoordsType from \"./CoordsType.js\";\nimport global from \"../Global.js\";\n\nexport interface STCSParseResult {\n  totpoints: number;\n  polygons: Point[][];\n}\n\nclass STCSParser {\n  static parseSTCS(stcs: string): STCSParseResult {\n    const stcsParsed = STCSParser.cleanStcs(stcs);\n    let totPoints = 0;\n    const polygons: Point[][] = [];\n\n    if (stcsParsed.includes(\"POLYGON\")) {\n      return STCSParser.parsePolygon(stcsParsed);\n    } else if (stcsParsed.includes(\"CIRCLE\")) {\n      return STCSParser.parseCircle(stcsParsed);\n    } else {\n      console.warn(\"STCS not recognised\");\n    }\n\n    return { totpoints: totPoints, polygons };\n  }\n\n  static cleanStcs(stcs: string): string {\n    // Uppercase once\n    let s = stcs.toUpperCase();\n\n    // Remove tokens\n    s = s\n      .replace(/'ICRS'/g, '')\n      .replace(/\\bICRS\\b/g, '')\n      .replace(/\\bJ2000\\b/g, '')\n      .replace(/\\bUNION\\b/g, '')\n      .replace(/\\bTOPOCENTER\\b/g, '');\n\n    // Remove parentheses\n    s = s.replace(/[()]/g, '');\n\n    // Collapse extra spaces and trim\n    s = s.replace(/ {2,}/g, ' ').trim();\n\n    return s;\n  }\n\n  static parsePolygon(stcs: string): STCSParseResult {\n    let totPoints = 0;\n    const polygons: Point[][] = [];\n\n    const MAX_DECIMALS: number = global.MAX_DECIMALS ?? 12;\n\n    const polys = stcs.split(\"POLYGON \");\n\n    for (let i = 1; i < polys.length; i++) {\n      const currPoly: Point[] = [];\n      const points = polys[i].trim().split(\" \");\n\n      // If first point is repeated as last, remove the duplicate\n      const p0 = Number(parseFloat(points[0]).toFixed(MAX_DECIMALS));\n      const p1 = Number(parseFloat(points[1]).toFixed(MAX_DECIMALS));\n      const plast0 = Number(parseFloat(points[points.length - 2]).toFixed(MAX_DECIMALS));\n      const plast1 = Number(parseFloat(points[points.length - 1]).toFixed(MAX_DECIMALS));\n\n      if (p0 === plast0 && p1 === plast1) {\n        points.splice(points.length - 2, 2);\n      }\n\n      if (points.length > 2) {\n        for (let p = 0; p < points.length - 1; p += 2) {\n          const raDeg = Number(parseFloat(points[p]).toFixed(MAX_DECIMALS));\n          const decDeg = Number(parseFloat(points[p + 1]).toFixed(MAX_DECIMALS));\n\n          const point = new Point({ raDeg, decDeg }, CoordsType.ASTRO);\n          currPoly.push(point);\n          totPoints += 1;\n        }\n        polygons.push(currPoly);\n      }\n    }\n\n    return { totpoints: totPoints, polygons };\n  }\n\n  // Example format: \"CIRCLE ICRS 8.739685 4.38147 0.027833\"\n  static parseCircle(stcs: string): STCSParseResult {\n    let totPoints = 0;\n    const polygons: Point[][] = [];\n\n    const polys = stcs.split(\"CIRCLE \");\n\n    for (let i = 1; i < polys.length; i++) {\n      const currPoly: Point[] = [];\n      const tokens = polys[i].trim().split(\" \");\n\n      const ra = Number(tokens[0]);\n      const dec = Number(tokens[1]);\n      const radius = Number(tokens[2]);\n\n      const POINTS_PER_QUADRANT = 6;\n      const npoints = POINTS_PER_QUADRANT * 4;\n\n      const alpha = (2 * Math.PI) / npoints;\n\n      // Generate points around the circle\n      for (let p = npoints; p > 0; p--) {\n        const curra = radius * Math.cos(p * alpha) + ra;\n        const curdec = radius * Math.sin(p * alpha) + dec;\n\n        const point = new Point({ raDeg: curra, decDeg: curdec }, CoordsType.ASTRO);\n        currPoly.push(point);\n        totPoints += 1;\n      }\n\n      polygons.push(currPoly);\n    }\n\n    return { totpoints: totPoints, polygons };\n  }\n}\n\nexport default STCSParser;","'use strict';\n/**\n * @author Fabrizio Giordano (Fab)\n */\n\n// import { Pointing, Healpix } from 'healpixjs';\n// import { degToRad } from '../../utils/Utils.js';\nimport GeomUtils, { SelectionObj } from '../../utils/GeomUtils.js';\n// import global from '../../Global.js';\nimport STCSParser, { STCSParseResult } from '../../utils/STCSParser.js';\nimport Point from '../Point.js';\n\nexport interface FootprintDetail {\n  key: string;\n  value: string | number;\n  valueType?: string;\n  unit?: string;\n}\n\n// export interface ParsedSTCS {\n//   polygons: Point[][]; // array of polygons (each polygon is array of Point objects)\n//   totpoints: number;\n// }\n\nclass Footprint {\n  private _polygons: Point[][] = []; // array of polygons (-> array of points)\n  private _convexPolygons: any[][] = []; // convex polygons\n  private _stcs?: string; // STC-S string\n  private _valid = false;\n  private _details: FootprintDetail[];\n  private _totPoints = 0;\n  private _totConvexPoints = 0;\n  private _npix256?: number[];\n  private _footprintsPointsOrder?: 1 | -1;\n  private _selectionObj: SelectionObj | undefined;\n\n  private _identifier?: string;\n  private _center?: unknown; // could be typed if you have a Point type\n\n  /**\n   * @param in_stcs STC-S representation of the footprint\n   * @param in_details optional metadata\n   * @param footprintsPointsOrder 1-> clockwise, -1 counter clockwise\n   */\n  constructor(\n    in_stcs?: string,\n    in_details: FootprintDetail[] = [],\n    footprintsPointsOrder?: 1 | -1\n  ) {\n    if (in_stcs) {\n      this._stcs = in_stcs.toUpperCase();\n      this._details = in_details;\n      this._totPoints = 0;\n      this._totConvexPoints = 0;\n      this._footprintsPointsOrder = footprintsPointsOrder;\n\n      this.computePoints();\n      this._selectionObj = this.computeSelectionObject();\n\n      this._valid = true;\n    } else {\n      this._details = [];\n    }\n  }\n\n  private computeSelectionObject(): SelectionObj {\n    return GeomUtils.computeSelectionObject(this._polygons);\n  }\n\n  \n  // /**\n  //  * Return array of HEALPix pixels covering the footprint\n  //  * NOTE: despite the name, nside is not fixed at 256. It comes from Global.js\n  //  */\n  // private computeNpix256(): number[] {\n  //   const healpix256 = new Healpix(global.nsideForSelection);\n\n  //   const points: Pointing[] = [];\n  //   for (const poly of this._convexPolygons) {\n  //     for (const currPoint of poly) {\n  //       const phiTheta = currPoint.computeHealpixPhiTheta();\n  //       const phiRad = degToRad(phiTheta.phi);\n  //       const thetaRad = degToRad(phiTheta.theta);\n  //       points.push(new Pointing(null, false, thetaRad, phiRad));\n  //     }\n  //   }\n\n  //   const rangeSet = healpix256.queryPolygonInclusive(points, 32);\n  //   return Array.from(rangeSet.r);\n  // }\n\n  private computePoints(): void {\n    const res: STCSParseResult = STCSParser.parseSTCS(this._stcs!);\n    this._polygons = res.polygons;\n    this._totPoints = res.totpoints;\n  }\n\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  get totPoints(): number {\n    return this._totPoints;\n  }\n\n  get totConvexPoints(): number {\n    return this._totConvexPoints;\n  }\n\n  get polygons(): Point[][] {\n    return this._polygons;\n  }\n\n  get convexPolygons(): Point[][] {\n    return this._convexPolygons;\n  }\n\n  get identifier(): string | undefined {\n    return this._identifier;\n  }\n\n  get center(): unknown {\n    return this._center;\n  }\n\n  get pixels(): number[] | undefined {\n    return this._npix256;\n  }\n\n  get details(): FootprintDetail[] {\n    return this._details;\n  }\n\n  get selectionObj(): SelectionObj | undefined{\n    return this._selectionObj\n  }\n}\n\nexport default Footprint;","\nimport TapMetadata from '../tap/TapMetadata.js';\nimport TapMetadataList from '../tap/TapMetadataList.js';\n\nexport default class FootprintProps {\n  // resolved columns\n  pgSphereColumn?: TapMetadata;\n  geomColumn?: TapMetadata;\n  raColumn?: TapMetadata;\n  decColumn?: TapMetadata;\n  nameColumn?: TapMetadata;\n\n  shapeColor: string;\n  tapMetadataList: TapMetadataList;\n\n  constructor(tapMetadataList: TapMetadataList, color: string) {\n    this.tapMetadataList = tapMetadataList;\n    this.shapeColor = color;\n\n    this.setPositionColumns(tapMetadataList);\n    this.nameColumn = this.setNameColumn(tapMetadataList);\n  }\n\n  private setPositionColumns(tapMetadataList: TapMetadataList): void {\n    // pgSphere\n    for (const meta of tapMetadataList.pgSphereMetaColumns) {\n      this.pgSphereColumn = meta;\n    }\n\n    // s_region (choose the 'pos.outline;obs.field' if available; otherwise first)\n    for (const meta of tapMetadataList.sRegionMetaColumns) {\n      if (meta.ucd && meta.ucd.includes('pos.outline;obs.field')) {\n        this.geomColumn = meta;\n        break;\n      }\n      if (!this.geomColumn) {\n        this.geomColumn = meta;\n      }\n    }\n\n    // RA (prefer meta.main)\n    for (const meta of tapMetadataList.posEqRAMetaColumns) {\n      if (meta.ucd && meta.ucd.includes('meta.main')) {\n        this.raColumn = meta;\n        break;\n      }\n      if (!this.raColumn) {\n        this.raColumn = meta;\n      }\n    }\n\n    // DEC (prefer meta.main) – supports both posEqDecMetaColumns and _posEqDecMetaColumns\n    const decList =\n      tapMetadataList.posEqDecMetaColumns?.length\n        ? tapMetadataList.posEqDecMetaColumns\n        : tapMetadataList.posEqDecMetaColumns ?? [];\n\n    for (const meta of decList) {\n      if (meta.ucd && meta.ucd.includes('meta.main')) {\n        this.decColumn = meta;\n        break;\n      }\n      if (!this.decColumn) {\n        this.decColumn = meta;\n      }\n    }\n  }\n\n  private setNameColumn(tapMetadataList: TapMetadataList): TapMetadata | undefined {\n    let nameColumn: TapMetadata | undefined;\n    for (const meta of tapMetadataList.metadataList) {\n      if (meta.ucd?.includes('meta.id') && meta.ucd?.includes('meta.main')) {\n        nameColumn = meta;\n      }\n    }\n    return nameColumn;\n  }\n\n  changeColor(color: string): void {\n    this.shapeColor = color;\n  }\n\n  changeMetaName(metacolumnName: string): void {\n    const currentName = this.getMetaName(this.nameColumn);\n    if (currentName !== metacolumnName) {\n      for (const column of this.tapMetadataList.metadataList) {\n        if (this.getMetaName(column) === metacolumnName) {\n          this.nameColumn = column;\n          break;\n        }\n      }\n    }\n  }\n\n  // helper to normalize `name` / `_name`\n  private getMetaName(meta?: TapMetadata): string | undefined {\n    return meta?.name ?? meta?.name;\n  }\n}","// HiPSShaderProgram.ts\nimport { mat4 } from 'gl-matrix';\nimport global from '../Global.js'\nimport ShaderManager from './ShaderManager.js'\n\ntype GL = WebGL2RenderingContext;\n\ntype UniformNames = {\n  vertex_color: string,\n  m_perspective: string,\n  m_model_view: string,\n  point_size: string\n}\n\ntype AttributeNames = {\n  vertex_pos: string\n  \n}\n\ntype Locations = {\n  pMatrix: WebGLUniformLocation | null\n  mvMatrix: WebGLUniformLocation | null\n  color: WebGLUniformLocation | null\n  position: number\n  pointSize: WebGLUniformLocation | null\n}\n\nexport default class FootprintShaderProgram {\n  private _shaderProgram: WebGLProgram | undefined\n  private _vertexShader!: WebGLShader\n  private _fragmentShader!: WebGLShader\n\n  readonly gl_uniforms: UniformNames\n  readonly gl_attributes: AttributeNames\n  readonly locations: Locations\n\n  \n  constructor() {\n    this.gl_uniforms = {\n      vertex_color: 'u_fragcolor',\n      m_perspective: 'uPMatrix',\n      m_model_view: 'uMVMatrix',\n      point_size: 'u_pointsize'\n    }\n\n    this.gl_attributes = {\n      vertex_pos: 'aCatPosition'      \n    }\n\n    this.locations = {\n      pMatrix: null,\n      mvMatrix: null,\n      color: null,\n      position: -1,\n      pointSize: -1\n    }\n  }\n\n  get shaderProgram(): WebGLProgram {\n    if (!this._shaderProgram) {\n      const gl = global.gl as GL\n      this._shaderProgram = gl.createProgram() as WebGLProgram\n      this.initShaders()\n    }\n    return this._shaderProgram\n  }\n\n  private initShaders(): void {\n    const gl = global.gl as GL\n\n    const fragmentShaderStr = ShaderManager.footprintFS()\n    this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader\n    gl.shaderSource(this._fragmentShader, fragmentShaderStr)\n    gl.compileShader(this._fragmentShader)\n    console.log('FS log:', gl.getShaderInfoLog(this._fragmentShader) || 'ok');\n    if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._fragmentShader) || 'Fragment shader compile error')\n      return\n    }\n\n    const vertexShaderStr = ShaderManager.footprintVS()\n    this._vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader\n    gl.shaderSource(this._vertexShader, vertexShaderStr)\n    gl.compileShader(this._vertexShader)\n    console.log('VS log:', gl.getShaderInfoLog(this._vertexShader) || 'ok');\n    if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(this._vertexShader) || 'Vertex shader compile error')\n      return\n    }\n\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._vertexShader)\n    gl.attachShader(this.shaderProgram as WebGLProgram, this._fragmentShader)\n    gl.linkProgram(this.shaderProgram as WebGLProgram)\n\n    if (!gl.getProgramParameter(this.shaderProgram as WebGLProgram, gl.LINK_STATUS)) {\n      alert('Could not initialise shaders')\n    }\n\n    gl.useProgram(this.shaderProgram);\n\n    this.locations.position = gl.getAttribLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_attributes.vertex_pos\n    )\n    \n    this.locations.pointSize = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.point_size\n    )\n    \n    this.locations.color = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.vertex_color\n    )\n  }\n\n  enableShaders(\n    pMatrix: Float32Array,\n    modelMatrix: Float32Array,\n    viewMatrix: Float32Array\n  ): void {\n    const gl = global.gl as GL\n    \n    gl.useProgram(this.shaderProgram);\n\n    this.locations.pMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_perspective\n    )\n\n    this.locations.mvMatrix = gl.getUniformLocation(\n      this.shaderProgram as WebGLProgram,\n      this.gl_uniforms.m_model_view\n    )\n\n    let mvMatrix = mat4.create()\n    mvMatrix = mat4.multiply(mvMatrix, viewMatrix, modelMatrix)\n    gl.uniformMatrix4fv(this.locations.pMatrix, false, pMatrix)\n    gl.uniformMatrix4fv(this.locations.mvMatrix, false, mvMatrix as Float32Array)\n  }\n}\n\nexport const footprintShaderProgram = new FootprintShaderProgram()","import { shaderUtility } from '../../utils/ShaderUtility.js'\nimport Footprint from './Footprint.js'\nimport FootprintProps from './FootprintProps.js'\nimport { mat4 } from 'gl-matrix'\nimport global from '../../Global.js'\nimport { colorHex2RGB } from '../../utils/Utils.js'\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js'\nimport { TapRepo } from '../tap/TapRepo.js'\nimport TapMetadataList from '../tap/TapMetadataList.js'\nimport { footprintShaderProgram } from '../../shader/FootprintShaderProgram.js'\nimport TapMetadata from '../tap/TapMetadata.js'\nimport MouseHelper from '../../utils/MouseHelper.js'\nimport Point from '../Point.js'\nimport GeomUtils from '../../utils/GeomUtils.js'\nimport CoordsType from '../../utils/CoordsType.js'\n\ntype GL = WebGL2RenderingContext;\n\nexport interface HoveredFootprintDetail {\n  metadata: TapMetadataList\n  footprints: Footprint[]\n  tableName: string\n  description: string\n  provider: string\n}\n\n\n\nclass FootprintSetGL {\n  static ELEM_SIZE = 3\n  static BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT\n  static CONVEXPOLY_ELEM_SIZE = 3\n\n  ready: boolean\n  footprintsetProps: FootprintProps\n  name: string\n  description: string\n  tapRepo: TapRepo\n\n  extHoveredIndexes!: Uint32Array\n\n  oldMouseCoords: any\n  healpixDensityMap: any\n\n\n\n  totConvexPoints!: number\n\n  // footprintsInPix256: Map<number, Footprint[]>\n\n  gl: GL;\n\n  // shaderProgram: WebGLProgram\n  vertexCataloguePositionBuffer!: WebGLBuffer\n  indexBuffer!: WebGLBuffer\n\n  hoveredVertexPositionBuffer!: WebGLBuffer\n  hoveredIndexBuffer!: WebGLBuffer\n\n  selectedVertexPositionBuffer!: WebGLBuffer\n  selectedIndexBuffer!: WebGLBuffer\n\n\n  indexes!: Uint32Array\n  footprintPolygons: Footprint[] = []\n  vertexCataloguePosition!: Float32Array\n  totPoints!: number\n  nPrimitiveFlags: number = 0\n\n\n  hoveredIndexes!: Uint32Array\n  private _hoveredFootprints: Footprint[] = []\n  hoveredVertexPosition!: Float32Array\n  totHoveredPoints!: number\n  nHoveredPrimitiveFlags: number = 0\n\n  selectedIndexes!: Uint32Array\n  private _selectedFootprints: Footprint[] = []\n  selectedVertexPosition!: Float32Array\n  totSelectedPoints!: number\n  nSlectedPrimitiveFlags: number = 0\n\n\n  _isVisible: boolean = true\n\n  constructor(\n    tablename: string,\n    tabledesc: string,\n    tapRepo: TapRepo,\n    tapMetadataList: TapMetadataList) {\n\n    this.ready = false;\n    (this as any).TYPE = 'FOOTPRINT_SET';\n\n    this.name = tablename\n    this.description = tabledesc\n    this.tapRepo = tapRepo\n\n    // this.footprintsInPix256 = new Map()\n\n    this.initFootprintArrays()\n    if (!global.gl) {\n      throw new Error('WebGL2RenderingContext is not initialized (global.gl is null)')\n    }\n\n    this.gl = global.gl as GL\n    this.initGLBuffers()\n\n    this.oldMouseCoords = null\n\n    const defaultColor = '#00fff2ff'\n    this.footprintsetProps = new FootprintProps(tapMetadataList, defaultColor)\n\n    footprintShaderProgram.shaderProgram\n\n  }\n\n  private initFootprintArrays(): void {\n    this.footprintPolygons = []\n    this.indexes = new Uint32Array()\n    this.vertexCataloguePosition = new Float32Array()\n    this.totPoints = 0\n    this.totConvexPoints = 0\n    this.extHoveredIndexes = new Uint32Array\n\n    this._hoveredFootprints = []\n    this.hoveredVertexPosition = new Float32Array()\n    this.totHoveredPoints = 0\n    this.hoveredIndexes = new Uint32Array\n\n    this._selectedFootprints = []\n    this.selectedVertexPosition = new Float32Array()\n    this.totSelectedPoints = 0\n    this.selectedIndexes = new Uint32Array\n  }\n\n  private initGLBuffers(): void {\n\n    this.vertexCataloguePositionBuffer = this.gl.createBuffer()\n    this.indexBuffer = this.gl.createBuffer()\n\n    this.hoveredVertexPositionBuffer = this.gl.createBuffer()\n    this.hoveredIndexBuffer = this.gl.createBuffer()\n\n    this.selectedVertexPositionBuffer = this.gl.createBuffer()\n    this.selectedIndexBuffer = this.gl.createBuffer()\n\n  }\n\n  public setIsVisible(visibility: boolean) {\n    this._isVisible = visibility\n  }\n\n  get isVisible() {\n    return this._isVisible\n  }\n\n  addFootprint(in_footprint: Footprint): void {\n    this.footprintPolygons.push(in_footprint)\n  }\n\n  addFootprints(in_data: any[], columnsmeta: TapMetadata[]): void {\n    this.ready = false\n    const geomDataIndex = this.footprintsetProps.geomColumn?.index\n    if (geomDataIndex === undefined) {\n      throw new Error('geomColumn or its index is undefined in footprintsetProps')\n    }\n\n    for (let j = 0; j < in_data.length; j++) {\n      if (in_data[j][0] !== null) {\n        const footprint = new Footprint(in_data[j][geomDataIndex], in_data[j])\n        if ((footprint as any)._valid) {\n          this.addFootprint(footprint)\n          this.totPoints += footprint.totPoints\n          this.totConvexPoints += footprint.totConvexPoints\n        }\n      }\n    }\n\n    this.initBuffer()\n    this.ready = true\n  }\n\n  clearFootprints(): void {\n    this.initFootprintArrays()\n  }\n\n\n  private initBuffer(): void {\n    const nFootprints = this.footprintPolygons.length\n    let npolygons = nFootprints - 1\n\n    for (let j = 0; j < nFootprints; j++) {\n      npolygons += this.footprintPolygons[j].polygons.length - 1\n    }\n\n    this.indexes = new Uint32Array(this.totPoints + npolygons + 1)\n    const MAX_UNSIGNED_INT = 0xffffffff\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer)\n    this.vertexCataloguePosition = new Float32Array(3 * this.totPoints)\n\n    let positionIndex = 0\n    let vIdx = 0\n    const R = 1.0\n    this.nPrimitiveFlags = 0\n\n    for (let j = 0; j < nFootprints; j++) {\n      const footprint = this.footprintPolygons[j]\n      const footprintPoly = footprint.polygons\n\n      if (j > 0) {\n        this.indexes[vIdx++] = MAX_UNSIGNED_INT\n        this.nPrimitiveFlags++\n      }\n\n      for (const poly of footprintPoly) {\n        if (poly !== footprintPoly[0]) {\n          this.indexes[vIdx++] = MAX_UNSIGNED_INT\n          this.nPrimitiveFlags++\n        }\n\n        for (const point of poly) {\n          this.vertexCataloguePosition[positionIndex++] = R * point.x\n          this.vertexCataloguePosition[positionIndex++] = R * point.y\n          this.vertexCataloguePosition[positionIndex++] = R * point.z\n          this.indexes[vIdx++] = Math.floor((positionIndex - 1) / 3)\n        }\n      }\n    }\n\n    this.indexes[this.indexes.length - 1] = MAX_UNSIGNED_INT\n    console.log('Buffer initialized')\n  }\n\n  checkSelection(mouseHelper: MouseHelper) {\n\n    if (!mouseHelper.x || !mouseHelper.y || !mouseHelper.z) return\n\n    let mousePix = mouseHelper.computeNpix()\n    if (!mousePix) return\n\n    this._hoveredFootprints = []\n    this.totHoveredPoints = 0\n\n    const mousePoint = new Point(\n      { x: mouseHelper.x, y: mouseHelper.y, z: mouseHelper.z },\n      CoordsType.CARTESIAN\n    )\n\n    for (let i = 0; i < this.footprintPolygons.length; i++) {\n      const footprint: Footprint = this.footprintPolygons[i]\n      if (!footprint.selectionObj) continue\n\n      if (GeomUtils.checkPointInsidePolygon5(footprint.selectionObj, mousePoint)) {\n        const details = [...footprint.details]\n        const geomDataIndex = this.footprintsetProps.geomColumn?.index\n\n        if (geomDataIndex === undefined) continue;\n\n        details.splice(geomDataIndex, 1)\n        this._hoveredFootprints.push(footprint)\n        this.totHoveredPoints += footprint.totPoints\n      }\n    }\n    this.initHoveringBuffer()\n  }\n\n  get hoveredFootprints(): HoveredFootprintDetail {\n    return {\n      metadata: this.footprintsetProps.tapMetadataList,\n      footprints: this._hoveredFootprints,\n      tableName: this.name,\n      description: this.description,\n      provider: this.tapRepo.tapBaseUrl\n    }\n  }\n\n  get selectedFootprints(): Footprint[] {\n    return this._selectedFootprints\n  }\n\n  highlightFootprint(footprint: Footprint, highlighted: boolean) {\n    if (highlighted) {\n      this._hoveredFootprints.push(footprint)\n      this.totHoveredPoints += footprint.totPoints\n    } else {\n      const indexOfFootprint = this._hoveredFootprints.indexOf(footprint)\n      this._hoveredFootprints.splice(indexOfFootprint, 1)\n      this.totHoveredPoints -= footprint.totPoints\n    }\n    this.initHoveringBuffer()\n  }\n\n  /**\n   *\n   * @param {Footprint[]} footprints\n   */\n\n  addFootprint2Selected(footprints: Footprint[]) {\n    let refreshBuffer = false\n    for (let f of footprints) {\n      if (!this._selectedFootprints.includes(f)) {\n        this._selectedFootprints.push(f)\n        this.totSelectedPoints += f.totPoints\n        refreshBuffer = true\n      }\n    }\n    if (refreshBuffer) {\n      this.initSelectionBuffer()\n    }\n  }\n\n  /**\n   *\n   * @param {Footprint} footprint\n   */\n  removeFootprintFromSelection(footprint: Footprint) {\n    const indexOfObject = this._selectedFootprints.indexOf(footprint)\n    if (indexOfObject >= 0) {\n      this._selectedFootprints.splice(indexOfObject, 1)\n      this.totSelectedPoints -= footprint.totPoints\n      if (this._selectedFootprints.length > 0) {\n        this.initSelectionBuffer()\n      }\n    }\n\n  }\n\n  initHoveringBuffer() {\n    /*\n            TODO better approach. when creating the indexbuffer of footprints, \n            add 1 extra position for the selection (set to 0 == not selected), \n            and save the position \"positionIndex\" in an array (selectionIndexes).\n            When checking the selection, I get the index of the footprint, which\n            matches with the index in the selectionIndexes to retrieve the position \n            of the flag to be set to 1 in the vertexposition\n            This will ease checking the selection in the vertex/fragment shader and\n            set the pointsize and shape color.\n            */\n\n    if (this._hoveredFootprints.length == 0) {\n      return\n    }\n    let nFootprints = this._hoveredFootprints.length\n\n    let npolygons = nFootprints - 1\n    for (let j = 0; j < nFootprints; j++) {\n      npolygons += this._hoveredFootprints[j].polygons.length - 1\n    }\n    // this._selectedIndex = new Uint16Array(this._totSelectedPoints + npolygons);\n    // let MAX_UNSIGNED_SHORT = 65535; // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n\n    this.hoveredIndexes = new Uint32Array(this.totHoveredPoints + npolygons)\n    const MAX_UNSIGNED_INT = 0xffffffff // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n    // let MAX_UNSIGNED_SHORT = Number.MAX_SAFE_INTEGER;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.hoveredVertexPositionBuffer)\n\n    this.hoveredVertexPosition = new Float32Array(3 * this.totHoveredPoints)\n    let positionIndex = 0\n    let vIdx = 0\n\n    let R = 1.0\n    this.nHoveredPrimitiveFlags = 0\n\n    for (let j = 0; j < nFootprints; j++) {\n      let hoveredFootprintPoly = this._hoveredFootprints[j].polygons\n\n      if (j > 0) {\n        this.hoveredIndexes[vIdx] = MAX_UNSIGNED_INT\n        this.nHoveredPrimitiveFlags += 1\n        vIdx += 1\n      }\n\n      for (let polyIdx = 0; polyIdx < hoveredFootprintPoly.length; polyIdx++) {\n        if (polyIdx > 0) {\n          this.hoveredIndexes[vIdx] = MAX_UNSIGNED_INT;\n          this.nHoveredPrimitiveFlags += 1;\n          vIdx += 1;\n        }\n        const poly = hoveredFootprintPoly[polyIdx];\n        for (let pointIdx = 0; pointIdx < poly.length; pointIdx++) {\n          const p = poly[pointIdx];\n          this.hoveredVertexPosition[positionIndex] = R * p.x;\n          this.hoveredVertexPosition[positionIndex + 1] = R * p.y;\n          this.hoveredVertexPosition[positionIndex + 2] = R * p.z;\n\n          this.hoveredIndexes[vIdx] = Math.floor(positionIndex / 3);\n\n          vIdx += 1;\n          positionIndex += 3;\n        }\n      }\n    }\n  }\n\n  initSelectionBuffer() {\n    /*\n            TODO better approach. when creating the indexbuffer of footprints, \n            add 1 extra position for the selection (set to 0 == not selected), \n            and save the position \"positionIndex\" in an array (selectionIndexes).\n            When checking the selection, I get the index of the footprint, which\n            matches with the index in the selectionIndexes to retrieve the position \n            of the flag to be set to 1 in the vertexposition\n            This will ease checking the selection in the vertex/fragment shader and\n            set the pointsize and shape color.\n            */\n\n    let nFootprints = this._selectedFootprints.length\n\n    let npolygons = nFootprints - 1\n    for (let j = 0; j < nFootprints; j++) {\n      npolygons += this._selectedFootprints[j].polygons.length - 1\n    }\n    // this._selectedIndex = new Uint16Array(this._totSelectedPoints + npolygons);\n    // let MAX_UNSIGNED_SHORT = 65535; // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n\n    this.selectedIndexes = new Uint32Array(this.totSelectedPoints + npolygons)\n    const MAX_UNSIGNED_INT = 0xffffffff // this is used to enable and disable GL_PRIMITIVE_RESTART_FIXED_INDEX\n    // let MAX_UNSIGNED_SHORT = Number.MAX_SAFE_INTEGER;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.selectedVertexPositionBuffer)\n\n    this.selectedVertexPosition = new Float32Array(3 * this.totSelectedPoints)\n    let positionIndex = 0\n    let vIdx = 0\n\n    let R = 1.0\n    this.nSlectedPrimitiveFlags = 0\n\n    for (let j = 0; j < nFootprints; j++) {\n      let footprintPoly = this._selectedFootprints[j].polygons\n\n      if (j > 0) {\n        this.selectedIndexes[vIdx] = MAX_UNSIGNED_INT\n        this.nSlectedPrimitiveFlags += 1\n        vIdx += 1\n      }\n\n      for (let polyIdx = 0; polyIdx < footprintPoly.length; polyIdx++) {\n        if (polyIdx > 0) {\n          this.selectedIndexes[vIdx] = MAX_UNSIGNED_INT;\n          this.nSlectedPrimitiveFlags += 1;\n          vIdx += 1;\n        }\n        const poly = footprintPoly[polyIdx];\n        for (let pointIdx = 0; pointIdx < poly.length; pointIdx++) {\n          const p = poly[pointIdx];\n          this.selectedVertexPosition[positionIndex] = R * p.x;\n          this.selectedVertexPosition[positionIndex + 1] = R * p.y;\n          this.selectedVertexPosition[positionIndex + 2] = R * p.z;\n\n          this.selectedIndexes[vIdx] = Math.floor(positionIndex / 3);\n\n          vIdx += 1;\n          positionIndex += 3;\n        }\n      }\n    }\n  }\n\n\n  draw(in_mMatrix: mat4, in_mouseHelper: MouseHelper): void {\n    if (!this.isVisible) return\n    if (!this.ready) return\n    if (!global.camera) return\n\n\n    footprintShaderProgram.enableShaders(\n      computePerspectiveMatrixSingleton.pMatrix as Float32Array,\n      in_mMatrix as Float32Array,\n      global.camera.getCameraMatrix() as Float32Array\n    )\n\n    if (in_mouseHelper != null && in_mouseHelper.xyz != this.oldMouseCoords) {\n      this.checkSelection(in_mouseHelper);\n    }\n\n\n    if (this._hoveredFootprints.length > 0) {\n      // TODO POINT_SIZE doesn't have any effect on line thickness!! it only applies to points\n      const rgb = colorHex2RGB('#00FF00')\n      const alpha = 1.0\n      this.gl.uniform4f(footprintShaderProgram.locations.color, rgb[0], rgb[1], rgb[2], alpha)\n      this.gl.uniform1f(footprintShaderProgram.locations.pointSize, 14.0) // <--- POINT_SIZE in LINE_LOOP is not applicable\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.hoveredVertexPositionBuffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, this.hoveredVertexPosition, this.gl.STATIC_DRAW)\n\n      // setting footprint position\n      this.gl.vertexAttribPointer(\n        footprintShaderProgram.locations.position,\n        FootprintSetGL.ELEM_SIZE,\n        this.gl.FLOAT,\n        false,\n        FootprintSetGL.BYTES_X_ELEM * FootprintSetGL.ELEM_SIZE,\n        0\n      )\n      this.gl.enableVertexAttribArray(footprintShaderProgram.locations.position)\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.hoveredIndexBuffer)\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.hoveredIndexes, this.gl.STATIC_DRAW)\n\n      // this._gl.drawElements (this._gl.LINE_LOOP, this._selectedVertexPosition.length / 3 + this._nSlectedPrimitiveFlags,this._gl.UNSIGNED_SHORT, 0);\n      this.gl.drawElements(\n        this.gl.LINE_LOOP,\n        this.hoveredVertexPosition.length / 3 + this.nHoveredPrimitiveFlags,\n        this.gl.UNSIGNED_INT,\n        0\n      )\n    }\n\n    if (this._selectedFootprints.length > 0) {\n      const rgb = colorHex2RGB('#ECB462')\n      const alpha = 1.0\n      this.gl.uniform4f(footprintShaderProgram.locations.color, rgb[0], rgb[1], rgb[2], alpha)\n      this.gl.uniform1f(footprintShaderProgram.locations.pointSize, 14.0) // <--- POINT_SIZE in LINE_LOOP is not applicable\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.selectedVertexPositionBuffer)\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, this.selectedVertexPosition, this.gl.STATIC_DRAW)\n\n      // setting footprint position\n      this.gl.vertexAttribPointer(\n        footprintShaderProgram.locations.position,\n        FootprintSetGL.ELEM_SIZE,\n        this.gl.FLOAT,\n        false,\n        FootprintSetGL.BYTES_X_ELEM * FootprintSetGL.ELEM_SIZE,\n        0\n      )\n      this.gl.enableVertexAttribArray(footprintShaderProgram.locations.position)\n\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.selectedIndexBuffer)\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.selectedIndexes, this.gl.STATIC_DRAW)\n\n      // this._gl.drawElements (this._gl.LINE_LOOP, this._selectedVertexPosition.length / 3 + this._nSlectedPrimitiveFlags,this._gl.UNSIGNED_SHORT, 0);\n      this.gl.drawElements(\n        this.gl.LINE_LOOP,\n        this.selectedVertexPosition.length / 3 + this.nSlectedPrimitiveFlags,\n        this.gl.UNSIGNED_INT,\n        0\n      )\n    }\n\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexCataloguePositionBuffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexCataloguePosition, this.gl.STATIC_DRAW)\n\n    this.gl.vertexAttribPointer(\n      footprintShaderProgram.locations.position as number,\n      FootprintSetGL.ELEM_SIZE,\n      this.gl.FLOAT,\n      false,\n      FootprintSetGL.BYTES_X_ELEM * FootprintSetGL.ELEM_SIZE,\n      0\n    )\n    this.gl.enableVertexAttribArray(footprintShaderProgram.locations.position as number)\n\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.indexes, this.gl.STATIC_DRAW)\n\n    const shapeColor = [...colorHex2RGB(this.footprintsetProps.shapeColor), 1.0] as [number, number, number, number]\n    this.gl.uniform4f(footprintShaderProgram.locations.color as WebGLUniformLocation, ...shapeColor)\n\n    this.gl.drawElements(this.gl.LINE_LOOP, this.indexes.length, this.gl.UNSIGNED_INT, 0)\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null)\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null)\n    this.oldMouseCoords = in_mouseHelper.xyz\n  }\n}\n\nexport default FootprintSetGL","// addTAPRepo.ts\nimport { TapRepo } from '../model/tap/TapRepo.js'\nimport TapMetadata from '../model/tap/TapMetadata.js'\nimport TapMetadataList from '../model/tap/TapMetadataList.js'\nimport global from '../Global.js'\n\nimport CatalogueGL from '../model/catalogues/CatalogueGL.js'\nimport FootprintSetGL from '../model/footprints/FootprintSetGL.js'\n\nlet catId = 1\nlet obsId = 1\n\nexport interface TapDatasets {\n  obsList: FootprintSetGL[]\n  catalogueList: CatalogueGL[]\n  notClassifiedList: string[]\n}\n\n/**\n * Initialize a TapRepo and populate capabilities + datasets.\n */\nexport async function addTAPRepo(repoUrl: string): Promise<TapRepo> {\n  const tapRepo = new TapRepo(repoUrl)\n  tapRepo.adqlFunctionList = await loadCapabilities(repoUrl)\n\n  const datasets = await loadTables(repoUrl, tapRepo)\n  tapRepo.setCataloguesList(datasets.catalogueList)\n  tapRepo.setObservationsList(datasets.obsList)\n  tapRepo.setNotClassifiedList(datasets.notClassifiedList)\n\n  return tapRepo\n}\n\nexport async function queryAsync(\n  tapRepo: TapRepo,\n  adql: string,\n  TAP_QUERY_TIMEOUT_MS: number\n): Promise<any | null> {\n  const base = global.corsProxyUrl.replace(/\\/?$/, '/'); // ensure trailing /\n  const url = new URL('adql', base);\n  url.searchParams.set('tapurl', tapRepo.tapBaseUrl);\n  url.searchParams.set('query', adql);\n\n  const ac = new AbortController();\n  const t = setTimeout(() => ac.abort(), TAP_QUERY_TIMEOUT_MS || 30000);\n\n  try {\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      mode: 'cors',\n      signal: ac.signal,\n      headers: { Accept: 'application/json' }\n    });\n    if (!response.ok) {\n      const text = await response.text().catch(() => '');\n      throw new Error(`HTTP ${response.status} ${response.statusText} – ${text}`);\n    }\n    return await response.json(); // return type is 'any'\n  } catch (err: any) {\n    console.error('queryAsync error:', err?.message || err);\n    return null;\n  } finally {\n    clearTimeout(t);\n  }\n}\n\n\n/**\n * Fetch and parse tables from a TAP service.\n */\nconst loadTables = async (tapUrl: string, tapRepo: TapRepo): Promise<TapDatasets> => {\n  const tablesUrl = `${tapUrl}/tables`\n  const requestUrl = `${global.corsProxyUrl}exturl?url=${encodeURIComponent(tablesUrl)}`\n  const result: TapDatasets = { obsList: [], catalogueList: [], notClassifiedList: [] }\n\n  try {\n    const response = await fetch(requestUrl, { method: 'GET', mode: 'cors' })\n    const raw = await response.text()\n    const data = raw.replace(/\\n\\t|\\t|\\n/g, '')\n\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(data, 'application/xml')\n    const root = doc.firstElementChild\n\n    if (!root) throw new Error('Error parsing TAP XML. Missing root element.')\n    if (!/tableset$/i.test(root.nodeName)) {\n      throw new Error(`Error parsing TAP XML. ${root.nodeName} not recognised`)\n    }\n\n    const catalogueList: CatalogueGL[] = []\n    const obsList: FootprintSetGL[] = []\n    const notClassifiedList: string[] = []\n\n    // schemas\n    for (const schema of Array.from(root.children)) {\n      if (schema.nodeName !== 'schema') continue\n\n      for (const table of Array.from(schema.children)) {\n        if (table.nodeName !== 'table') continue\n\n        const dataset = parseTable(table as Element, tablesUrl, tapRepo)\n        if (!dataset) continue\n\n        if (dataset.catalogue) {\n          ; (dataset.catalogue as any).id = catId++ // keep parity with existing code\n          catalogueList.push(dataset.catalogue)\n        }\n        if (dataset.footprint) {\n          ; (dataset.footprint as any).id = obsId++\n          obsList.push(dataset.footprint)\n        }\n        if (dataset.notClassified) {\n          notClassifiedList.push(dataset.notClassified)\n        }\n      }\n    }\n\n    return { catalogueList, obsList, notClassifiedList }\n  } catch (err: any) {\n    console.error(err?.message ?? err)\n    return result\n  }\n}\n\n/**\n * Fetch and parse TAP capabilities to extract ADQL functions.\n */\nconst loadCapabilities = async (repoUrl: string): Promise<string[]> => {\n  const capabilitiesUrl = `${repoUrl}/capabilities`\n  const requestUrl = `${global.corsProxyUrl}exturl?url=${encodeURIComponent(capabilitiesUrl)}`\n  let capabilities: string[] = []\n\n  try {\n    const response = await fetch(requestUrl, { method: 'GET', mode: 'cors' })\n    const raw = await response.text()\n    const data = raw.replace(/\\n\\t|\\t|\\n/g, '')\n\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(data, 'application/xml')\n    const root = doc.firstElementChild\n\n    if (!root) throw new Error('Error parsing TAP XML. Missing root element.')\n    if (!/capabilities$/i.test(root.nodeName)) {\n      throw new Error(`Error parsing TAP XML. ${root.nodeName} not recognised`)\n    }\n\n    for (const capability of Array.from(root.children)) {\n      if (capability.nodeName !== 'capability') continue\n\n      for (const child of Array.from(capability.children)) {\n        if (child.nodeName === 'language') {\n          capabilities = parseCapabilities(child as Element)\n        }\n      }\n    }\n\n    return capabilities\n  } catch (err: any) {\n    console.error(err?.message ?? err)\n    return capabilities\n  }\n}\n\n/**\n * Parse the <language> node to extract ADQL functions.\n */\nconst parseCapabilities = (languageNode: Element): string[] => {\n  const out: string[] = []\n  const featuresContainers = languageNode.getElementsByTagName('languageFeatures')\n  if (!featuresContainers.length) return out\n\n  const featureNodeList = featuresContainers[0].getElementsByTagName('feature')\n  for (const feature of Array.from(featureNodeList)) {\n    const formNode = feature.getElementsByTagName('form')[0]\n    if (formNode?.textContent) out.push(formNode.textContent)\n  }\n  return out\n}\n\ntype TableParseResult = {\n  catalogue: CatalogueGL | null\n  footprint: FootprintSetGL | null\n  notClassified: string | null\n}\n\n/**\n * Parse a <table> node and build dataset wrappers.\n */\nconst parseTable = (tableNode: Element, tablesUrl: string, tapRepo: TapRepo): TableParseResult => {\n  const nameNode = tableNode.getElementsByTagName('name')[0]\n  if (!nameNode?.textContent) {\n    return { catalogue: null, footprint: null, notClassified: 'Missing table name' }\n  }\n\n  const tableName = nameNode.textContent\n  const tableDesc = tableNode.getElementsByTagName('description')[0]?.textContent ?? null\n\n  const metaColumns = tableNode.getElementsByTagName('column')\n  const tapMetas = new TapMetadataList()\n\n  for (const col of Array.from(metaColumns)) {\n    const name = col.getElementsByTagName('name')[0]?.textContent ?? ''\n    const description = col.getElementsByTagName('description')[0]?.textContent ?? undefined\n    const unit = col.getElementsByTagName('unit')[0]?.textContent ?? undefined\n    const dataType = col.getElementsByTagName('dataType')[0]?.textContent ?? undefined\n    const ucd = col.getElementsByTagName('ucd')[0]?.textContent ?? undefined\n    const utype = col.getElementsByTagName('utype')[0]?.textContent ?? undefined\n\n    const tapMeta = new TapMetadata(name, description, unit, dataType, ucd, utype)\n    tapMetas.addMetadata(tapMeta)\n  }\n\n  let catalogue: CatalogueGL | null = null\n  let footprint: FootprintSetGL | null = null\n  let notClassified: string | null = null\n\n  if (tapMetas.pgSphereMetaColumns.length > 0 || tapMetas.sRegionMetaColumns.length > 0) {\n    footprint = new FootprintSetGL(tableName, tableDesc, tapRepo, tapMetas)\n  } else if (tapMetas.posEqRAMetaColumns.length > 0 && tapMetas.posEqDecMetaColumns.length > 0) {\n    catalogue = new CatalogueGL(tableName, tableDesc, tapRepo, tapMetas)\n  } else {\n    notClassified = `TODO: create NC entity for ${tablesUrl}#${tableName}`\n  }\n\n  return { catalogue, footprint, notClassified }\n}","import CatalogueGL from '../model/catalogues/CatalogueGL.js'\nimport TapMetadata from '../model/tap/TapMetadata.js'\nimport TapMetadataList from '../model/tap/TapMetadataList.js'\nimport { queryAsync } from './tapRepoService.js'\n\n// Optional timeout; adjust or remove if you don’t use timeouts.\nconst TAP_QUERY_TIMEOUT_MS = 60_000\n\n// Small helpers to be robust with slightly different metadata shapes\nfunction getColName(col: TapMetadata | undefined): string {\n    if (!col) return ''\n    return (col.name ?? col.name ?? '').toString()\n}\n\nexport default async function queryCatalogueByFoV(\n    catalogue: CatalogueGL,\n    polygonAdql: String\n): Promise<CatalogueGL | undefined> {\n    try {\n\n        // Resolve RA/Dec column names (CatalogueProps already picked them from metadata)\n        const raCol = getColName(catalogue.catalogueProps.raColumn)\n        const decCol = getColName(catalogue.catalogueProps.decColumn)\n        const tapTable = catalogue.name\n\n        if (!raCol || !decCol) {\n            console.warn('[queryCatalogueByFoV] RA/Dec columns were not resolved from metadata.')\n            return\n        }\n\n        const adql = `SELECT * FROM ${tapTable} WHERE 1 = CONTAINS(POINT('ICRS', ${raCol}, ${decCol}), POLYGON('ICRS',${polygonAdql}))`\n        \n        // Fire the TAP query\n        const rows = await queryAsync(catalogue.tapRepo, adql, TAP_QUERY_TIMEOUT_MS)\n        console.log(rows)\n    \n        if (rows && rows.data.length  > 0) {\n            const metadata = rows.metadata\n            const data = rows.data\n\n            console.log(data.length)\n            let tapMetadataList = new TapMetadataList()\n            for (const element of metadata) {\n                const name = element.name\n                const description = element.description !== undefined ? element.description : undefined\n                const unit = element.unit !== undefined ? element.unit : undefined\n                const datatype = element.datatype !== undefined ? element.datatype : undefined\n                const ucd = element.ucd !== undefined ? element.ucd : undefined\n                const utype = element.utype !== undefined ? element.utype : undefined\n                const tapMeta = new TapMetadata(name, description, unit, datatype, ucd, utype)\n                tapMetadataList.addMetadata(tapMeta)\n            }\n            catalogue.addSources(data, tapMetadataList.metadataList)\n            return catalogue\n        } else {\n            console.log('[queryCatalogueByFoV] No results found.')\n            return\n        }\n    } catch (err: any) {\n        console.error('[queryCatalogueByFoV] Error:', err?.message ?? err)\n        return\n    }\n}","import FootprintSetGL from '../model/footprints/FootprintSetGL.js'\nimport healpixGridSingleton from '../model/grid/HealpixGridSingleton.js';\nimport Point from '../model/Point.js';\nimport TapMetadata from '../model/tap/TapMetadata.js'\nimport TapMetadataList from '../model/tap/TapMetadataList.js'\nimport { TapRepo } from '../model/tap/TapRepo.js';\nimport FoVUtils from '../utils/FoVUtils.js';\nimport { queryAsync } from './tapRepoService.js'\n\n\ninterface ColumnLike {\n  _name: string;\n}\n\n// If your FoVUtils already has TS types, feel free to delete these:\ntype FoVPolygonString = string; // \"ra1,dec1, ra2,dec2, ...\"\ninterface J2000Center { _raDeg: number; _decDeg: number; }\n\n// Optional timeout; adjust or remove if you don’t use timeouts.\nconst TAP_QUERY_TIMEOUT_MS = 60_000\n\n\n// --- Function ---\n// Small helpers to be robust with slightly different metadata shapes\nfunction getColName(col: TapMetadata | undefined): string {\n  if (!col) return ''\n  return (col.name ?? col.name ?? '').toString()\n}\n\nfunction prepareADQL(\n  tapTable: string,\n  tapRa: string | undefined,\n  tapDec: string | undefined,\n  polygonAdql: String, tapRepo: TapRepo,\n  centralPoint: Point): string {\n  let adql = \"\"\n  if (tapRepo.adqlFunctionList.includes('POLYGON')) {\n    adql =\n      'select * from ' +\n      tapTable +\n      ' where 1=CONTAINS(POINT(\\'ICRS\\',' +\n      tapRa +\n      ',' +\n      tapDec +\n      '), POLYGON(\\'ICRS\\', ' +\n      polygonAdql +\n      '))';\n  } else {\n    const radius = healpixGridSingleton.getMinFoV() / 2;\n    adql =\n      'select * from ' +\n      tapTable +\n      ' where 1=CONTAINS(POINT(\\'ICRS\\',' +\n      tapRa +\n      ',' +\n      tapDec +\n      '), CIRCLE(\\'ICRS\\', ' +\n      centralPoint.raDeg +\n      ', ' +\n      centralPoint.decDeg +\n      ', ' +\n      radius +\n      '))';\n  }\n  return adql\n}\n\n/**\n * Builds an ADQL query from current FoV and fetches footprints.\n * Returns the enriched FootprintSet (if any rows were found), otherwise undefined.\n */\nexport default async function queryFootprintSetByFov(\n  footprintSet: FootprintSetGL,\n  polygonAdql: String,\n  centralPoint: Point): Promise<FootprintSetGL | undefined> {\n\n  try {\n\n    // Resolve RA/Dec column names (CatalogueProps already picked them from metadata)\n    const raCol = getColName(footprintSet.footprintsetProps.raColumn)\n    const decCol = getColName(footprintSet.footprintsetProps.decColumn)\n    const tapTable = footprintSet.name\n\n    if (!raCol || !decCol) {\n      console.warn('[queryCatalogueByFoV] RA/Dec columns were not resolved from metadata.')\n      return\n    }\n    const adql = prepareADQL(tapTable, raCol, decCol, polygonAdql, footprintSet.tapRepo, centralPoint)\n\n    const rows = await queryAsync(footprintSet.tapRepo, adql, TAP_QUERY_TIMEOUT_MS)\n    console.log(rows)\n    // if (rows && rows.data.length > 0) {\n    // const metadata = rows.metadata\n    // const data = rows.data\n\n    if (\n      typeof rows === 'object' &&\n      rows !== null &&\n      Array.isArray((rows as any).metadata) &&\n      Array.isArray((rows as any).data)\n    ) {\n      const { metadata, data } = rows as {\n        metadata: Array<{\n          name: string;\n          description: string;\n          unit: string;\n          datatype: string;\n          ucd: string;\n          utype: string;\n        }>;\n        data: unknown[];\n      };\n      const tapMetadataList = new TapMetadataList();\n      for (const m of metadata) {\n        const tapMeta = new TapMetadata(\n          m.name,\n          m.description ?? undefined,\n          m.unit ?? undefined,\n          m.datatype ?? undefined,\n          m.ucd ?? undefined,\n          m.utype ?? undefined\n        );\n        tapMetadataList.addMetadata(tapMeta);\n      }\n\n      if (data.length > 0) {\n        footprintSet.addFootprints(data, tapMetadataList.metadataList);\n        return footprintSet;\n      } else {\n        console.log('No results found');\n      }\n      // }\n\n    } else {\n      console.log('[queryFootprintSetByFov] No results found.')\n      return\n    }\n  } catch (err: any) {\n    console.error('[queryFootprintSetByFov] Error:', err?.message ?? err)\n    return\n  }\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { vec4, mat4, ReadonlyMat4 } from 'gl-matrix';\n\nimport global from '../../Global.js';\nimport { fovHelper } from '../hips/FoVHelper.js';\nimport { colorHex2RGB, degToRad } from '../../utils/Utils.js';\nimport GridShaderManager from '../../shader/GridShaderManager.js';\nimport Point from '../Point.js';\nimport CoordsType from '../../utils/CoordsType.js';\nimport FoVUtils from '../../utils/FoVUtils.js';\n\nimport GridTextHelper from './GridTextHelper.js';\nimport HealpixGridSingleton from './HealpixGridSingleton.js';\nimport AbstractSkyEntity from '../AbstractSkyEntity.js';\nimport healpixGridSingleton from './HealpixGridSingleton.js';\nimport computePerspectiveMatrixSingleton from '../../utils/ComputePerspectiveMatrix.js';\n\ntype GL = WebGLRenderingContext | WebGL2RenderingContext;\n\n/** Equatorial grid rendered as RA/Dec great-circle line loops */\nclass EquatorialGrid extends AbstractSkyEntity {\n\tstatic ELEM_SIZE = 3;\n\tstatic BYTES_X_ELEM = new Float32Array().BYTES_PER_ELEMENT;\n\n\tprivate showGrid: boolean = true\n\n\t// private _gl: GL;\n\tprivate _shaderProgram!: WebGLProgram;\n\tprivate _vertexShader!: WebGLShader;\n\tprivate _fragmentShader!: WebGLShader;\n\n\tprivate defaultColor = '#41d421'\n\tprivate gridText: GridTextHelper = new GridTextHelper()\n\n\tprivate _attribLocations: { position: number; selected: number; pointSize: number; color: number } = {\n\t\tposition: 0,\n\t\tselected: 1,\n\t\tpointSize: 2,\n\t\tcolor: 3,\n\t};\n\n\n\tprivate _phiVertexPositionBuffer!: WebGLBuffer;\n\tprivate _thetaVertexPositionBuffer!: WebGLBuffer;\n\n\tprivate _fov!: number;\n\n\t// Step sizes (degrees + radians) and label caches\n\tprivate _phiStep = 0;\n\tprivate _phiStepRad = 0;\n\tprivate _thetaStep = 0;\n\tprivate _thetaStepRad = 0;\n\n\tprivate _phiArray: Float32Array[] = [];\n\tprivate _thetaArray: Float32Array[] = [];\n\n\t// For placing text labels near current view center:\n\t//  - _dec4Labels: key = RA(deg), value = points along that RA ring (for Dec labels)\n\t//  - _ra4Labels : key = Dec(deg), value = points along that Dec ring (for RA labels)\n\tprivate _dec4Labels: Map<number, number[][]> = new Map();\n\tprivate _ra4Labels: Map<number, number[][]> = new Map();\n\n\t/**\n\t * @param radius Not used by current implementation (sphere is unit-radius)\n\t * @param fov    Field of view in degrees\n\t */\n\tconstructor() {\n\t\tsuper(HealpixGridSingleton.RADIUS, HealpixGridSingleton.INITIAL_POSITION, HealpixGridSingleton.INITIAL_PhiRad, HealpixGridSingleton.INITIAL_ThetaRad, 'equatorial-grid');\n\t}\n\n\tinit(fov: number) {\n\t\tthis._fov = fov\n\n\t\tthis.initGL(global.gl as GL);\n\n\t\t// Program & buffers\n\t\tthis._shaderProgram = (global.gl as GL).createProgram() as WebGLProgram;\n\t\tthis.initShaders();\n\n\t\tthis._phiVertexPositionBuffer = (global.gl as GL).createBuffer()!;\n\t\tthis._thetaVertexPositionBuffer = (global.gl as GL).createBuffer()!;\n\n\t\t// Build initial RA/Dec line buffers\n\t\tthis.initBuffers(this._fov);\n\t}\n\n\t/** Compile/link shaders and fetch uniform/attribute locations */\n\tprivate initShaders(): void {\n\t\t// Fragment\n\t\tconst fsSource = GridShaderManager.healpixGridFS();\n\t\tthis._fragmentShader = (global.gl as GL).createShader((global.gl as GL).FRAGMENT_SHADER)!;\n\t\t(global.gl as GL).shaderSource(this._fragmentShader, fsSource);\n\t\t(global.gl as GL).compileShader(this._fragmentShader);\n\t\tif (!(global.gl as GL).getShaderParameter(this._fragmentShader, (global.gl as GL).COMPILE_STATUS)) {\n\t\t\t// Keep identical behavior (alert) but surface errors in console too\n\t\t\tconst log = (global.gl as GL).getShaderInfoLog(this._fragmentShader) || 'Unknown fragment shader error';\n\t\t\tconsole.error(log);\n\t\t\talert(log);\n\t\t\treturn;\n\t\t}\n\n\t\t// Vertex\n\t\tconst vsSource = GridShaderManager.healpixGridVS();\n\t\tthis._vertexShader = (global.gl as GL).createShader((global.gl as GL).VERTEX_SHADER)!;\n\t\t(global.gl as GL).shaderSource(this._vertexShader, vsSource);\n\t\t(global.gl as GL).compileShader(this._vertexShader);\n\t\tif (!(global.gl as GL).getShaderParameter(this._vertexShader, (global.gl as GL).COMPILE_STATUS)) {\n\t\t\tconst log = (global.gl as GL).getShaderInfoLog(this._vertexShader) || 'Unknown vertex shader error';\n\t\t\tconsole.error(log);\n\t\t\talert(log);\n\t\t\treturn;\n\t\t}\n\n\t\t// Link\n\t\t(global.gl as GL).attachShader(this._shaderProgram, this._vertexShader);\n\t\t(global.gl as GL).attachShader(this._shaderProgram, this._fragmentShader);\n\t\t(global.gl as GL).linkProgram(this._shaderProgram);\n\n\t\tif (!(global.gl as GL).getProgramParameter(this._shaderProgram, (global.gl as GL).LINK_STATUS)) {\n\t\t\talert('Could not initialise shaders');\n\t\t}\n\n\t\t(global.gl as GL).useProgram(this._shaderProgram);\n\n\t}\n\n\t/** Build RA/Dec line vertex arrays based on FoV step helper */\n\tprivate initBuffers(fovDeg: number): void {\n\t\tconst R = 1.0;\n\n\t\tconst steps = fovHelper.getRADegSteps(fovDeg);\n\t\tconst phiStep = steps.raStep as number;   // RA step (deg)\n\t\tconst thetaStep = steps.decStep as number; // Dec step (deg)\n\n\t\tthis._phiStep = phiStep;\n\t\tthis._phiStepRad = degToRad(phiStep);\n\t\tthis._thetaStep = thetaStep;\n\t\tthis._thetaStepRad = degToRad(thetaStep);\n\n\t\tthis._ra4Labels = new Map();\n\t\tthis._dec4Labels = new Map();\n\t\tthis._phiArray = [];\n\t\tthis._thetaArray = [];\n\n\t\t// Lines of constant Dec (varying RA): for each Dec, a ring with vertices every phiStep°\n\t\tfor (let theta = thetaStep; theta < 180; theta += thetaStep) {\n\t\t\tconst phiVertexPosition = new Float32Array((360 / phiStep) * 3);\n\n\t\t\tconst thetaRad = degToRad(theta);\n\t\t\tfor (let phi = 0; phi < 360; phi += phiStep) {\n\t\t\t\tconst phiRad = degToRad(phi);\n\t\t\t\tconst x = R * Math.sin(thetaRad) * Math.cos(phiRad);\n\t\t\t\tconst y = R * Math.sin(thetaRad) * Math.sin(phiRad);\n\t\t\t\tconst z = R * Math.cos(thetaRad);\n\n\t\t\t\tconst idx = Math.floor(phi / phiStep);\n\t\t\t\tphiVertexPosition[3 * idx + 0] = x;\n\t\t\t\tphiVertexPosition[3 * idx + 1] = y;\n\t\t\t\tphiVertexPosition[3 * idx + 2] = z;\n\n\t\t\t\tif (!this._dec4Labels.has(phi)) this._dec4Labels.set(phi, []);\n\t\t\t\tthis._dec4Labels.get(phi)!.push([x, y, z]);\n\t\t\t}\n\n\t\t\tthis._phiArray.push(phiVertexPosition);\n\t\t}\n\n\t\t// Lines of constant RA (varying Dec): for each RA, a ring with vertices every thetaStep°\n\t\tfor (let phi = 0; phi < 360; phi += phiStep) {\n\t\t\tconst thetaVertexPosition = new Float32Array((360 / thetaStep) * 3);\n\n\t\t\tconst phiRad = degToRad(phi);\n\t\t\tfor (let theta = 0; theta < 360; theta += thetaStep) {\n\t\t\t\tconst thetaRad = degToRad(theta);\n\t\t\t\tconst x = R * Math.sin(thetaRad) * Math.cos(phiRad);\n\t\t\t\tconst y = R * Math.sin(thetaRad) * Math.sin(phiRad);\n\t\t\t\tconst z = R * Math.cos(thetaRad);\n\n\t\t\t\tconst idx = Math.floor(theta / thetaStep);\n\t\t\t\tthetaVertexPosition[3 * idx + 0] = x;\n\t\t\t\tthetaVertexPosition[3 * idx + 1] = y;\n\t\t\t\tthetaVertexPosition[3 * idx + 2] = z;\n\n\t\t\t\tconst decKey = 90 - theta; // original code’s keying for RA labels\n\t\t\t\tif (!this._ra4Labels.has(decKey)) this._ra4Labels.set(decKey, []);\n\t\t\t\tthis._ra4Labels.get(decKey)!.push([x, y, z]);\n\t\t\t}\n\n\t\t\tthis._thetaArray.push(thetaVertexPosition);\n\t\t}\n\t}\n\n\t/** Update buffers when FoV (in degrees) changes */\n\trefresh(): void {\n\t\tconst fovDeg = healpixGridSingleton.getMinFoV()\n\t\tif (this._fov !== fovDeg) {\n\t\t\tthis._fov = fovDeg;\n\t\t\tthis.initBuffers(this._fov);\n\t\t}\n\t}\n\n\tprivate vectorDistance(p1: Point, p2: Point): number {\n\t\tconst dx = p1.x - p2.x;\n\t\tconst dy = p1.y - p2.y;\n\t\tconst dz = p1.z - p2.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n\n\tprivate enableShader(mMatrix: ReadonlyMat4, pMatrix: ReadonlyMat4): void {\n\t\tconst gl = global.gl as GL;\n\t\tgl.useProgram(this._shaderProgram);\n\n\t\t// uMVMatrix = camera * model\n\t\tconst mvMatrix = mat4.create();\n\t\tmat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix() as mat4, mMatrix);\n\n\t\t// TODO move locations retrieval elsewhere\n\n\t\t// Uniform locations\n\t\tconst uMVMatrixLoc = gl.getUniformLocation(this._shaderProgram, 'uMVMatrix');\n\t\tconst uPMatrixLoc = gl.getUniformLocation(this._shaderProgram, 'uPMatrix');\n\t\tconst uColor = gl.getUniformLocation(this._shaderProgram, 'u_fragcolor');\n\n\t\t// Attribute locations\n\t\tthis._attribLocations.position = gl.getAttribLocation(this._shaderProgram, 'aCatPosition');\n\n\t\tif (uMVMatrixLoc) gl.uniformMatrix4fv(uMVMatrixLoc, false, mvMatrix as Float32Array);\n\t\tif (uPMatrixLoc) gl.uniformMatrix4fv(uPMatrixLoc, false, pMatrix as Float32Array);\n\t\tif (uColor) {\n\t\t\tconst rgb = colorHex2RGB(this.defaultColor);\n\t\t\tgl.uniform4f(uColor, rgb[0], rgb[1], rgb[2], 1.0);\n\t\t}\n\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGrid\n\t}\n\n\ttoggleShowGrid() {\n\t\tthis.showGrid = !this.showGrid\n\t}\n\t/**\n\t * @param mMatrix model matrix associated with current HiPS (or scene) transform\n\t * @param fovObj  current field-of-view (degrees). If your FoV type differs,\n\t *                pass the numeric value here; this signature matches original usage.\n\t */\n\tdraw(): void {\n\n\t\tconst gl = global.gl as GL;\n\t\tconst mMatrix = this.getModelMatrix();\n\t\tif (this._thetaArray.length === 0) return;\n\n\t\tthis.refresh();\n\n\t\tif (!this.showGrid) {\n\t\t\t// gridTextHelper.resetDivSets();\n\t\t\tthis.gridText.resetDivSets();\n\t\t\treturn;\n\t\t}\n\n\t\tconst pMatrix = computePerspectiveMatrixSingleton.pMatrix as ReadonlyMat4;\n\t\tthis.enableShader(mMatrix, pMatrix);\n\n\t\t// Draw Dec rings\n\t\tfor (let i = 0; i < this._phiArray.length; i++) {\n\t\t\t(global.gl as GL).bindBuffer((global.gl as GL).ARRAY_BUFFER, this._phiVertexPositionBuffer);\n\t\t\t(global.gl as GL).bufferData((global.gl as GL).ARRAY_BUFFER, this._phiArray[i], (global.gl as GL).STATIC_DRAW);\n\t\t\t(global.gl as GL).vertexAttribPointer(this._attribLocations.position, 3, (global.gl as GL).FLOAT, false, 0, 0);\n\t\t\t(global.gl as GL).enableVertexAttribArray(this._attribLocations.position);\n\n\t\t\t(global.gl as GL).drawArrays((global.gl as GL).LINE_LOOP, 0, 360 / this._phiStep);\n\t\t}\n\n\t\t// Draw RA rings\n\t\tfor (let j = 0; j < this._thetaArray.length; j++) {\n\t\t\t(global.gl as GL).bindBuffer((global.gl as GL).ARRAY_BUFFER, this._thetaVertexPositionBuffer);\n\t\t\t(global.gl as GL).bufferData((global.gl as GL).ARRAY_BUFFER, this._thetaArray[j], (global.gl as GL).STATIC_DRAW);\n\t\t\t(global.gl as GL).vertexAttribPointer(this._attribLocations.position, 3, (global.gl as GL).FLOAT, false, 0, 0);\n\t\t\t(global.gl as GL).enableVertexAttribArray(this._attribLocations.position);\n\n\t\t\t(global.gl as GL).drawArrays((global.gl as GL).LINE_LOOP, 0, 360 / this._thetaStep);\n\t\t}\n\n\t\t// Label layout (HTML overlay)\n\t\tconst center = FoVUtils.getCenterJ2000(gl.canvas as HTMLCanvasElement);\n\t\t// MVP = P * V * M\n\t\tconst mvMatrix = mat4.create();\n\t\tmat4.multiply(mvMatrix, (global.camera as any).getCameraMatrix() as unknown as mat4, mMatrix);\n\t\tconst mvpMatrix = mat4.create();\n\t\tmat4.multiply(mvpMatrix, pMatrix as unknown as mat4, mvMatrix);\n\n\t\t// Dec labels (loop over RA keys)\n\t\tfor (const [raDegKey, points] of this._dec4Labels.entries()) {\n\t\t\tif (Math.abs(raDegKey - center.raDeg) <= this._phiStep) {\n\t\t\t\tfor (let p = 0; p < points.length; p++) {\n\t\t\t\t\tconst [x, y, z] = points[p];\n\t\t\t\t\tconst phiPoint: [number, number, number, number] = [x, y, z, 1];\n\t\t\t\t\tconst point = new Point({ x, y, z }, CoordsType.CARTESIAN);\n\t\t\t\t\tconst decDeg = point.decDeg;\n\n\t\t\t\t\tif (Math.abs(decDeg - center.decDeg) < 60) {\n\t\t\t\t\t\tconst clipspace = vec4.create();\n\t\t\t\t\t\tvec4.transformMat4(clipspace, phiPoint, mvpMatrix);\n\n\t\t\t\t\t\t// perspective divide\n\t\t\t\t\t\tclipspace[0] /= clipspace[3];\n\t\t\t\t\t\tclipspace[1] /= clipspace[3];\n\n\t\t\t\t\t\t// clip->pixel\n\t\t\t\t\t\tconst pixelX = (clipspace[0] * 0.5 + 0.5) * (global.gl as GL).canvas.width;\n\t\t\t\t\t\tconst pixelY = (clipspace[1] * -0.5 + 0.5) * (global.gl as GL).canvas.height;\n\t\t\t\t\t\tthis.gridText.addEqDivSet(decDeg.toFixed(2), pixelX, pixelY, 'dec');\n\t\t\t\t\t\t// gridTextHelper.addEqDivSet(decDeg.toFixed(2), pixelX, pixelY, 'dec');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// RA labels (loop over Dec keys)\n\t\tfor (const [decDegKey, points] of this._ra4Labels.entries()) {\n\t\t\tif (Math.abs(decDegKey - center.decDeg) <= this._thetaStep) {\n\t\t\t\tfor (let p = 0; p < points.length; p++) {\n\t\t\t\t\tconst [x, y, z] = points[p];\n\t\t\t\t\tconst phiPoint: [number, number, number, number] = [x, y, z, 1];\n\t\t\t\t\tconst point = new Point({ x, y, z }, CoordsType.CARTESIAN);\n\t\t\t\t\tconst d = this.vectorDistance(point, center);\n\n\t\t\t\t\tconst raDeg = point.raDeg;\n\t\t\t\t\tif (d < degToRad(50)) {\n\t\t\t\t\t\tconst clipspace = vec4.create();\n\t\t\t\t\t\tvec4.transformMat4(clipspace, phiPoint, mvpMatrix);\n\n\t\t\t\t\t\tclipspace[0] /= clipspace[3];\n\t\t\t\t\t\tclipspace[1] /= clipspace[3];\n\n\t\t\t\t\t\tconst pixelX = (clipspace[0] * 0.5 + 0.5) * (global.gl as GL).canvas.width;\n\t\t\t\t\t\tconst pixelY = (clipspace[1] * -0.5 + 0.5) * (global.gl as GL).canvas.height;\n\n\t\t\t\t\t\t// gridTextHelper.addEqDivSet(raDeg.toFixed(2), pixelX, pixelY, 'ra');\n\t\t\t\t\t\tthis.gridText.addEqDivSet(raDeg.toFixed(2), pixelX, pixelY, 'ra');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.gridText.resetDivSets();\n\t\t// gridTextHelper.resetDivSets();\n\n\t\t// Cleanup\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\t}\n}\n\nconst equatorialGridSingleton = new EquatorialGrid();\nexport default equatorialGridSingleton;","// AstroSphere.ts\nimport { bootSetup } from './Config.js'\nimport Camera from './Camera.js'\nimport RayPickingUtils from './utils/RayPickingUtils.js'\nimport global from './Global.js'\nimport { visibleTilesManager } from './model/hips/VisibleTilesManager.js'\nimport MouseHelper from './utils/MouseHelper.js'\n\nimport {\n  cartesianToSpherical,\n  sphericalToAstroDeg,\n  raDegToHMS,\n  decDegToDMS,\n  AstroCoords,\n  HMS,\n  SphericalCoords,\n  DMS,\n} from './utils/Utils.js'\n\n\nimport healpixGridSingleton from './model/grid/HealpixGridSingleton.js'\nimport HiPS from './model/hips/HiPS.js'\nimport { HiPSDescriptor } from './model/hips/HiPSDescriptor.js'\nimport computePerspectiveMatrixSingleton from './utils/ComputePerspectiveMatrix.js'\nimport { FoV } from './model/FoV.js'\nimport Point from './model/Point.js'\nimport FoVUtils from './utils/FoVUtils.js'\nimport queryCatalogueByFoV from './services/queryCatalogueByFoV.js'\nimport CatalogueGL from './model/catalogues/CatalogueGL.js'\nimport FootprintSetGL, { HoveredFootprintDetail } from './model/footprints/FootprintSetGL.js'\nimport queryFootprintSetByFov from './services/queryFootprintSetByFov.js'\nimport Footprint from './model/footprints/Footprint.js'\nimport EquatorialGrid from './model/grid/EquatorialGrid.js'\nimport equatorialGridSingleton from './model/grid/EquatorialGrid.js'\n\nexport type PointCoordinates = {\n  astroDeg: AstroCoords\n  raHMS: HMS\n  decDMS: DMS\n  sphericalDeg: SphericalCoords\n}\n\n/**\n * AstroSphere — main WebGL scene controller (TS port)\n */\nclass AstroSphere {\n  private camera!: Camera\n\n  private centralPoinCoords: PointCoordinates | undefined\n  private mousePointCoords: PointCoordinates | undefined\n\n  private canvas: HTMLCanvasElement\n  private showHPXGrid = false\n  private mouseHelper: MouseHelper\n\n  private mouseDown = false\n  private lastMouseX: number | null = null\n  private lastMouseY: number | null = null\n  private inertiaX = 0.0\n  private inertiaY = 0.0\n  private zoomInertia = 0.0\n\n  private activeHiPS: HiPS | null = null\n\n  private startup = true\n\n  // private insideSphere: boolean\n  private fov: FoV\n\n  private activeCatalogues: CatalogueGL[] = []\n  private activeFootprintSets: FootprintSetGL[] = []\n\n  constructor(canvas: HTMLCanvasElement, webgl: WebGL2RenderingContext) {\n    // Keep global GL context (as in original JS)\n    global.gl = webgl\n    this.mouseHelper = new MouseHelper()\n    this.canvas = canvas\n    // this.insideSphere = bootSetup.insideSphere\n    global.insideSphere = bootSetup.insideSphere\n    this.init(canvas)\n    this.fov = healpixGridSingleton.refreshFoV()\n  }\n\n  private updateCentralPoint(): PointCoordinates {\n\n    // const sphericalCoords = cartesianToSpherical(this.camera.getCameraPosition())\n    const sphericalCoords = this.getPhiThetaDeg(this.canvas)\n    const astroCoords = sphericalToAstroDeg(sphericalCoords.phi, sphericalCoords.theta)\n    const raHMS = raDegToHMS(astroCoords.ra)\n    const decDMS = decDegToDMS(astroCoords.dec)\n    this.centralPoinCoords = {\n      astroDeg: astroCoords,\n      sphericalDeg: sphericalCoords,\n      raHMS: raHMS,\n      decDMS: decDMS\n    }\n    return this.centralPoinCoords\n  }\n\n\n  private updateLastMousePoint(): PointCoordinates {\n\n    const sphericalCoords = { phi: this.mouseHelper.phi, theta: this.mouseHelper.theta } as SphericalCoords\n    const astroCoords = { ra: this.mouseHelper.ra, dec: this.mouseHelper.dec } as AstroCoords\n    const raHMS = this.mouseHelper.raHMS as HMS\n    const decDMS = this.mouseHelper.decDMS as DMS\n    this.mousePointCoords = {\n      astroDeg: astroCoords,\n      sphericalDeg: sphericalCoords,\n      raHMS: raHMS,\n      decDMS: decDMS\n    }\n    return this.mousePointCoords\n  }\n\n  getCentralPointCoordinates(): PointCoordinates | undefined {\n    return this.centralPoinCoords\n  }\n\n  getLastMousePointCoordinates(): PointCoordinates | undefined {\n    return this.mousePointCoords\n  }\n\n  private init(canvas: HTMLCanvasElement) {\n    this.initCamera()\n\n    healpixGridSingleton.init()\n    computePerspectiveMatrixSingleton.computePerspectiveMatrix(canvas, this.camera, bootSetup.camera_fov_deg, bootSetup.camera_near_plane, bootSetup.insideSphere)\n    visibleTilesManager.init(bootSetup.insideSphere)\n    equatorialGridSingleton.init(healpixGridSingleton.getMinFoV())\n    this.updateCentralPoint()\n\n    this.startup = true\n\n    this.addEventListeners(canvas)\n  }\n\n  private initCamera() {\n    if (bootSetup.insideSphere) {\n      this.camera = new Camera([0.0, 0.0, -0.005], true)\n    } else {\n      this.camera = new Camera([0.0, 0.0, 4.0], false)\n    }\n    global.camera = this.camera\n  }\n\n  private addEventListeners(canvas: HTMLCanvasElement) {\n    if (global.debug) {\n      console.log('[AstroSphere::addEventListeners]')\n    }\n\n    const handleMouseDown = (event: PointerEvent) => {\n      canvas.setPointerCapture(event.pointerId)\n      this.mouseDown = true\n      // this.lastMouseX = event.pageX\n      // this.lastMouseY = event.pageY\n      this.lastMouseX = event.clientX\n      this.lastMouseY = event.clientY\n\n      // session.clearHoveredFootprints()\n      event.preventDefault()\n      return false\n    }\n\n    const handleMouseUp = (event: PointerEvent) => {\n      canvas.releasePointerCapture(event.pointerId)\n      this.mouseDown = false\n      document.body.style.cursor = 'auto'\n      this.lastMouseX = event.clientX\n      this.lastMouseY = event.clientY\n\n    }\n\n    const handleMouseMove = (event: PointerEvent) => {\n      const newX = event.clientX\n      const newY = event.clientY\n\n      if (!healpixGridSingleton) return\n\n      if (this.mouseDown) {\n        document.body.style.cursor = 'grab'\n\n        const deltaX = ((newX - (this.lastMouseX ?? newX)) * Math.PI) / canvas.width\n        const deltaY = ((newY - (this.lastMouseY ?? newY)) * Math.PI) / canvas.height\n\n        this.inertiaX += 0.1 * deltaX\n        this.inertiaY += 0.1 * deltaY\n      } else {\n        const mousePoint = RayPickingUtils.getIntersectionPointWithSingleModel(\n          newX,\n          newY\n        )\n\n        if (mousePoint && mousePoint.length > 0) {\n          this.mouseHelper.update(mousePoint)\n          this.updateLastMousePoint()\n        }\n      }\n      this.updateCentralPoint()\n\n      this.lastMouseX = newX\n      this.lastMouseY = newY\n      event.preventDefault()\n    }\n\n    const handleMouseWheel = (event: WheelEvent) => {\n      if (event.deltaY < 0) {\n        this.zoomInertia -= 0.001\n      } else {\n        this.zoomInertia += 0.001\n      }\n      event.preventDefault()\n    }\n\n    canvas.onpointerdown = handleMouseDown\n    canvas.onpointerup = handleMouseUp\n    canvas.onpointermove = handleMouseMove\n    // canvas.onwheel = handleMouseWheel\n    canvas.addEventListener('wheel', handleMouseWheel, { passive: false })\n  }\n\n  // REVIEW THIS METHOD AND MOVE IT\n  getPhiThetaDeg(canvas: HTMLCanvasElement) {\n    const maxX = canvas.width\n    const maxY = canvas.height\n    const pickerPoint = RayPickingUtils.getIntersectionPointWithSingleModel(\n      maxX / 2,\n      maxY / 2\n    )\n\n    return cartesianToSpherical(pickerPoint)\n  }\n\n  activateHiPS(hipsDescriptor: HiPSDescriptor) {\n\n    this.activeHiPS = new HiPS(\n      1,\n      [0.0, 0.0, 0.0],\n      0,\n      0,\n      hipsDescriptor\n    )\n  }\n\n  // Catalogue section\n  async showCatalogue(catalogue: CatalogueGL) {\n    const fovPolyAstro = FoVUtils.getFoVPolygon(this.camera, this.canvas, healpixGridSingleton)\n    const polygonAdql = FoVUtils.getAstroFoVPolygon(fovPolyAstro) // -> \"POLYGON('ICRS', ra1, dec1, ...)\"\n    const cat = await queryCatalogueByFoV(catalogue, polygonAdql)\n    console.log(cat)\n    if (cat) this.activeCatalogues.push(cat)\n    return cat\n  }\n\n  deleteCatalogue(catalogue: CatalogueGL) {\n    this.activeCatalogues = this.activeCatalogues.filter(c => c !== catalogue);\n  }\n  // End Catalogue section\n\n  // Footprint section\n  async showFootprintSet(footprintSet: FootprintSetGL) {\n    const fovPolyAstro = FoVUtils.getFoVPolygon(this.camera, this.canvas, healpixGridSingleton)\n    const polygonAdql = FoVUtils.getAstroFoVPolygon(fovPolyAstro) // -> \"POLYGON('ICRS', ra1, dec1, ...)\"\n    const centralPoint = FoVUtils.getCenterJ2000(this.canvas)\n\n    const fset = await queryFootprintSetByFov(footprintSet, polygonAdql, centralPoint)\n    console.log(fset)\n    if (fset) this.activeFootprintSets.push(fset)\n    return fset\n  }\n\n  deleteFootprintSet(footprintSet: FootprintSetGL) {\n    this.activeFootprintSets = this.activeFootprintSets.filter(fst => fst !== footprintSet);\n  }\n\n  getHoveredFootprints(): HoveredFootprintDetail[]{\n    let footprintsHovered: HoveredFootprintDetail[] = []\n    this.activeFootprintSets.forEach(fset => {\n      footprintsHovered.push(fset.hoveredFootprints)\n    });\n    return footprintsHovered\n  }\n  // End Footprint section\n\n\n  goTo(raDeg: number, decDeg: number): void {\n    this.camera.goTo(raDeg, decDeg)\n  }\n\n  getFoV(): FoV {\n    return this.fov\n  }\n\n  getFoVPolygon(): Point[] {\n    return FoVUtils.getFoVPolygon(this.camera, this.canvas, healpixGridSingleton)\n  }\n\n  changeFoV(deg: number) {\n    // throw new Error(\"not Implemented\")\n    const distance = healpixGridSingleton.getFoV().computeDistanceFromAngle(deg)\n    // this.camera.moveAlongView(distance)\n    this.camera.translate(distance)\n    healpixGridSingleton.refreshFoV()\n  }\n\n  changeFoV2(deg: number) {\n    // throw new Error(\"not Implemented\")\n    const newCameraPos = healpixGridSingleton.getFoV().computeCameraPositionForFoV(deg)\n    this.camera.setCameraPosition(newCameraPos)\n    // this.camera.moveAlongView(distance)\n    // this.camera.translate(distance)\n  }\n  changeFoV3(deg: number) {\n    const newPos = healpixGridSingleton.getFoV().computeCameraPositionForAngularDiameter(deg);\n    this.camera.setCameraPosition(newPos);\n\n\n    // Recompute projection after moving the camera\n    computePerspectiveMatrixSingleton.computePerspectiveMatrix(\n      this.canvas,\n      this.camera,\n      bootSetup.camera_fov_deg,\n      bootSetup.camera_near_plane, false\n    );\n  }\n\n  getInsideSphere(): boolean {\n    return global.insideSphere\n  }\n\n  toggleInsideSphere() {\n    // this.insideSphere = !this.insideSphere\n    global.insideSphere = !global.insideSphere\n    console.log(global.insideSphere)\n    this.camera.toggleInsideSphere()\n    // visibleTilesManager.toggleInsideSphere()\n  }\n\n  draw(canvas: HTMLCanvasElement) {\n\n    if (!global.gl) return\n    if (!this.activeHiPS) return\n    if (!healpixGridSingleton || Object.keys(healpixGridSingleton).length === 0) return\n    if ((healpixGridSingleton as any).fovObj === undefined) return\n\n    // In WebGL2, OES_element_index_uint is core, no need to fetch the extension each frame.\n    // global.gl.getExtension('OES_element_index_uint')\n    // global.gl.clear(global.gl.COLOR_BUFFER_BIT | global.gl.DEPTH_BUFFER_BIT)\n\n    computePerspectiveMatrixSingleton.computePerspectiveMatrix(canvas, this.camera, bootSetup.camera_fov_deg, bootSetup.camera_near_plane, global.insideSphere)\n\n    let cameraRotated = false\n    let THETA = 0\n    let PHI = 0\n\n    global.gl.viewport(0, 0, global.gl.drawingBufferWidth, global.gl.drawingBufferHeight);\n    global.gl.clear(global.gl.COLOR_BUFFER_BIT | global.gl.DEPTH_BUFFER_BIT)\n\n    // Zoom inertia\n    if ((healpixGridSingleton as any).fovObj.minFoV > 0.1 || this.zoomInertia > 0) {\n      if (Math.abs(this.zoomInertia) > 0.0001) {\n        this.camera.zoom(this.zoomInertia)\n        this.zoomInertia *= 0.95\n        this.fov = healpixGridSingleton.refreshFoV()\n      }\n    }\n\n    // Rotation inertia\n    if (this.mouseDown || Math.abs(this.inertiaX) > 0.02 || Math.abs(this.inertiaY) > 0.02) {\n      cameraRotated = true\n      THETA = this.inertiaY\n      PHI = this.inertiaX\n      this.inertiaX *= 0.95\n      this.inertiaY *= 0.95\n      this.camera.rotate(PHI, THETA)\n      computePerspectiveMatrixSingleton.computePerspectiveMatrix(canvas, this.camera, bootSetup.camera_fov_deg, bootSetup.camera_near_plane, global.insideSphere)\n\n    } else {\n      this.inertiaY = 0\n      this.inertiaX = 0\n    }\n\n    // GL state\n    global.gl.disable(global.gl.DEPTH_TEST)\n    global.gl.enable(global.gl.BLEND)\n    global.gl.enable(global.gl.CULL_FACE)\n    global.gl.cullFace(global.insideSphere ? global.gl.BACK : global.gl.FRONT)\n    global.gl.blendFunc(global.gl.SRC_ALPHA, global.gl.ONE_MINUS_SRC_ALPHA)\n\n    // DRAW HiPS\n\n    this.activeHiPS.draw()\n    healpixGridSingleton.draw()\n    equatorialGridSingleton.draw()\n\n    global.gl.enable(global.gl.DEPTH_TEST)\n    global.gl.disable(global.gl.CULL_FACE)\n\n\n\n\n\n\n    if (this.startup) {\n      this.startup = false\n      const phiTheta = this.getPhiThetaDeg(canvas)\n      const raDecDeg = sphericalToAstroDeg(phiTheta.phi, phiTheta.theta)\n      const raHMS = raDegToHMS(raDecDeg.ra)\n      const decDMS = decDegToDMS(raDecDeg.dec)\n      console.log('(startup coords)', {\n        raDeg: raDecDeg.ra,\n        decDeg: raDecDeg.dec,\n        raHMS,\n        decDMS,\n      })\n    }\n\n\n    this.activeCatalogues.forEach(cat => {\n      if (this.activeHiPS) {\n        cat.draw(this.activeHiPS.getModelMatrix() as Float32Array, this.mouseHelper)\n      }\n    })\n    this.activeFootprintSets.forEach(fst => {\n      if (this.activeHiPS) {\n        fst.draw(this.activeHiPS.getModelMatrix() as Float32Array, this.mouseHelper)\n      }\n    })\n\n\n  }\n}\n\n\n\nexport default AstroSphere\n","import global from './Global.js'\nimport AstroSphere from './AstroSphere.js'\nimport { HiPSDescriptor } from './model/hips/HiPSDescriptor.js'\nimport { FoV } from './model/FoV.js'\nimport Point from './model/Point.js'\nimport CatalogueGL from './model/catalogues/CatalogueGL.js'\nimport type { PointCoordinates } from './AstroSphere.js'\nimport FootprintSetGL, { HoveredFootprintDetail } from './model/footprints/FootprintSetGL.js'\nimport { bootSetup } from './Config.js'\nimport healpixGridSingleton from './model/grid/HealpixGridSingleton.js'\nimport equatorialGridSingleton from './model/grid/EquatorialGrid.js'\ntype GL2WithViewport = WebGL2RenderingContext & {\n  viewportWidth: number\n  viewportHeight: number\n}\n\nexport class AstroViewer {\n  private astroSphere!: AstroSphere\n  private canvas!: HTMLCanvasElement\n  private webgl!: GL2WithViewport\n  private rafId: number | null = null\n\n\n\n  // API\n  run(): number {\n    return this.tick()\n  }\n\n  // CATALOGUES\n  showCatalogue(catalogue: CatalogueGL) {\n    this.astroSphere.showCatalogue(catalogue)\n  }\n  hideCatalogue(catalogue: CatalogueGL, isVisible: boolean) {\n    catalogue.setIsVisible(isVisible)\n  }\n  deleteCatalogue(catalogue: CatalogueGL) {\n    this.astroSphere.deleteCatalogue(catalogue)\n  }\n\n  changeCatalogueColor(catalogue: CatalogueGL, hexColor: string) {\n    catalogue.catalogueProps.changeColor(hexColor)\n  }\n\n  setCatalogueShapeHue(catalogue: CatalogueGL, metadataColumnName: string) {\n    catalogue.changeCatalogueMetaShapeHue(metadataColumnName)\n  }\n\n  setCatalogueShapeSize(catalogue: CatalogueGL, metadataColumnName: string) {\n    catalogue.changeCatalogueMetaShapeSize(metadataColumnName)\n  }\n\n  //FOOTPRINT\n  showFootprintSet(footprintSet: FootprintSetGL) {\n    this.astroSphere.showFootprintSet(footprintSet)\n  }\n\n  hideFootprintSet(footprintSet: FootprintSetGL, isVisible: boolean) {\n    footprintSet.setIsVisible(isVisible)\n  }\n\n  deleteFootprintSet(footprintSet: FootprintSetGL) {\n    this.astroSphere.deleteFootprintSet(footprintSet)\n  }\n\n  changeFootprintSetColor(footprintSet: FootprintSetGL, hexColor: string) {\n    footprintSet.footprintsetProps.changeColor(hexColor)\n  }\n\n  getHoveredFootprints(): HoveredFootprintDetail[]{\n    return this.astroSphere.getHoveredFootprints()\n  }\n\n  // HIPS\n  getDefaultHiPSURL(): string {\n    return bootSetup.defaultHipsUrl\n  }\n\n  activateHiPS(hipsDescriptor: HiPSDescriptor): void {\n    this.astroSphere.activateHiPS(hipsDescriptor)\n  }\n\n  // GOTOs and COORDS\n  goTo(raDeg: number, decDeg: number): void {\n    this.astroSphere.goTo(raDeg, decDeg)\n  }\n  getCenterCoordinates(): PointCoordinates | undefined {\n    return this.astroSphere.getCentralPointCoordinates()\n  }\n\n  getCoordinatesFromMouse(): PointCoordinates | undefined {\n    return this.astroSphere.getLastMousePointCoordinates()\n  }\n\n  // GRIDs\n  toggleHealpixGrid() {\n    healpixGridSingleton.toggleShowGrid()\n  }\n\n  isHealpixGridVisible(): boolean{\n    return healpixGridSingleton.isVisible()\n  }\n\n  toggleEquatorialGrid() {\n    equatorialGridSingleton.toggleShowGrid()\n  }\n\n  isEquatorialGridVisible(): boolean {\n      return equatorialGridSingleton.isVisible()\n  }\n\n  // FOV\n  getFoV(): FoV {\n    return this.astroSphere.getFoV()\n  }\n\n  getFoVPolygon(): Point[] {\n    return this.astroSphere.getFoVPolygon()\n  }\n\n  changeFoV(deg: number) {\n    this, this.astroSphere.changeFoV(deg)\n  }\n\n  changeFoV2(deg: number) {\n    this, this.astroSphere.changeFoV2(deg)\n  }\n  changeFoV3(deg: number) {\n    this, this.astroSphere.changeFoV3(deg)\n  }\n\n  getInsideSphere(): boolean {\n    return this.astroSphere.getInsideSphere()\n  }\n\n  toggleInsideSphere() {\n    this.astroSphere.toggleInsideSphere()\n  }\n\n  // Internal\n  constructor() {\n    this.init()\n  }\n\n  private init(): void {\n    console.log('init webgl')\n\n    const c = document.getElementById('astrocanvas')\n    if (!(c instanceof HTMLCanvasElement)) {\n      throw new Error(\"Element with id 'canvas-ab' is not a canvas.\")\n    }\n    this.canvas = c\n\n    const gl = this.canvas.getContext('webgl2', { alpha: false })\n    if (!gl) {\n      alert('Could not initialise WebGL, sorry :-(')\n      throw new Error('WebGL2 not available')\n    }\n\n    // Extend with custom fields used elsewhere\n    this.webgl = gl as GL2WithViewport\n    this.webgl.viewportWidth = this.canvas.width\n    this.webgl.viewportHeight = this.canvas.height\n\n    try {\n      // 1/255 = 0.00392156862\n      this.webgl.clearColor(0 * 0.00392156862, 16 * 0.00392156862, 50 * 0.00392156862, 0.7)\n    } catch (e) {\n      console.log('Error instantiating WebGL context')\n    }\n\n    this.initListeners()\n      ; (global as any).gl = this.webgl\n    this.astroSphere = new AstroSphere(this.canvas, this.webgl)\n  }\n\n  private initListeners(): void {\n    console.log('inside initListeners')\n\n    const resizeCanvas = () => {\n      console.log('[resizeCanvas]')\n      const newWidth = window.innerWidth - 3\n      const newHeight = window.innerHeight - 3\n\n      this.canvas.width = newWidth\n      this.canvas.height = newHeight\n\n      this.webgl.viewportWidth = this.canvas.width\n      this.webgl.viewportHeight = this.canvas.height\n      this.webgl.viewport(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    const handleContextLost = (event: Event) => {\n      console.log('[handleContextLost]')\n      event.preventDefault()\n      if (this.rafId !== null) {\n        cancelAnimationFrame(this.rafId)\n        this.rafId = null\n      }\n    }\n\n    const handleContextRestored = (_event: Event) => {\n      console.log('[handleContextRestored]')\n      this.webgl.viewportWidth = this.canvas.width\n      this.webgl.viewportHeight = this.canvas.height\n      this.webgl.clearColor(0 * 0.00392156862, 16 * 0.00392156862, 50 * 0.00392156862, 0.7)\n      this.webgl.enable(this.webgl.DEPTH_TEST)\n      this.rafId = requestAnimationFrame(() => this.tick())\n    }\n\n    window.addEventListener('resize', resizeCanvas)\n    this.canvas.addEventListener('webglcontextlost', handleContextLost as EventListener, false)\n    this.canvas.addEventListener('webglcontextrestored', handleContextRestored as EventListener, false)\n    resizeCanvas()\n  }\n\n\n  private tick(): number {\n    this.drawScene()\n    this.rafId = requestAnimationFrame(() => this.tick())\n    return this.rafId\n  }\n\n  private drawScene(): void {\n    this.astroSphere.draw(this.canvas)\n  }\n\n\n}","// HiPSDescriptor.ts\n'use strict'\n\nexport interface HiPSDataRange {\n  min: number | undefined\n  max: number | undefined\n}\n\nexport type HiPSFrame = 'equatorial' | 'galactic' | string\n\nexport class HiPSDescriptor {\n  private _minOrder: number = 3\n  private _imgformats: string[] = []\n  private _datarange: HiPSDataRange = { min: undefined, max: undefined }\n  private _maxOrder: number | undefined\n  private _tilewidth: number | undefined\n  private _hipsFrame: HiPSFrame | undefined\n  private _hipsName: string = 'NONAME'\n  private _hipsurl: string\n  private _emMin: number | undefined\n  private _emMax: number | undefined\n  private _isGalctic: boolean = false\n\n  constructor(hipsproperties: string, hipsurl: string) {\n    this._hipsurl = hipsurl\n\n    const lines = hipsproperties.split(/\\r\\n|\\n/)\n    for (const raw of lines) {\n      const line = raw.trim()\n      if (!line || line.startsWith('#')) continue\n\n      if (line.startsWith('hips_tile_format') || line.startsWith('format')) {\n        // normalize jpeg→jpg\n        const list = this.getValue(line)?.replace(/jpeg/gi, 'jpg') ?? ''\n        this._imgformats = list.split(/\\s+/).filter(Boolean)\n      } else if (line.startsWith('hips_data_range')) {\n        const v = this.getValue(line)\n        if (v) {\n          const [minStr, maxStr] = v.split(/\\s+/)\n          this._datarange.min = parseFloat(minStr)\n          this._datarange.max = parseFloat(maxStr)\n        }\n      } else if (line.startsWith('hips_tile_width')) {\n        const n = Number(this.getValue(line))\n        this._tilewidth = Number.isFinite(n) ? n : undefined\n      } else if (line.startsWith('hips_order_min')) {\n        const n = Number(this.getValue(line))\n        this._minOrder = Number.isFinite(n) ? n : this._minOrder\n      } else if (line.startsWith('hips_order') || line.startsWith('maxOrder')) {\n        const n = Number(this.getValue(line))\n        this._maxOrder = Number.isFinite(n) ? n : this._maxOrder\n      } else if (line.startsWith('hips_frame') || line.startsWith('frame')) {\n        this._hipsFrame = this.getValue(line) as HiPSFrame\n      } else if (line.startsWith('obs_collection') || line.startsWith('label')) {\n        this._hipsName = this.getValue(line) ?? this._hipsName\n      } else if (line.startsWith('em_min')) {\n        const n = Number(this.getValue(line))\n        this._emMin = Number.isFinite(n) ? n : undefined\n      } else if (line.startsWith('em_max')) {\n        const n = Number(this.getValue(line))\n        this._emMax = Number.isFinite(n) ? n : undefined\n      }\n      \n    }\n\n    if (!this._hipsName) {\n      console.warn(`[HiPSDescriptor] hipsName not defined in properties of ${this._hipsurl}. Defaulting to 'NONAME'.`)\n    }\n    if (!this._hipsFrame) {\n      console.warn(\n        `[HiPSDescriptor] hips_frame not defined in properties of ${this._hipsurl}. Defaulting to 'equatorial'.`\n      )\n      this._hipsFrame = 'equatorial'\n    }\n    this._isGalctic = this._hipsFrame.toLowerCase().includes('gal')\n\n    if (this._maxOrder === undefined || this._imgformats.length === 0) {\n      throw new Error(\n        `[HiPSDescriptor] Invalid properties for ${this._hipsurl}. maxOrder=${this._maxOrder}, imgFormats.length=${this._imgformats.length}`\n      )\n    }\n  }\n\n  private getValue(line: string): string | undefined {\n    const idx = line.indexOf('=')\n    if (idx < 0) return undefined\n    return line.slice(idx + 1).trim()\n  }\n\n  // --- Getters ---\n  get surveyName(): string {\n    return this._hipsName\n  }\n\n  get url(): string {\n    return this._hipsurl\n  }\n\n  get maxOrder(): number {\n    return this._maxOrder as number\n  }\n\n  get minOrder(): number {\n    return this._minOrder\n  }\n\n  get imgFormats(): string[] {\n    return this._imgformats\n  }\n\n  get hipsFrame(): HiPSFrame {\n    return this._hipsFrame as HiPSFrame\n  }\n\n  get isGalactic(): boolean {\n    return this._isGalctic\n  }\n\n  get emMin(): number | undefined {\n    return this._emMin\n  }\n\n  get emMax(): number | undefined {\n    return this._emMax\n  }\n\n  get tileWidth(): number | undefined {\n    return this._tilewidth\n  }\n\n  get dataRange(): HiPSDataRange {\n    return this._datarange\n  }\n}","export { AstroViewer } from './AstroViewer.js';\nexport { HiPSDescriptor } from './model/hips/HiPSDescriptor.js';\nexport { FoV } from './model/FoV.js'\nexport { TapRepo } from './model/tap/TapRepo.js'\nexport { addTAPRepo } from './services/tapRepoService.js'\nexport type {PointCoordinates} from './AstroSphere.js';\nexport {HoveredFootprintDetail} from './model/footprints/FootprintSetGL.js'\nconsole.log('astroviewer UMD loaded')"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Constants","halfpi","inv_halfpi","Math","PI","twopi","inv_twopi","Pointing","constructor","vec3","mirror","in_theta","in_phi","this","theta","Hploc","atan2","sqrt","x","y","z","phi","Zphi","z_","phi_","ptg","PI4_A","PI4_B","PI4_C","M_1_PI","sth","have_sth","cos","_phi","abs","sin","setZ","setSth","toPointing","st","toVec3","Vec3","toZphi","d","u","q","floor","sincoshelper","s","asin","mulsign","atan2k","acos","copySign","magnitude","sign","atanhelper","t","r","isinf","isnan","NaN","in_x","in_y","in_z","getX","getY","getZ","scale","n","cross","v","add","normalize","length","norm","lengthSquared","dot","v1","sub","angle","flip","pointing2Vec3","pointing","CircleFinder","point","np","center","cosrad","i","getCircle","console","log","getCircle2","q1","q2","getCenter","getCosrad","Fxyf","f","fx","fy","face","jrll","Uint8Array","jpll","toHploc","nr","loc","jr","tmp","pstack","sz","p","Array","Int32Array","m","push","p_","o_","pop","popToMark","size","mark","otop","ptop","RangeSet","cap","error","append","val","append1","a","b","newsize","max","rnew","set","ensureCapacity","resize","sliced","slice","Xyf","ix","iy","Healpix","nside_in","order_max","twothird","ns_max","pow","ctab","Uint16Array","utab","Int16Array","xoffset","yoffset","facearray","swaparray","nside","npface","npix","order","nside2order","nl2","nl3","nl4","fact2","fact1","ncap","bn","mpr","cmpr","smpr","computeBn","maxPixrad","getNPix","getBoundaries","pix","points","xyf","nest2xyf","dc","xc","yc","getBoundariesWithStep","step","getPointsForXyfNoStep","getPointsForXyf","neighbours","ipix","result","face_num","nsm1","fpix","px0","spread_bits","py0","pxp","pyp","pxm","pym","nbnum","bits","tint","xyf2nest","log2","compress_bits","loc2pix","hploc","pixNo","za","tt","fmodulo","temp1","temp2","jp","jm","ifp","ifm","ntt","min","tp","pix2vec","pix2loc","pix2zphi","pix2ang","undefined","za2vec","sin_theta","X","Y","ang2vec","vec2ang","vec2za","r2","PI2","ang2pix","v2","raw","queryPolygonInclusive","vertex","fact","inclusive","nv","vv","normal","index","back","first","medium","last","hnd","splice","rad","fill","cf","queryMultiDisc","res","oplus","ilog2","omax","crlimit","dr","Float64Array","stk","pv","zone","crad","iz","check_pixel","arg","clz32","cosdist_zphi","z1","phi1","z2","phi2","pixset","sdist","zphia","xyz1","convertZphi2xyz","va","t1","zphib","xyz2","vb","zphi","queryDiscInclusive","radius","vptg","crpdr","crmdr","sinrad","cdr","sdr","curro","pos","cangdist","bootSetup","_camera","_gl","_healpix","_selectionnside","_useCORSProxy","_corsProxyUrl","_maxDecimals","_debug","_insideSphere","_version","init","version","corsProxyUrl","url","useCORSProxy","enabled","debug","getHealpix","MAX_DECIMALS","camera","in_camera","gl","in_gl","insideSphere","nsideForSelection","ARRAY_TYPE","Float32Array","create","out","clone","fromValues","subtract","transformMat4","w","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","invert","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","b0","b1","b2","b3","translate","rotate","axis","c","b12","b20","b21","b22","len","random","cartesianToSpherical","xyz","dotXYZ","radToDeg","colorHex2RGB","hexColor","hex1","substring","hex2","hex3","dec1","parseInt","dec2","dec3","rgb1","toFixed","rgb2","rgb3","parseFloat","degToRad","degrees","radians","sphericalToAstroDeg","phiDeg","thetaDeg","raDeg","ra","dec","sphericalToCartesian","astroDegToSpherical","decDeg","raDegToHMS","h","decDegToDMS","decDegAbs","trunc","cam_pos","cam_speed","vMatrix","T","R","FoV","previousFoV","move","in_position","in_sphere","goTo","mirroredRA","goToPhiTheta","ptDeg","cameraMatrix","cameraUp","eye","target","up","eyex","eyey","eyez","upx","upy","upz","z0","x0","x1","x2","viewMatrix","toggleInsideSphere","refreshViewMatrix","zoom","inertia","moveAlongView","distance","R_inverse","forwardCam","fwdWorld","hypot","rotateZ","factorRad","rotateY","rotateXRadian","radian","rotateYRadian","rotateZRadian","rotateX","totRot","getCameraPosition","usedRot","T_inverse","refreshFoV","currentFoV","getCameraMatrix","inv","setCameraPosition","position","getCameraAngle","_pMatrix","_aspectRatio","pMatrix","computePerspectiveMatrix","canvas","fovDeg","nearPlane","width","height","farPlane","camMat","distCamera","Number","c2","beta","fovy","aspect","near","far","tan","Infinity","nf","refreshMe","fovX_deg","fovY_deg","xRad","yRad","prevFoV","name","isGalacticHips","vertexTextureCoordBuffer","vertexPositionBuffer","vertexIndexBuffer","shaderProgram","modelMatrix","inverseModelMatrix","galacticMatrixInverted","in_radius","in_xRad","in_yRad","in_name","initGL","createBuffer","createProgram","translation","refreshModelMatrix","rad1","rad2","rotateFromZero","getModelMatrixInverse","getModelMatrix","setGeometryNeedsToBeRefreshed","refreshGeometryOnFoVChanged","mv1","mv5","mv9","mv0","mv4","mv8","fovHelper","getHiPSNorder","fov","getRADegSteps","raStep","decStep","getRefOrder","CoordsType","Point","_x","_y","_z","_xyz","_raDeg","_decDeg","_raRad","_decRad","_raDecDeg","in_options","in_type","maxDecimals","CARTESIAN","computeAstroCoords","ASTRO","computeCartesianCoords","SPHERICAL","String","phiThetaDeg","computeHealpixPhiTheta","raDecDeg","toADQL","toString","FoVUtils","getMinFoV","_fovY_deg","_fovX_deg","getFoVPolygon","model","mMatrix","canvasWidth","clientWidth","canvasHeight","clientHeight","getIntersectionPointWithSingleModel","getScreenCornersIntersection","M","topPlane","bottomPlane","rightPlane","leftPlane","intersectionTopMiddle","intersectionRightMiddle","topPoints","getNearestSpherePoint","bottomPoints","leftPoints","rightPoints","middleLeftTop","computeMiddlePoint","middleTopRight","middleRightBottom","middleBottomLeft","getFrustumIntersectionWithSphere","topLeft","middleTop","topRight","middleRight","bottomRight","middleBottom","bottomLeft","middleLeft","pushIf","ip","getCenterJ2000","p1","p2","xm","ym","zm","plane","A","B","C","D","invLen","t2","P1","P2","den","P","_M","plane4Sphere","plane4Circle_1","plane4Circle_2","A0","B0","C0","D0","denom0","x_c","y_c","z_c","pick","P_intersection_1","P_intersection_2","getAstroFoVPolygon","map","join","fovXDeg","fovYDeg","ratio","_minFoV","getFoV","minFoV","xFoVComputed","computeAngle","angleDeg","yFoVComputed","computeRatio","Error","changeMinFov","deg","computeDistanceFromAngle","canvasX","canvasY","warn","rayWorld","getRayFromMouse","intersectionDistance","raySphere","hit","vHit","refWorldZ","vInv","refCamZ","vRef","n1","n2","computeCameraPositionForMinFoV","targetMinFoVDeg","eps","halfRad","sinHalf","camPos","dirX","dirY","dirZ","computeCameraPositionForFoV","targetFoVDeg","computeCameraPositionForAngularDiameter","targetAngularDiameterDeg","half","cx","cy","cz","px","py","pz","dx","dy","dz","L","healpixGridVS","healpixGridFS","GeomUtils","orthodromicDistance","computeSelectionObject","polygons","maxx","maxy","minx","miny","poly4selection","flag","hemisphere","projectIn2D","currpoly","selpoly","RA_THRESHOLD","belowThreshold","startRA","curra","stereographic","checkPointInsidePolygon5","selectionObj","p0","raShifted","intersections","p3","denominator","numerator01","numerator23","lamda01","lambda23","checkPointInsidePolygon4","maxdist","p1point","_divEqContainerElement","_divHPXContainerElement","_divSets","_divSetNdx","document","querySelector","initHtml","resetDivSets","style","display","addHPXDivSet","msg","divSet","div","createElement","textNode","createTextNode","className","appendChild","left","top","nodeValue","addEqDivSet","type","ShaderManager","catalogueVS","catalogueFS","footprintVS","footprintFS","hipsVS","hipsNativeFS","hipsGrayscaleFS","hipsColorMapFS","colorMap","PLANCK","g","RAINBOW","CMB","CUBEHELIX","EOSB","hipsShaderProgram","_shaderProgram","_vertexShader","_fragmentShader","_UBO_colorMapBuffer","_UBO_colorMapVariableInfo","r_palette","offset","g_palette","b_palette","gl_uniforms","gl_attributes","locations","sampler","factor","m_perspective","m_model","m_view","colormapIdx","colormap_red","colormap_green","colormap_blue","vertex_pos","text_coords","textureAlpha","clorMapIdx","vertexPositionAttribute","textureCoordAttribute","initShaders","useProgram","fragmentShaderStr","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","vertexShaderStr","VERTEX_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","enableProgram","setGrayscaleShader","detachShader","changeFSShader","setNativeShader","setColorMapShader","blockIndex","getUniformBlockIndex","uboVariableNames","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","uboVariableIndices","getUniformIndices","uboVariableOffsets","getActiveUniforms","UNIFORM_OFFSET","bindBuffer","UNIFORM_BUFFER","bufferData","STATIC_DRAW","bindBufferBase","forEach","enableShaders","colorMapIdx","getUniformLocation","getAttribLocation","currentColorMap","uniformBlockBinding","bufferSubData","uniformMatrix4fv","Tile","_hips","_tileno","_baseurl","_order","_format","_maxorder","_isGalacticHips","_ready","_abort","_image","_textureLoaded","_texture","_texurl","_hipsShaderIndex","_cacheTime0","_inView","_amIStillInFoV_requsetID","vertexPosition","vertexIndices","opacity","tileno","hips","format","baseURL","maxOrder","window","setInterval","amIStillInFoV","initImage","destroyIntervals","clearInterval","getReadyState","cacheTime0","resetCacheTime0","setCacheTime0","Date","getTime","Image","dirnumber","onload","imageLoaded","onerror","crossOrigin","src","textureLoaded","initModelBuffer","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","uniform1i","isTexture","reforder","origxyf","orderjump","dxmin","dxmax","dymin","dymax","healpix","setupPositionAndTexture4Quadrant2","pixelsXQuadrant","idx","computeVertexIndices","Uint32Array","ELEMENT_ARRAY_BUFFER","baseFaceIndex","j","qidx","facesVec3Array","uindex","vindex","ARRAY_BUFFER","inView","moveToCache","newTileBuffer","moveTileToCache","visibleTilesManager","galAncestorsMap","has","includes","visibleOrder","galVisibleTilesByOrder","pixels","ancestorsMap","visibleTilesByOrder","draw","visibleTilesMap","quadrantsToDraw","Set","kids","drawChildren","enableVertexAttribArray","uniform1f","elemno","indexType","UNSIGNED_INT","UNSIGNED_SHORT","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","disableVertexAttribArray","childrenOrder","childTileNo","childTile","getGalTile","getTile","delete","_tiles","_cachedTiles","_activeHiPS","_galTiles","_galCachedTiles","_galActiveHiPS","_cacheAliveMilliSeconds","_cleanerId","minutesToLiveInCache","Map","cacheCleaner","addHiPS","addGalHiPS","addTile","keys","addGalTile","tileKey","tile","now","t0","dispose","_visibleTilesByOrder","_ancestorsMap","initialised","_galVisibleTilesByOrder","_galAncestorsMap","_galacticMatrixInverted","_galacticMatrix","computeVisiblePixels","getVisibleOrder","visibleorder","galTiles","geomhealpix","maxX","maxY","galVec","galPoint","galTileNo","curPoint","currPixNo","tgtOrder","list","parent","HealpixGridSingleton","static","BYTES_PER_ELEMENT","_visibleorder","showGrid","fragmentShader","vertexShader","defaultColor","gridText","_attribLocations","selected","pointSize","color","_nPrimitiveFlags","_vertexCataloguePositionBuffer","_indexBuffer","_vertexCataloguePosition","_indexes","fovObj","super","RADIUS","INITIAL_POSITION","INITIAL_PhiRad","INITIAL_ThetaRad","INITIAL_FOV","initBuffers","subhpx","subsubhpx","positionIndex","vIdx","vecs","cpix0","cpix1","cpix2","cpix3","cp0vecs","cp3vecs","pushV","subcpix3_3","subcpix2_2","subcpix0_2","subcpix1_1","refresh","enableShader","in_mMatrix","uMV","uP","uColor","mvMatrix","rgb","uniform4f","isVisible","toggleShowGrid","visibleTiles","ELEM_SIZE","BYTES_X_ELEM","LINE_LOOP","mvpMatrix","fovMin","pixCenter","clipspace","pixelX","pixelY","RayPickingUtils","getNearestVisibleObjectIdx","lastNearestVisibleObjectIdx","mouseX","mouseY","rect","getBoundingClientRect","canvasMX","canvasMY","rayClip","pInv","rayEye4","mat4MultiplyVec4","rayEye","rayWorld4","e","rayOrigWorld","rayDirectionWorld","disc","ta","tb","intersectionModelPoint","worldHit","worldHit4","modelHit4","_phiThetaDeg","raHMS","decDMS","in_xyz","in_raDecDeg","in_phiThetaDeg","computeNpix","hp","update","mousePoint","mp","isArray","sph","radec","clear","_pixels","samplerUniform","setupPositionAndTexture4Quadrant","ipix3","AllSky","_maxTiles","_numFacesXTile","_numFaces","vidx","setAttribute","LINEAR_MIPMAP_LINEAR","generateMipmap","hpx","tgtHpxOrder","tgtHealpix","sindex","tindex","tgthealpix","qx","qy","s_step","t_step","s_pixel_size","t_pixel_size","base_s","base_t","allSkyTiles2Skip","skipped","_ancestorTiles","_allSkyTile","_minorder","_allSky","samplerIdx","minOrder","xrad","yrad","descriptor","surveyName","isGalactic","hipsFrame","imgFormats","changeFormat","_tileBuffer","clearAll","pixelByOrder","updateTiles","changeColorMap","getCurrentHealpixOrder","ancestor","_name","_description","_unit","_dataType","_ucd","_uType","_index","description","unit","datatype","ucd","utype","uType","_posEqRAMetaColumns","_posEqDecMetaColumns","_sRegionMetaColumns","_pgSphereMetaColumns","_metadataList","addMetadata","tapMetadata","metadataList","pgSphereMetaColumns","sRegionMetaColumns","posEqRAMetaColumns","posEqDecMetaColumns","TapRepo","_adqlFunctionList","_cataloguesList","_observationsList","_notClassified","_activeObservations","_activeCatalogues","_tapBaseURL","tapUrl","tapBaseUrl","setCataloguesList","cataloguesList","setObservationsList","observationList","setNotClassifiedList","notClassifiedList","setCatalogueActive","catalogue","setObservationActive","observation","observationsList","adqlFunctionList","colName","col","sameName","CatalogueProps","raColumn","decColumn","nameColumn","shapeSizeColumn","shapeHueColumn","shapeColor","tapMetadataList","setRAColumns","setDecColumns","setNameColumn","updateColumnsIndex","column","changeColor","changeMetaName","metacolumnName","changeCatalogueMetaRA","changeCatalogueMetaDec","resetCatalogueMetaShapeSize","changeCatalogueMetaShapeSize","resetCatalogueMetaShapeHue","changeCatalogueMetaShapeHue","_point","_details","_h_pix","_shapesize","_brightnessFactor","in_point","in_details","computeHealpixPixel","getDetailByindex","details","healpixPixel","shapeSize","brightnessFactor","catalogueShaderProgram","vertex_color","m_model_view","vertex_selected","point_size","point_hue","hovered","brightness","CatalogueGL","ready","catalogueProps","tapRepo","sources","vertexCataloguePositionBuffer","vertexhoveredCataloguePositionBuffer","vertexCataloguePosition","hoveredIndexes","selectedIndexes","extHoveredIndexes","oldMouseCoords","_isVisible","healpixDensityMap","tablename","tabledesc","provider","TYPE","setIsVisible","visibility","minMax","columnindex","isNaN","source","STANDARD_SIZE","STANDARD_SHAPE_SIZE","initBuffer","oldShapeSizeName","minmax","hue","STANDARD_SHAPE_HUE","oldHueSizeName","addSource","addSources","in_data","columnsmeta","raDataIndex","decDataIndex","clearSources","extHighlightSource","highlighted","sIdx","indexOf","extAddSources2Selected","extRemoveSourceFromSelection","indexOfObject","sidx","eidx","nSources","currSource","currPix","bucket","getSelectionRadius","checkSelection","in_mouseHelper","sourcesHovered","mousePix","candidates","selR","sourceIdx","k","base","numItems","drawArrays","POINTS","STCSParser","parseSTCS","stcs","stcsParsed","cleanStcs","parsePolygon","parseCircle","totpoints","toUpperCase","replace","trim","totPoints","polys","split","currPoly","plast0","plast1","tokens","npoints","POINTS_PER_QUADRANT","alpha","curdec","_polygons","_convexPolygons","_stcs","_valid","_totPoints","_totConvexPoints","_npix256","_footprintsPointsOrder","_selectionObj","_identifier","_center","in_stcs","footprintsPointsOrder","computePoints","valid","totConvexPoints","convexPolygons","identifier","FootprintProps","pgSphereColumn","geomColumn","setPositionColumns","meta","decList","getMetaName","footprintShaderProgram","FootprintSetGL","footprintsetProps","indexBuffer","hoveredVertexPositionBuffer","hoveredIndexBuffer","selectedVertexPositionBuffer","selectedIndexBuffer","indexes","footprintPolygons","nPrimitiveFlags","_hoveredFootprints","hoveredVertexPosition","totHoveredPoints","nHoveredPrimitiveFlags","_selectedFootprints","selectedVertexPosition","totSelectedPoints","nSlectedPrimitiveFlags","initFootprintArrays","initGLBuffers","addFootprint","in_footprint","addFootprints","geomDataIndex","footprint","clearFootprints","nFootprints","npolygons","MAX_UNSIGNED_INT","footprintPoly","poly","mouseHelper","initHoveringBuffer","hoveredFootprints","metadata","footprints","tableName","selectedFootprints","highlightFootprint","indexOfFootprint","addFootprint2Selected","refreshBuffer","initSelectionBuffer","removeFootprintFromSelection","hoveredFootprintPoly","polyIdx","pointIdx","catId","obsId","async","addTAPRepo","repoUrl","loadCapabilities","datasets","loadTables","catalogueList","obsList","queryAsync","adql","TAP_QUERY_TIMEOUT_MS","URL","searchParams","ac","AbortController","setTimeout","abort","response","fetch","method","mode","signal","headers","Accept","ok","text","catch","status","statusText","json","err","message","clearTimeout","tablesUrl","requestUrl","encodeURIComponent","data","DOMParser","parseFromString","firstElementChild","test","nodeName","schema","from","children","table","dataset","parseTable","id","notClassified","capabilitiesUrl","capabilities","capability","child","parseCapabilities","languageNode","featuresContainers","getElementsByTagName","featureNodeList","feature","formNode","textContent","tableNode","nameNode","tableDesc","metaColumns","tapMetas","dataType","tapMeta","getColName","EquatorialGrid","_phiVertexPositionBuffer","_thetaVertexPositionBuffer","_fov","_phiStep","_phiStepRad","_thetaStep","_thetaStepRad","_phiArray","_thetaArray","_dec4Labels","_ra4Labels","fsSource","vsSource","steps","phiStep","thetaStep","phiVertexPosition","thetaRad","phiRad","thetaVertexPosition","decKey","vectorDistance","uMVMatrixLoc","uPMatrixLoc","raDegKey","entries","phiPoint","decDegKey","centralPoinCoords","mousePointCoords","showHPXGrid","mouseDown","lastMouseX","lastMouseY","inertiaX","inertiaY","zoomInertia","activeHiPS","startup","activeCatalogues","activeFootprintSets","webgl","updateCentralPoint","sphericalCoords","getPhiThetaDeg","astroCoords","astroDeg","sphericalDeg","updateLastMousePoint","getCentralPointCoordinates","getLastMousePointCoordinates","initCamera","addEventListeners","onpointerdown","event","setPointerCapture","pointerId","clientX","clientY","preventDefault","onpointerup","releasePointerCapture","body","cursor","onpointermove","newX","newY","deltaX","deltaY","addEventListener","passive","activateHiPS","hipsDescriptor","showCatalogue","fovPolyAstro","polygonAdql","cat","raCol","decCol","tapTable","rows","element","queryCatalogueByFoV","deleteCatalogue","filter","showFootprintSet","footprintSet","centralPoint","fset","tapRa","tapDec","prepareADQL","queryFootprintSetByFov","deleteFootprintSet","fst","getHoveredFootprints","footprintsHovered","changeFoV","changeFoV2","newCameraPos","changeFoV3","newPos","getInsideSphere","cameraRotated","THETA","PHI","viewport","drawingBufferWidth","drawingBufferHeight","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","CULL_FACE","cullFace","BACK","FRONT","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","phiTheta","AstroViewer","astroSphere","rafId","run","tick","hideCatalogue","changeCatalogueColor","setCatalogueShapeHue","metadataColumnName","setCatalogueShapeSize","hideFootprintSet","changeFootprintSetColor","getDefaultHiPSURL","getCenterCoordinates","getCoordinatesFromMouse","toggleHealpixGrid","isHealpixGridVisible","toggleEquatorialGrid","isEquatorialGridVisible","getElementById","HTMLCanvasElement","getContext","viewportWidth","viewportHeight","clearColor","initListeners","resizeCanvas","newWidth","innerWidth","newHeight","innerHeight","cancelAnimationFrame","_event","requestAnimationFrame","drawScene","HiPSDescriptor","_minOrder","_imgformats","_datarange","_maxOrder","_tilewidth","_hipsFrame","_hipsName","_hipsurl","_emMin","_emMax","_isGalctic","hipsproperties","hipsurl","lines","line","startsWith","getValue","Boolean","minStr","maxStr","isFinite","toLowerCase","emMin","emMax","tileWidth","dataRange"],"sourceRoot":""}